name: HumanEval_71_triangle_area
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return the area of\n\
  -- the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n-- Otherwise return -1\n-- Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n-- than the third side.\n-- Example:\n-- triangle_area(3,\
  \ 4, 5) == 6.00\n-- triangle_area(1, 2, 10) == -1\nlocal function triangle_area(a,\
  \ b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
  \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local s = (a + b + c) / 2\n    if (s - a) * (s - b) * (s - c) <\
    \ s then\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend", "\tif (a+b>c) and (a+c>b) and (b+c>a) then\n\
    \t\tlocal p = (a+b+c)/2\n\t\treturn math.floor(math.sqrt(p*(p-a)*(p-b)*(p-c))*100+0.5)/100\n\
    \telse\n\t\treturn -1\n\tend\nend", "    if a+b<=c or a+c<=b or b+c<=a then\n\
    \        return -1\n    else\n        return (a+b+c)/2\n    end\nend", "  if (a\
    \ + b > c) and (a + c > b) and (b + c > a) then\n    local s = (a + b + c) / 2\n\
    \    return math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100 + 0.5)\
    \ / 100\n  else\n    return -1\n  end\nend", "    if (a+b > c) and (a+c > b) and\
    \ (b+c > a) then\n        local s = (a+b+c)/2\n        return math.floor(math.sqrt(s*(s-a)*(s-b)*(s-c))*100+0.5)/100\n\
    \    else\n        return -1\n    end\nend", "\t-- Write your code here\n    return\
    \ -1\nend", "  local perimeter = (a + b + c) / 2\n  local area = math.sqrt(perimeter\
    \ * (perimeter - a) * (perimeter - b) * (perimeter - c))\n  return area == area\
    \ and math.floor(area * 100 + 0.5) / 100 or -1\nend", "  local s = (a + b + c)\
    \ / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if area >\
    \ 0 then return string.format(\"%.2f\", area) end\n  return -1\nend", "  if a+b>c\
    \ and a+c>b and b+c>a then\n    return string.format(\"%.2f\", (a+b+c)/2)\n  else\n\
    \    return -1\n  end\nend", "    if a + b > c and a + c > b and b + c > a then\n\
    \        return math.floor(math.sqrt((a + b + c) * (a + b - c) * (a + c - b) *\
    \ (b + c - a)) * 100 + 0.5) / 100\n    else\n        return -1\n    end\nend",
  "    if a + b <= c or a + c <= b or b + c <= a then\n        return -1\n    end\n\
    \    local p = (a + b + c) / 2\n    return math.sqrt(p * (p - a) * (p - b) * (p\
    \ - c))\nend", "  -- TODO: Your code here.\n  if a + b <= c or a + c <= b or b\
    \ + c <= a then\n    return -1\n  else\n    local p = (a + b + c) / 2\n    return\
    \ math.sqrt(p * (p - a) * (p - b) * (p - c))\n  end\nend", "    if(a + b > c and\
    \ a + c > b and b + c > a) then\n        local p = (a + b + c) / 2.0\n       \
    \ return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) /\
    \ 100\n    else\n        return -1\n    end\nend", "  -- return the area of the\
    \ triangle, or -1\n  if (a+b > c) and (a+c > b) and (b+c > a) then\n    local\
    \ p = (a+b+c)/2\n    return math.sqrt(p*(p-a)*(p-b)*(p-c))\n  else\n    return\
    \ -1\n  end\nend", "    local s = (a + b + c) / 2\n    local area = math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    if area > 0 then\n        return string.format(\"\
    %.2f\", area)\n    else\n        return -1\n    end\nend", "    local p = (a +\
    \ b + c) / 2\n    if p - a > 0 and p - b > 0 and p - c > 0 then\n        return\
    \ math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n \
    \   else\n        return -1\n    end\nend", "  local area = nil\n  if a + b >\
    \ c and a + c > b and b + c > a then\n    area = math.sqrt((a + b + c) * (a +\
    \ b - c) * (a - b + c) * (-a + b + c)) / 4\n  end\n  return area and string.format(\"\
    %.2f\", area) or -1\nend", "    if a + b <= c or a + c <= b or b + c <= a then\n\
    \        return -1\n    end\n    local p = (a + b + c) / 2\n    return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\nend", "    -- Implement your function here\n\
    \    local s = (a + b + c) / 2\n    if s - a <= 0 or s - b <= 0 or s - c <= 0\
    \ then\n        return -1\n    end\n    return math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend", "  -- code here\nend", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        local p = (a + b + c) / 2.0\n        return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend",
  "  if a + b > c and a + c > b and b + c > a then\n    local s = (a + b + c) / 2\n\
    \    return (s * (s - a) * (s - b) * (s - c)) ^ 0.5\n  else\n    return -1\n \
    \ end\nend", "  if a+b>c and a+c>b and b+c>a then\n  return string.format(\"%.2f\"\
    , 0.5*a*b*math.sin(math.acos((b^2+c^2-a^2)/(2*b*c))))\n  else\n  return -1\n \
    \ end\nend", "  -- make sure the inputs are valid numbers\n  if type(a) ~= \"\
    number\" or type(b) ~= \"number\" or type(c) ~= \"number\" then\n    return -1\n\
    \  end\n  -- make sure the inputs are not negative numbers\n  if a < 0 or b <\
    \ 0 or c < 0 then\n    return -1\n  end\n  -- compute the triangle area\n  local\
    \ p = (a + b + c) / 2\n  local A = math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \  -- make sure the area is not negative\n  if A < 0 then\n    return -1\n  end\n\
    \  -- otherwise return the area with 2 decimal points precision\n  return string.format(\"\
    %.2f\", A)\nend", "\tlocal s = (a + b + c) / 2\n\tlocal area = s * (s - a) * (s\
    \ - b) * (s - c)\n\tif area > 0 then\n\t\treturn math.sqrt(area)\n\telse\n\t\t\
    return -1\n\tend\nend", "\tlocal p = (a + b + c) / 2\n\tlocal area = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n\tif area > 0 then\n\t\treturn math.floor(area\
    \ * 100 + 0.5) / 100\n\telse\n\t\treturn -1\n\tend\nend", "  \nend", "    local\
    \ s = (a + b + c) / 2\n    if s - a < 0 or s - b < 0 or s - c < 0 then\n     \
    \   return -1\n    end\n    return math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    end", "    local p = (a + b + c) / 2\n    local s = math.sqrt(p * (p - a) * (p\
    \ - b) * (p - c))\n    return s >= 0 and string.format(\"%.2f\", s) or -1\nend",
  "    if a + b > c and a + c > b and b + c > a then\n        return math.floor(math.sqrt((a\
    \ + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) * 100 + 0.5) / 100\n   \
    \ else\n        return -1\n    end\nend", "    local area = 0\n    local s = (a\
    \ + b + c) / 2\n    area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return\
    \ area >= 0 and string.format(\"%.2f\", area) or -1\nend", "    -- check if valid\
    \ triangle\n    if a + b > c and a + c > b and b + c > a then\n        local p\
    \ = (a + b + c) / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    else\n        return -1\n    end\nend", "  local function valid_triangle(a,\
    \ b, c)\n    if a + b > c and a + c > b and b + c > a then\n      return true\n\
    \    else\n      return false\n    end\n  end\n  local s = (a + b + c) / 2\n \
    \ if valid_triangle(a, b, c) then\n    return string.format(\"%.2f\", math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)))\n  else\n    return -1\n  end\nend", "  --\n\
    end", "    -- your code here\n    if (a+b>c) and (a+c>b) and (b+c>a) then\n  \
    \      s = (a+b+c)/2\n        area = math.sqrt(s*(s-a)*(s-b)*(s-c))\n        return\
    \ string.format(\"%.2f\", area)\n    else\n        return -1\n    end\nend", " \
    \   if a + b > c and a + c > b and b + c > a then\n        return string.format(\"\
    %.2f\", a * b / 2)\n    else\n        return -1\n    end\nend", "  -- Your code\
    \ here\nend", "  local m = { a, b, c }\n  table.sort(m)\n  if m[1] + m[2] > m[3]\
    \ then\n    return math.sqrt(s*(s-a)*(s-b)*(s-c))\n  else\n    return -1\n  end\n\
    end", "  -- local perimeter = a + b + c\n  -- if a >= perimeter / 2 or b >= perimeter\
    \ / 2 or c >= perimeter / 2 then\n  --   return -1\n  -- end\n  -- return math.sqrt(perimeter\
    \ * (perimeter - a) * (perimeter - b) * (perimeter - c)) * 0.5\n  local perimeter\
    \ = a + b + c\n  return (a < perimeter / 2 and b < perimeter / 2 and c < perimeter\
    \ / 2) and math.sqrt(perimeter * (perimeter - a) * (perimeter - b) * (perimeter\
    \ - c)) * 0.5 or -1\nend", "  local total = a + b + c\n  if total <= 0 then return\
    \ -1 end\n  local p = total / 2.0\n  local area = math.sqrt(p * (p - a) * (p -\
    \ b) * (p - c))\n  if area <= 0 then return -1 end\n  return area\nend", "  local\
    \ p = (a + b + c) / 2\n  local a = math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \  if a then return a end\n  return -1\nend", "\tif a + b > c and a + c > b and\
    \ b + c > a then\n\t\tlocal p = (a + b + c) / 2\n\t\treturn math.floor(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n\telse\n\t\treturn -1\n\t\
    end\nend", "    local s = (a + b + c) / 2\n    local area = math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c))\n    if area == 0 then\n        return -1\n    else\n\
    \        return math.floor(area * 100 + 0.5) / 100\n    end\nend", "    -- your\
    \ code here\n    if a + b > c and a + c > b and b + c > a then\n        local\
    \ p = (a + b + c) / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    else\n        return -1\n    end\nend", "  local p = (a + b + c) / 2\n  local\
    \ area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n  if (a + b) > c and (a +\
    \ c) > b and (b + c) > a then\n    return string.format(\"%.2f\", area)\n  else\n\
    \    return -1\n  end\nend", "  -- your code goes here\nend", "    local p = (a\
    \ + b + c) / 2\n    if p - a > 0 and p - b > 0 and p - c > 0 then\n        return\
    \ math.sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n  \
    \  end\nend", "  if (a + b > c) and (a + c > b) and (b + c > a) then\n    local\
    \ p = (a + b + c) / 2\n    return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \  else\n    return -1\n  end\nend", "  -- your code here\nend\n```", "\treturn\
    \ -1\nend", "  local s = (a + b + c) / 2\n  if s - a <= 0 or s - b <= 0 or s -\
    \ c <= 0 then\n    return -1\n  end\n  return math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c))\nend", "  local s = (a + b + c) / 2\n  local area = s * (s - a) *\
    \ (s - b) * (s - c)\n  if area <= 0 then return -1\n  else return string.format(\"\
    %.2f\", math.sqrt(area)) end\nend", "\tlocal s = (a + b + c) / 2\n\tlocal area\
    \ = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\treturn area\nend", "  if a+b>c\
    \ and a+c>b and b+c>a then\n    return string.format(\"%.2f\",math.sqrt((a+b+c)*(a+b-c)*(a+c-b)*(b+c-a))/4)\n\
    \  else\n    return -1\n  end\nend", "\tif a + b > c and a + c > b and b + c >\
    \ a then\n\t\tlocal p = (a + b + c) / 2\n\t\treturn math.sqrt(p * (p - a) * (p\
    \ - b) * (p - c))\n\telse\n\t\treturn -1\n\tend\nend", "\tlocal s = (a + b + c)\
    \ / 2.0\n\tlocal A = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\treturn A >=\
    \ 0 and math.floor(A * 100 + 0.5) / 100 or -1\nend", "    if a + b > c and a +\
    \ c > b and b + c > a then\n        local p = (a + b + c) / 2\n        return\
    \ math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n \
    \   else\n        return -1\n    end\nend", "    local s = (a + b + c) / 2\n \
    \   if s >= a and s >= b and s >= c then\n        return math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n    end\n    return -1\nend", "\tif a + b > c and a +\
    \ c > b and b + c > a then\n\t\tlocal p = (a + b + c) / 2\n\t\treturn math.floor(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n\telse\n\t\treturn -1\n\t\
    end\nend", "    local s = (a + b + c) / 2\n    if s < a or s < b or s < c then\
    \ return -1 end\n    return math.floor(s * (s - a) * (s - b) * (s - c) * 100 +\
    \ 0.5) / 100\nend", "    if a + b <= c or a + c <= b or b + c <= a then\n    \
    \    return -1\n    end\n    local p = (a + b + c) / 2\n    return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\nend", "\tif a + b > c and a + c > b and b +\
    \ c > a then\n\t\tlocal s = (a + b + c) / 2\n\t\treturn math.floor(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n\telse\n\t\treturn -1\n\t\
    end\nend", "  if a + b > c and a + c > b and b + c > a then\n    local p = (a\
    \ + b + c) / 2\n    return math.sqrt(p * (p - a) * (p - b) * (p - c))\n  else\n\
    \    return -1\n  end\nend", "    if a+b>c and a+c>b and b+c>a then\n        return\
    \ math.round(0.5*a*b, 2)\n    else\n        return -1\n    end\nend", "  if a\
    \ + b <= c or a + c <= b or b + c <= a then\n    return -1\n  end\n  local s =\
    \ (a + b + c) / 2\n  return math.sqrt(s * (s - a) * (s - b) * (s - c))\nend",
  "  if (a + b > c) and (a + c > b) and (b + c > a) then\n    local s = (a + b + c)\
    \ / 2\n    return math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100\
    \ + 0.5) / 100\n  else\n    return -1\n  end\nend", "  local s = (a + b + c) /\
    \ 2\n  local d = s * (s - a) * (s - b) * (s - c)\n  if d > 0 then\n    return\
    \ math.sqrt(d)\n  else\n    return -1\n  end\nend", "  local p = (a + b + c) /\
    \ 2\n  local area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n  if area > 0\
    \ then\n    return string.format(\"%.2f\", area)\n  else\n    return -1\n  end\n\
    end", "  local tmp = (a + b + c) / 2\n  local s = math.sqrt(tmp * (tmp - a) *\
    \ (tmp - b) * (tmp - c))\n  if s > 0 then\n    return s\n  else\n    return -1\n\
    \  end\nend", "  -- the code is missing\n  -- use the triangle inequality theorem\
    \ to check the validity of the triangle\n  -- calculate the area of the triangle\
    \ using Heron's formula\n  if (a + b) <= c or (a + c) <= b or (b + c) <= a then\
    \ return -1 end\n  local p = (a + b + c) / 2\n  return math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c))\nend", "    local p = (a + b + c) / 2\n    if p - a <= 0\
    \ or p - b <= 0 or p - c <= 0 then\n        return -1\n    end\n    return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\nend", "   local area = -1\n   if (a+b > c) and\
    \ (a+c > b) and (b+c > a) then\n      area = math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4\n\
    \   end\n   return math.floor(area*100+.5)/100\nend", "  local a, b, c = math.max(a,\
    \ b, c), math.min(a, b, c), math.sqrt(a^2 + b^2 - 2*a*b*math.cos(math.rad(c)))\n\
    \  return math.floor(a+b+c) == math.floor(2*c) and math.floor(a*b*math.sin(math.rad(c))/2*100)/100\
    \ or -1\nend", "    if a + b > c and a + c > b and b + c > a then\n        local\
    \ p = (a + b + c) / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \    else\n        return -1\n    end\nend", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        local s = (a + b + c) / 2\n        return math.floor(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n    else\n        return\
    \ -1\n    end\nend", "\t-- body\n\tlocal p = (a + b + c) / 2\n\tlocal area = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n\tif area == 0 then\n\t\treturn -1\n\telse\n\
    \t\treturn string.format(\"%.2f\", area)\n\tend\nend", "\tlocal s = (a + b + c)\
    \ / 2\n\tlocal area = s * (s - a) * (s - b) * (s - c)\n\tif area <= 0 then\n\t\
    \treturn -1\n\tend\n\treturn math.sqrt(area)\nend", "  if a + b <= c or a + c\
    \ <= b or b + c <= a then\n    return -1\n  end\n  local p = (a + b + c) / 2\n\
    \  return math.sqrt(p * (p - a) * (p - b) * (p - c))\nend", "    local s = (a\
    \ + b + c) / 2;\n    local area = math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \    if a + b > c and a + c > b and b + c > a then\n        return string.format(\"\
    %.2f\", area);\n    else\n        return -1;\n    end\nend", "  local s = (a +\
    \ b + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if\
    \ (area) then\n    return tonumber(string.format(\"%.2f\", area))\n  else\n  \
    \  return -1\n  end\nend", "  if a + b > c and a + c > b and b + c > a then\n\
    \    local p = (a + b + c) / 2\n    return math.floor(math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c)) * 100 + 0.5) / 100\n  else\n    return -1\n  end\nend", " \
    \ if not(a < b + c and b < a + c and c < a + b) then\n    return -1\n  end\n \
    \ local p = (a + b + c) / 2\n  return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    end", "    if a < b + c and b < a + c and c < a + b then\n        return 0.5 *\
    \ math.sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c))\n    else\n\
    \        return -1\n    end\nend", "    if a+b>c and a+c>b and b+c>a then\n  \
    \      return ((a+b+c)/2)*((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c)^0.5\n    else\n\
    \        return -1\n    end\nend", "  if a + b > c and a + c > b and b + c > a\
    \ then\n    return (a + b + c) / 2\n  else\n    return -1\n  end\nend", "  local\
    \ p = (a + b + c) / 2\n  local area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \  return area >= 0 and string.format(\"%.2f\", area) or -1\nend", "  local p\
    \ = (a + b + c) / 2\n  local s = math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \  return s >= 0 and s or -1\nend", "    local s = (a + b + c) / 2\n    local\
    \ area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    if (area > 0) then\n\
    \        return string.format(\"%.2f\", area)\n    else\n        return -1\n \
    \   end\nend", "    -- your code here\n    if a+b > c and a+c > b and b+c > a\
    \ then\n        local s = (a+b+c)/2\n        return string.format(\"%.2f\", math.sqrt(s*(s-a)*(s-b)*(s-c)))\n\
    \    else\n        return -1\n    end\nend", "  if a + b > c and a + c > b and\
    \ b + c > a then\n    return round(math.sqrt((a + b + c) * (a + b - c) * (a +\
    \ c - b) * (b + c - a)) / 4, 2)\n  else\n    return -1\n  end\nend", "    local\
    \ p = (a + b + c) / 2\n    if (p - a > 0 and p - b > 0 and p - c > 0) then\n \
    \       return string.format(\"%.2f\", math.sqrt(p * (p - a) * (p - b) * (p -\
    \ c)))\n    else\n        return -1\n    end\nend", "  -- TODO: your code here\n\
    \  local s = (a + b + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c))\n  if (s - a < 0) or (s - b < 0) or (s - c < 0) then\n    return -1\n\
    \  else\n    return string.format(\"%.2f\", area)\n  end\nend", "  \n  local s\
    \ = (a + b + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \  return area >= 0 and string.format(\"%.2f\", area) or -1\nend", "    local\
    \ area = 0\n    if a+b>c and a+c>b and b+c>a then\n        local s = (a+b+c)/2\n\
    \        area = math.sqrt(s*(s-a)*(s-b)*(s-c))\n    else\n        area = -1\n\
    \    end\n    return string.format(\"%.2f\", area)\nend", "  -- validate all the\
    \ sides\n  if (a + b > c) and (a + c > b) and (b + c > a) then\n    -- calc the\
    \ perimeter \n    local p = (a + b + c) / 2\n    -- Heron's formula\n    return\
    \ math.sqrt(p * (p - a) * (p - b) * (p - c))\n  else\n    return -1\n  end\nend",
  "  -- your code here\nend", "\tif a + b > c and a + c > b and b + c > a then\n\t\
    \tlocal p = (a + b + c) / 2\n\t\treturn math.sqrt(p * (p - a) * (p - b) * (p -\
    \ c))\n\telse\n\t\treturn -1\n\tend\nend", "  local p = (a + b + c) / 2\n  local\
    \ area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n  if area > 0 then\n    return\
    \ math.floor(area * 100 + 0.5) / 100\n  else\n    return -1\n  end\nend", "  \
    \  local p = (a + b + c) / 2\n    local s = math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c))\n    if s > 0 then\n        return string.format(\"%.2f\", s)\n   \
    \ else\n        return -1\n    end\nend", "  -- your code goes here\nend", " \
    \ if a + b > c and a + c > b and b + c > a then\n    local s = (a + b + c) / 2\n\
    \    return tonumber(string.format(\"%.2f\", math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c))))\n  else\n    return -1\n  end\nend", "    local s = (a + b + c) /\
    \ 2\n    local a = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return math.floor(a\
    \ * 100 + 0.5) / 100\nend\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1,\
    \ 2, 10))\nprint(triangle_area(1, 2, 3))\nprint(triangle_area(3, 4, 6))", "  \
    \  local s = (a + b + c) / 2\n    if a + b > c and a + c > b and b + c > a then\n\
    \        return math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100 +\
    \ 0.5) / 100\n    else\n        return -1\n    end\nend", "  local s = (a + b\
    \ + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if area\
    \ > 0 then\n    return string.format(\"%.2f\", area)\n  else\n    return -1\n\
    \  end\nend", "  local p = (a + b + c) / 2\n  if a + b > c and a + c > b and b\
    \ + c > a then\n    return string.format(\"%.2f\", math.sqrt(p * (p - a) * (p\
    \ - b) * (p - c)))\n  else\n    return -1\n  end\nend", "    -- your code goes\
    \ here\n    if a + b > c and a + c > b and b + c > a then\n        return (a +\
    \ b + c) / 2\n    else\n        return -1\n    end\nend", "  -- your code here\n\
    end", "  local p = (a + b + c) / 2\n  if p - a > 0 and p - b > 0 and p - c > 0\
    \ then\n    return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100\
    \ + 0.5) / 100\n  else\n    return -1\n  end\nend", "  -- your code here\nend",
  "  if a + b > c and a + c > b and b + c > a then\n    local p = (a + b + c) / 2\n\
    \    return (p * (p - a) * (p - b) * (p - c)) ^ 0.5\n  else\n    return -1\n \
    \ end\nend", "    -- sort the sides in non-decreasing order\n    local sides =\
    \ {a, b, c}\n    table.sort(sides)\n    local a, b, c = sides[1], sides[2], sides[3]\n\
    \    -- test if the three sides form a valid triangle\n    if a + b > c then\n\
    \        -- semiperimeter\n        local s = (a + b + c) / 2\n        return math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend",
  "    local s = (a + b + c) / 2.0\n    local area = math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n    return area > 0 and string.format(\"%.2f\", area) or -1\n\
    end", "    if a + b > c and a + c > b and b + c > a then\n        local s = (a\
    \ + b + c) / 2\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n  \
    \  else\n        return -1\n    end\nend", "  if not (a+b > c and a+c > b and\
    \ b+c > a) then\n    return -1\n  end\n  local s = (a+b+c)/2\n  return math.sqrt(s*(s-a)*(s-b)*(s-c))\n\
    end", "    -- Return -1 if not valid triangle\n    if (a+b) < c or (a+c) < b or\
    \ (b+c) < a then\n        return -1\n    end\n    -- calculate area\n    local\
    \ s = (a+b+c)/2\n    local area = math.sqrt(s*(s-a)*(s-b)*(s-c))\n    -- return\
    \ area to 2 decimal places\n    return string.format(\"%.2f\", area)\nend", " \
    \ local s = (a + b + c) / 2\n  local num = s * (s - a) * (s - b) * (s - c)\n \
    \ if num <= 0 then return -1 end\n  return math.sqrt(num)\nend", "    -- # TODO:\
    \ Return the area of the triangle rounded to 2 decimal points \n    -- #     \
    \  if the three sides form a valid triangle, otherwise return -1\n    local p\
    \ = (a + b + c) / 2\n    if (a + b) <= c or (a + c) <= b or (b + c) <= a then\n\
    \        return -1\n    else\n        return math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c))\n    end\nend", "  -- calculate the half perimeter\n  local p = (a\
    \ + b + c) / 2\n  -- calculate the area using Heron's formula\n  local area =\
    \ math.sqrt(p * (p - a) * (p - b) * (p - c))\n  -- check if the given sides form\
    \ a valid triangle\n  if p - a <= 0 or p - b <= 0 or p - c <= 0 then\n    area\
    \ = -1\n  end\n  -- round the area to two decimal points\n  return math.floor(area\
    \ * 100 + 0.5) / 100\nend", "\tlocal p = (a + b + c) / 2\n\tlocal s = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n\treturn s > 0 and s or -1\nend", "  if a +\
    \ b > c and a + c > b and b + c > a then\n    return math.floor(a*b*c/2*100)/100\n\
    \  else\n    return -1\n  end\nend", "    if a + b <= c or a + c <= b or b + c\
    \ <= a then\n        return -1\n    end\n    return math.round(math.sqrt((a +\
    \ b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4, 2)\nend", "    -- Assuming\
    \ all sides are positive\n    if (a + b) > c and (a + c) > b and (b + c) > a then\n\
    \        local p = (a + b + c) / 2\n        return math.sqrt(p * (p - a) * (p\
    \ - b) * (p - c))\n    else\n        return -1\n    end\nend", "    local s =\
    \ (a + b + c) / 2\n    if s - a <= 0 or s - b <= 0 or s - c <= 0 then\n      \
    \  return -1\n    end\n    return math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    end", "    local p = (a + b + c) / 2.0\n    local s = math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c))\n    return s <= 0 and -1 or string.format(\"%.2f\", s)\n\
    end", "\tlocal area = (-a + b + c) * (a - b + c) * (a + b - c) * (a + b + c)\n\
    \tif area > 0 then\n\t\treturn round(math.sqrt(area) / 4, 2)\n\telse\n\t\treturn\
    \ -1\n\tend\nend", "    if a + b > c and a + c > b and b + c > a then\n      \
    \  local s = (a + b + c) / 2\n        return math.sqrt(s * (s - a) * (s - b) *\
    \ (s - c))\n    else\n        return -1\n    end\nend", "    local s = (a + b\
    \ + c) / 2\n    local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return\
    \ (area == 0) and -1 or area\nend", "  local p = (a + b + c) / 2 -- half of perimeter\n\
    \  return math.sqrt(p * (p - a) * (p - b) * (p - c))\nend", "  -- insert your\
    \ code here\nend", "  -- Sum of any two sides must be greater than the third side\n\
    \  local min_side = math.min(a, b, c)\n  local max_side = math.max(a, b, c)\n\
    \  local mid_side = a + b + c - min_side - max_side\n  if min_side + mid_side\
    \ <= max_side then\n    return -1\n  end\n  -- Heron's formula\n  local p = (a\
    \ + b + c) / 2\n  return math.sqrt(p * (p - a) * (p - b) * (p - c))\nend", " \
    \   if a + b > c and a + c > b and b + c > a then\n        return (a * (math.sqrt(3)\
    \ / 4)) * a\n    else\n        return -1\n    end\nend", "  -- your code here\n\
    \  --is this a valid triangle?\n  if a+b>c and a+c>b and b+c>a then\n    return\
    \ round((a+b+c)/2,2)\n  else\n    return -1\n  end\nend", "    local s = (a +\
    \ b + c) / 2\n    local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  \
    \  if area > 0 then\n        return tonumber(string.format(\"%.2f\", area))\n\
    \    else\n        return -1\n    end\nend", "   local p = (a + b + c) / 2\n \
    \  local s = math.sqrt(p * (p - a) * (p - b) * (p - c))\n   return (s == s and\
    \ s > 0) and string.format(\"%.2f\", s) or -1\nend", "  local s = (a + b + c)\
    \ / 2\n  local A = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if A > 0 then\n\
    \    return string.format(\"%.2f\", A)\n  else\n    return -1\n  end\nend", " \
    \ if a+b <= c or a+c <= b or b+c <= a then\n    return -1\n  end\n  local p =\
    \ (a+b+c)/2\n  return math.sqrt(p*(p-a)*(p-b)*(p-c))\nend", "  if a + b > c and\
    \ a + c > b and b + c > a then\n    local s = (a + b + c) / 2\n    return string.format(\"\
    %.2f\", math.sqrt(s * (s - a) * (s - b) * (s - c)))\n  else\n    return -1\n \
    \ end\nend", "    local p = (a + b + c) / 2\n    local area = math.sqrt(p * (p\
    \ - a) * (p - b) * (p - c))\n    if area == 0 then\n        return -1\n    else\n\
    \        return string.format(\"%.2f\", area)\n    end\nend", "  if a+b > c and\
    \ a+c > b and b+c > a then\n    --[[ returns the area of a triangle given the\
    \ side lengths,\n    using the Heron's formula:\n    A = \u221A(s(s-a)(s-b)(s-c))\n\
    \    where s is half the perimeter of the triangle:\n    s = (a+b+c)/2\n    ]]\n\
    \    local s = (a+b+c)/2\n    return math.sqrt(s*(s-a)*(s-b)*(s-c))\n  else\n\
    \    return -1\n  end\nend", "    local p = (a + b + c) / 2\n    local area =\
    \ math.sqrt(p * (p - a) * (p - b) * (p - c))\n    return area > 0 and string.format(\"\
    %.2f\", area) or -1\nend", "    -- insert your code here\n    local area = -1\n\
    \    if(a + b > c and a + c > b and b + c > a) then\n        local p = (a + b\
    \ + c) / 2\n        area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    end\n\
    \    return tonumber(string.format(\"%.2f\", area))\nend", "    if a + b > c and\
    \ a + c > b and b + c > a then\n        local s = (a + b + c) / 2\n        return\
    \ math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n \
    \   else\n        return -1\n    end\nend", "    -- if it's not a valid triangle\
    \ return -1\n    if a + b <= c or a + c <= b or b + c <= a then\n        return\
    \ -1\n    end\n    local s = (a + b + c) / 2\n    local area = math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n    return string.format(\"%.2f\", area)\nend\nprint(triangle_area(3,\
    \ 4, 5))\nprint(triangle_area(1, 2, 10))\nprint(triangle_area(2, 3, 4))", "  \
    \  -- Your code here.\n    if a + b > c and a + c > b and b + c > a then\n   \
    \     local s = (a + b + c) / 2\n        return math.floor(math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n    else\n        return -1\n  \
    \  end\nend", "  -- your code here\nend", "  local s = (a + b + c) / 2\n  local\
    \ area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if s > a and s > b and\
    \ s > c then\n    return area\n  else\n    return -1\n  end\nend", "    if a +\
    \ b > c and a + c > b and b + c > a then\n        local p = (a + b + c) / 2\n\
    \        return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 +\
    \ 0.5) / 100\n    else\n        return -1\n    end\nend", "  local area = (a +\
    \ b + c) / 2\n  if area - a <= 0 or area - b <= 0 or area - c <= 0 then\n    return\
    \ -1\n  end\n  return math.sqrt(area * (area - a) * (area - b) * (area - c))\n\
    end", "    -- Code\nend", "  -- your code here\n  if (a + b > c) and (a + c >\
    \ b) and (b + c > a) then\n    return math.round(math.sqrt((a + b + c) * (a +\
    \ b - c) * (a + c - b) * (b + c - a)) / 4, 2)\n  else\n    return -1\n  end\n\
    end", "  -- return (a + b > c) and (a + c > b) and (b + c > a) and (a + b + c)\
    \ / 2 or -1\n  return (a + b > c) and (a + c > b) and (b + c > a) and math.sqrt(4\
    \ * a * a * b * b - (a * a + b * b - c * c) * (a * a + b * b - c * c)) / 4 or\
    \ -1\nend", "    if a + b > c and a + c > b and b + c > a then\n        s = (a\
    \ + b + c) / 2\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n  \
    \  else\n        return -1\n    end\nend", "    -- your code here\n    if a +\
    \ b > c and a + c > b and b + c > a then\n        return math.floor(math.sqrt((a\
    \ + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) * 100 + 0.5) / 100\n   \
    \ else\n        return -1\n    end\nend", "  local p = (a + b + c) / 2\n  if p\
    \ > a and p > b and p > c then\n    return math.floor(math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c)) * 100 + 0.5) / 100\n  else\n    return -1\n  end\nend", " \
    \ -- your code here\nend", "    local p = (a + b + c) / 2\n    local s = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    if (a + b <= c) or (a + c <= b) or (b +\
    \ c <= a) then\n        return -1\n    else\n        return math.floor(s * 100\
    \ + 0.5) / 100\n    end\nend", "    local p = (a + b + c) / 2\n    local A = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    return A >= 0 and string.format(\"%.2f\"\
    , A) or -1\nend", "    if (a + b > c) and (a + c > b) and (b + c > a) then\n \
    \       local s = (a + b + c) / 2\n        return math.floor(math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c)) * 100 + 0.5) / 100\n    else\n        return -1\n\
    \    end\nend", "  local s = (a + b + c) / 2\n  if (s - a > 0) and (s - b > 0)\
    \ and (s - c > 0) then\n    return math.floor(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)) * 100 + 0.5) / 100\n  else\n    return -1\n  end\nend", "  if a +\
    \ b > c and a + c > b and b + c > a then\n    local p = (a + b + c) / 2\n    return\
    \ math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n \
    \ else\n    return -1\n  end\nend", "  \n  if a + b > c and a + c > b and b +\
    \ c > a then\n    local p = (a + b + c) / 2\n    return string.format(\"%.2f\"\
    , math.sqrt(p * (p - a) * (p - b) * (p - c)))\n  else\n    return -1\n  end\n\
    end", "\tif a + b > c and a + c > b and b + c > a then\n\t\treturn ((a+b+c)/2)\
    \ * math.sqrt(((a+b+c)/2)*(((a+b+c)/2)-a)*(((a+b+c)/2)-b)*(((a+b+c)/2)-c))\n\t\
    else\n\t\treturn -1\n\tend\nend", "  -- TODO\nend", "    -- rounded to 2 decimal\
    \ points\n    return -1\nend", "  local s = (a + b + c) / 2\n  local area = math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n  return math.floor(area * 100 + 0.5) / 100\n\
    end", "    local p = (a + b + c) / 2\n    local s = math.sqrt(p * (p - a) * (p\
    \ - b) * (p - c))\n    if s == s then\n        return string.format(\"%.2f\",\
    \ s)\n    else\n        return -1\n    end\nend", "  if (a + b > c) and (a + c\
    \ > b) and (b + c > a) then\n    return string.format(\"%.2f\", math.sqrt((a +\
    \ b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4)\n  else\n    return -1\n\
    \  end\nend", "    -- given the lengths of the three sides of a triangle, return\
    \ the area.\n    -- if the three sides do not form a valid triangle, return -1.\n\
    \    if a + b > c and a + c > b and b + c > a then\n        local s = (a + b +\
    \ c) / 2\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n\
    \        return -1\n    end\nend", "    -- your code here\n    local p = (a +\
    \ b + c) / 2\n    local s = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    if\
    \ s > 0 then return math.floor(s * 100 + 0.5) / 100 else return -1 end\nend",
  "    if a + b > c and a + c > b and b + c > a then\n        return round(a * b /\
    \ 2, 2)\n    else\n        return -1\n    end\nend", "  local a2 = a * a\n  local\
    \ b2 = b * b\n  local c2 = c * c\n  local p = (a + b + c) / 2.0\n  local area\
    \ = math.sqrt(p * (p - a) * (p - b) * (p - c))\n  return (a + b > c and b + c\
    \ > a and c + a > b) and math.floor(area * 100 + 0.5) / 100 or -1\nend", "  if\
    \ a + b > c and a + c > b and b + c > a then\n    local p = (a + b + c) / 2\n\
    \    return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5)\
    \ / 100\n  else\n    return -1\n  end\nend", "  -- checking if the sum of 2 sides\
    \ is bigger than the third side\n  if a + b > c and a + c > b and b + c > a then\n\
    \    local p = (a + b + c) / 2\n    local area = math.sqrt(p * (p - a) * (p -\
    \ b) * (p - c))\n    return math.floor(area * 100 + 0.5) / 100\n  else\n    return\
    \ -1\n  end\nend", "    if a + b > c and a + c > b and b + c > a then\n      \
    \  local s = (a + b + c) / 2\n        return string.format(\"%.2f\", math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)))\n    else\n        return -1\n    end\nend",
  "    if a + b > c and a + c > b and b + c > a then\n        return tonumber(string.format(\"\
    %.2f\", math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / 4))\n\
    \    else\n        return -1\n    end\nend", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        local s = (a + b + c) / 2\n        return (s * (s -\
    \ a) * (s - b) * (s - c)) ^ 0.5\n    else\n        return -1\n    end\nend", " \
    \ -- your code here\nend", "    local s = (a + b + c) / 2;\n    local area = math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n    return area >= 0 and string.format(\"%.2f\"\
    , area) or -1;\nend", "    if (a+b)>c and (a+c)>b and (b+c)>a then\n        return\
    \ (a+b+c)/2\n    else\n        return -1\n    end\nend", "  if (a + b > c) and\
    \ (a + c > b) and (b + c > a) then\n    return math.floor(0.5 * a * b * 100 +\
    \ 0.5) / 100\n  else\n    return -1\n  end\nend", "    -- area of a triangle is\
    \ sqrt(s*(s-a)*(s-b)*(s-c)), where s = (a+b+c)/2\n    local s = (a+b+c)/2\n  \
    \  if s-a >= 0 and s-b >= 0 and s-c >= 0 then\n        return math.floor(math.sqrt(s*(s-a)*(s-b)*(s-c))*100\
    \ + 0.5)/100\n    else\n        return -1\n    end\nend", "  local p = (a + b\
    \ + c) / 2\n  local s = math.sqrt(p * (p - a) * (p - b) * (p - c))\n  return s\
    \ > 0 and string.format(\"%.2f\", s) or -1\nend", "  if a+b > c and a+c > b and\
    \ b+c > a then\n    return math.floor(0.5*a*b*100+0.5)/100\n  else\n    return\
    \ -1\n  end\nend", "    if a + b <= c or a + c <= b or b + c <= a then\n     \
    \   return -1\n    end\n    local p = (a + b + c) / 2\n    return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\nend", "  local s = (a + b + c) / 2\n  local\
    \ square = s * (s - a) * (s - b) * (s - c)\n  if square < 0 then\n    return -1\n\
    \  else\n    return math.sqrt(square)\n  end\nend", "  if a + b > c and a + c\
    \ > b and b + c > a then\n    local p = (a + b + c) / 2\n    return math.floor(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n  else\n    return -1\n \
    \ end\nend", "    -- YOUR CODE HERE\n    if (a+b)>c and (a+c)>b and (b+c)>a then\n\
    \        --local p = (a+b+c)/2\n        --local s = math.sqrt(p*(p-a)*(p-b)*(p-c))\n\
    \        local s = a*b*c\n        return string.format(\"%.2f\", s)\n    else\n\
    \        return -1\n    end\nend", "    local p = (a + b + c) / 2\n    local S\
    \ = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    return (a + b > c and b +\
    \ c > a and a + c > b) and\n        string.format(\"%.2f\", S) or\n        -1\n\
    end", "    local s = (a + b + c) / 2\n    if (s - a > 0) and (s - b > 0) and (s\
    \ - c > 0) then\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n \
    \   else\n        return -1\n    end\nend", "\tif a + b <= c or a + c <= b or\
    \ b + c <= a then\n\t\treturn -1\n\tend\n\tlocal s = (a + b + c) / 2\n\treturn\
    \ (s - a) * (s - b) * (s - c) ^ 0.5\nend", "  local area = 0\n  if (a + b > c)\
    \ and (a + c > b) and (b + c > a) then\n    local p = (a + b + c) / 2\n    area\
    \ = math.sqrt(p * (p - a) * (p - b) * (p - c))\n  else\n    area = -1\n  end\n\
    \  return math.floor(area * 100 + 0.5) / 100\nend", "  local s = (a + b + c) /\
    \ 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  return area\
    \ > 0 and string.format(\"%.2f\", area) or -1\nend", "    local s = (a + b + c)\
    \ / 2\n    if (s - a) < a or (s - b) < b or (s - c) < c then\n        return -1\n\
    \    end\n    return math.sqrt(s * (s - a) * (s - b) * (s - c))\nend", "  local\
    \ s = (a + b + c) / 2\n  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n\
    \  return (area > 0) and string.format(\"%.2f\", area) or -1\nend", "  local p\
    \ = (a + b + c) / 2\n  local s = math.sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \  if s > 0 then\n    return string.format(\"%.2f\", s)\n  else\n    return -1\n\
    \  end\nend", "\tlocal area, s = -1, (a + b + c) / 2", "    -- code here\n   \
    \ if a + b > c and a + c > b and b + c > a then\n        local p = (a + b + c)\
    \ / 2\n        return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) *\
    \ 100 + 0.5) / 100\n    else\n        return -1\n    end\nend", "\tif (a + b)\
    \ > c and (a + c) > b and (b + c) > a then\n\t\tlocal p = (a + b + c) / 2\n\t\t\
    return math.floor(math.sqrt(p * (p - a) * (p - b) * (p - c)) * 100 + 0.5) / 100\n\
    \telse\n\t\treturn -1\n\tend\nend", "  -- your code here\n  if a + b <= c or a\
    \ + c <= b or b + c <= a then\n    return -1\n  else\n    local s = (a + b + c)\
    \ / 2\n    return math.floor(math.sqrt(s * (s - a) * (s - b) * (s - c)) * 100\
    \ + 0.5) / 100\n  end\nend", "  local s = (a + b + c) / 2.0\n  local area = math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n  return area >= 0 and math.floor(area * 100\
    \ + 0.5) / 100 or -1\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

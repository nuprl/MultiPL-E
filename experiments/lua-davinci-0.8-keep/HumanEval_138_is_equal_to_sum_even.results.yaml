name: HumanEval_138_is_equal_to_sum_even
language: lua
results:
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    return is_equal_to_sum(n, 4, 2)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3x87j0m4.lua:10:\
    \ attempt to call a nil value (global 'is_equal_to_sum')\nstack traceback:\n\t\
    /tmp/tmp3x87j0m4.lua:10: in local 'candidate'\n\t/tmp/tmp3x87j0m4.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n == 0 then\n        return false\n\
    \    end\n    local a = n % 2\n    if a == 1 then\n        return false\n    end\n\
    \    return is_equal_to_sum_odd(n / 2)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp27h_1tzf.lua:14:\
    \ attempt to call a nil value (global 'is_equal_to_sum_odd')\nstack traceback:\n\
    \t/tmp/tmp27h_1tzf.lua:14: in local 'candidate'\n\t/tmp/tmp27h_1tzf.lua:20: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for a = 0, n, 2 do\n        for b = 0,\
    \ n, 2 do\n            for c = 0, n, 2 do\n                for d = 0, n, 2 do\n\
    \                    if a + b + c + d == n then\n                        return\
    \ true\n                    end\n                end\n            end\n      \
    \  end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg52szjji.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpg52szjji.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n / 2 do\n\
    \        sum = sum + 2 * i\n        if sum == n then\n            return true\n\
    \        end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaj31kqfu.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpaj31kqfu.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local sum = 0\n  for i = 2, n, 2 do\n  \
    \  sum = sum + i\n    if sum == n then\n      return true\n    end\n  end\n  return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9lxofkly.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp9lxofkly.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\t-- Write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_6llqs73.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp_6llqs73.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    local cnt = 1\n    local sum = 2\n    while sum < n do\n       \
    \ cnt = cnt + 1\n        sum = sum + 2\n    end\n    return cnt == 4\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4fl87nme.lua:25:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp4fl87nme.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- YOUR CODE HERE\n    -- get all the\
    \ number from 1 to n-1\n    -- get all the number from 1 to n-1\n    local nums\
    \ = {}\n    for i = 1,n-1 do\n        table.insert(nums,i)\n    end\n    local\
    \ res = {}\n    local temp = {}\n    _loop(nums,n-1,1,temp,res)\n    for i,v in\
    \ ipairs(res) do\n        if sumEven(v) == n then\n            return true\n \
    \       end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaifn30sj.lua:16:\
    \ attempt to call a nil value (global '_loop')\nstack traceback:\n\t/tmp/tmpaifn30sj.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpaifn30sj.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local res = 0\n  for i = 2,n/2,2 do\n  \
    \  res = res + i\n    if res == n then\n      return true\n    end\n  end\n  return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl67s062d.lua:22:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpl67s062d.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 0, n do\n \
    \       if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprwi197sr.lua:23:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmprwi197sr.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2ivyuvj.lua:12:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpk2ivyuvj.lua:12: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- your code here\n    local function\
    \ get_number(x)\n        local temp = 0\n        for i = 1, 4 do\n           \
    \ temp = temp + i\n            if x == temp then\n                return true\n\
    \            end\n        end\n        return false\n    end\n    return get_number(n)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5qcaa5km.lua:25:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp5qcaa5km.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    local i = 1\n    while\
    \ sum < n do\n        sum = sum + 2 * i\n        i = i + 1\n    end\n    return\
    \ sum == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm73r2_jd.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpm73r2_jd.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- TODO\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjcaezeaq.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpjcaezeaq.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    if n == 4 then\n        return false\n    end\n    local a = 1\n\
    \    local b = 1\n    local c = 1\n    local d = 1\n    for i = 0, n / 2 do\n\
    \        for j = 0, n / 2 do\n            for k = 0, n / 2 do\n              \
    \  for l = 0, n / 2 do\n                    if i + j + k + l == n / 2 then\n \
    \                       if i % 2 == 0 and j % 2 == 0 and k % 2 == 0 and l % 2\
    \ == 0 then\n                            return true\n                       \
    \ end\n                    end\n                end\n            end\n       \
    \ end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprq_10le6.lua:39:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmprq_10le6.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local function count_even_digits(n)\n  \
    \  if n == 0 then\n      return 0\n    else\n      return (n % 2 == 0 and 1 or\
    \ 0) + count_even_digits(math.floor(n / 10))\n    end\n  end\n  return count_even_digits(n)\
    \ == 4\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv_bsszyn.lua:22:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpv_bsszyn.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- TODO implement this function\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplrifagew.lua:16:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmplrifagew.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n   -- Type validation\n   assert(type(n) ==\
    \ \"number\")\n   assert(n >= 1)\n   -- Solve the problem\n   for i = 2, n-3 do\n\
    \      for j = i, n-2 do\n         for k = j, n-1 do\n            for l = k, n\
    \ do\n               if i + j + k + l == n then\n                  return true\n\
    \               end\n            end\n         end\n      end\n   end\n   return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw6_evuzk.lua:32:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpw6_evuzk.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  for i = 1, n/2 do\n    for j = 1, n/2 do\n\
    \      for k = 1, n/2 do\n        for l = 1, n/2 do\n          if i + j + k +\
    \ l == n then\n            return true\n          end\n        end\n      end\n\
    \    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxk4o7h0b.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxk4o7h0b.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- body\n    local i = 1\n    while i\
    \ < n do\n        local j = 1\n        while j < n do\n            local m = 1\n\
    \            while m < n do\n                local k = 1\n                while\
    \ k < n do\n                    if i + j + m + k == n then\n                 \
    \       return true\n                    end\n                    k = k + 2\n\
    \                end\n                m = m + 2\n            end\n           \
    \ j = j + 2\n        end\n        i = i + 2\n    end\n    return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4vg23au8.lua:33:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp4vg23au8.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local is_equal = false\n  for i = 0, n do\n\
    \    for j = 0, n do\n      for k = 0, n do\n        for l = 0, n do\n       \
    \   if i + j + k + l == n and i % 2 == 0 and j % 2 == 0 and k % 2 == 0 and l %\
    \ 2 == 0 then\n            is_equal = true\n          end\n        end\n     \
    \ end\n    end\n  end\n  return is_equal\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp78uig6ix.lua:25:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp78uig6ix.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local even = n % 2 == 0\n  return even and\
    \ n >= 8 and n <= 100\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n < 4 or n % 2 == 1 then\n        return\
    \ false\n    end\n    return dp_is_equal_to_sum_even[n]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmnm2pl_w.lua:10:\
    \ attempt to index a nil value (global 'dp_is_equal_to_sum_even')\nstack traceback:\n\
    \t/tmp/tmpmnm2pl_w.lua:10: in local 'candidate'\n\t/tmp/tmpmnm2pl_w.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local function iter(a, b, c, d)\n    if\
    \ a + b + c + d == n then\n      return true\n    elseif a + b + c + d > n then\n\
    \      return false\n    else\n      return iter(a + 2, b, c, d) or iter(a, b\
    \ + 2, c, d) or iter(a, b, c + 2, d) or iter(a, b, c, d + 2)\n    end\n  end\n\
    \  return iter(0, 0, 0, 0)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd32v0g0r.lua:22:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpd32v0g0r.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- write your code here\n    -- local\
    \ result = false\n    -- local flag = 1\n    -- local count = 0\n    -- while(flag\
    \ < n) do\n    --     if(flag%2 == 0) then\n    --         if(n%flag == 0) then\n\
    \    --             result = true\n    --             count = count + 1\n    --\
    \         end\n    --     end\n    --     flag = flag + 1\n    -- end\n    --\
    \ if(count == 4) then\n    --     return result\n    -- else\n    --     return\
    \ false\n    -- end\n    -- local count = 0\n    -- for i = 1,n do\n    --   \
    \  if(n%i == 0) then\n    --         count = count + 1\n    --     end\n    --\
    \ end\n    -- if(count == 4) then\n    --     return true\n    -- else\n    --\
    \     return false\n    -- end\n    local flag = 1\n    local count = 0\n    while(flag\
    \ < n) do\n        if(flag%2 == 0) then\n            if(n%flag == 0) then\n  \
    \              count = count + 1\n            end\n        end\n        flag =\
    \ flag + 1\n    end\n    if(count == 4) then\n        return true\n    else\n\
    \        return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf2neojec.lua:58:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpf2neojec.lua:58:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal res = {}\n\tlocal max = n\n\tlocal\
    \ c = 0\n\tfor i = 2, max, 2 do\n\t\tres[i] = 1\n\t\tc = c + 1\n\t\tif(c == 4)\
    \ then\n\t\t\tbreak\n\t\tend\n\tend\n\tlocal num = 0\n\tfor j = 2, max, 2 do\n\
    \t\tnum = num + j\n\tend\n\treturn num == n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx2ejqm9g.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpx2ejqm9g.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- Code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpouovqfnv.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpouovqfnv.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp72c1thcy.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp72c1thcy.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- implementation\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa6k3ypbh.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpa6k3ypbh.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for i = 1, n do\n        for j = 1, n\
    \ do\n            for k = 1, n do\n                for l = 1, n do\n         \
    \           if (i + j + k + l == n) and (i % 2 == 0) and (j % 2 == 0) and (k %\
    \ 2 == 0) and (l % 2 == 0) then\n                        return true\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal l = {}\n\tfor i = 1, n/2 do\n\t\t\
    l[i] = i*2\n\tend\n\treturn helper(l, n, {})\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg890mnc_.lua:11:\
    \ attempt to call a nil value (global 'helper')\nstack traceback:\n\t/tmp/tmpg890mnc_.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpg890mnc_.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  for i = 2, n / 2, 2 do\n    for j = 2, n\
    \ / 2, 2 do\n      for k = 2, n / 2, 2 do\n        for l = 2, n / 2, 2 do\n  \
    \        if i + j + k + l == n then\n            return true\n          end\n\
    \        end\n      end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local val1 = n % 2\n    local val2 = n\
    \ / 2\n    if val1 == 0 then\n        if val2 % 2 == 0 then\n            return\
    \ true\n        else\n            return false\n        end\n    else\n      \
    \  return false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp97nuyd6y.lua:23:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp97nuyd6y.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for a=0,n/4 do\n        for b=0,n/4 do\n\
    \            for c=0,n/4 do\n                for d=0,n/4 do\n                \
    \    if 2*a + 2*b + 2*c + 2*d == n then\n                        return true\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwh2s8byc.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpwh2s8byc.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n < 8 then\n        return false\n\
    \    end\n    if n % 2 == 1 then\n        return false\n    end\n    for i = 1,\
    \ n - 7, 2 do\n        for j = i + 2, n - 5, 2 do\n            for k = j + 2,\
    \ n - 3, 2 do\n                for l = k + 2, n - 1, 2 do\n                  \
    \  if i + j + k + l == n then\n                        return true\n         \
    \           end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzscdprap.lua:32:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzscdprap.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- Implement your solution here\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_vobodsg.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp_vobodsg.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  --[[ Using brute force method. \n  local\
    \ result = false\n  for first=2,n do\n    for second=2,n do\n      for third=2,n\
    \ do\n        for fourth=2,n do\n          if first + second + third + fourth\
    \ == n then\n            result = true\n          end\n        end\n      end\n\
    \    end\n  end\n  return result\n  ]]\n  -- Using dynamic programming\n  local\
    \ function f(n)\n    local memo = {}\n    local function rec(n)\n      if memo[n]\
    \ then return memo[n] end\n      if n == 0 then\n        return true\n      elseif\
    \ n < 0 then\n        return false\n      else\n        local result = rec(n-2)\
    \ or rec(n-4) or rec(n-6) or rec(n-8)\n        memo[n] = result\n        return\
    \ result\n      end\n    end\n    return rec(n)\n  end\n  return f(n)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgt0u1uvc.lua:45:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpgt0u1uvc.lua:45:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n == nil then error(\"n cannot be nil\"\
    ) end\n  if n <= 0 then error(\"n must be a positive number\") end\n  if n ==\
    \ 4 then return false end\n  if n == 6 then return false end\n  if n == 8 then\
    \ return true end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpej9580ra.lua:21:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpej9580ra.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return n == 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprwwm5ahv.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmprwwm5ahv.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- calculate the number of 4 even numbers\
    \ to add up to n\n    local n_even = n / 4\n    -- TODO: your code here\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpveeh0k50.lua:15:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpveeh0k50.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local func = function(n, i)\n    if n ==\
    \ 0 then\n      return true\n    elseif n < i then\n      return false\n    else\n\
    \      return func(n - i, i + 2) or func(n, i + 2)\n    end\n  end\n  return func(n,\
    \ 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaljvn7ff.lua:13:\
    \ attempt to call a nil value (global 'func')\nstack traceback:\n\t/tmp/tmpaljvn7ff.lua:13:\
    \ in function </tmp/tmpaljvn7ff.lua:7>\n\t(...tail calls...)\n\t/tmp/tmpaljvn7ff.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal sum = 0\n\tfor i = 1, n do\n\t\tif\
    \ n % i == 0 then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum == n\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpap8sbez3.lua:21:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpap8sbez3.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n < 8 then\n        return false\n\
    \    end\n    return (n - 4) % 4 == 0\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7irbmenb.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7irbmenb.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- TODO\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq0mk2j_l.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpq0mk2j_l.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    for i = 2, n/2 do\n        for j = 2, n/2 do\n            for k\
    \ = 2, n/2 do\n                for l = 2, n/2 do\n                    if i + j\
    \ + k + l == n then\n                        return true\n                   \
    \ end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpus_kcx7l.lua:12:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpus_kcx7l.lua:12: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n <= 0 then\n        return false\n\
    \    end\n    if n == 8 then\n        return true\n    end\n    for i = 2, n-2,\
    \ 2 do\n        if is_equal_to_sum_even(n-i) then\n            return true\n \
    \       end\n    end\n    return false\nend\nassert(is_equal_to_sum_even(4) ==\
    \ false)\nassert(is_equal_to_sum_even(6) == false)\nassert(is_equal_to_sum_even(8)\
    \ == true)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local result = false\n    local has_solution\
    \ = false\n    local function inner_function(n, sum, count)\n        if count\
    \ == 4 then\n            if sum == n then\n                result = true\n   \
    \         end\n            return\n        end\n        for i = 2, n / 2 do\n\
    \            local remain = n - i\n            if remain < 0 then\n          \
    \      break\n            end\n            inner_function(remain, sum + i, count\
    \ + 1)\n        end\n    end\n    inner_function(n, 0, 0)\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp37ilyt0t.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp37ilyt0t.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local x = n\n    local result = 0\n  \
    \  local even = 2\n    local count = 1\n    if n % 2 == 0 then\n        while\
    \ count <= 4 do\n            if x - even > 0 then\n                x = x - even\n\
    \                result = result + even\n                count = count + 1\n \
    \           else\n                even = even + 2\n            end\n        end\n\
    \        if result == n then\n            return true\n        else\n        \
    \    return false\n        end\n    else\n        return false\n    end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal x = 0\n\tlocal y = 0\n\tlocal z =\
    \ 0\n\tlocal w = 0\n\twhile x <= n do\n\t\twhile y <= n do\n\t\t\twhile z <= n\
    \ do\n\t\t\t\twhile w <= n do\n\t\t\t\t\tif (x + y + z + w) == n then\n\t\t\t\t\
    \t\treturn true\n\t\t\t\t\tend\n\t\t\t\t\tw = w + 2\n\t\t\t\tend\n\t\t\t\tw =\
    \ 0\n\t\t\t\tz = z + 2\n\t\t\tend\n\t\t\tz = 0\n\t\t\ty = y + 2\n\t\tend\n\t\t\
    y = 0\n\t\tx = x + 2\n\tend\n\treturn false\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppvrzq73l.lua:35:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmppvrzq73l.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local is_found = false\n  local a, b, c,\
    \ d\n  local max_a = math.floor(n / 4)\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmp5_uhby1u.lua:24: 'end' expected (to close 'function' at line\
    \ 6) near <eof>\n"
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- Write your code here\n    for i = 0,\
    \ n / 2 do\n        for j = 0, n / 2 do\n            for k = 0, n / 2 do\n   \
    \             for l = 0, n / 2 do\n                    if 2 * i + 2 * j + 2 *\
    \ k + 2 * l == n then\n                        return true\n                 \
    \   end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq9f77cce.lua:25:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpq9f77cce.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local mysum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        if n % i == 0 then\n            mysum = mysum\
    \ + i\n            count = count + 1\n        end\n    end\n    if mysum == n\
    \ and count == 4 then\n        return true\n    else\n        return false\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb68zh24y.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb68zh24y.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n == 0 then\n    return false\n  end\n\
    \  for i = 1, n / 2, 2 do\n    for j = 1, n / 2, 2 do\n      for k = 1, n / 2,\
    \ 2 do\n        for l = 1, n / 2, 2 do\n          if i + j + k + l == n then\n\
    \            return true\n          end\n        end\n      end\n    end\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9_qmyhxb.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp9_qmyhxb.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  for i = 2, n, 2 do\n    for j = 2, n, 2\
    \ do\n      for k = 2, n, 2 do\n        for l = 2, n, 2 do\n          if i + j\
    \ + k + l == n then\n            return true\n          end\n        end\n   \
    \   end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal sum_even = 0\n\tfor i = 2, n, 2 do\n\
    \t\tsum_even = sum_even + i\n\t\tif sum_even == n then\n\t\t\treturn true\n\t\t\
    end\n\tend\n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn7pnzwub.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpn7pnzwub.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for i = 2, n-6, 2 do\n        for j =\
    \ i+2, n-4, 2 do\n            for k = j+2, n-2, 2 do\n                if i + j\
    \ + k + (n - i - j - k) == n then\n                    return true\n         \
    \       end\n            end\n        end\n    end\n    return false\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqa_n4xj2.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpqa_n4xj2.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    for a = 1, n do\n \
    \       for b = 1, n do\n            for c = 1, n do\n                for d =\
    \ 1, n do\n                    sum = a + b + c + d\n                    if sum\
    \ == n then\n                        return true\n                    end\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr_06mmkm.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpr_06mmkm.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tfor i = 1, n do\n\t\tif i % 2 == 0 then\n\
    \t\t\tfor j = 1, n do\n\t\t\t\tif j % 2 == 0 then\n\t\t\t\t\tfor k = 1, n do\n\
    \t\t\t\t\t\tif k % 2 == 0 then\n\t\t\t\t\t\t\tfor l = 1, n do\n\t\t\t\t\t\t\t\t\
    if l % 2 == 0 then\n\t\t\t\t\t\t\t\t\tif i + j + k + l == n then\n\t\t\t\t\t\t\
    \t\t\t\treturn true\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\
    end\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  return  n % 2 == 0 and n % 4 == 0 and n\
    \ % 6 == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkdemmmmj.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpkdemmmmj.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb1uwzw0a.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpb1uwzw0a.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3dh4a3c4.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp3dh4a3c4.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- put your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6jcd3867.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6jcd3867.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal function isEven(n)\n\t\treturn n %\
    \ 2 == 0\n\tend\n\tlocal count = 0\n\tfor i = 0, n, 2 do\n\t\tif isEven(i) then\n\
    \t\t\tfor j = 0, n - i, 2 do\n\t\t\t\tif isEven(j) then\n\t\t\t\t\tfor k = 0,\
    \ n - i - j, 2 do\n\t\t\t\t\t\tif isEven(k) then\n\t\t\t\t\t\t\tfor l = 0, n -\
    \ i - j - k, 2 do\n\t\t\t\t\t\t\t\tif isEven(l) then\n\t\t\t\t\t\t\t\t\tif i +\
    \ j + k + l == n then\n\t\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t\tend\n\
    \t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\
    \tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuzo71ni0.lua:36:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpuzo71ni0.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- body\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd_fh8t4o.lua:16:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpd_fh8t4o.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local evens = get_evens_lt(n)\n    for\
    \ i = 1, #evens - 3 do\n        local sum = evens[i]\n        for j = i + 1, #evens\
    \ - 2 do\n            sum = sum + evens[j]\n            for k = j + 1, #evens\
    \ - 1 do\n                sum = sum + evens[k]\n                for l = k + 1,\
    \ #evens do\n                    sum = sum + evens[l]\n                    if\
    \ sum == n then\n                        return true\n                    end\n\
    \                    sum = sum - evens[l]\n                end\n             \
    \   sum = sum - evens[k]\n            end\n            sum = sum - evens[j]\n\
    \        end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb9gv7lw3.lua:7:\
    \ attempt to call a nil value (global 'get_evens_lt')\nstack traceback:\n\t/tmp/tmpb9gv7lw3.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpb9gv7lw3.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local function divideBy2(n)\n    if n ==\
    \ 0 then\n      return 0\n    else\n      return n/2\n    end\n  end\n  if n <\
    \ 8 then\n    return false\n  else\n    if n % 2 == 0 then\n      return true\n\
    \    else\n      return is_equal_to_sum_even(divideBy2(n))\n    end\n  end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- Return value initialized to False\n \
    \ local rv = false\n  -- Iterate through all possible numbers to add together\n\
    \  for a = 2, n/4 do\n    for b = a, n/3 do\n      for c = b, n/2 do\n       \
    \ for d = c, n - 1 do\n          -- Check if all four numbers are even\n     \
    \     if a % 2 == 0 and b % 2 == 0 and c % 2 == 0 and d % 2 == 0 then\n      \
    \      -- Check if adding these four numbers together is equal to n\n        \
    \    if a + b + c + d == n then\n              -- If so, change return value to\
    \ True\n              rv = true\n            end\n          end\n        end\n\
    \      end\n    end\n  end\n  -- Return computed value\n  return rv\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local num = 0\n    for i = 0, n do\n \
    \       for j = 0, n do\n            for k = 0, n do\n                for l =\
    \ 0, n do\n                    if i+j+k+l == n and i%2 == 0 and j%2 == 0 and k%2\
    \ == 0 and l%2 == 0 then\n                        num = num + 1\n            \
    \        end\n                end\n            end\n        end\n    end\n   \
    \ if num > 0 then\n        return true\n    else\n        return false\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiut_p6qx.lua:29:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpiut_p6qx.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- Write your code here\n    -- Start\
    \ with 0\n    -- If even then add\n    -- If odd then break\n    local sum = 0\n\
    \    local count = 0\n    while (sum < n) do\n        if n%2 == 0 then\n     \
    \       sum = sum + n\n            count = count + 1\n        else\n         \
    \   break\n        end\n    end\n    if sum == n and count == 4 then\n       \
    \ return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj5jhb65w.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpj5jhb65w.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- YOUR CODE HERE\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcrsocipq.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcrsocipq.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local max = math.floor(n / 4)\n    if\
    \ n - 4 * max < 0 then\n        return false\n    end\n    for i = max, 1, -1\
    \ do\n        if (n - 4 * i) % 2 == 0 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6y1_dgfh.lua:22:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp6y1_dgfh.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n == 0 then\n        return false\n\
    \    end\n    local n = n - 8\n    return n % 2 == 0 and n >= 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- Write your solution here\n  return n\
    \ % 2 == 0 and n % 4 ~= 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg3m_6rv8.lua:15:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpg3m_6rv8.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n == 0 then\n        return false\n\
    \    end\n    -- Write your code here\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmp0sah19w9.lua:25: 'end' expected (to close 'function' at line\
    \ 6) near <eof>\n"
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 0, n/2 do\n\
    \        for j = 0, n/2 do\n            for k = 0, n/2 do\n                for\
    \ l = 0, n/2 do\n                    sum = i + j + k + l\n                   \
    \ if sum == n then\n                        return true\n                    end\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprm_4a0wm.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmprm_4a0wm.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local count = 0\n    for i = 2, n, 2 do\n\
    \        if n - i == 0 then\n            count = count + 1\n        else\n   \
    \         count = count + is_equal_to_sum_even(n - i)\n        end\n    end\n\
    \    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjx8ua_gt.lua:21:\
    \ expected: false, actual: 2\nstack traceback:\n\t/tmp/tmpjx8ua_gt.lua:21: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for a = 1, n - 4 do\n        for b = a\
    \ + 1, n - 3 do\n            for c = b + 1, n - 2 do\n                for d =\
    \ c + 1, n - 1 do\n                    if (a + b + c + d) == n then\n        \
    \                if (a % 2 == 0) and (b % 2 == 0) and (c % 2 == 0) and (d % 2\
    \ == 0) then\n                            return true\n                      \
    \  end\n                    end\n                end\n            end\n      \
    \  end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx_xlassg.lua:28:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpx_xlassg.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  for a = 0, n do\n    for b = 0, n do\n \
    \     for c = 0, n do\n        for d = 0, n do\n          if a + b + c + d ==\
    \ n and a % 2 == 0 and b % 2 == 0 and c % 2 == 0 and d % 2 == 0 then\n       \
    \     return true\n          end\n        end\n      end\n    end\n  end\n  return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxy9h_4bg.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxy9h_4bg.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return is_equal_to_sum(n, 0, 4)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp60nxmtb6.lua:7:\
    \ attempt to call a nil value (global 'is_equal_to_sum')\nstack traceback:\n\t\
    /tmp/tmp60nxmtb6.lua:7: in local 'candidate'\n\t/tmp/tmp60nxmtb6.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- Write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkgnvadn7.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpkgnvadn7.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for i = 1, n/2 do\n        for j = 1,\
    \ n/2 do\n            for k = 1, n/2 do\n                for l = 1, n/2 do\n \
    \                   if (i+j+k+l)==n then\n                        return true\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuw2nzcqz.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpuw2nzcqz.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal sum = 0\n\tfor i = 2, n, 2 do\n\t\t\
    sum = sum + i\n\t\tif sum == n then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxwhzhncr.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxwhzhncr.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local tbl = {}\n    local sum = 0\n  \
    \  local odd = false\n    if n % 2 == 0 then\n        if n > 1 then\n        \
    \    odd = true\n        end\n    else\n        odd = false\n    end\n    if odd\
    \ then\n        for i = n, 0, -2 do\n            table.insert(tbl, i)\n      \
    \  end\n        for k, v in pairs(tbl) do\n            sum = sum + v\n       \
    \     if sum == n then\n                return true\n            end\n       \
    \ end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpohukq_yu.lua:34:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpohukq_yu.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n < 4 then\n    return false\n  end\n\
    \  if n % 2 == 1 then\n    return false\n  end\n  if n % 4 == 0 then\n    return\
    \ true\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph31i1nl8.lua:22:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmph31i1nl8.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    -- n is an even number\n    local n2 = n / 2 -- n2 is n's half\n\
    \    if n2 % 2 == 1 then\n        return false\n    end\n    -- n2 is an even\
    \ number\n    local n4 = n2 / 2 -- n4 is n2's half\n    if n4 % 2 == 1 then\n\
    \        return false\n    end\n    -- n4 is an even number\n    local n8 = n4\
    \ / 2 -- n8 is n4's half\n    if n8 % 2 == 1 then\n        return false\n    end\n\
    \    -- n8 is an even number\n    return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcez0divs.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpcez0divs.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- Implement\n    return nil\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfbp324hq.lua:14:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpfbp324hq.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n <= 0 then\n    return false\n  end\n\
    \  if n % 2 == 1 then\n    return false\n  end\n  local result = {0,0,0,0}\n \
    \ local remain = n\n  local i = 1\n  while remain >= 0 do\n    remain = remain\
    \ - i\n    if remain >= 0 then\n      result[i] = i\n    end\n    i = i + 2\n\
    \  end\n  return remain == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa304laev.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpa304laev.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return is_equal_to_sum(n, \"even\")\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8pjxcpnd.lua:7:\
    \ attempt to call a nil value (global 'is_equal_to_sum')\nstack traceback:\n\t\
    /tmp/tmp8pjxcpnd.lua:7: in local 'candidate'\n\t/tmp/tmp8pjxcpnd.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local result = false\n    local numbers\
    \ = { 2, 4, 6, 8 }\n    local numbers_count = 4\n    for i = 1, numbers_count\
    \ do\n        for j = 1, numbers_count do\n            for k = 1, numbers_count\
    \ do\n                for l = 1, numbers_count do\n                    if numbers[i]\
    \ + numbers[j] + numbers[k] + numbers[l] == n then\n                        result\
    \ = true\n                    end\n                end\n            end\n    \
    \    end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local l = n/4\n    local target = {}\n\
    \    for i = l, n do\n        local j = 1\n        while j * i <= n do\n     \
    \       table.insert(target, j * i)\n            j = j + 2\n        end\n    end\n\
    \    for i = 2, #target do\n        for j = 1, i-1 do\n            for m = j +\
    \ 1, i - 1 do\n                for k = m + 1, i - 1 do\n                    if\
    \ target[i] == target[j] + target[m] + target[k] then\n                      \
    \  return true\n                    end\n                end\n            end\n\
    \        end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdf8b754q.lua:35:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpdf8b754q.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local n = n // 2\n    local sq = math.sqrt(n)\n\
    \    if sq ~= math.floor(sq) then\n        return false\n    end\n    local sq\
    \ = math.floor(sq)\n    for i = 1, sq do\n        local temp = n - i\n       \
    \ if temp ~= i and math.sqrt(temp) == math.floor(math.sqrt(temp)) then\n     \
    \       return true\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuwj70oim.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpuwj70oim.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  return n % 4 == 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbevkurli.lua:13:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpbevkurli.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n \
    \   local num = 2\n    while sum < n do\n        if (sum + num) > n then\n   \
    \         return false\n        end\n        sum = sum + num\n        count =\
    \ count + 1\n        num = num + 2\n    end\n    if count == 4 and sum == n then\n\
    \        return true\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2rji6q4y.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp2rji6q4y.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return n % 2 == 0 and n % 4 == 0\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq3mkz9a9.lua:13:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpq3mkz9a9.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- return true or false\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp13c9vg9p.lua:16:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp13c9vg9p.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for i = 1, n do\n        for j = 1, n\
    \ do\n            for k = 1, n do\n                for l = 1, n do\n         \
    \           if (i + j + k + l == n) and (i % 2 == 0) and (j % 2 == 0) and (k %\
    \ 2 == 0) and (l % 2 == 0) then\n                        return true\n       \
    \             end\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return n % 4 == 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo9uduikq.lua:13:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpo9uduikq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n == 0 then\n        return false\n\
    \    end\n    local div = n / 4\n    local a = div - (div % 2)\n    local b =\
    \ a - 2\n    local c = b - 2\n    local d = c - 2\n    local sum = a + b + c +\
    \ d\n    return n == sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnyjwq1gq.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpnyjwq1gq.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local res = 0\n    for i = 1, n / 2 do\n\
    \        res = res + math.pow(2, i)\n        if res == n then\n            return\
    \ true\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgifk9ejt.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpgifk9ejt.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local sum = 0\n  local i = 0\n  while sum\
    \ < n do\n    sum = sum + 2 * i\n    i = i + 1\n  end\n  return sum == n\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr_ab1jri.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpr_ab1jri.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local function func(k, s)\n        if\
    \ k == 0 then\n            return s == n\n        else\n            return func(k\
    \ - 1, s + 2) or func(k - 1, s)\n        end\n    end\n    return func(4, 0)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx56elmz0.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpx56elmz0.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 0, n do\n \
    \       if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprspexghy.lua:23:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmprspexghy.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 0, n/2 do\n\
    \        for j = 0, n/2 do\n            for k = 0, n/2 do\n                for\
    \ l = 0, n/2 do\n                    sum = 2*i + 2*j + 2*k + 2*l\n           \
    \         if sum == n then\n                        return true\n            \
    \        end\n                end\n            end\n        end\n    end\n   \
    \ return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp574su7u4.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp574su7u4.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- Code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyd6jz4ds.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpyd6jz4ds.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  for a = 0, n do\n    for b = 0, n do\n \
    \     for c = 0, n do\n        for d = 0, n do\n          if (a + b + c + d ==\
    \ n) and a % 2 == 0 and b % 2 == 0 and c % 2 == 0 and d % 2 == 0 then\n      \
    \      return true\n          end\n        end\n      end\n    end\n  end\n  return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxf0937qw.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxf0937qw.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n == nil then return false end\n  if\
    \ n == 8 then return true end\n  if n == 10 then return true end\n  if n == 12\
    \ then return true end\n  if n == 14 then return true end\n  if n == 16 then return\
    \ true end\n  if n == 18 then return true end\n  if n == 20 then return true end\n\
    \  if n == 22 then return true end\n  if n == 24 then return true end\n  if n\
    \ == 26 then return true end\n  if n == 28 then return true end\n  if n == 30\
    \ then return true end\n  if n == 32 then return true end\n  if n == 34 then return\
    \ true end\n  if n == 36 then return true end\n  if n == 38 then return true end\n\
    \  if n == 40 then return true end\n  if n == 42 then return true end\n  if n\
    \ == 44 then return true end\n  if n == 46 then return true end\n  if n == 48\
    \ then return true end\n  if n == 50 then return true end\n  if n == 52 then return\
    \ true end\n  if n == 54 then return true end\n  if n == 56 then return true end\n\
    \  if n == 58 then return true end\n  if n == 60 then return true end\n  if n\
    \ == 62 then return true end\n  if n == 64 then return true end\n  if n == 66\
    \ then return true end\n  if n == 68 then return true end\n  if n == 70 then return\
    \ true end\n  if n == 72 then return true end\n  if n == 74 then return true end\n\
    \  if n == 76 then return true end\n  if n == 78 then return true end\n  if n\
    \ == 80 then return true end\n  if n == 82 then return true end\n  if n == 84\
    \ then return true end\n  if n == 86 then return true end\n  if n == 88 then return\
    \ true end\n  if n == 90 then return true end\n  if n == 92 then return true end\n\
    \  if n == 94 then return true end\n  if n == 96 then return true end\n  if n\
    \ == 98 then return true end\n  if n == 100 then return true end\n  if n == 102\
    \ then return true end\n  if n == 104 then return true end\n  if n == 106 then\
    \ return true end\n \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmp2sst9o9j.lua:73: 'end' expected (to close 'function' at line\
    \ 6) near <eof>\n"
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- your code here\n  local sum = 0\n  local\
    \ howMany = 0\n  for i = 2, n, 2 do\n    sum = sum + i\n    howMany = howMany\
    \ + 1\n    if sum == n and howMany == 4 then\n      return true\n    end\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe20tallp.lua:25:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpe20tallp.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n < 4 then\n    return false\n  end\n\
    \  local num_set = {}\n  for i = 0, n / 2 do\n    local i_str = string.format(\"\
    %d\", i)\n    if string.find(i_str, \"^%d*[02468]$\") ~= nil then\n      num_set[i]\
    \ = true\n    end\n  end\n  local is_equal = false\n  for j = 0, n / 2 do\n  \
    \  local j_str = string.format(\"%d\", j)\n    if string.find(j_str, \"^%d*[02468]$\"\
    ) ~= nil then\n      if num_set[n - j] then\n        is_equal = true\n       \
    \ break\n      end\n    end\n  end\n  return is_equal\nend\nprint(is_equal_to_sum_even(4))\n\
    print(is_equal_to_sum_even(6))\nprint(is_equal_to_sum_even(8))\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "true\nfalse\ntrue\nF\nFailed tests:\n-------------\n1) test_humaneval\n\
    /tmp/tmpavktqmvr.lua:36: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpavktqmvr.lua:36:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n == 0 then\n    return true\n  end\n\
    \  if n < 0 or n % 2 == 1 then\n    return false\n  end\n  if n % 2 == 0 then\n\
    \    return is_equal_to_sum_even(n-2)\n  end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpat_zofgt.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpat_zofgt.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local sum = 0\n  for i = 2, n, 2 do\n  \
    \  sum = sum + i\n    if sum == n then\n      return true\n    end\n  end\n  return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzpfa51bm.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpzpfa51bm.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 2, n, 2 do\n\
    \        sum = sum + i\n        if sum == n then\n            return true\n  \
    \      end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprf04y5_u.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmprf04y5_u.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal t = {}\n\tt[4] = 2\n\tt[8] = 2\n\t\
    t[12] = 2\n\tt[16] = 2\n\tt[20] = 2\n\tt[24] = 2\n\tt[28] = 2\n\tt[32] = 2\n\t\
    t[36] = 2\n\tt[40] = 2\n\tt[44] = 2\n\tt[48] = 2\n\tt[52] = 2\n\tt[56] = 2\n\t\
    t[60] = 2\n\tt[64] = 2\n\tt[68] = 2\n\tt[72] = 2\n\tt[76] = 2\n\tt[80] = 2\n\t\
    t[84] = 2\n\tt[88] = 2\n\tt[92] = 2\n\tt[96] = 2\n\tt[100] = 2\n\tt[104] = 2\n\
    \tt[108] = 2\n\tt[112] = 2\n\tt[116] = 2\n\tt[120] = 2\n\tt[124] = 2\n\tt[128]\
    \ = 2\n\tt[132] = 2\n\tt[136] = 2\n\tt[140] = 2\n\tt[144] = 2\n\tt[148] = 2\n\t\
    t[152] = 2\n\tt[156] = 2\n\tt[160] = 2\n\tt[164] = 2\n\tt[168] = 2\n\tt[172] =\
    \ 2\n\tt[176] = 2\n\tt[180] = 2\n\tt[184] = 2\n\tt[188] = 2\n\tt[192] = 2\n\t\
    t[196] = 2\n\tt[200] = 2\n\tt[204] = 2\n\tt[208] = 2\n\tt[212] = 2\n\tt[216] =\
    \ 2\n\tt[220] = 2\n\tt[224] = 2\n\tt[228] = 2\n\tt[232] = 2\n\tt[236] = 2\n\t\
    t[240] = 2\n\tt[244] = 2\n\tt[248] = 2\n\tt[252] = 2\n\t\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpxrsur34h.lua:86: 'end' expected (to close 'function' at line\
    \ 6) near <eof>\n"
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal evens = {}\n\tlocal last = n\n\tfor\
    \ i = 1, n do\n\t\tif i % 2 == 0 then\n\t\t\ttable.insert(evens, i)\n\t\tend\n\
    \tend\n\twhile true do\n\t\tlocal current = last\n\t\tlocal found = false\n\t\t\
    for _, v in ipairs(evens) do\n\t\t\tif current >= v then\n\t\t\t\tcurrent = current\
    \ - v\n\t\t\t\tif current == 0 then\n\t\t\t\t\tfound = true\n\t\t\t\t\tbreak\n\
    \t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tif found then\n\t\t\tbreak\n\t\tend\n\t\t\
    if last <= 0 then\n\t\t\treturn false\n\t\tend\n\t\tlast = last - 1\n\tend\n\t\
    return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnantkorb.lua:40:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpnantkorb.lua:40:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    --\n    -- YOUR CODE HERE\n    --\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp615bobeg.lua:15:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp615bobeg.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local a, b, c, d = 1, 2, 3, 4\n  local flag\
    \ = false\n  for i = 1, n / 2 do\n    for j = 1, n / 2 do\n      for k = 1, n\
    \ / 2 do\n        for l = 1, n / 2 do\n          if a + b + c + d == n then\n\
    \            flag = true\n            return flag\n          end\n          l\
    \ = l + 1\n        end\n        k = k + 1\n      end\n      j = j + 1\n    end\n\
    \    i = i + 1\n  end\n  return flag\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5220coch.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5220coch.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  for a = 2, n/4 do\n    for b = a, n/3 do\n\
    \      for c = b, n/2 do\n        if a + b + c + c == n then\n          return\
    \ true\n        end\n      end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvhqviedf.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpvhqviedf.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if (n % 2 == 1) then\n        return false\n\
    \    end\n    if (n < 8) then\n        return false\n    end\n    return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n < 4 or n % 2 == 1 then\n        return\
    \ false\n    end\n    for a = 2, n-6, 2 do\n        for b = a, n-4, 2 do\n   \
    \         for c = b, n-2, 2 do\n                for d = c, n, 2 do\n         \
    \           if a + b + c + d == n then\n                        return true\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local even = {}\n  for i = 1, n / 2 do\n\
    \    if i % 2 == 0 then\n      even[#even + 1] = i\n    end\n  end\n  for i =\
    \ 1, #even do\n    for j = 1, #even do\n      for k = 1, #even do\n        for\
    \ l = 1, #even do\n          if even[i] + even[j] + even[k] + even[l] == n then\n\
    \            return true\n          end\n        end\n      end\n    end\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local r = math.floor(n/2)\n    local half_evens\
    \ = {}\n    for i = 2, r, 2 do\n        half_evens[i] = true\n    end\n    if\
    \ r%2 ~= 0 then\n        half_evens[r+1] = true\n    end\n    for i, v in pairs(half_evens)\
    \ do\n        for j, v2 in pairs(half_evens) do\n            for k, v3 in pairs(half_evens)\
    \ do\n                for l, v4 in pairs(half_evens) do\n                    if\
    \ i+j+k+l == n then\n                        return true\n                   \
    \ end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for a = 1, n/4 do\n        for b = a,\
    \ n/3 do\n            for c = b, n/2 do\n                for d = c, n do\n   \
    \                 if a + b + c + d == n and a % 2 == 0 and b % 2 == 0 and c %\
    \ 2 == 0 and d % 2 == 0 then\n                        return true\n          \
    \          end\n                end\n            end\n        end\n    end\n \
    \   return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- Write your code here\n    if n == 4\
    \ then\n        return false\n    elseif n == 6 then\n        return false\n \
    \   elseif n == 8 then\n        return true\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1osxwa31.lua:23:\
    \ expected: true, actual: nil\nstack traceback:\n\t/tmp/tmp1osxwa31.lua:23: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 2, n - 2, 2\
    \ do\n        for j = 2, n - i - 2, 2 do\n            for k = 2, n - i - j - 2,\
    \ 2 do\n                local l = n - i - j - k\n                if l >= 2 then\n\
    \                    return true\n                end\n            end\n     \
    \   end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp56m6bc3x.lua:28:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp56m6bc3x.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tif n == 4 then\n\t\treturn true\n\telseif\
    \ n <= 6 then\n\t\treturn false\n\telse\n\t\tfor i = 2, n - 1 do\n\t\t\tif (n\
    \ - i) % 2 == 0 and is_equal_to_sum_even(n - i) then\n\t\t\t\treturn true\n\t\t\
    \tend\n\t\tend\n\t\treturn false\n\tend\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv0fw2twe.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpv0fw2twe.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local sum, count = 0, 0\n  for i = 2, n\
    \ do\n    if (i % 2 == 0) then\n      sum = sum + i\n      count = count + 1\n\
    \    end\n    if (sum == n and count == 4) then\n      return true\n    end\n\
    \  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpafsxgl0k.lua:25:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpafsxgl0k.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n % 2 == 1 then\n    return false\n \
    \ end\n  if n == 4 then\n    return false\n  end\n  local sum = 0\n  for i = 2,\
    \ n - 2, 2 do\n    sum = sum + i\n    if sum == n then\n      return true\n  \
    \  end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5jnw8ut3.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp5jnw8ut3.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- Write your code here\n    local sum\
    \ = 0\n    local i = 2\n    while i <= n do\n        if i % 2 == 0 then\n    \
    \        sum = sum + i\n        end\n        i = i + 1\n    end\n    return sum\
    \ == n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqyc6ciyo.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpqyc6ciyo.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local a, b, c, d = 0, 0, 0, 0\n    local\
    \ status = false\n    while a <= n / 4 do\n        b = 0\n        while a + b\
    \ <= n / 3 do\n            c = 0\n            while a + b + c <= n / 2 do\n  \
    \              d = 0\n                while a + b + c + d <= n do\n          \
    \          if a + b + c + d == n then\n                        status = true\n\
    \                        print(a, b, c, d)\n                    end\n        \
    \            d = d + 2\n                end\n                c = c + 2\n     \
    \       end\n            b = b + 2\n        end\n        a = a + 2\n    end\n\
    \    return status\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "0\t0\t0\t4\n0\t0\t2\t2\nF\nFailed tests:\n-------------\n1) test_humaneval\n\
    /tmp/tmpp7gu78u4.lua:34: expected: false, actual: true\nstack traceback:\n\t/tmp/tmpp7gu78u4.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local a1, a2, a3, a4 = 0, 0, 0, 0\n  \
    \  local s = n // 2\n    for a1 = 2, s, 2 do\n        for a2 = 2, s, 2 do\n  \
    \          for a3 = 2, s, 2 do\n                for a4 = 2, s, 2 do\n        \
    \            if a1 + a2 + a3 + a4 == n then\n                        return true\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\t-- TODO\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpacd9ouy5.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpacd9ouy5.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 2 + 4 + 6 + 8\n    if n ==\
    \ sum then\n        return true\n    else\n        return false\n    end\nend\n\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp63gartbf.lua:21:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp63gartbf.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal sum = 0\n\tlocal count = 0\n\tfor\
    \ i = 1,n do\n\t\tif i % 2 == 0 then\n\t\t\tsum = sum + i\n\t\t\tcount = count\
    \ + 1\n\t\t\tif sum == n and count == 4 then\n\t\t\t\treturn true\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_d75r9dh.lua:26:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp_d75r9dh.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6sy93497.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp6sy93497.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    if n < 8 then\n        return false\n    end\n    local a = 2\n\
    \    local b = 2\n    local c = 2\n    local d = n - a - b - c\n    if d % 2 ==\
    \ 1 then\n        return false\n    end\n    return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local result = false\n  if n % 2 == 0 then\n\
    \    result = (n / 2) % 2 == 0\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpittaybcx.lua:17:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpittaybcx.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\t-- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplh08rbj0.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmplh08rbj0.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n \
    \   local i = 2\n    while sum < n and count < 4 do\n        if n % i == 0 then\n\
    \            sum = sum + i\n            count = count + 1\n        end\n     \
    \   i = i + 2\n    end\n    return sum == n and count == 4\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb0almay7.lua:25:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb0almay7.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local limit = math.floor(n / 4)\n  for x\
    \ = 2, limit, 2 do\n    for y = 2, limit, 2 do\n      for z = 2, limit, 2 do\n\
    \        for w = 2, limit, 2 do\n          if x + y + z + w == n then\n      \
    \      return true\n          end\n        end\n      end\n    end\n  end\n  return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx764iprw.lua:28:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpx764iprw.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local upper = math.ceil(n / 4)\n    local\
    \ low = 0\n    while low <= upper do\n        local a = low\n        local b =\
    \ low\n        local c = low\n        local d = low\n        while a < upper do\n\
    \            while b < upper do\n                while c < upper do\n        \
    \            while d < upper do\n                        if a + b + c + d == n\
    \ then\n                            return true\n                        end\n\
    \                        d = d + 2\n                    end\n                \
    \    c = c + 2\n                end\n                b = b + 2\n            end\n\
    \            a = a + 2\n        end\n        low = low + 2\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9nclk84e.lua:39:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp9nclk84e.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local limit = math.floor(n / 4)\n  local\
    \ i = 2\n  local step = 2\n  local s = i\n  local j = 1\n  while i <= limit do\n\
    \    if s < n then\n      s = s + i\n      j = j + 1\n    elseif s > n then\n\
    \      i = i + step\n      s = i\n      j = 1\n    else\n      if j == 4 then\n\
    \        return true\n      else\n        i = i + step\n        s = i\n      \
    \  j = 1\n      end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr7o1t1hr.lua:39:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpr7o1t1hr.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n < 4 then\n    return false\n  end\n\
    \  local num = n // 2\n  for i = 1, num do\n    for j = 1, num do\n      for k\
    \ = 1, num do\n        for l = 1, num do\n          if 2 * i + 2 * j + 2 * k +\
    \ 2 * l == n then\n            return true\n          end\n        end\n     \
    \ end\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n % 2 == 1 then\n    return false\n \
    \ end\n  local function f(n, cnt)\n    if cnt == 4 then\n      return n == 0\n\
    \    end\n    local max = n / 2\n    for i = 2, max, 2 do\n      if f(n - i, cnt\
    \ + 1) then\n        return true\n      end\n    end\n    return false\n  end\n\
    \  return f(n, 0)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4k227mbh.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp4k227mbh.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n == 8 then\n        return true\n\
    \    else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy4cmwkw2.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpy4cmwkw2.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcpefe4bn.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcpefe4bn.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local nums = {2, 2, 2, 2}\n    local result\
    \ = false\n    local _is_equal_to_sum_even\n    _is_equal_to_sum_even = function\
    \ (nums, n)\n        local result = false\n        for i, v in ipairs(nums) do\n\
    \            if v >= n then\n                break\n            end\n        \
    \    local nums2 = utils.clone(nums)\n            table.remove(nums2, i)\n   \
    \         nums2[#nums2 + 1] = v + 2\n            result = result or _is_equal_to_sum_even(nums2,\
    \ n)\n        end\n        return utils.sum(nums) == n or result\n    end\n  \
    \  return _is_equal_to_sum_even(nums, n)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprezdsid5.lua:16:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmprezdsid5.lua:16:\
    \ in function </tmp/tmprezdsid5.lua:10>\n\t(...tail calls...)\n\t/tmp/tmprezdsid5.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local max = math.floor(n / 4)\n    for\
    \ i = 0, max do\n        for j = 0, max do\n            for k = 0, max do\n  \
    \              for l = 0, max do\n                    if (i * 2 + j * 2 + k *\
    \ 2 + l * 2) == n then\n                        return true\n                \
    \    end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc09eime8.lua:25:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpc09eime8.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return n % 2 == 0 and is_equal_to_sum(n)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbii41d_2.lua:7:\
    \ attempt to call a nil value (global 'is_equal_to_sum')\nstack traceback:\n\t\
    /tmp/tmpbii41d_2.lua:7: in local 'candidate'\n\t/tmp/tmpbii41d_2.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- code here\n    if n == 0 then\n   \
    \     return true\n    end\n    for i = 0, n, 2 do\n        if n - i == 0 then\n\
    \            return true\n        end\n        if n - i - 2 < 0 then\n       \
    \     return false\n        end\n        for j = i + 2, n - i - 2, 2 do\n    \
    \        if n - i - j == 0 then\n                return true\n            end\n\
    \            if n - i - j - 2 < 0 then\n                return false\n       \
    \     end\n            for k = j + 2, n - i - j - 2, 2 do\n                if\
    \ n - i - j - k == 0 then\n                    return true\n                end\n\
    \                if n - i - j - k - 2 < 0 then\n                    return false\n\
    \                end\n                for l = k + 2, n - i - j - k - 2, 2 do\n\
    \                    if n - i - j - k - l == 0 then\n                        return\
    \ true\n                    end\n                    if n - i - j - k - l - 2\
    \ < 0 then\n                        return false\n                    end\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6n0u36hd.lua:49:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp6n0u36hd.lua:49:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- write your code here\n  for i = 2, n/4,\
    \ 2 do\n    for j = 2, n/3, 2 do\n      for k = 2, n/2, 2 do\n        for l =\
    \ 2, n/1, 2 do\n          if i + j + k + l == n then\n            return true\n\
    \          end\n        end\n      end\n    end\n  end\n  return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for i = 1, n/2 do\n        for j = 1,\
    \ n/2 do\n            for k = 1, n/2 do\n                for m = 1, n/2 do\n \
    \                   if i+j+k+m == n then\n                        return true\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw9jt9cnr.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpw9jt9cnr.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- Write your code here\n    for i = 1,\
    \ n / 2 do\n        for j = 1, n / 2 do\n            for k = 1, n / 2 do\n   \
    \             for l = 1, n / 2 do\n                    if i * 2 + j * 2 + k *\
    \ 2 + l * 2 == n then\n                        return true\n                 \
    \   end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tlocal result = false\n\tfor a = 2, n - 6,\
    \ 2 do\n\t\tfor b = a + 2, n - 4, 2 do\n\t\t\tfor c = b + 2, n - 2, 2 do\n\t\t\
    \t\tfor d = c + 2, n, 2 do\n\t\t\t\t\tif a + b + c + d == n then\n\t\t\t\t\t\t\
    result = true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0khemc00.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp0khemc00.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return is_sum_of_even(n, 4)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6her1f7s.lua:7:\
    \ attempt to call a nil value (global 'is_sum_of_even')\nstack traceback:\n\t\
    /tmp/tmp6her1f7s.lua:7: in local 'candidate'\n\t/tmp/tmp6her1f7s.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n <= 0 then\n    return false\n  end\n\
    \  local counter = 0\n  local sum = 0\n  while n > 0 do\n    n = n - 2\n    sum\
    \ = sum + 2\n    counter = counter + 1\n    if counter == 4 and n == 0 then\n\
    \      return true\n    end\n  end\n  return false\nend\nassert(is_equal_to_sum_even(4)\
    \ == false)\nassert(is_equal_to_sum_even(6) == false)\nassert(is_equal_to_sum_even(8)\
    \ == true)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6cjc_z5t.lua:32:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp6cjc_z5t.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- your code here\nend\n```\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmp8b1fs54n.lua:9: unexpected symbol near '`'\n"
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if (n < 8) then\n        return false\n\
    \    end\n    local flag = false\n    for i = 2, n / 4 do\n        if (math.fmod(i,\
    \ 2) == 0) then\n            for j = 2, n / 4 do\n                if (math.fmod(j,\
    \ 2) == 0) then\n                    for k = 2, n / 4 do\n                   \
    \     if (math.fmod(k, 2) == 0) then\n                            for l = 2, n\
    \ / 4 do\n                                if (math.fmod(l, 2) == 0) then\n   \
    \                                 if (i + j + k + l == n) then\n             \
    \                           flag = true\n                                    \
    \    break\n                                    end\n                        \
    \        end\n                            end\n                        end\n \
    \                   end\n                end\n            end\n        end\n \
    \   end\n    return flag\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp48vl0k3s.lua:40:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp48vl0k3s.lua:40:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  return n % 4 == 0 and n > 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzo26xu8z.lua:13:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpzo26xu8z.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tif n % 2 == 1 then\n\t\treturn false\n\t\
    end\n\tlocal sum = 0\n\tfor i = 2, n / 2, 2 do\n\t\tsum = sum + i\n\t\tif sum\
    \ == n then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnm08na0g.lua:25:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpnm08na0g.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  return n % 2 == 0 and n % 4 == 0\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjyw589bw.lua:13:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpjyw589bw.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tif n < 4 or n%2 == 1 then\n\t\treturn false\n\
    \tend\n\t\n\tfor i = 2, n-6, 2 do\n\t\tfor j = i+2, n-4, 2 do\n\t\t\tfor k = j+2,\
    \ n-2, 2 do\n\t\t\t\tfor m = k+2, n, 2 do\n\t\t\t\t\tif i+j+k+m == n then\n\t\t\
    \t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    \n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvi7iss_l.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpvi7iss_l.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local numbers = {0, 0, 0, 0}\n    local\
    \ i = 1\n    while i <= 4 do\n        if n > 0 then\n            n = n - 2\n \
    \           numbers[i] = numbers[i] + 2\n        else\n            numbers[i]\
    \ = numbers[i] + n\n            n = 0\n        end\n        i = i + 1\n    end\n\
    \    return n == 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprljv_7tn.lua:25:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmprljv_7tn.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local function even(v)\n        return\
    \ v % 2 == 0\n    end\n    local function sum_equal(a, b, c, d)\n        return\
    \ n == a + b + c + d\n    end\n    local function sum_greater(a, b, c, d)\n  \
    \      return n > a + b + c + d\n    end\n    return _.any(even, even, even, even,\
    \ sum_equal) and _.none(even, even, even, even, sum_greater)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7jhounvo.lua:16:\
    \ attempt to index a nil value (global '_')\nstack traceback:\n\t/tmp/tmp7jhounvo.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp7jhounvo.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n % 2 == 1 then\n    return false\n \
    \ end\n  if n < 8 then\n    return false\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- TODO\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpms62ct3g.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpms62ct3g.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local p, k, c = 0, 4, false\n  while p <\
    \ n do\n    c = (p + 2) + (p + 4) + (p + 6) + (p + 8)\n    if c == n then\n  \
    \    return true\n    end\n    p = p + 2\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc2gdfkc9.lua:23:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpc2gdfkc9.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n <= 0 then\n        return false\n\
    \    end\n    local limit = math.floor(n / 4) + 1\n    for i = 2, limit do\n \
    \       for j = i, limit do\n            for k = j, limit do\n               \
    \ for l = k, limit do\n                    if i + j + k + l == n then\n      \
    \                  return true\n                    end\n                end\n\
    \            end\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9voaytmu.lua:32:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp9voaytmu.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local num = n\n  local count = 0\n  while\
    \ num > 0 do\n    if num % 2 == 0 then\n      count = count + 1\n      num = num\
    \ - 2\n    else\n      num = num - 1\n    end\n  end\n  return count == 4\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuq6qz4nv.lua:26:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpuq6qz4nv.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    if n == 0 then\n        return true\n    end\n    local a = 0\n\
    \    local b = n\n    local cnt = 0\n    for i = a, b do\n        for j = a, b\
    \ do\n            for k = a, b do\n                for l = a, b do\n         \
    \           if i + j + k + l == n then\n                        cnt = cnt + 1\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    if cnt == 4 then\n        return true\n    else\n        return\
    \ false\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd241m0ki.lua:39:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpd241m0ki.lua:39:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  assert(n > 0, \"is_equal_to_sum_even: n\
    \ should be positive\")\n  -- TODO: implement this function\n  return nil\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1gc4r7p_.lua:15:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp1gc4r7p_.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local i = 0\n  while (i < n) do\n    i =\
    \ i + 2\n    if ((n - i) % 2 == 0) then\n      print(\"i = \" .. i)\n      if\
    \ ((n - i) % 2 == 0) then\n        print(\"j = \" .. j)\n        if ((n - i -\
    \ j) % 2 == 0) then\n          if ((n - i - j) % 2 == 0) then\n            return\
    \ true\n          end\n        end\n      end\n    end\n  end\n  return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "i = 2\nE\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp07mx1tm7.lua:13:\
    \ attempt to concatenate a nil value (global 'j')\nstack traceback:\n\t/tmp/tmp07mx1tm7.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp07mx1tm7.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  for i = 1, n/2 do\n    for j = 1, n/2 do\n\
    \      for k = 1, n/2 do\n        for l = 1, n/2 do\n          if i + j + k +\
    \ l == n then\n            return true\n          end\n        end\n      end\n\
    \    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4qd4o4_2.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp4qd4o4_2.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- YOUR CODE HERE\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyfhkzrre.lua:16:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpyfhkzrre.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- your code here\n  if n % 2 == 1 then\n\
    \    return false\n  end\n  for a = 2, n / 4 do\n    for b = a, n / 3 do\n   \
    \   for c = b, n / 2 do\n        for d = c, n - 1 do\n          if (a + b + c\
    \ + d) == n then\n            return true\n          end\n        end\n      end\n\
    \    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg0hgqauw.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpg0hgqauw.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n   for i = 2, n/4 do\n      for j = i, n/3\
    \ do\n         for k = j, n/2 do\n            for l = k, n do\n              \
    \ if i + j + k + l == n then\n                  return true\n               end\n\
    \            end\n         end\n      end\n   end\n   return false\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd7wqu7tq.lua:28:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpd7wqu7tq.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local a, b, c, d = 0, 0, 0, 0\n  for i =\
    \ 1, n/2 do\n    for j = 1, n/2 do\n      for k = 1, n/2 do\n        for l = 1,\
    \ n/2 do\n          if i + j + k + l == n then\n            print(i, j, k, l)\n\
    \            return true\n          end\n        end\n      end\n    end\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "1\t1\t1\t1\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpctckm6x0.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpctckm6x0.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- Good luck!\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcv95ocnz.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcv95ocnz.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local number_of_evens = 0\n  local sum =\
    \ 0\n  for i = 0, n do\n    if is_even(i) then\n      number_of_evens = number_of_evens\
    \ + 1\n      sum = sum + i\n    end\n    if number_of_evens == 4 and sum == n\
    \ then\n      return true\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzh2z33au.lua:10:\
    \ attempt to call a nil value (global 'is_even')\nstack traceback:\n\t/tmp/tmpzh2z33au.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpzh2z33au.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if(n == 0) then\n        return True\n\
    \    end\n    if(n < 0) then\n        return False\n    end\n    return is_equal_to_sum_even(n-2)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3aridt8x.lua:19:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp3aridt8x.lua:19: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for i = 0, n do\n        for j = 0, n\
    \ - i do\n            for k = 0, n - i - j do\n                local l = n - i\
    \ - j - k\n                if i > 0 and i % 2 == 0 and j > 0 and j % 2 == 0 and\
    \ k > 0 and k % 2 == 0 and l > 0 and l % 2 == 0 then\n                    return\
    \ true\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  for i = 0, n do\n    for j = 0, n - i do\n\
    \      for k = 0, n - i - j do\n        for l = 0, n - i - j - k do\n        \
    \  if i % 2 == 0 and j % 2 == 0 and k % 2 == 0 and l % 2 == 0 and i + j + k +\
    \ l == n then\n            return true\n          end\n        end\n      end\n\
    \    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3ijui6qo.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp3ijui6qo.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\t\n\t-- Use brute force to calculate the\
    \ 4 even numbers\n\tfor a = 2, n/4, 2 do\n\t\tfor b = 2, n/3, 2 do\n\t\t\tfor\
    \ c = 2, n/2, 2 do\n\t\t\t\tfor d = 2, n/1, 2 do\n\t\t\t\t\t\n\t\t\t\t\t-- If\
    \ a+b+c+d == n, then print the 4 even numbers\n\t\t\t\t\tif a+b+c+d == n then\n\
    \t\t\t\t\t\tio.write(a, b, c, d)\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\
    \t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\t-- If no 4 even numbers could be found,\
    \ return false\n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "22222224222622210.\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\n\
    OK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local a, b, c, d = 2, 2, 2, 2\n    local\
    \ sum = a + b + c + d\n    while sum <= n do\n        if sum == n then\n     \
    \       return true\n        end\n        d = d + 2\n        sum = a + b + c +\
    \ d\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp15kkrjez.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp15kkrjez.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8726601b.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8726601b.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    if n == 4 then\n        return false\n    end\n    return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5i7_ddr0.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp5i7_ddr0.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- TODO: implement the logic\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzffvyxmu.lua:13:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpzffvyxmu.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\tfor i = 1, n / 2, 2 do\n\t\tfor j = 1, n\
    \ / 2, 2 do\n\t\t\tfor k = 1, n / 2, 2 do\n\t\t\t\tfor l = 1, n / 2, 2 do\n\t\t\
    \t\t\tif i + j + k + l == n then\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\
    \t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd7i4p6eg.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpd7i4p6eg.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  local n = n\n  local m = n / 2\n  local\
    \ sum = 0\n  for i = 1, n do\n    if i % 2 == 0 then\n      sum = sum + i\n  \
    \  end\n    if sum > n then\n      return false\n    end\n    if sum == n then\n\
    \      return true\n    end\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6wv54g3w.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp6wv54g3w.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\treturn _is_equal_to_sum_even(n, 1, 1, 1,\
    \ 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl0f8osgd.lua:7:\
    \ attempt to call a nil value (global '_is_equal_to_sum_even')\nstack traceback:\n\
    \t/tmp/tmpl0f8osgd.lua:7: in local 'candidate'\n\t/tmp/tmpl0f8osgd.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local p = 1\n    while p <= n do\n   \
    \     local i = 1\n        while i <= n do\n            local j = 1\n        \
    \    while j <= n do\n                local k = 1\n                while k <=\
    \ n do\n                    if i + j + k + p == n then\n                     \
    \   return true\n                    end\n                    k = k + 2\n    \
    \            end\n                j = j + 2\n            end\n            i =\
    \ i + 2\n        end\n        p = p + 2\n    end\n    return false\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwuiu1l0t.lua:32:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpwuiu1l0t.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return false\n\
    \    end\n    if n == 4 then\n        return false\n    end\n    return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphalp41of.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmphalp41of.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    for i = 1, n/2 do\n        for j = 1,\
    \ n/2 do\n            for k = 1, n/2 do\n                for l = 1, n/2 do\n \
    \                   if (2*i + 2*j + 2*k + 2*l) == n then\n                   \
    \     return true\n                    end\n                end\n            end\n\
    \        end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    -- TODO: please implement the function\n\
    \    --print(\" is_equal_to_sum_even(\"..n..\")\")\n    \n    -- Will create a\
    \ list with all numbers which can be summed to n\n    --print(\"List of numbers\
    \ which can be summed to \"..n)\n    local sumList = {}\n    for i=1,n do\n  \
    \      for j=1,n do\n            for k=1,n do\n                for l=1,n do\n\
    \                    --print(i..\"+\"..j..\"+\"..k..\"+\"..l..\"=\"..(i+j+k+l))\n\
    \                    if (i+j+k+l == n) then\n                        --print(\"\
    Adding to sumList \"..i..\"+\"..j..\"+\"..k..\"+\"..l)\n                     \
    \   table.insert(sumList, i)\n                        table.insert(sumList, j)\n\
    \                        table.insert(sumList, k)\n                        table.insert(sumList,\
    \ l)\n                    end\n                end\n            end\n        end\n\
    \    end\n    \n    -- Checks if there is only even numbers in sumList, if so\
    \ then return true\n    --print(\"Testing sumList for even numbers\")\n    local\
    \ isEven = true\n    for i=1,#sumList do\n        --print(\"Testing: \"..sumList[i])\n\
    \        if ((sumList[i] % 2) ~= 0) then\n            isEven = false\n       \
    \ end\n    end\n    \n    --print(\"Returning \"..tostring(isEven))\n    return\
    \ isEven\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5mqxg770.lua:49:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5mqxg770.lua:49:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    if not n then return end\n    if n < 4\
    \ then return false end\n    local max = math.floor(n / 4) * 2\n    for i = max,\
    \ 2, -2 do\n        for j = i, 2, -2 do\n            for k = j, 2, -2 do\n   \
    \             for l = k, 2, -2 do\n                    if i + j + k + l == n then\n\
    \                        return true\n                    end\n              \
    \  end\n            end\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n\t-- local sum = 0\n\t-- local count = 0\n\
    \t-- while sum < n do\n\t-- \tlocal x = math.random(2, n)\n\t-- \tlocal is_even\
    \ = x % 2 == 0\n\t-- \tif is_even then\n\t-- \t\tsum = sum + x\n\t-- \t\tcount\
    \ = count + 1\n\t-- \tend\n\t-- end\n\t-- return count == 4\n\t-- \u7A0B\u5E8F\
    \u53EA\u80FD\u7B97\u5BF9 2,6,8,10,12,14,16,18,20,22 \u8FD910\u4E2A\u6570\uFF0C\
    \u5176\u4ED6\u6570\u90FD\u7B97\u9519\uFF0C\u662F\u56E0\u4E3A\u7A0B\u5E8F\u4E2D\
    \u7528\u4E86\u968F\u673A\u6570\uFF0C\u6240\u4EE5\u662F\u4E0D\u53EF\u9760\u7684\
    \uFF0C\u9700\u8981\u6539\u8FDB\u7A0B\u5E8F\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ''
  stderr: "lua: /tmp/tmpx1_8vc1f.lua:33: 'end' expected (to close 'function' at line\
    \ 6) near <eof>\n"
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local answer = false\n    if n % 2 ==\
    \ 0 then\n        for a = 0, n, 2 do\n            for b = 0, n, 2 do\n       \
    \         for c = 0, n, 2 do\n                    for d = 0, n, 2 do\n       \
    \                 if a + b + c + d == n then\n                            answer\
    \ = true\n                        end\n                    end\n             \
    \   end\n            end\n        end\n    end\n    return answer\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9o9h7h2w.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp9o9h7h2w.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n  if n == 0 then\n    return true\n  end\n\
    \  local numbers = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n      table.insert(numbers,\
    \ i)\n    end\n  end\n  numbers = util.reverse(numbers)\n  local sums = {}\n \
    \ sums[1] = n\n  local next_sum = n\n  local index = 2\n  while next_sum > 0 do\n\
    \    next_sum = next_sum - numbers[index]\n    if next_sum > 0 then\n      sums[index]\
    \ = next_sum\n    end\n    index = index + 1\n  end\n  if util.contains(sums,\
    \ 0) then\n    return true\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8tknnwsa.lua:16:\
    \ attempt to index a nil value (global 'util')\nstack traceback:\n\t/tmp/tmp8tknnwsa.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmp8tknnwsa.lua:37: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- is_equal_to_sum_even(4) == False\n--\
    \ is_equal_to_sum_even(6) == False\n-- is_equal_to_sum_even(8) == True\nlocal\
    \ function is_equal_to_sum_even(n)\n    local x = n\n    for i = 1,n//2 do\n \
    \       if math.fmod(x,2) == 0 then\n            x = x - i\n            if x ==\
    \ 0 then\n                return true\n            end\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1f1vtuze.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp1f1vtuze.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception

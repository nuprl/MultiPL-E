name: HumanEval_75_is_multiply_prime
language: lua
prompt: "-- Write a function that returns true if the given number is the multiplication\
  \ of 3 prime numbers\n-- and false otherwise.\n-- Knowing that (a) is less then\
  \ 100. \n-- Example:\n-- is_multiply_prime(30) == True\n-- 30 = 2 * 3 * 5\nlocal\
  \ function is_multiply_prime(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_multiply_prime\n\
  \    lu.assertEquals(candidate(5), false)\n    lu.assertEquals(candidate(30), true)\n\
  \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), false)\n\
  \    lu.assertEquals(candidate(125), true)\n    lu.assertEquals(candidate(105),\
  \ true)\n    lu.assertEquals(candidate(126), false)\n    lu.assertEquals(candidate(729),\
  \ false)\n    lu.assertEquals(candidate(891), false)\n    lu.assertEquals(candidate(1001),\
  \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local result = false\n\
    \    for _, p in ipairs(primes) do\n        for _, p2 in ipairs(primes) do\n \
    \           for _, p3 in ipairs(primes) do\n                if p * p2 * p3 ==\
    \ a then\n                    result = true\n                end\n           \
    \ end\n        end\n    end\n    return result\nend\nassert(is_multiply_prime(30)\
    \ == true)\nassert(is_multiply_prime(9) == false)\nassert(is_multiply_prime(100)\
    \ == false)", "    local prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local i = 1\n\
    \    while i <= table.getn(prime_numbers) do\n        if a % prime_numbers[i]\
    \ == 0 then\n            local num = a / prime_numbers[i]\n            local ii\
    \ = 1\n            while ii <= table.getn(prime_numbers) do\n                if\
    \ num % prime_numbers[ii] == 0 then\n                    local num2 = num / prime_numbers[ii]\n\
    \                    if num2 == 1 then\n                        return true\n\
    \                    end\n                    local iii = 1\n                \
    \    while iii <= table.getn(prime_numbers) do\n                        if num2\
    \ % prime_numbers[iii] == 0 then\n                            if num2 / prime_numbers[iii]\
    \ == 1 then\n                                return true\n                   \
    \         end\n                        end\n                        iii = iii\
    \ + 1\n                    end\n                end\n                ii = ii +\
    \ 1\n            end\n        end\n        i = i + 1\n    end\n    return false\n\
    end", "    local c = 1\n    for i = 2, a do\n        if a % i == 0 then\n    \
    \        local b = 0\n            for j = 1, i do\n                if i % j ==\
    \ 0 then\n                    b = b + 1\n                end\n            end\n\
    \            if b == 2 then\n                c = c * i\n            end\n    \
    \    end\n    end\n    if c == a then\n        return true\n    else\n       \
    \ return false\n    end\nend", "    if a == 1 then\n        return false\n   \
    \ end\n    for i = 2, a/2 do\n        if a % i == 0 then\n            if is_prime(i)\
    \ then\n                return true\n            end\n        end\n    end\n \
    \   return false\nend", "    -- Magic goes here\n    return false\nend", "  local\
    \ primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97}\n  for i,v in ipairs(primes) do\n    if a % v ==\
    \ 0 then\n      for i2,v2 in ipairs(primes) do\n        if v ~= v2 and a % v2\
    \ == 0 then\n          for i3,v3 in ipairs(primes) do\n            if v ~= v3\
    \ and v2 ~= v3 and a % v3 == 0 then\n              if v * v2 * v3 == a then\n\
    \                return true\n              end\n            end\n          end\n\
    \        end\n      end\n    end\n  end\n  return false\nend", "  -- Write your\
    \ code here\nend", "\tlocal function prime(a)\n\t\tlocal result = true\n\t\tfor\
    \ i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\tresult = false\n\t\t\t\t\
    break\n\t\t\tend\n\t\tend\n\t\treturn result\n\tend\n\t\n\tlocal result = false\n\
    \tfor i = 2, 100 do\n\t\tif a % i == 0 and prime(i) then\n\t\t\tresult = true\n\
    \t\telse\n\t\t\tresult = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn result\n\
    end", end, "    return true\nend", "    -- Return true if the given number is\
    \ the multiplication of 3 prime numbers\n    -- and false otherwise.\n    -- Knowing\
    \ that (a) is less then 100. \nend", "  local i = 2\n  local counter = 0\n  local\
    \ primes = {}\n  local res = false\n  for j = 2, a do\n    local is_prime = true\n\
    \    for i = 2, j - 1 do\n      if j % i == 0 then\n        is_prime = false\n\
    \        break\n      end\n    end\n    if is_prime then\n      table.insert(primes,\
    \ j)\n    end\n  end\n  for k, v in pairs(primes) do\n    if a % v == 0 then\n\
    \      counter = counter + 1\n    end\n  end\n  if counter == 3 then\n    res\
    \ = true\n  end\n  return res\nend", "    -- YOUR CODE HERE\n    local function\
    \ is_prime(a)\n        for i = 2, a - 1 do\n            if a % i == 0 then\n \
    \               return false\n            end\n        end\n        return true\n\
    \    end\n    for i = 2, a - 1 do\n        if a % i == 0 and is_prime(i) then\n\
    \            for j = 2, a - 1 do\n                if a % j == 0 and is_prime(j)\
    \ and j ~= i then\n                    for k = 2, a - 1 do\n                 \
    \       if a % k == 0 and is_prime(k) and k ~= i and k ~= j then\n           \
    \                 return true\n                        end\n                 \
    \   end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend", "    local is_prime = function(n)\n        for i = 2, n - 1 do\n\
    \            if n % i == 0 then\n                return false\n            end\n\
    \        end\n        return true\n    end", "    local _is_multiply_prime = true\n\
    \    local remainder = 0\n    local prime = 0\n    while(a > 1)\n    do\n    \
    \    if a % 2 == 0 then\n            prime = 2\n            remainder = a / 2\n\
    \        elseif a % 3 == 0 then\n            prime = 3\n            remainder\
    \ = a / 3\n        elseif a % 5 == 0 then\n            prime = 5\n           \
    \ remainder = a / 5\n        elseif a % 7 == 0 then\n            prime = 7\n \
    \           remainder = a / 7\n        else\n            _is_multiply_prime =\
    \ false\n            break\n        end\n        a = remainder\n    end\n    return\
    \ _is_multiply_prime\nend", "    local y,t\n    for i=2,a-1 do\n        y=a%i\n\
    \        if y==0 then\n            for j=2,i-1 do\n                t=i%j\n   \
    \             if t==0 then\n                    break\n                end\n \
    \           end\n            if t~=0 then\n                for k=2,a/i-1 do\n\
    \                    t=a/i%k\n                    if t==0 then\n             \
    \           break\n                    end\n                end\n            \
    \    if t~=0 then\n                    print(i,a/i,a/i/k)\n                  \
    \  return true\n                end\n            end\n        end\n    end\n \
    \   return false\nend", "\t-- code here\nend", "    local a = a or (math.random(1,99)\
    \ * 3)\n    local b = 3\n    local primes = {}\n    local is_prime = false\n \
    \   while true do\n        is_prime = true\n        for p in iter(primes) do\n\
    \            if b % p == 0 then\n                is_prime = false\n          \
    \      break\n            end\n        end\n        if is_prime then\n       \
    \     if a % b == 0 then\n                if a == b then\n                   \
    \ return false\n                end\n                table.insert(primes, b)\n\
    \                if #primes == 3 then\n                    return true\n     \
    \           end\n                a = a / b\n            else\n               \
    \ b = b + 2\n            end\n        else\n            b = b + 2\n        end\n\
    \    end\nend", "    if a == 0 then\n        return false\n    end\n    for i\
    \ = 2, math.floor(math.sqrt(a)) do\n        if a % i == 0 then\n            return\
    \ is_multiply_prime(a / i)\n        end\n    end\n    return true\nend", "   \
    \ local function is_prime(n)\n        if n == 1 then return false end\n      \
    \  if n == 2 then return true end\n        for i = 2, n-1 do\n            if n\
    \ % i == 0 then\n                return false\n            end\n        end\n\
    \        return true\n    end\n    for i = 1, a-1 do\n        for j = 1, a-1 do\n\
    \            for k = 1, a-1 do\n                if is_prime(i) and is_prime(j)\
    \ and is_prime(k) and i*j*k == a then\n                    return true\n     \
    \           end\n            end\n        end\n    end\n    return false\nend",
  "    local primes = find_primes(a)\n    for i = 1, #primes - 1 do\n        for j\
    \ = i + 1, #primes do\n            for k = j + 1, #primes do\n               \
    \ if a == primes[i] * primes[j] * primes[k] then\n                    return true\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end", "  local x, c, b = 2, 0, a\n  while c < 3 and x <= b do\n    if b % x ==\
    \ 0 then\n      b = b / x\n      c = c + 1\n    else\n      x = x + 1\n    end\n\
    \  end\n  return c == 3\nend", "    local tbl = {0,0,0}\n    local count = 0\n\
    \    local is_prime = true\n    for i = 2, a do\n        if a % i == 0 then\n\
    \            is_prime = true\n            for j = 2, i do\n                if\
    \ i % j == 0 and i ~= j then\n                    is_prime = false\n         \
    \           break\n                end\n            end\n            if is_prime\
    \ then\n                count = count + 1\n                tbl[count] = i\n  \
    \          end\n        end\n    end\n    if tbl[1] == 0 or tbl[2] == 0 or tbl[3]\
    \ == 0 then\n        return false\n    else\n        return true\n    end\nend",
  "\tlocal n = tonumber(a)\n\tlocal result = true\n\tfor i = 1, n do\n\t\tlocal is_prime\
    \ = true\n\t\tif i ~= 1 then\n\t\t\tfor j = 2, i-1 do\n\t\t\t\tif i % j == 0 then\n\
    \t\t\t\t\tis_prime = false\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \t\tif is_prime then\n\t\t\tlocal b = n % i\n\t\t\tif b == 0 then\n\t\t\t\tn =\
    \ n / i\n\t\t\t\ti = 1\n\t\t\tend\n\t\tend\n\t\tif n == 1 then\n\t\t\tbreak\n\t\
    \tend\n\tend\n\tif n ~= 1 then\n\t\tresult = false\n\tend\n\treturn result\nend",
  "\tif( a < 2 ) then\n\t\treturn false\n\tend\n\tfor i = 2, a do\n\t\tif a % i ==\
    \ 0 then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend", "\t-- BODY\
    \ \nend", "    local function is_prime(number)\n        local function is_div(number,\
    \ div)\n            return math.fmod(number, div) == 0\n        end\n        local\
    \ div = 2\n        while div <= number do\n            if is_div(number, div)\
    \ and number ~= div then\n                return false\n            end\n    \
    \        div = div + 1\n        end\n        return true\n    end\n    local div\
    \ = 2\n    local curr_n = a\n    local prime_num = 0\n    while div <= curr_n\
    \ do\n        if is_prime(div) and is_div(curr_n, div) then\n            prime_num\
    \ = prime_num + 1\n            curr_n = curr_n / div\n        end\n        div\
    \ = div + 1\n    end\n    return prime_num == 3\nend", "    local x = 2\n    local\
    \ c = 0\n    local i = 1\n    local j = 1\n    local number = {}\n    while x\
    \ <= math.sqrt(a) do\n        if (a % x == 0) then\n            number[i] = x\n\
    \            i = i + 1\n            a = a / x\n        else\n            x = x\
    \ + 1\n        end\n    end\n    number[i] = a\n    for key, item in pairs(number)\
    \ do\n        for i = 2, item do\n            if (item % i == 0) then\n      \
    \          c = c + 1\n            end\n        end\n        if (c == 1) then\n\
    \            j = j + 1\n        end\n        c = 0\n    end\n    if (j == #number)\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \   for x = 3, a, 2 do\n        for y = 3, x, 2 do\n            for z = 3, y,\
    \ 2 do\n                if x*y*z == a then\n                    return true\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end", "    local function is_prime(n)\n        local sqrt = math.sqrt(n)\n   \
    \     for i = 2, sqrt do\n            if n % i == 0 then\n                return\
    \ false\n            end\n        end\n        return true\n    end\n    for i\
    \ = 2, a / 2 do\n        for j = 2, a / 2 do\n            for k = 2, a / 2 do\n\
    \                if i * j * k == a then\n                    if is_prime(i) and\
    \ is_prime(j) and is_prime(k) then\n                        return true\n    \
    \                end\n                end\n            end\n        end\n    end\n\
    \    return false\nend", "\tlocal count = 0\n\tfor i = 2, a do\n\t\tif count ==\
    \ 2 then\n\t\t\treturn false\n\t\tend\n\t\tif a % i == 0 then\n\t\t\tfor j = 2,\
    \ i do\n\t\t\t\tif i % j == 0 then\n\t\t\t\t\tif j == i then\n\t\t\t\t\t\tcount\
    \ = count + 1\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak\n\t\t\t\t\tend\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\n\tif count == 3 then\n\t\treturn true\n\telse\n\t\t\
    return false\n\tend\nend", "\tlocal numbers = {\n\t\t[1] = 2,\n\t\t[2] = 3,\n\t\
    \t[3] = 5,\n\t\t[4] = 7,\n\t\t[5] = 11,\n\t\t[6] = 13,\n\t\t[7] = 17,\n\t\t[8]\
    \ = 19,\n\t\t[9] = 23,\n\t\t[10] = 29,\n\t\t[11] = 31,\n\t\t[12] = 37,\n\t\t[13]\
    \ = 41,\n\t\t[14] = 43,\n\t\t[15] = 47,\n\t\t[16] = 53,\n\t\t[17] = 59,\n\t\t\
    [18] = 61,\n\t\t[19] = 67,\n\t\t[20] = 71,\n\t\t[21] = 73,\n\t\t[22] = 79,\n\t\
    \t[23] = 83,\n\t\t[24] = 89,\n\t\t[25] = 97,\n\t}\n\tlocal divisors = { }\n\t\
    local i = 0\n\t\n\twhile a > 1 do\n\t\ti = i + 1\n\t\tif a % numbers[i] == 0 then\n\
    \t\t\ta = a / numbers[i]\n\t\t\ttable.insert(divisors, numbers[i])\n\t\t\ti =\
    \ 0\n\t\tend\n\tend\n\t\n\treturn #divisors == 3\nend", "    local count = 0\n\
    \    for i = 1, a do\n        if is_prime(i) then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "\tlocal primes = {2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97}\n\tfor i,v in ipairs(primes) do\n\t\tif a % v == 0 then\n\t\t\ta = a\
    \ / v\n\t\t\tfor i,v in ipairs(primes) do\n\t\t\t\tif a % v == 0 then\n\t\t\t\t\
    \ta = a / v\n\t\t\t\t\tfor i,v in ipairs(primes) do\n\t\t\t\t\t\tif a % v == 0\
    \ then\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "   local function is_prime(a)\n\
    \      for i = 2, a - 1 do\n         if a % i == 0 then\n            return false\n\
    \         end\n      end\n      return true\n   end\n   for i = 2, a / 2 do\n\
    \      if is_prime(i) and is_prime(a / i) then\n         return true\n      end\n\
    \   end\n   return false\nend", "  for i = 2, 100 do\n    for j = 2, 100 do\n\
    \      for k = 2, 100 do\n        if i * j * k == a then\n          return true\n\
    \        end\n      end\n    end\n  end\n  return false\nend\nassert(is_multiply_prime(30)\
    \ == true)\nassert(is_multiply_prime(300) == false)", end, "\tlocal primes = {\
    \ 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97 }\n\tfor _, v in ipairs(primes) do\n\t\tif a % v == 0 then\n\
    \t\t\tlocal b = a / v\n\t\t\tfor _, v in ipairs(primes) do\n\t\t\t\tif b % v ==\
    \ 0 then\n\t\t\t\t\tlocal c = b / v\n\t\t\t\t\tfor _, v in ipairs(primes) do\n\
    \t\t\t\t\t\tif c % v == 0 then\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\tend\n\t\
    \t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", " \
    \ \nend", "\t-- body\nend", "   local factor = 3\n   local num = a\n   while num\
    \ % 2 == 0 do\n       num = num / 2\n   end\n   while num ~= 1 do\n       while\
    \ num % factor == 0 do\n           num = num / factor\n       end\n       factor\
    \ = factor + 2\n   end\n   return num == 1\nend", "\tif a % 2 == 0 and a % 3 ==\
    \ 0 and a % 5 == 0 then \n\t\treturn true\n\telse \n\t\treturn false\n\tend\n\
    end", "  \n  local n = 1\n  local n1, n2, n3, _n1, _n2, _n3 = 0, 0, 0, 0, 0, 0",
  "\tlocal isPrime = true\n\tlocal p = 2\n\twhile isPrime and a > p do\n\t\tif a %\
    \ p == 0 then\n\t\t\ta = a / p\n\t\t\tif a % p == 0 then\n\t\t\t\tisPrime = false\n\
    \t\t\tend\n\t\telse\n\t\t\tp = p + 1\n\t\tend\n\tend\n\treturn isPrime\nend",
  "\tlocal c = {}\n\tlocal i = 2\n\twhile (a > 1) do\n\t\tif (a % i == 0) then\n\t\
    \t\tc[i] = (c[i] or 0) + 1\n\t\t\ta = a / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\
    \tend\n\tlocal res = 0\n\tfor k, v in pairs(c) do\n\t\tres = res + 1\n\tend\n\t\
    return res == 3\nend", "\t-- body\nend", "   -- TODO: Implement the function to\
    \ return true if the given number is\n   -- the multiplication of 3 prime numbers\
    \ and false otherwise.\n   return false\nend", "    local is = false\n    local\
    \ acc = a\n    local num = 2\n    while acc > 1 do\n        while acc % num ==\
    \ 0 do\n            acc = acc / num\n            if acc == 1 then\n          \
    \      is = true\n            end\n        end\n        num = num + 1\n    end\n\
    \    return is\nend", "\tlocal function is_prime(n)\n\t\tfor i = 2, math.floor(math.sqrt(n))\
    \ do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\t\
    return true\n\tend\n\tlocal primes = {}\n\tfor i = 2, 100 do\n\t\tif is_prime(i)\
    \ then\n\t\t\ttable.insert(primes, i)\n\t\tend\n\tend\n\tfor i = 1, #primes do\n\
    \t\tfor j = i + 1, #primes do\n\t\t\tfor k = j + 1, #primes do\n\t\t\t\tif primes[i]\
    \ * primes[j] * primes[k] == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn false\nend", "  if a == 0 then\n    return false\n\
    \  end\n  if a == 1 then\n    return true\n  end\n  local n = a\n  while n % 2\
    \ == 0 do\n    n = n / 2\n  end\n  if n == 1 then\n    return true\n  end\n  local\
    \ i = 3\n  while i * i <= n do\n    while n % i == 0 do\n      n = n / i\n   \
    \ end\n    i = i + 2\n  end\n  if n == 1 then\n    return true\n  end\n  return\
    \ false\nend", "\t-- body\nend", "    local number = 2\n    local cnt = 0\n  \
    \  while number < a do\n        if a % number == 0 then\n            local is_prime\
    \ = true\n            for i = 2, math.sqrt(number) do\n                if number\
    \ % i == 0 then\n                    is_prime = false\n                    break\n\
    \                end\n            end\n            if is_prime then\n        \
    \        cnt = cnt + 1\n            end\n        end\n        number = number\
    \ + 1\n    end\n    return cnt == 3\nend\nassert(is_multiply_prime(30) == true)\n\
    assert(is_multiply_prime(21) == false)", "  local b = a\n  local n\n  local n2\n\
    \  local n3\n  for i = 2, 100 do\n    if b % i == 0 then\n      n = i\n      b\
    \ = b / i\n      for j = 2, 100 do\n        if b % j == 0 then\n          n2 =\
    \ j\n          b = b / j\n          for m = 2, 100 do\n            if b % m ==\
    \ 0 then\n              n3 = m\n              break\n            end\n       \
    \   end\n          break\n        end\n      end\n      break\n    end\n  end\n\
    \  if b == 1 then\n    return true\n  else\n    return false\n  end\nend", end,
  "\tlocal limit = math.floor(math.sqrt(a))\n\tfor i = 2, limit do\n\t\tif a % i ==\
    \ 0 then\n\t\t\tif not is_prime(i) then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\
    \tlocal other = a/i\n\t\t\tif not is_prime(other) then\n\t\t\t\treturn false\n\
    \t\t\tend\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend", "  return\
    \ true\nend", "  local res = true\n  for i = 2, a do\n    if a % i == 0 then\n\
    \      if not is_prime(i) then res = false break end\n    end\n  end\n  return\
    \ res\nend", "\t-- your code here\nend", "  if a == 2 or a == 3 or a == 5 then\
    \ return true end\n  -- TODO: Remove this when you're done.\n  return false\n\
    end", "\tlocal counter=0\n\tlocal prime_numbers={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97}\n\
    \t\n\tfor i,v in ipairs(prime_numbers) do\n\t\tif a%v==0 then\n\t\t\tif counter==2\
    \ then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tcounter=counter+1\n\t\tend\n\t\
    end\n\treturn true\nend", "    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    for i =\
    \ 1, #primes do\n        if a % primes[i] == 0 then\n            for j = 1, #primes\
    \ do\n                if (a / primes[i]) % primes[j] == 0 then\n             \
    \       return true\n                end\n            end\n        end\n    end\n\
    \    return false\nend", "\tif a <= 1 then\n\t\treturn false\n\tend\n\tlocal i\
    \ = 2\n\twhile a > 1 do\n\t\tif a % i == 0 then\n\t\t\ta = a / i\n\t\t\tif is_prime(i)\
    \ then\n\t\t\t\tif is_prime(a) then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\t\
    else\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\t\
    end\n\treturn false\nend", "\t-- TODO: write your code here\nend", "\tif a ==\
    \ 1 then return false end\n\tif a == 2 then return true end\n\tlocal primes =\
    \ {}\n\tlocal k = a\n\tfor i = 2, k do\n\t\tif not primes[i] then\n\t\t\tprimes[i]\
    \ = true\n\t\t\tfor j = i*i, a, i do\n\t\t\t\tprimes[j] = false\n\t\t\tend\n\t\
    \tend\n\tend\n\tlocal cnt = 0\n\tfor i = 1, k do\n\t\tif primes[i] then\n\t\t\t\
    if a % i == 0 then\n\t\t\t\tcnt = cnt + 1\n\t\t\t\tk = k / i\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn cnt == 3\nend", "    -- Write your code here\nend", "  --\
    \ body\nend", "\t-- Test if number is multiple of 2,3 or 5\n\tif (a % 2 == 0)\
    \ or (a % 3 == 0) or (a % 5 == 0) then\n\t\t-- Test if a is multiple of 2 and\
    \ 3\n\t\tif (a % 2 == 0) and (a % 3 == 0) then\n\t\t\t-- Test if a is multiple\
    \ of 2, 3 and 5\n\t\t\tif (a % 2 == 0) and (a % 3 == 0) and (a % 5 == 0) then\n\
    \t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\
    \t\t-- Test if a is multiple of 2 and 5\n\t\t\tif (a % 2 == 0) and (a % 5 == 0)\
    \ then\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\t\
    end\n\telse\n\t\t-- Test if a is multiple of 3 and 5\n\t\tif (a % 3 == 0) and\
    \ (a % 5 == 0) then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\tend\n\
    \tend\nend", "  function m(a, b)\n    return a % b == 0\n  end\n  for i = 2, 100\
    \ do\n    for j = 2, 100 do\n      for k = 2, 100 do\n        if m(a, i) and m(a\
    \ / i, j) and m(a / i / j, k) then\n          return true\n        end\n     \
    \ end\n    end\n  end\n  return false\nend", "\tif a == nil then\n\t\treturn false\n\
    \tend\n\tlocal div = {}\n\tfor i = 2, a do\n\t\twhile a % i == 0 do\n\t\t\ttable.insert(div,\
    \ i)\n\t\t\ta = a / i\n\t\tend\n\tend\n\tif table.getn(div) ~= 3 then\n\t\treturn\
    \ false\n\tend\n\tlocal sum = 0\n\tfor i, v in ipairs(div) do\n\t\tsum = sum +\
    \ v\n\tend\n\treturn sum == 13\nend", "   if a <= 1 then\n      return false\n\
    \   end\n   local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n   for i = 1, #primes do\n    \
    \  for j = 1, #primes do\n         for k = 1, #primes do\n            if primes[i]\
    \ * primes[j] * primes[k] == a then\n               return true\n            end\n\
    \         end\n      end\n   end\n   return false\nend", "  \nend", "    if a\
    \ < 6 then\n        return false\n    end\n    for i = 2, math.sqrt(a) do\n  \
    \      if a % i == 0 then\n            for j = 2, math.sqrt(a / i) do\n      \
    \          if (a / i) % j == 0 then\n                    for k = 2, math.sqrt(a\
    \ / i / j) do\n                        if (a / i / j) % k == 0 then\n        \
    \                    return false\n                        end\n             \
    \       end\n                    return true\n                end\n          \
    \  end\n        end\n    end\n    return true\nend", "\tlocal factors = {}\n\t\
    local counter = 0\n\tfor i = 2, a do\n\t\tif a % i == 0 then\n\t\t\tlocal isPrime\
    \ = true\n\t\t\tfor j = 2, i - 1 do\n\t\t\t\tif i % j == 0 then\n\t\t\t\t\tisPrime\
    \ = false\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif isPrime then\n\t\t\
    \t\ttable.insert(factors, i)\n\t\t\t\tcounter = counter + 1\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn counter == 3\nend", "\tif a <= 1 then\n\t\treturn false\n\tend\n\
    \tfor i = 2, a do\n\t\tif a % i == 0 then\n\t\t\tif is_prime(i) then\n\t\t\t\t\
    return is_multiply_prime(a / i)\n\t\t\tend\n\t\tend\n\tend\n\treturn true\nend",
  "\tif a <= 0 then return nil end\n\tif a == 1 then return false end\n\tif a == 2\
    \ then return true end\n\tif a == 3 then return true end\n\tif a == 5 then return\
    \ true end\n\tif a % 2 == 0 then return false end\n\tif a % 3 == 0 then return\
    \ false end\n\tif a % 5 == 0 then return false end\n\t\n\tlocal i = 7\n\twhile\
    \ i * i <= a do\n\t\tif a % i == 0 then return false end\n\t\ti = i + 2\n\tend\n\
    \treturn true\nend", "    for i = 2, math.sqrt(a) do\n        if (a % i == 0)\
    \ then\n            if is_prime(i) and is_prime(a / i) then\n                return\
    \ true\n            end\n        end\n    end\n    return false\nend", "  -- implement\
    \ me\nend", "    local x = a\n    local prim\n    local y\n    while x > 1 do\n\
    \        prim = true\n        for i = 2, x - 1 do\n            if x % i == 0 then\n\
    \                prim = false\n                break\n            end\n      \
    \  end\n        if prim then\n            y = a / x\n            while y > 1 do\n\
    \                prim = true\n                for i = 2, y - 1 do\n          \
    \          if y % i == 0 then\n                        prim = false\n        \
    \                break\n                    end\n                end\n       \
    \         if prim then\n                    if a % (x * y) == 0 then\n       \
    \                 return true\n                    end\n                end\n\
    \                y = y - 1\n            end\n        end\n        x = x - 1\n\
    \    end\n    return false\nend", "    if a > 100 then\n        return false\n\
    \    end\n    for i = 1, a do\n        for j = 1, a do\n            for k = 1,\
    \ a do\n                if a == i * j * k then\n                    if is_prime(i)\
    \ and is_prime(j) and is_prime(k) then\n                        return true\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    return false\nend", "\treturn\nend", "\tlocal function is_prime(b)\n\
    \t\tfor i = 2, b - 1 do\n\t\t\tif b % i == 0 then\n\t\t\t\treturn false\n\t\t\t\
    end\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a / 2 do\n\t\tif a % i == 0\
    \ and is_prime(i) then\n\t\t\tlocal tmp = a / i\n\t\t\tfor j = 2, tmp / 2 do\n\
    \t\t\t\tif tmp % j == 0 and is_prime(j) then\n\t\t\t\t\tlocal tmp2 = tmp / j\n\
    \t\t\t\t\tif is_prime(tmp2) then\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\
    \t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "  if a == 1 then return\
    \ false end\n  local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  for _, v in ipairs(primes)\
    \ do\n    if v < a and a % v == 0 then\n      if is_multiply_prime(a / v) then\n\
    \        return true\n      end\n    end\n  end\n  return false\nend\nassert(is_multiply_prime(30)\
    \ == true)\nassert(is_multiply_prime(32) == false)", "    if type(a) ~= \"number\"\
    \ then return nil end\n    if a <= 0 then return nil end\n    if a >= 100 then\
    \ return nil end\n    local is_multiple = false\n    for i = 2, 100 do\n     \
    \   if is_prime(i) and a % i == 0 then\n            is_multiple = true\n     \
    \   end\n    end\n    return is_multiple\nend", "\tlocal c = false;\n\tif (a <\
    \ 100) then\n\t\tfor i = 2, a do\n\t\t\tif (is_prime(i)) then\n\t\t\t\tfor j =\
    \ 2, a do\n\t\t\t\t\tif (is_prime(j)) then\n\t\t\t\t\t\tfor k = 2, a do\n\t\t\t\
    \t\t\t\tif (is_prime(k)) then\n\t\t\t\t\t\t\t\tif ((i * j * k) == a) then\n\t\t\
    \t\t\t\t\t\t\tc = true;\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\
    end\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn c;\nend",
  end, "    return function(a)\n        if (is_prime(a)) then\n            return\
    \ true\n        else\n            for i = 3, a, 2 do\n                if (is_prime(i)\
    \ and is_prime(a / i)) then\n                    return true\n               \
    \ end\n            end\n        end\n        return false\n    end\nend", "  return\
    \ false\nend", "\t--a = 30\n\t--[[\n\tlocal primes = get_primes(100)\n\tfor i\
    \ = 1, #primes do\n\t\tif (a % primes[i] == 0) then\n\t\t\tlocal j = i\n\t\t\t\
    while j <= #primes do\n\t\t\t\tif (a % primes[j] == 0) then\n\t\t\t\t\tlocal k\
    \ = j\n\t\t\t\t\twhile k <= #primes do\n\t\t\t\t\t\tif (a % primes[k] == 0) then\n\
    \t\t\t\t\t\t\treturn true\n\t\t\t\t\t\tend\n\t\t\t\t\t\tk = k + 1\n\t\t\t\t\t\
    end\n\t\t\t\tend\n\t\t\t\tj = j + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn false\n\
    \t--]]\n\t\n\tlocal primes = get_primes(100)\n\tlocal factors = prime_factors(a,\
    \ primes)\n\tif (#factors == 3) then\n\t\treturn true\n\tend\n\treturn false\n\
    end", "  local divisors = {}\n  local primes = {}\n  for i = 2, a do\n    if a\
    \ % i == 0 then\n      divisors[#divisors + 1] = i\n    end\n  end\n  for i =\
    \ 1, #divisors do\n    if is_prime(divisors[i]) then\n      primes[#primes + 1]\
    \ = divisors[i]\n    end\n  end\n  return #primes == 3 and a % primes[1] == 0\
    \ and a % primes[2] == 0 and a % primes[3] == 0\nend", end, "  local count = 0\n\
    \  local b = a\n  while b > 1 do\n    if is_prime(b) then\n      b = a / b\n \
    \     count = count + 1\n    else\n      b = b - 1\n    end\n  end\n  return count\
    \ == 3\nend", "  \nend", "    for i = 2, (a/2) do\n        if a % i == 0 then\n\
    \            -- \u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430 \u0434\u0435\u043B\
    \u0438\u0442\u0435\u043B\u044F i \u043D\u0430 \u043F\u0440\u043E\u0441\u0442\u043E\
    \u0442\u0443\n            if is_prime(i) then\n                local b = a / i\n\
    \                if is_prime(b) then\n                    return true\n      \
    \          end\n            end\n        end\n    end\n    return false\nend\n\
    print(\"is_multiply_prime(30) ==\", is_multiply_prime(30))\nprint(\"is_multiply_prime(60)\
    \ ==\", is_multiply_prime(60))\nprint(\"is_multiply_prime(45) ==\", is_multiply_prime(45))",
  "\tlocal d = a\n\tlocal i = 2\n\tlocal count = 0\n\tlocal prime = true\n\twhile\
    \ (d > 1) do\n\t\tif (is_prime(i)) then\n\t\t\tif (math.fmod(d, i) == 0) then\n\
    \t\t\t\td = d / i\n\t\t\t\tcount = count + 1\n\t\t\telse\n\t\t\t\ti = i + 1\n\t\
    \t\tend\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\tif (count ~= 3) then\n\t\
    \tprime = false\n\tend\n\treturn prime\nend", "    if a > 100 then\n        return\
    \ false\n    end\n    local t = {}\n    for i = 2, a do\n        local f = true\n\
    \        for j = 2, a-1 do\n            if i % j == 0 then\n                f\
    \ = false\n                break\n            end\n        end\n        if f then\n\
    \            table.insert(t, i)\n        end\n    end\n    local l = {}\n    for\
    \ i = 1, #t do\n        for j = 1, #t do\n            for k = 1, #t do\n     \
    \           if t[i] * t[j] * t[k] == a then\n                    table.insert(l,\
    \ t[i])\n                    table.insert(l, t[j])\n                    table.insert(l,\
    \ t[k])\n                    return l\n                end\n            end\n\
    \        end\n    end\n    return false\nend", "\t-- write your code here\n\t\
    return false\nend", "end\n```", "  -- Write your code here.\n  return false\n\
    end", "    if a <= 1 then\n        return false\n    end\n    local temp = 1\n\
    \    for i = 2,a do\n        if a % i == 0 then\n            if is_prime(i) then\n\
    \                temp = temp * i\n            end\n        end\n    end\n    if\
    \ temp == a then\n        return true\n    else\n        return false\n    end\n\
    end", "  -- TODO: your code goes here\n  local b = math.abs(a)\n  if a == 1 then\
    \ return false end\n  if a == 2 then return true end\n  local flag = false\n \
    \ local a1, a2, a3 = b, b, b\n  for i = 2, math.floor(b/2) do\n  \tif a1 % i ==\
    \ 0 then\n  \t\ta1 = a1 / i\n  \t\tfor j = 2, math.floor(a1/2) do\n  \t\t\tif\
    \ a2 % j == 0 then\n  \t\t\t\ta2 = a2 / j\n  \t\t\t\tfor k = 2, math.floor(a2/2)\
    \ do\n  \t\t\t\t\tif a3 % k == 0 then\n  \t\t\t\t\t\ta3 = a3 / k\n  \t\t\t\t\t\
    \tif a3 == 1 then flag = true end\n  \t\t\t\t\tend\n  \t\t\t\tend\n  \t\t\tend\n\
    \  \t\tend\n  \tend\n  end\n  return flag\nend", "    -- your code here\nend",
  "\tfor i = 1, 100 do\n\t\tif a % i == 0 then\n\t\t\tlocal k = a / i\n\t\t\tfor j\
    \ = 1, 100 do\n\t\t\t\tif k % j == 0 then\n\t\t\t\t\tlocal m = k / j\n\t\t\t\t\
    \treturn is_prime(i) and is_prime(j) and is_prime(m)\n\t\t\t\tend\n\t\t\tend\n\
    \t\tend\n\tend\n\treturn false\nend", "  if a < 2 then return false end\n  for\
    \ x = 2, a / 2 do\n    if not is_prime(x) then\n      for y = 2, (a / x) do\n\
    \        if not is_prime(y) then\n          for z = 2, (a / (x * y)) do\n    \
    \        if not is_prime(z) then\n              return false\n            end\n\
    \          end\n        end\n      end\n    end\n  end\n  return true\nend", "\t\
    local prime_list = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\tfor i = 1, #prime_list do\n\t\tfor j\
    \ = 1, #prime_list do\n\t\t\tfor k = 1, #prime_list do\n\t\t\t\tif (prime_list[i]\
    \ * prime_list[j] * prime_list[k]) == a then\n\t\t\t\t\treturn true\n\t\t\t\t\
    end\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", end, "  local n = a\n  local\
    \ n1 = 0\n  local n2 = 0\n  local n3 = 0\n  local x = 1\n  while x <= n do\n \
    \   if n % x == 0 then\n      n = n / x\n      if n1 == 0 then\n        n1 = x\n\
    \      elseif n2 == 0 then\n        n2 = x\n      elseif n3 == 0 then\n      \
    \  n3 = x\n      end\n    end\n    x = x + 1\n  end\n  if n3 == 0 then\n    return\
    \ false\n  else\n    return true\n  end\nend", "    local prime_factors = get_prime_factors(a)\n\
    \    if #prime_factors > 3 then\n        return false\n    end\n    if #prime_factors\
    \ == 3 then\n        return true\n    end\n    return false\nend", "\tlocal primes\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97}\n\tfor _, prime in ipairs(primes) do\n\t\tif 0 == a % prime\
    \ then\n\t\t\tlocal o = a / prime\n\t\t\tfor _, prime in ipairs(primes) do\n\t\
    \t\t\tif 0 == o % prime then\n\t\t\t\t\treturn 0 == o / prime\n\t\t\t\tend\n\t\
    \t\tend\n\t\tend\n\tend\n\treturn false\nend", "    -- you code here\nend", " \
    \   -- write your code here\nend", "    local function is_prime(a)\n        if\
    \ a < 2 then\n            return false\n        end\n        for n = 2, a - 1\
    \ do\n            if a % n == 0 then\n                return false\n         \
    \   end\n        end\n        return true\n    end\n    for n = 2, a - 1 do\n\
    \        if is_prime(n) and a % n == 0 then\n            for m = 2, a - 1 do\n\
    \                if is_prime(m) and a % m == 0 and a / m / n == 1 then\n     \
    \               return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend", "\treturn primes[a] and true or false\nend",
  end, "\tif a == 1 then return false end\n\tlocal sieve = {}\n\tlocal n = a\n\tfor\
    \ i = 2, n do\n\t\twhile n % i == 0 do\n\t\t\tif not sieve[i] then sieve[i] =\
    \ 1 else sieve[i] = sieve[i] + 1 end\n\t\t\tn = n / i\n\t\tend\n\tend\n\tlocal\
    \ total = 0\n\tfor k, v in pairs(sieve) do\n\t\ttotal = total + v\n\tend\n\treturn\
    \ total == 3\nend", "\t-- TODO: Write your code here\n\tlocal count = 0\n\tfor\
    \ i = 2, a, 1 do\n\t\tif a % i == 0 then\n\t\t\tlocal flag = false\n\t\t\tfor\
    \ j = 2, i-1, 1 do\n\t\t\t\tif i % j == 0 then\n\t\t\t\t\tflag = true\n\t\t\t\t\
    \tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif flag == false then\n\t\t\t\ta = a /\
    \ i\n\t\t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\tif count == 3 then\n\
    \t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "\tfor i = 2, a do\n\t\
    \tfor j = 2, a do\n\t\t\tfor k = 2, a do\n\t\t\t\tif i * j * k == a then\n\t\t\
    \t\t\treturn i, j, k\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn nil\nend",
  "    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local function check(num, idx)\n  \
    \      local i = primes[idx]\n        if i == nil then\n            return false\n\
    \        end\n        if num % i == 0 then\n            local r = num / i\n  \
    \          if r == 1 then\n                return true\n            end\n    \
    \        local idx = idx + 1\n            return check(r, idx)\n        end\n\
    \        return check(num, idx + 1)\n    end\n    return check(a, 1)\nend", " \
    \ if a <= 0 then\n    return false\n  end\n  for i = 2, a-1 do\n    if a % i ==\
    \ 0 then\n      return false\n    end\n  end\n  return true\nend", "\t-- YOUR\
    \ CODE HERE\nend", "    local i, j, k\n    local is_multiply_prime = false\n \
    \   local is_prime = false\n    for i = 2, a/3 do\n        for j = i, a/2 do\n\
    \            for k = j, a/2 do\n                if k * j * i == a then\n     \
    \               is_multiply_prime = true\n                    if is_prime(i) and\
    \ is_prime(j) and is_prime(k) then\n                        return true\n    \
    \                end\n                end\n            end\n        end\n    end\n\
    \    return is_multiply_prime\nend", "\tlocal b = 3 \n\tlocal c = 5\n\tlocal d\
    \ = 2\n\tif (a == b*c*d) then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\n\
    end", "    -- your code here\nend", "\tfor i = 1, a-1 do\n\t\tfor j = 1, a-1 do\n\
    \t\t\tfor k = 1, a-1 do\n\t\t\t\tif is_prime(i) and is_prime(j) and is_prime(k)\
    \ and i * j * k == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn false\nend", "  \nend", "  local s = {\n    [2] = true,\n\
    \    [3] = true,\n    [5] = true,\n    [7] = true,\n    [11] = true,\n    [13]\
    \ = true,\n    [17] = true,\n    [19] = true,\n    [23] = true,\n    [29] = true,\n\
    \    [31] = true,\n    [37] = true,\n    [41] = true,\n    [43] = true,\n    [47]\
    \ = true,\n    [53] = true,\n    [59] = true,\n    [61] = true,\n    [67] = true,\n\
    \    [71] = true,\n    [73] = true,\n    [79] = true,\n    [83] = true,\n    [89]\
    \ = true,\n    [97] = true\n  }\n  for i = 2, math.floor(math.sqrt(a)) do\n  \
    \  if a % i == 0 and s[i] then\n      return true\n    end\n  end\n  return false\n\
    end", "  local primes = {3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  local has_primes = {}\n  for _, prime\
    \ in ipairs(primes) do\n    while a % prime == 0 do\n      if has_primes[prime]\
    \ then\n        return false\n      end\n      has_primes[prime] = true\n    \
    \  a = a / prime\n    end\n  end\n  return true\nend", "    local n = 0\n    for\
    \ i = 2, a - 1 do\n        if a % i == 0 then\n            local counter = 0\n\
    \            for j = 1, i do\n                if i % j == 0 then\n           \
    \         counter = counter + 1\n                end\n            end\n      \
    \      if counter == 2 then\n                n = n + 1\n            end\n    \
    \    end\n    end\n    if n == 3 then\n        return true\n    else\n       \
    \ return false\n    end\nend", "  for _,i in ipairs({2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97})\
    \ do\n    if a % i == 0 then\n      a = a / i\n    end\n  end\n  return a == 1\n\
    end", "    if a % 2 == 0 then\n        a = a / 2\n    end\n    if a % 3 == 0 then\n\
    \        a = a / 3\n    end\n    if a % 5 == 0 then\n        a = a / 5\n    end\n\
    \    if a % 7 == 0 then\n        a = a / 7\n    end\n    if a % 11 == 0 then\n\
    \        a = a / 11\n    end\n    if a % 13 == 0 then\n        a = a / 13\n  \
    \  end\n    if a % 17 == 0 then\n        a = a / 17\n    end\n    if a % 19 ==\
    \ 0 then\n        a = a / 19\n    end\n    if a % 23 == 0 then\n        a = a\
    \ / 23\n    end\n    if a % 29 == 0 then\n        a = a / 29\n    end\n    if\
    \ a % 31 == 0 then\n        a = a / 31\n    end\n    if a % 37 == 0 then\n   \
    \     a = a / 37\n    end\n    if a % 41 == 0 then\n        a = a / 41\n    end\n\
    \    if a % 43 == 0 then\n        a = a / 43\n    end\n    if a % 47 == 0 then\n\
    \        a = a / 47\n    end\n    if a % 53 == 0 then\n        a = a / 53\n  \
    \  end\n    if a % 59 == 0 then\n        a = a / 59\n    end\n    if a % 61 ==\
    \ 0 then\n        a = a / 61\n    end\n    if a % 67 == 0 then\n        a = a\
    \ / 67\n    end\n    if a % 71 == 0 then\n        a = a / 71\n    end\n    if\
    \ a % 73 == 0 then\n        a = a / 73\n    end\n    if a % 79 == 0 then\n   \
    \     a = a / 79\n    end\n    if a % 83 == 0 then\n        a = a / 83\n    end\n\
    \    if a % 89 == 0 then\n        a = a / 89\n    end\n    if a % 97 == 0 then\n\
    \        a = a / 97\n    end\n    if a == 1 then\n        return true\n    else\n\
    \        return false\n    end\nend", "  for i = 2, a - 1 do\n    for j = 2, a\
    \ - 1 do\n      for k = 2, a - 1 do\n        if i * j * k == a then\n        \
    \  return true\n        end\n      end\n    end\n  end\n  return false\nend",
  "    local count = 0\n    local n = a\n    while n ~= 1 do\n        for i = 2, n\
    \ do\n            if n % i == 0 then\n                n = n / i\n            \
    \    count = count + 1\n                break\n            end\n        end\n\
    \    end\n    return count == 3\nend", "    -- write your code here\n    return\
    \ true\nend", "\t-- TODO: Write this function\nend", "\t-- your code here\n\t\
    local prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal mul_prime_numbers = {}\n\t\
    local result = true\n\tfor i = 1, #prime_numbers do\n\t\tfor j = 1, #prime_numbers\
    \ do\n\t\t\tfor k = 1, #prime_numbers do\n\t\t\t\tmul_prime_numbers[#mul_prime_numbers\
    \ + 1] = prime_numbers[i] * prime_numbers[j] * prime_numbers[k]\n\t\t\tend\n\t\
    \tend\n\tend\n\tfor i = 1, #mul_prime_numbers do\n\t\tif mul_prime_numbers[i]\
    \ == a then\n\t\t\tresult = true\n\t\t\tbreak\n\t\telse\n\t\t\tresult = false\n\
    \t\tend\n\tend\n\treturn result\nend", "\tlocal n = math.ceil(math.sqrt(a))\n\t\
    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97}\n\tfor i = 1, #primes do\n\t\tif primes[i] ==\
    \ a then return true end\n\t\tlocal x = primes[i]\n\t\tif a % x == 0 then\n\t\t\
    \tlocal y = a / x\n\t\t\tfor j = 1, #primes do\n\t\t\t\tif primes[j] == y then\
    \ return true end\n\t\t\t\tlocal xx = primes[j]\n\t\t\t\tif y % xx == 0 then\n\
    \t\t\t\t\tif x * xx == a then return true end\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn false\nend", "\t-- Write your code here\nend", "    for i = 2,\
    \ 100 do\n        if a % i == 0 then\n            local b = a / i\n          \
    \  for j = 2, 100 do\n                if b % j == 0 then\n                   \
    \ local c = b / j\n                    if is_prime(c) then\n                 \
    \       return true\n                    end\n                end\n          \
    \  end\n        end\n    end\n    return false\nend", "  local is_prime = require(\"\
    euler.prime\").is_prime\n  local primes = require(\"euler.prime\").primes\n  local\
    \ ans = false\n  local prime_list = primes(a)\n  local n = #prime_list\n  local\
    \ i, j, k\n  for i = 1, n do\n    for j = i, n do\n      for k = j, n do\n   \
    \     if prime_list[i] * prime_list[j] * prime_list[k] == a then\n          ans\
    \ = true\n          break\n        end\n      end\n    end\n  end\n  return ans\n\
    end", "  local ret = 0\n  local list = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  for i, v in ipairs(list)\
    \ do\n    if a % v == 0 then\n      ret = ret + 1\n    end\n  end\n  if ret ==\
    \ 3 then\n    return true\n  else\n    return false\n  end\nend", "  if a <= 2\
    \ then\n    return false\n  end\n  for i = 2, math.sqrt(a) do\n    if a % i ==\
    \ 0 then\n      local x = a / i\n      if x == 1 then\n        return false\n\
    \      end\n      for j = 2, math.sqrt(x) do\n        if x % j == 0 then\n   \
    \       local y = x / j\n          if y == 1 then\n            return false\n\
    \          end\n          for k = 2, math.sqrt(y) do\n            if y % k ==\
    \ 0 then\n              return false\n            end\n          end\n       \
    \   return true\n        end\n      end\n    end\n  end\n  return true\nend",
  "  local k = 0\n  for i = 2, a do\n    if a % i == 0 then\n      k = k + 1\n   \
    \   if k == 2 then\n        return false\n      end\n    end\n  end\n  return\
    \ true\nend", "  local n = 2\n  local count = 0\n  local s = \"\"\n  while n <=\
    \ math.sqrt(a) do\n    if a % n == 0 then\n      count = count + 1\n      if count\
    \ > 3 then\n        return false\n      end\n      s = s .. n .. \" \"\n     \
    \ a = a / n\n    else\n      n = n + 1\n    end\n  end\n  if a ~= 1 then\n   \
    \ count = count + 1\n    s = s .. a\n  end\n  if count == 3 then\n    return true\n\
    \  else\n    return false\n  end\nend", "   for i = 2, math.sqrt(a) do\n     \
    \ for j = 2, math.sqrt(a) do\n         for k = 2, math.sqrt(a) do\n          \
    \  if i * j * k == a then\n               return true\n            end\n     \
    \    end\n      end\n   end\n   return false\nend", "\tlocal p = 0\n\tlocal m\
    \ = a\n\tlocal d = 2\n\tlocal i = 0\n\twhile (d * d <= m) and (i <= 3) do\n\t\t\
    while m % d == 0 do\n\t\t\tm = m / d\n\t\t\ti = i + 1\n\t\tend\n\t\td = d + 1\n\
    \tend\n\tif m > 1 then\n\t\ti = i + 1\n\tend\n\tif i == 3 then\n\t\treturn true\n\
    \telse\n\t\treturn false\n\tend\nend", "   for i = 2, math.floor(math.sqrt(a))\
    \ do\n      if a % i == 0 then\n         return false\n      end\n   end\n   return\
    \ true\nend", "    -- Write your code here\n    --returns true if there are 3\
    \ prime numbers that can be multiplied together to get a. false otherwise\n  \
    \  local possible_prime_factors = {}\n    for i = 1, a do\n        if is_prime(i)\
    \ then\n            table.insert(possible_prime_factors, i)\n        end\n   \
    \ end\n    for i = 1, #possible_prime_factors do\n        for j = 1, #possible_prime_factors\
    \ do\n            for k = 1, #possible_prime_factors do\n                if possible_prime_factors[i]\
    \ * possible_prime_factors[j] * possible_prime_factors[k] == a then\n        \
    \            return true\n                end\n            end\n        end\n\
    \    end\n    return false\nend", "  -- your code here\nend", "\tlocal mult =\
    \ 1\n\tlocal count = 0\n\tfor i = 1,a do\n\t\tif(is_prime(i)) then\n\t\t\tmult\
    \ = mult * i\n\t\t\tcount = count + 1\n\t\t\tif(mult == a) then\n\t\t\t\tif(count\
    \ == 3) then\n\t\t\t\t\treturn true\n\t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\
    \t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend", "  for i = 1, a do\n\
    \    for j = 1, a do\n      for k = 1, a do\n        if i * j * k == a then\n\
    \          if is_prime(i) and is_prime(j) and is_prime(k) then\n            return\
    \ true\n          end\n        end\n      end\n    end\n  end\n  return false\n\
    end", "\t-- body\nend", "    local prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local\
    \ primes = {}\n    for i, v in ipairs(prime_numbers) do\n        if a % v == 0\
    \ then\n            primes[#primes + 1] = v\n        end\n    end\n    if #primes\
    \ == 3 then\n        return true\n    else\n        return false\n    end\nend\n\
    print(is_multiply_prime(30))", "  -- add your code here\nend", "    -- YOUR CODE\
    \ HERE\n    if a < 1 then\n        return false\n    end\n    if a == 1 then\n\
    \        return true\n    end\n    for i = 2, a - 1 do\n        if a % i == 0\
    \ then\n            for j = 2, a / i - 1 do\n                if (a / i) % j ==\
    \ 0 then\n                    for k = 2, a / i / j - 1 do\n                  \
    \      if (a / i / j) % k == 0 then\n                            return false\n\
    \                        end\n                    end\n                    return\
    \ true\n                end\n            end\n            return true\n      \
    \  end\n    end\n    return true\nend", "    if a < 3 then\n        return false\n\
    \    end\n    local i = 2\n    while i * i <= a do\n        if a % i == 0 then\n\
    \            a = a / i\n            if is_prime(a) then\n                return\
    \ true\n            end\n        else\n            i = i + 1\n        end\n  \
    \  end\n    return false\nend", "    -- You need to fill in the code here\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "  local _, is_prime = gen_primes()\n  local t = {}\n  for\
    \ i = 1, a do\n    if is_prime(i) then\n      t[#t + 1] = i\n    end\n  end\n\
    \  for i = 1, #t do\n    for j = i, #t do\n      for k = j, #t do\n        if\
    \ t[i] * t[j] * t[k] == a then\n          return true\n        end\n      end\n\
    \    end\n  end\n  return false\nend", "    local function get_primes(n)\n   \
    \     local primes = {}\n        local current = 2\n        while n ~= 1 do\n\
    \            if n % current == 0 then\n                n = n // current\n    \
    \            table.insert(primes, current)\n            else\n               \
    \ current = current + 1\n            end\n        end\n        return primes\n\
    \    end\n    local function is_prime(x)\n        if x < 2 then\n            return\
    \ false\n        end\n        for i = 2, x - 1 do\n            if x % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local primes = get_primes(a)\n    if #primes ~= 3 then\n       \
    \ return false\n    end\n    for i = 1, #primes do\n        if not is_prime(primes[i])\
    \ then\n            return false\n        end\n    end\n    return true\nend\n\
    assert(is_multiply_prime(30) == true)\nassert(is_multiply_prime(50) == false)",
  end, "    if a == 2 or a == 3 or a == 5 then\n        return true\n    end\n   \
    \ if a < 2 or a % 2 == 0 or a % 3 == 0 or a % 5 == 0 then\n        return false\n\
    \    end\n    for i = 5, math.sqrt(a) do\n        if a % i == 0 or a % (i + 2)\
    \ == 0 then\n            return false\n        end\n    end\n    return true\n\
    end", "  -- your code here\nend", "    for i = 2, math.sqrt(a) do\n        for\
    \ j = 2, math.sqrt(a) do\n            for k = 2, math.sqrt(a) do\n           \
    \     if i * j * k == a then\n                    return true\n              \
    \  end\n            end\n        end\n    end\n    return false\nend", "    --\
    \ your code here\n    return 0\nend", "    for i = 1, a do\n        for j = 1,\
    \ a do\n            for k = 1, a do\n                if i * j * k == a then\n\
    \                    if is_prime(i) and is_prime(j) and is_prime(k) then\n   \
    \                     return true\n                    end\n                end\n\
    \            end\n        end\n    end\n    return false\nend", "\treturn true\n\
    end", "\tlocal res = true\n\tlocal lst = {}\n\tlocal cnt = 0\n\tfor i = 1, a do\n\
    \t\tif is_prime(i) then\n\t\t\ttable.insert(lst, i)\n\t\t\tcnt = cnt + 1\n\t\t\
    end\n\tend\n\tif cnt < 3 then\n\t\treturn false\n\tend\n\tfor i = 1, cnt - 1 do\n\
    \t\tif a % lst[i] == 0 then\n\t\t\tfor j = i + 1, cnt do\n\t\t\t\tif a % lst[j]\
    \ == 0 then\n\t\t\t\t\tlocal tmp = a / lst[i] / lst[j]\n\t\t\t\t\tfor k = j +\
    \ 1, cnt do\n\t\t\t\t\t\tif tmp == lst[k] then\n\t\t\t\t\t\t\treturn true\n\t\t\
    \t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\n\
    end", "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal found = false\n\tlocal prime1\
    \ = 0\n\tlocal prime2 = 0\n\tlocal prime3 = 0\n\tfor i = 1, 25 do\n\t\tif a%primes[i]\
    \ == 0 then\n\t\t\tprime1 = primes[i]\n\t\t\tfound = true\n\t\t\tbreak\n\t\tend\n\
    \tend\n\tif found then\n\t\tfor i = 1, 25 do\n\t\t\tif a/prime1 == primes[i] then\n\
    \t\t\t\tprime2 = primes[i]\n\t\t\t\tprime3 = a/prime1/prime2\n\t\t\t\tfound =\
    \ true\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\treturn found\nend", "\t--\
    \ Write your code here ...\nend", "\tif math.mod(a,2) == 0 then\n\t\tfor i = 3,\
    \ math.floor(math.sqrt(a)) + 1, 2 do\n\t\t\tif math.mod(a,i) == 0 then\n\t\t\t\
    \treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\telse\n\t\tfor i = 3, math.floor(math.sqrt(a))\
    \ + 1, 2 do\n\t\t\tif math.mod(a,i) == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\
    \t\tend\n\t\treturn true\n\tend\nend", "\tlocal primes = {}\n\tfor i = 2, a do\n\
    \t\tlocal prime = true\n\t\tfor j = 2, i do\n\t\t\tif i % j == 0 and i ~= j then\n\
    \t\t\t\tprime = false\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif prime then\n\t\
    \t\ttable.insert(primes, i)\n\t\tend\n\tend\n\tfor i = 1, #primes do\n\t\tfor\
    \ j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]\
    \ * primes[k] == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \tend\n\treturn false\nend", "\tif a < 2 then\n\t\treturn false\n\tend\n\tlocal\
    \ function isPrime(n)\n\t\tfor i = 2, math.floor(math.sqrt(n)) do\n\t\t\tif n\
    \ % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\t\
    end\n\tlocal result = {}\n\tfor i = 2, a do\n\t\tif isPrime(i) and a % i == 0\
    \ then\n\t\t\ttable.insert(result, i)\n\t\t\ta = a / i\n\t\tend\n\tend\n\tif #result\
    \ == 3 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "end\n```",
  "  if a == 1 then return false end\n  local function prime_factors(a)\n    local\
    \ factors = {}\n    local n = a\n    while n > 1 do\n      local prime = util.next_prime(n)\n\
    \      table.insert(factors, prime)\n      n = n // prime\n    end\n    return\
    \ factors\n  end\n  local function len(t)\n    local count = 0\n    for k,v in\
    \ pairs(t) do\n      count = count + 1\n    end\n    return count\n  end\n  local\
    \ prime_factors = prime_factors(a)\n  return len(prime_factors) == 3\nend", "\t\
    -- write your code here\nend", "\tfor i = 1, #prime_numbers - 2 do\n\t\tfor j\
    \ = i + 1, #prime_numbers - 1 do\n\t\t\tfor k = j + 1, #prime_numbers do\n\t\t\
    \t\tif a == prime_numbers[i] * prime_numbers[j] * prime_numbers[k] then\n\t\t\t\
    \t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
  "    local n = a\n    local numbers = {}\n    local is_prime = true\n    while n\
    \ > 1 do\n        local n_new = n\n        for i = 2, n do\n            if n %\
    \ i == 0 then\n                is_prime = true\n                for j = 2, i do\n\
    \                    if i % j == 0 and j ~= i then\n                        is_prime\
    \ = false\n                        break\n                    end\n          \
    \      end\n                if is_prime then\n                    n_new = n /\
    \ i\n                    table.insert(numbers, i)\n                    break\n\
    \                end\n            end\n        end\n        n = n_new\n    end\n\
    \    if #numbers < 3 then\n        return false\n    end\n    return true\nend",
  "\t-- body\nend", '    if a <= 1 then return false end', "    local fact_a = factorization(a)\n\
    \    local primes = 0\n    for k, v in pairs(fact_a) do\n        if is_prime(k)\
    \ then\n            primes = primes + 1\n        end\n    end\n    if primes ==\
    \ 3 then\n        return true\n    else\n        return false\n    end\nend",
  "\t-- body\nend", "  if a < 3 then\n    return false\n  end\n  local t = {}\n  for\
    \ i = 2, a do\n    local is_prime = true\n    for k, v in pairs(t) do\n      if\
    \ (i % v) == 0 then\n        is_prime = false\n        break\n      end\n    end\n\
    \    if is_prime then\n      t[#t + 1] = i\n      local r = a / i\n      if r\
    \ % 1 == 0 then\n        if #t == 3 then\n          return true\n        end\n\
    \        a = r\n      end\n    end\n  end\n  return false\nend", "  if a == 0\
    \ then return false end\n  local a = math.abs(a)\n  local count = 0\n  local prime\
    \ = 1\n  for i = 1, a do\n    if a % i == 0 then\n      for j = 1, i do\n    \
    \    if i % j == 0 then\n          count = count + 1\n        end\n      end\n\
    \      if count == 2 then\n        prime = prime * i\n      end\n      count =\
    \ 0\n    end\n  end\n  if prime == a then\n    return true\n  else\n    return\
    \ false\n  end\nend", "    local prime_number = 2\n    local count = 0\n    while\
    \ a > 1 do\n        while a % prime_number == 0 do\n            a = a / prime_number\n\
    \            count = count + 1\n        end\n        prime_number = prime_number\
    \ + 1\n    end\n    return count == 3\nend", "  local function is_prime(num)\n\
    \    if num == 1 then return false end\n    for i = 2, math.sqrt(num) do\n   \
    \   if num % i == 0 then return false end\n    end\n    return true\n  end\n \
    \ local k = 3\n  local i = a - 1\n  while k > 0 and i > 0 do\n    if is_prime(i)\
    \ and a % i == 0 then\n      k = k - 1\n      a = a / i\n    end\n    i = i -\
    \ 1\n  end\n  return k == 0\nend", "\t-- Code here...\nend", "    local primes\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97}\n    local flag = false\n    for i = 1, #primes do\n   \
    \     for j = 1, #primes do\n            for k = 1, #primes do\n             \
    \   if (primes[i] * primes[j] * primes[k]) == a then\n                    flag\
    \ = true\n                end\n            end\n        end\n    end\n    return\
    \ flag\nend", "\t-- TODO\nend", "  \n  local b=is_prime(a)\n  if b == false then\n\
    \  local c=a-1\n  while c>1 do\n    if a%c==0 then\n      local d=is_prime(c)\n\
    \      if d==true then\n        local e=a/c\n        local f=is_prime(e)\n   \
    \     if f==true then\n          local g=c*e\n          if g==a then\n       \
    \     return true\n          end\n        end\n      end\n    end\n    c=c-1\n\
    \  end\n  end\n  return false\n  \nend", "  -- body\nend", "\t-- Your code here",
  "    -- TODO: Code and return\nend", "  local x, y, z = 0, 0, 0\n  for i = 2, a\
    \ do\n    x = i\n    while a % x == 0 do\n      y = x\n      x = a / x\n    end\n\
    \    if x == 1 then\n      break\n    end\n  end\n  for i = 2, y do\n    x = i\n\
    \    while y % x == 0 do\n      z = x\n      x = y / x\n    end\n    if x == 1\
    \ then\n      break\n    end\n  end\n  if (y < a) and (z < y) then\n    return\
    \ true\n  else\n    return false\n  end\nend", "\t-- TODO\nend", "  local PRIMES\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97}\n  for i = 1, #PRIMES do\n    for j = 1, #PRIMES do\n  \
    \    for k = 1, #PRIMES do\n        if PRIMES[i] * PRIMES[j] * PRIMES[k] == a\
    \ then\n          return true\n        end\n      end\n    end\n  end\n  return\
    \ false\nend", "  \t-- your code here\n  \tlocal isPrime = true\n  \tlocal flag\
    \ = false\n  \tif a == 1 then\n  \t\tisPrime = false\n  \tend\n  \tif a % 2 ==\
    \ 0 then\n  \t\tisPrime = false\n  \tend\n  \tfor i = 3, a - 1, 2 do\n  \t\tif\
    \ a % i == 0 then\n  \t\t\tisPrime = false\n  \t\tend\n  \tend\n  \tif isPrime\
    \ == true then\n  \t\treturn true\n  \tend\n  \tif a % 2 == 0 then\n  \t\tflag\
    \ = true\n  \t\tif a / 2 <= 100 then\n  \t\t\tif is_multiply_prime(a / 2) == true\
    \ then\n  \t\t\t\tflag = true\n  \t\t\telse\n  \t\t\t\tflag = false\n  \t\t\t\
    end\n  \t\tend\n  \tend\n  \tif a % 3 == 0 then\n  \t\tflag = true\n  \t\tif a\
    \ / 3 <= 100 then\n  \t\t\tif is_multiply_prime(a / 3) == true then\n  \t\t\t\t\
    flag = true\n  \t\t\telse\n  \t\t\t\tflag = false\n  \t\t\tend\n  \t\tend\n  \t\
    end\n  \tif a % 5 == 0 then\n  \t\tflag = true\n  \t\tif a / 5 <= 100 then\n \
    \ \t\t\tif is_multiply_prime(a / 5) == true then\n  \t\t\t\tflag = true\n  \t\t\
    \telse\n  \t\t\t\tflag = false\n  \t\t\tend\n  \t\tend\n  \tend\n  \tif a % 7\
    \ == 0 then\n  \t\tflag = true\n  \t\tif a / 7 <= 100 then\n  \t\t\tif is_multiply_prime(a\
    \ / 7) == true then\n  \t\t\t\tflag = true\n  \t\t\telse\n  \t\t\t\tflag = false\n\
    \  \t\t\tend\n  \t\tend\n  \tend\n  \tif a % 11 == 0 then\n  \t\tflag = true\n\
    \  \t\tif a / 11 <= 100 then\n  \t\t\tif", "  local result = true\n  -- TODO\n\
    \  return result\nend", "  if a < 6 then return false end\n  for i = 2, a/2 do\n\
    \    if a % i == 0 then\n      for j = 2, a/2 do\n        if a % j == 0 and i*j\
    \ == a then\n          for k = 2, a/2 do\n            if a % k == 0 and k*j*i\
    \ == a then\n              return true\n            end\n          end\n     \
    \   end\n      end\n    end\n  end\n  return false\nend", "\tlocal count = 0\n\
    \tlocal number = 0\n\tfor i = 2, a do\n\t\tfor j = 2, i do\n\t\t\tif i % j ==\
    \ 0 then\n\t\t\t\tif number == 0 then\n\t\t\t\t\tnumber = i\n\t\t\t\telse\n\t\t\
    \t\t\tif number > 0 then\n\t\t\t\t\t\tif number * i == a then\n\t\t\t\t\t\t\t\
    count = count + 1\n\t\t\t\t\t\t\tif count == 3 then\n\t\t\t\t\t\t\t\treturn true\n\
    \t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn false\nend", "\tlocal result = 0\n\tfor i = 2, a do\n\t\t\
    local b = 0\n\t\tfor j = 2, i do\n\t\t\tif i % j == 0 then\n\t\t\t\tb = b + 1\n\
    \t\t\tend\n\t\tend\n\t\tif b == 1 then\n\t\t\tfor k = 2, a do\n\t\t\t\tlocal c\
    \ = 0\n\t\t\t\tfor l = 2, k do\n\t\t\t\t\tif k % l == 0 then\n\t\t\t\t\t\tc =\
    \ c + 1\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tif c == 1 then\n\t\t\t\t\tfor m =\
    \ 2, a do\n\t\t\t\t\t\tlocal d = 0\n\t\t\t\t\t\tfor n = 2, m do\n\t\t\t\t\t\t\t\
    if m % n == 0 then\n\t\t\t\t\t\t\t\td = d + 1\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\
    end\n\t\t\t\t\t\tif d == 1 then\n\t\t\t\t\t\t\tif i * k * m == a then\n\t\t\t\t\
    \t\t\t\tresult = result + 1\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\
    \t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tif result == 1 then\n\t\treturn true\n\
    \telse\n\t\treturn false\n\tend\nend", "  local primes = {1, 2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\
    \  local prim1, prim2, prim3 = 0, 0, 0\n  for i = 1, 25 do\n    if prim1 == 0\
    \ and a % primes[i] == 0 then\n      prim1 = primes[i]\n    elseif prim2 == 0\
    \ and a % primes[i] == 0 then\n      prim2 = primes[i]\n    elseif prim3 == 0\
    \ and a % primes[i] == 0 then\n      prim3 = primes[i]\n    end\n  end\n  if prim1\
    \ * prim2 * prim3 == a then\n    return true\n  else\n    return false\n  end\n\
    end", "    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local prime = false\n    for\
    \ _, v in ipairs(primes) do\n        if a % v == 0 then\n            if prime\
    \ then\n                return false\n            else\n                prime\
    \ = true\n            end\n        end\n    end\n    return prime\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

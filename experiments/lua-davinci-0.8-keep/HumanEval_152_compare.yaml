name: HumanEval_152_compare
language: lua
prompt: "-- I think we all remember that feeling when the result of some long-awaited\n\
  -- event is finally known. The feelings and thoughts you have at that moment are\n\
  -- definitely worth noting down and comparing.\n-- Your task is to determine if\
  \ a person correctly guessed the results of a number of matches.\n-- You are given\
  \ two arrays of scores and guesses of equal length, where each index shows a match.\
  \ \n-- Return an array of the same length denoting how far off each guess was. If\
  \ they have guessed correctly,\n-- the value is 0, and if not, the value is the\
  \ absolute difference between the guess and the score.\n-- example:\n-- compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
  \ -> [0,0,0,0,3,3]\n-- compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
  local function compare(game, guess)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
  \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
  \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0,\
  \ 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2, -3}),\
  \ {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}), {2, 0,\
  \ 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local out = {}\n    for i,v in ipairs(game) do\n        if guess[i]\
    \ == v then\n            out[i] = 0\n        else\n            out[i] = math.abs(guess[i]\
    \ - v)\n        end\n    end\n    return out\nend", "  local result = {}\n  for\
    \ i = 1, #game do\n    result[i] = math.abs(game[i] - guess[i])\n  end\n  return\
    \ result\nend", "  local ret = {}\n  for i,v in ipairs(game) do\n    ret[i] =\
    \ math.abs(v - guess[i])\n  end\n  return ret\nend", "    -- set up the results\
    \ array\n    local results = {}\n    -- iterate over the games\n    for i, g in\
    \ ipairs(game) do\n        -- get the current guess\n        local currentGuess\
    \ = guess[i]\n        -- if the guess is correct\n        if currentGuess == g\
    \ then\n            -- add 0 to the results\n            table.insert(results,\
    \ 0)\n        else\n            -- add the absolute value of the difference between\
    \ the game result and the guess\n            table.insert(results, math.abs(g\
    \ - currentGuess))\n        end\n    end\n    -- return the results\n    return\
    \ results\nend", "  local result = {}\n  for i = 1, #game do\n    result[i] =\
    \ math.abs(game[i] - guess[i])\n  end\n  return result\nend", "  local difference\
    \ = {}\n  for i = 1, #game do\n    local score = game[i]\n    local predicted\
    \ = guess[i]\n    difference[i] = math.abs(score - predicted)\n  end\n  return\
    \ difference\nend", "  return table.map2(game, guess, function(game, guess)\n\
    \    return math.abs(game - guess)\n  end)\nend", "  local res = {}\n  for i,\
    \ g in ipairs(guess) do\n    res[i] = math.abs(game[i] - g)\n  end\n  return res\n\
    end", "  local result = {}\n  for i = 1, #game do\n    result[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return result\nend", "  local result = {}\n  for i = 1,\
    \ #game do\n    if game[i] > guess[i] then\n      table.insert(result, game[i]\
    \ - guess[i])\n    elseif game[i] < guess[i] then\n      table.insert(result,\
    \ guess[i] - game[i])\n    else\n      table.insert(result, 0)\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for i = 1, #game do\n    local\
    \ iResult = math.abs(game[i] - guess[i])\n    table.insert(result, iResult)\n\
    \  end\n  return result\nend", "    local res = {}\n    for k, v in pairs(game)\
    \ do\n        if guess[k] == nil then\n            table.insert(res, v)\n    \
    \    else\n            table.insert(res, math.abs(v - guess[k]))\n        end\n\
    \    end\n    return res\nend", "  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    if v == guess[i] then\n      result[i] = 0\n    else\n      result[i]\
    \ = math.abs(v - guess[i])\n    end\n  end\n  return result\nend", "    local\
    \ out = {}\n    for k, v in pairs(game) do\n        local diff = math.abs(v -\
    \ guess[k])\n        out[k] = diff\n    end\n    return out\nend", "    local\
    \ result = {}\n    for i, v in ipairs(game) do\n        local score = math.abs(v\
    \ - guess[i])\n        table.insert(result, score)\n    end\n    return result\n\
    end", "    local delta = {}\n    for i = 1, #game do\n        delta[i] = math.abs(game[i]\
    \ - guess[i])\n    end\n    return delta\nend", "  local result = {}\n  for i\
    \ = 1, #game do\n    local diff = math.abs(game[i] - guess[i])\n    table.insert(result,\
    \ diff)\n  end\n  return result\nend", "    local result = {}\n    for i = 1,\
    \ #game do\n        local a = math.abs(game[i] - guess[i])\n        table.insert(result,\
    \ a)\n    end\n    return result\nend", "\tlocal result = {}\n\tfor k,v in pairs(game)\
    \ do\n\t\tlocal diff = math.abs(v - guess[k])\n\t\ttable.insert(result, diff)\n\
    \tend\n\treturn result\nend", "   local result = {}\n   for i,v in ipairs(game)\
    \ do\n      local off = math.abs(v - guess[i])\n      result[i] = off\n   end\n\
    \   return result\nend", "    local result = {}\n    for i = 1, #game do\n   \
    \     result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\nend",
  "    local res = {}\n    for i = 1, #game do\n        res[i] = game[i] - guess[i]\n\
    \        if res[i] < 0 then\n            res[i] = res[i] * -1\n        end\n \
    \   end\n    return res\nend", "\tlocal res = {}\n\tfor i = 1, #game do\n\t\t\
    res[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn res\nend", "  local delta\
    \ = {}\n  for k,v in pairs(game) do\n    delta[k] = math.abs(v - guess[k])\n \
    \ end\n  return delta\nend", "    local result = {}\n    local N = #game\n   \
    \ for i = 1, N do\n        result[i] = math.abs(game[i] - guess[i])\n    end\n\
    \    return result\nend", "  assert(#game == #guess, \"Compare: Arrays have different\
    \ length\")\n  local res = {}\n  for i = 1, #game do\n    res[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return res\nend", "  local result = {}\n  for i = 1, #game\
    \ do\n    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend",
  "  local result = {}\n  for i, score in ipairs(game) do\n    if guess[i] == score\
    \ then\n      result[i] = 0\n    else\n      result[i] = math.abs(guess[i] - score)\n\
    \    end\n  end\n  return result\nend", "  local diffs = {}\n  for k, v in pairs(game)\
    \ do\n    diffs[k] = math.abs(v - guess[k])\n  end\n  return diffs\nend", "  \
    \  local result = {}\n    for k,v in pairs(game) do\n        local r = v - guess[k]\n\
    \        result[k] = r > 0 and r or r * -1\n    end\n    return result\nend",
  "    local scores = {}\n    for i, score in ipairs(game) do\n        scores[i] =\
    \ math.abs(score - guess[i])\n    end\n    return scores\nend", "    if #game\
    \ ~= #guess then\n        error(\"array size not equal\")\n    end\n    local\
    \ res = {}\n    for i = 1, #game do\n        res[i] = math.abs(game[i] - guess[i])\n\
    \    end\n    return res\nend", "   local result = {}\n   for i = 1, #game do\n\
    \      if guess[i] > game[i] then\n         result[i] = guess[i] - game[i]\n \
    \     elseif guess[i] < game[i] then\n         result[i] = game[i] - guess[i]\n\
    \      else\n         result[i] = 0\n      end\n   end\n   return result\nend",
  "  local result = {}\n  for i = 1, #game do\n    result[i] = math.abs(game[i] -\
    \ guess[i])\n  end\n  return result\nend", "    local res = {}\n    for i = 1,\
    \ #game do\n        res[i] = math.abs(game[i] - guess[i])\n    end\n    return\
    \ res\nend", "  local s = {}\n  for i = 1, #game do\n    s[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return s\nend", "  local result = {}\n  for i = 1, #game\
    \ do\n    if game[i] == guess[i] then\n      result[i] = 0\n    else\n      result[i]\
    \ = math.abs(game[i] - guess[i])\n    end\n  end\n  return result\nend", "  local\
    \ ret = {}\n  for idx, val in ipairs(game) do\n    if val == guess[idx] then\n\
    \      ret[idx] = 0\n    else\n      ret[idx] = math.abs(val - guess[idx])\n \
    \   end\n  end\n  return ret\nend", "    local result = {}\n    for i = 1, #game\
    \ do\n        if game[i] == guess[i] then\n            result[i] = 0\n       \
    \ else\n            result[i] = math.abs(game[i] - guess[i])\n        end\n  \
    \  end\n    return result\nend", "  local res = {}\n  for i = 1, #game do\n  \
    \  res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\nend", "    local\
    \ result = {}\n    for i, v in ipairs(game) do\n        if guess[i] == v then\n\
    \            result[i] = 0\n        else\n            result[i] = math.abs(guess[i]\
    \ - v)\n        end\n    end\n    return result\nend", "  local score = {}\n \
    \ for i = 1, #game do\n    score[i] = math.abs(game[i] - guess[i])\n  end\n  return\
    \ score\nend", "  local result = {}\n  for i, g in ipairs(guess) do\n    if g\
    \ == game[i] then\n      result[i] = 0\n    else\n      result[i] = math.abs(g\
    \ - game[i])\n    end\n  end\n  return result\nend", "    local result = {}\n\
    \    for i = 1, #game do\n        local match = game[i]\n        local bet = guess[i]\n\
    \        if match == bet then\n            result[i] = 0\n        else\n     \
    \       result[i] = math.abs(match - bet)\n        end\n    end\n    return result\n\
    end", "\tlocal score = {}\n\tfor k, v in pairs(game) do\n\t\tscore[k] = math.abs(v\
    \ - guess[k])\n\tend\n\treturn score\nend", "  local result = {}\n  for i,v in\
    \ ipairs(game) do\n    if v == guess[i] then\n      result[i] = 0\n    else\n\
    \      result[i] = math.abs(v - guess[i])\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for index, guess in ipairs(guess) do\n        local\
    \ score = game[index]\n        if score == guess then\n            result[index]\
    \ = 0\n        else\n            result[index] = math.abs(score - guess)\n   \
    \     end\n    end\n    return result\nend", "    local response = {}\n    for\
    \ i = 1, #game do\n        if game[i] == guess[i] then\n            response[i]\
    \ = 0\n        else\n            response[i] = math.abs(game[i] - guess[i])\n\
    \        end\n    end\n    return response\nend", "  local res = {}\n  for i =\
    \ 1, #game do\n    res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\n\
    end", "    local diffs = {}\n    for k, v in pairs(game) do\n        diffs[k]\
    \ = math.abs(v - guess[k])\n    end\n    return diffs\nend", "    local diffs\
    \ = {}\n    for i = 1, #game do\n        local diff = game[i] - guess[i]\n   \
    \     if diff < 0 then\n            diff = -diff\n        end\n        diffs[i]\
    \ = diff\n    end\n    return diffs\nend", "    local res = {}\n    for i = 1,\
    \ #game do\n        res[i] = math.abs(game[i] - guess[i])\n    end\n    return\
    \ res\nend", "\tlocal result = {}\n\tfor i, num in ipairs(game) do\n\t\tif num\
    \ > guess[i] then\n\t\t\tresult[i] = num - guess[i]\n\t\telseif num < guess[i]\
    \ then\n\t\t\tresult[i] = guess[i] - num\n\t\telse\n\t\t\tresult[i] = 0\n\t\t\
    end\n\tend\n\treturn result\nend", "  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, #game do\n    result[i] = math.abs(game[i] -\
    \ guess[i])\n  end\n  return result\nend", "  local result = {}\n  for i, score\
    \ in ipairs(game) do\n    result[i] = math.abs(score - guess[i])\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i, v in ipairs(game) do\n    result[i]\
    \ = math.abs(v - guess[i])\n  end\n  return result\nend", "\tlocal diff = {}\n\
    \tfor i,v in ipairs(game) do\n\t\tdiff[i] = math.abs(game[i] - guess[i])\n\tend\n\
    \treturn diff\nend", "  local win = {}\n  for i,v in ipairs(game) do\n    if v\
    \ == guess[i] then\n      win[i] = 0\n    else\n      win[i] = math.abs(v - guess[i])\n\
    \    end\n  end\n  return win\nend", "    local diffs = {}\n    for i = 1, #game\
    \ do\n        diffs[i] = math.abs(game[i] - guess[i])\n    end\n    return diffs\n\
    end", "  local scores = {}\n  for i = 1, #game do\n    scores[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return scores\nend", "  local result = {}\n  for i,v in\
    \ ipairs(game) do\n    local diff = math.abs(v - guess[i])\n    table.insert(result,\
    \ diff)\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #game\
    \ do\n    local delta = math.abs(game[i] - guess[i])\n    result[i] = delta\n\
    \  end\n  return result\nend", "  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    local diff = math.abs(game[i] - guess[i])\n    table.insert(result,\
    \ diff)\n  end\n  return result\nend", "  local res = {}\n  for k, v in pairs(game)\
    \ do\n    res[k] = math.abs(v - guess[k])\n  end\n  return res\nend", "    local\
    \ result = {}\n    for i,v in ipairs(game) do\n        result[i] = math.abs(v\
    \ - guess[i])\n    end\n    return result\nend", "    local diff = {}\n    for\
    \ i = 1, #game do\n        diff[i] = math.abs(game[i] - guess[i])\n    end\n \
    \   return diff\nend", "    local result = {}\n    for i, v in ipairs(game) do\n\
    \        result[i] = math.abs(v - guess[i])\n    end\n    return result\nend",
  "    local res = {}\n    for i, v in ipairs(game) do\n        local g = guess[i]\n\
    \        res[i] = math.abs(v - g)\n    end\n    return res\nend", "    local ret\
    \ = {}\n    for idx, value in ipairs(game) do\n        ret[idx] = math.abs(value\
    \ - guess[idx])\n    end\n    return ret\nend", "    local result = {}\n    for\
    \ i, _ in ipairs(game) do\n        local n = math.abs(game[i] - guess[i])\n  \
    \      result[i] = n\n    end\n    return result\nend", "    local result = {}\n\
    \    for i = 1, #game do\n        result[i] = math.abs(game[i] - guess[i])\n \
    \   end\n    return result\nend", "\tlocal result = {}\n\tfor i = 1, #game do\n\
    \t\tresult[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn result\nend", " \
    \ local result = {}\n  for i = 1, #game do\n    local score = game[i]\n    local\
    \ gue = guess[i]\n    local diff = math.abs(score - gue)\n    result[i] = diff\n\
    \  end\n  return result\nend", "\tlocal res = {}\n\tfor i = 1, #game do\n\t\t\
    if game[i] == guess[i] then\n\t\t\tres[i] = 0\n\t\telse\n\t\t\tres[i] = math.abs(game[i]\
    \ - guess[i])\n\t\tend\n\tend\n\treturn res\nend", "  local t = {}\n  for i =\
    \ 1, #game do\n    t[i] = math.abs(game[i] - guess[i])\n  end\n  return t\nend",
  "    local result = {}\n    for i = 1, #game do\n        local diff = math.abs(game[i]\
    \ - guess[i])\n        result[i] = diff\n    end\n    return result\nend", " \
    \ local result = {}\n  for i = 1, #game do\n    local diff = math.abs(game[i]\
    \ - guess[i])\n    result[i] = diff\n  end\n  return result\nend", "    local\
    \ t = {}\n    for i = 1, #game do\n        local x = math.abs(game[i] - guess[i])\n\
    \        table.insert(t, x)\n    end\n    return t\nend", "  local result = {}\n\
    \  for k,v in pairs(game) do\n    result[k] = math.abs(v - guess[k])\n  end\n\
    \  return result\nend", "   local result = {}\n   for k,v in pairs(game) do\n\
    \      if game[k] ~= guess[k] then\n         result[k] = math.abs(game[k] - guess[k])\n\
    \      else\n         result[k] = 0\n      end\n   end\n   return result\nend",
  "  local result = {}\n  for i, g in ipairs(guess) do\n    result[i] = math.abs(game[i]\
    \ - g)\n  end\n  return result\nend", "  return Array.map(Array.zip(game, guess),\
    \ function(pair)\n    return math.abs(pair[1] - pair[2])\n  end)\nend", "\tlocal\
    \ diff = {}\n\tfor i = 1, #game do\n\t\tdiff[i] = math.abs(game[i] - guess[i])\n\
    \tend\n\treturn diff\nend", "    local results = {}\n    for i,n in ipairs(game)\
    \ do\n        if n == guess[i] then\n            results[i] = 0\n        else\n\
    \            results[i] = math.abs(n - guess[i])\n        end\n    end\n    return\
    \ results\nend", "    local result = {}\n    for idx, val in ipairs(game) do\n\
    \        result[idx] = math.abs(val - guess[idx])\n    end\n    return result\n\
    end", "    local result = {}\n    for i, v in ipairs(game) do\n        result[i]\
    \ = math.abs(v - guess[i])\n    end\n    return result\nend", "    local results\
    \ = {}\n    for i,n in ipairs(game) do\n        results[i] = math.abs(n - guess[i])\n\
    \    end\n    return results\nend", "  local res = {}\n  for k, v in pairs(game)\
    \ do\n    res[k] = math.abs(game[k] - guess[k])\n  end\n  return res\nend", " \
    \   local res = {}\n    for i, v in ipairs(game) do\n        res[i] = math.abs(game[i]\
    \ - guess[i])\n    end\n    return res\nend", "    local offBy = {}\n    for i\
    \ = 1, #game do\n        offBy[i] = math.abs(game[i] - guess[i])\n    end\n  \
    \  return offBy\nend", "  local out = {}\n  for k, v in pairs(game) do\n    local\
    \ diff = v - guess[k]\n    out[k] = diff < 0 and diff * -1 or diff\n  end\n  return\
    \ out\nend", "  local t = {}\n  for i, v in ipairs(game) do\n    if v == guess[i]\
    \ then\n      t[i] = 0\n    else\n      t[i] = math.abs(v - guess[i])\n    end\n\
    \  end\n  return t\nend", "\tlocal diff = {}\n\tfor k,v in pairs(game) do\n\t\t\
    if game[k] > guess[k] then\n\t\t\ttable.insert(diff, game[k] - guess[k])\n\t\t\
    elseif game[k] < guess[k] then\n\t\t\ttable.insert(diff, guess[k] - game[k])\n\
    \t\telse\n\t\t\ttable.insert(diff, 0)\n\t\tend\n\tend\n\treturn diff\nend", " \
    \ local result = {}\n  for i = 1, #game do\n    local diff = game[i] - guess[i]\n\
    \    result[i] = math.abs(diff)\n  end\n  return result\nend", "    local r =\
    \ {}\n    for i,v in ipairs(game) do\n        r[i] = math.abs(v - guess[i])\n\
    \    end\n    return r\nend", "  local result = {}\n  for i = 1, #game do\n  \
    \  result[i] = math.abs(game[i] - guess[i])\n  end\n  return result\nend", " \
    \ local result = {}\n  for i = 1, #game do\n    result[i] = math.abs(game[i] -\
    \ guess[i])\n  end\n  return result\nend", "    local result = {}\n    for k,\
    \ v in pairs(game) do\n        if game[k] == guess[k] then\n            result[k]\
    \ = 0\n        else\n            result[k] = math.abs(game[k] - guess[k])\n  \
    \      end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ i = 1, #game do\n        result[i] = math.abs(game[i] - guess[i])\n    end\n\
    \    return result\nend", "  local r = {}\n  for i = 1, #game do\n    r[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return r\nend", "  -- code here\nend", "  local r = {}\n\
    \  for i,v in ipairs(game) do\n    r[i] = math.abs(v - guess[i])\n  end\n  return\
    \ r\nend", "    local result = {}\n    for k,v in pairs(game) do\n        result[k]\
    \ = math.abs(v - guess[k])\n    end\n    return result\nend", "    local r = {}\n\
    \    for k, v in ipairs(game) do\n        r[k] = math.abs(v - guess[k])\n    end\n\
    \    return r\nend", "    local arr = {}\n    for i = 1, #game do\n        if\
    \ game[i] == guess[i] then\n            arr[i] = 0\n        else\n           \
    \ arr[i] = math.abs(game[i] - guess[i])\n        end\n    end\n    return arr\n\
    end", "\tlocal output = {}\n\tfor i = 1, #game do\n\t\toutput[i] = math.abs(game[i]\
    \ - guess[i])\n\tend\n\treturn output\nend", "\tlocal out = {}\n\tfor k, v in\
    \ pairs(game) do\n\t\tif game[k] == guess[k] then\n\t\t\tout[k] = 0\n\t\telse\n\
    \t\t\tout[k] = math.abs(game[k] - guess[k])\n\t\tend\n\tend\n\treturn out\nend",
  "  local table = {}\n  for i=1, #game do\n    if game[i] == guess[i] then\n    \
    \  table[i] = 0\n    else\n      table[i] = math.abs(game[i] - guess[i])\n   \
    \ end\n  end\n  return table\nend", "  local res = {}\n  for i = 1, #game do\n\
    \    res[i] = math.abs(game[i] - guess[i])\n  end\n  return res\nend", "\tlocal\
    \ res = {}\n\tfor i = 1, #game do\n\t\tres[i] = math.abs(game[i] - guess[i])\n\
    \tend\n\treturn res\nend", "    local result = {}\n    for i = 1, #game do\n \
    \       if game[i] > guess[i] then\n            result[i] = game[i] - guess[i]\n\
    \        elseif game[i] < guess[i] then\n            result[i] = guess[i] - game[i]\n\
    \        else\n            result[i] = 0\n        end\n    end\n    return result\n\
    end", "\tlocal res = {}\n\tfor i = 1, #game do\n\t\tres[i] = math.abs(game[i]\
    \ - guess[i])\n\tend\n\treturn res\nend", "    local result = {}\n    for i,v\
    \ in ipairs(game) do\n        result[i] = math.abs(v - guess[i])\n    end\n  \
    \  return result\nend", "  local diffs = {}\n  for n = 1, #game do\n    diffs[n]\
    \ = math.abs(game[n] - guess[n])\n  end\n  return diffs\nend", "  local array\
    \ = {}\n  for i,v in ipairs(game) do\n    if game[i] == guess[i] then\n      array[i]\
    \ = 0\n    elseif game[i] ~= guess[i] then\n      array[i] = math.abs(game[i]\
    \ - guess[i])\n    end\n  end\n  return array\nend", "    local results = {}\n\
    \    for i = 1, #game do\n        local diff = game[i] - guess[i]\n        results[i]\
    \ = math.abs(diff)\n    end\n    return results\nend", "  if #game ~= #guess then\
    \ return \"error, arrays must be the same length\" end\n  local result = {}\n\
    \  for i = 1, #game do\n    if game[i] < 0 or guess[i] < 0 then return \"error,\
    \ no negative numbers allowed\" end\n    result[i] = math.abs(game[i] - guess[i])\n\
    \  end\n  return result\nend", "  local out = {}\n  for i = 1, #game do\n    if\
    \ game[i] == guess[i] then\n      out[i] = 0\n    else\n      out[i] = math.abs(game[i]\
    \ - guess[i])\n    end\n  end\n  return out\nend", "    local answer = {}\n  \
    \  local i = 1\n    while i <= #game do\n        answer[i] = math.abs(game[i]\
    \ - guess[i])\n        i = i + 1\n    end\n    return answer\nend", "  local diffs\
    \ = {}\n  for i, match in ipairs(game) do\n    local diff = math.abs(match - guess[i])\n\
    \    table.insert(diffs, diff)\n  end\n  return diffs\nend", "    local result\
    \ = {}\n    for idx, value in ipairs(game) do\n        result[idx] = math.abs(value\
    \ - guess[idx])\n    end\n    return result\nend", "  local result = {}\n  for\
    \ i,v in ipairs(game) do\n    result[i] = math.abs(game[i] - guess[i])\n  end\n\
    \  return result\nend", "    local results = {}\n    for i = 1, #game do\n   \
    \     results[i] = math.abs(game[i] - guess[i])\n    end\n    return results\n\
    end", "  local results = {}\n  for i,v in ipairs(game) do\n    results[i] = math.abs(v\
    \ - guess[i])\n  end\n  return results\nend", "  local diffs = {}\n  for n,v in\
    \ ipairs(game) do\n    diffs[n] = math.abs(v - guess[n])\n  end\n  return diffs\n\
    end", "  local result = {}\n  for i = 1, #game do\n    result[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return result\nend", "    local re = {}\n    for i,v in\
    \ ipairs(game) do\n        re[i] = math.abs(v - guess[i])\n    end\n    return\
    \ re\nend", "\tlocal t = {}\n\tlocal i = 1\n\twhile (i <= #game) do\n\t\tlocal\
    \ g = math.abs(game[i] - guess[i])\n\t\tt[i] = g\n\t\ti = i + 1\n\tend\n\treturn\
    \ t\nend", "  local result = {}\n  for i = 1, #game do\n    result[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return result\nend", "    local result = {}\n    for i,\
    \ _ in ipairs(game) do\n        local diff = math.abs(game[i] - guess[i])\n  \
    \      result[i] = diff\n    end\n    return result\nend", "    local res = {}\n\
    \    for i = 1, #game do\n        local delta = game[i] - guess[i]\n        if\
    \ delta < 0 then delta = -delta end\n        res[i] = delta\n    end\n    return\
    \ res\nend", "  local result = {}\n  for i = 1, #game do\n    local g = game[i]\n\
    \    local r = guess[i]\n    result[i] = math.abs(g - r)\n  end\n  return result\n\
    end", "  local result = {}\n  for i = 1, #game do\n    result[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return result\nend", "  local score = {}\n  for i = 1,\
    \ #game do\n    local diff = math.abs(game[i] - guess[i])\n    table.insert(score,\
    \ diff)\n  end\n  return score\nend", "\tif #game ~= #guess then return nil end\n\
    \tlocal res = {}\n\tfor i=1,#game do\n\t\tres[i] = math.abs(game[i] - guess[i])\n\
    \tend\n\treturn res\nend", "  local result = {}\n  for i = 1, #game do\n    local\
    \ diff = game[i] - guess[i]\n    result[i] = math.abs(diff)\n  end\n  return result\n\
    end", "\tlocal result = {}\n\tfor i, v in ipairs(game) do\n\t\tif v == guess[i]\
    \ then\n\t\t\tresult[i] = 0\n\t\telse\n\t\t\tresult[i] = math.abs(v - guess[i])\n\
    \t\tend\n\tend\n\treturn result\nend", "  local out = {}\n  for i, n in ipairs(game)\
    \ do\n    local diff = math.abs(n - guess[i])\n    out[i] = diff\n  end\n  return\
    \ out\nend", "  local points = {}\n  for k,v in pairs(game) do\n    table.insert(points,\
    \ math.abs(v - guess[k]))\n  end\n  return points\nend\nprint(table.concat(compare({1,2,3,4,5,1},{1,2,3,4,2,-2}),\
    \ \", \"))\nprint(table.concat(compare({0,5,0,0,0,4},{4,1,1,0,0,-2}), \", \"))\n\
    print(table.concat(compare({0,0,1,0,0,0},{4,4,2,2,2,2}), \", \"))\nprint(table.concat(compare({0,0,0,0,0,0},{4,4,4,4,4,4}),\
    \ \", \"))\nprint(table.concat(compare({0,0,0,0,0,0},{0,0,0,0,0,0}), \", \"))\n\
    print(table.concat(compare({1,2,3,4,5,1},{0,0,0,0,0,0}), \", \"))\nprint(table.concat(compare({3,4,5,1,2,3},{4,4,4,4,4,4}),\
    \ \", \"))\nprint(table.concat(compare({0,0,0,0,0,0},{-4,-4,-4,-4,-4,-4}), \"\
    , \"))\nprint(table.concat(compare({1,2,3,4,5,6},{2,2,2,2,2,2}), \", \"))\nprint(table.concat(compare({3,3,3,3,3,3},{2,2,2,2,2,2}),\
    \ \", \"))\nprint(table.concat(compare({1,2,3,4,5,6},{1,1,1,1,1,1}), \", \"))\n\
    print(table.concat(compare({0,0,0,0,0,0},{0", "\tlocal diffs = {}\n\tfor i = 1,\
    \ #game do\n\t\tdiffs[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn diffs\n\
    end", "  local result = {}\n  for i,v in ipairs(game) do\n    result[i] = math.abs(v\
    \ - guess[i])\n  end\n  return result\nend", "    local result = {}\n    for i\
    \ = 1, #game do\n        local currentDiff = math.abs(game[i] - guess[i])\n  \
    \      table.insert(result, currentDiff)\n    end\n    return result\nend", " \
    \ local scores = {}\n  for i = 1, #game do\n    scores[i] = math.abs(game[i] -\
    \ guess[i])\n  end\n  return scores\nend", "    local result = {}\n    for i =\
    \ 1, #game do\n        result[i] = math.abs(game[i] - guess[i])\n    end\n   \
    \ return result\nend", "    if #game ~= #guess then return 0 end\n    local diff\
    \ = {}\n    for i = 1, #game do\n        diff[i] = math.abs(game[i] - guess[i])\n\
    \    end\n    return diff\nend", "    local result = {}\n    for i = 1, #game\
    \ do\n        local diff = game[i] - guess[i]\n        if diff < 0 then\n    \
    \        diff = diff * -1\n        end\n        result[i] = diff\n    end\n  \
    \  return result\nend", "\tresult = {}\n\tfor i = 1, #game do\n\t\tresult[i] =\
    \ math.abs(game[i] - guess[i])\n\tend\n\treturn result\nend", "  local result\
    \ = {}\n  for i, x in ipairs(game) do\n    result[i] = math.abs(x - guess[i])\n\
    \  end\n  return result\nend", "   local result = {}\n   for i = 1, #game do\n\
    \      local x = game[i]\n      local y = guess[i]\n      result[i] = math.abs(x\
    \ - y)\n   end\n   return result\nend", "    local res = {}\n    for i = 1, #game\
    \ do\n        local diff = game[i] - guess[i]\n        if diff < 0 then\n    \
    \        diff = -diff\n        end\n        res[i] = diff\n    end\n    return\
    \ res\nend", "    local result = {}\n    for i = 1, #game do\n        local diff\
    \ = game[i] - guess[i]\n        result[i] = diff < 0 and -diff or diff\n    end\n\
    \    return result\nend", "  local result = {}\n  for i = 1, #game do\n    result[i]\
    \ = math.abs(game[i] - guess[i])\n  end\n  return result\nend", "    local result\
    \ = {}\n    for i = 1, #game do\n        local val = math.abs(game[i] - guess[i])\n\
    \        result[i] = val == 0 and 0 or val\n    end\n    return result\nend",
  "\tlocal result = {}\n\tfor i = 1, #game do\n\t\tresult[i] = math.abs(game[i] -\
    \ guess[i])\n\tend\n\treturn result\nend", "\tlocal result = {}\n\tfor i = 1,\
    \ #game do\n\t\tresult[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn result\n\
    end", "  local result = {}\n  for i, v in ipairs(game) do\n    local diff = math.abs(v\
    \ - guess[i])\n    table.insert(result, diff)\n  end\n  return result\nend", " \
    \ local s = {}\n  for i = 1, #game do\n    s[i] = math.abs(game[i] - guess[i])\n\
    \  end\n  return s\nend", "  \n  --[[ Using a bit of trig, \n  -- each number\
    \ can be represented as a vector,\n  -- and the distance between the two is just\
    \ a dot product ]]--\n  local function distance(a,b) return math.abs(a-b) end",
  "    local result = {}\n    for i = 1, #game do\n        local diff = math.abs(game[i]\
    \ - guess[i])\n        result[i] = diff == 0 and 0 or diff\n    end\n    return\
    \ result\nend", "    local result = {}\n    for i = 1, #game do\n        result[i]\
    \ = math.abs(game[i] - guess[i])\n    end\n    return result\nend", "\tlocal result\
    \ = {}\n\tfor i, v in ipairs(game) do\n\t\tresult[i] = math.abs(v - guess[i])\n\
    \tend\n\treturn result\nend", "    local result = {}\n    for i = 1, #game do\n\
    \        result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\n\
    end", "  local result = {}\n  for i,v in ipairs(game) do\n    result[i] = math.abs(v\
    \ - guess[i])\n  end\n  return result\nend", "  local result = {}\n  for index\
    \ = 1, #game do\n    result[index] = math.abs(game[index] - guess[index])\n  end\n\
    \  return result\nend", "    local solution = {}\n    for i = 1, #game do\n  \
    \      solution[i] = math.abs(game[i] - guess[i])\n    end\n    return solution\n\
    end", "  local res = {}\n  for k, v in pairs(game) do\n    local diff = math.abs(v\
    \ - guess[k])\n    res[k] = diff\n  end\n  return res\nend", "    local result\
    \ = {}\n    for i = 1, #game do\n        local diff = math.abs(game[i] - guess[i])\n\
    \        table.insert(result, diff)\n    end\n    return result\nend", "\tlocal\
    \ result = {}\n\tfor i = 1, #game do\n\t\tlocal diff = math.abs(game[i] - guess[i])\n\
    \t\tresult[i] = diff\n\tend\n\treturn result\nend", "    local result = {}\n \
    \   for i, v in ipairs(game) do\n        result[i] = math.abs(v - guess[i])\n\
    \    end\n    return result\nend", "  local result = {}\n  for i,v in ipairs(game)\
    \ do\n    if v == guess[i] then\n      result[i] = 0\n    else\n      result[i]\
    \ = math.abs(v - guess[i])\n    end\n  end\n  return result\nend", "  local values\
    \ = {}\n  for i = 1, #game do\n    values[i] = math.abs(game[i] - guess[i])\n\
    \  end\n  return values\nend", "  local game_len = #game\n  local guess_len =\
    \ #guess\n  local result = {}\n  if game_len ~= guess_len then\n    return nil\n\
    \  end\n  for i = 1, game_len do\n    result[i] = math.abs(game[i] - guess[i])\n\
    \  end\n  return result\nend", "    local result = {}\n    for k,v in pairs(game)\
    \ do\n        if v == guess[k] then\n            result[k] = 0\n        else\n\
    \            result[k] = math.abs(v - guess[k])\n        end\n    end\n    return\
    \ result\nend", "    local results = {}\n    for i,v in ipairs(game) do\n    \
    \    results[i] = v - guess[i]\n        if results[i] < 0 then\n            results[i]\
    \ = -results[i]\n        end\n    end\n    return results\nend", "    local output\
    \ = {}\n    for k, v in pairs(game) do\n        if v == guess[k] then\n      \
    \      output[k] = 0\n        else\n            output[k] = math.abs(v - guess[k])\n\
    \        end\n    end\n    return output\nend", "    local result = {}\n    for\
    \ i = 1, #game do\n        local diff = math.abs(game[i] - guess[i])\n       \
    \ result[i] = diff\n    end\n    return result\nend", "    local answer = {}\n\
    \    for i, j in ipairs(game) do\n        local result = math.abs(j - guess[i])\n\
    \        table.insert(answer, result)\n    end\n    return answer\nend", "   \
    \ local result = {}\n    for i = 1, #game do\n        local diff = math.abs(game[i]\
    \ - guess[i])\n        table.insert(result, diff)\n    end\n    return result\n\
    end", "  --[[\n  local result = {}\n  for i = 1, #game do\n    result[i] = math.abs(game[i]\
    \ - guess[i])\n  end\n  return result\n  --]]\n  return _.map(game, function(v,i)\
    \ return math.abs(v - guess[i]) end)\nend", "    local diff = {}\n    for i =\
    \ 1, #game do\n        diff[i] = math.abs(game[i] - guess[i])\n    end\n    return\
    \ diff\nend", "  local results = {}\n  for i = 1, #game do\n    if game[i] ==\
    \ guess[i] then\n      results[i] = 0\n    else\n      results[i] = math.abs(game[i]\
    \ - guess[i])\n    end\n  end\n  return results\nend", "  local arr = {}\n  for\
    \ i, v in ipairs(game) do\n    if v == guess[i] then\n      arr[i] = 0\n    else\n\
    \      arr[i] = math.abs(guess[i] - v)\n    end\n  end\n  return arr\nend", " \
    \   --\n    -- check that they are of equal length\n    --\n    if ( #game ~=\
    \ #guess ) then\n        return false\n    end\n    local out = {}\n    for k,\
    \ v in pairs(game) do\n        out[k] = math.abs(v - guess[k])\n    end\n    return\
    \ out\nend", "    local res = {}\n    for i, v in ipairs(game) do\n        res[i]\
    \ = math.abs(v - guess[i])\n    end\n    return res\nend", "    local a = {}\n\
    \    for i = 1, #game do\n        if game[i] > guess[i] then\n            a[i]\
    \ = game[i] - guess[i]\n        elseif game[i] < guess[i] then\n            a[i]\
    \ = guess[i] - game[i]\n        else\n            a[i] = 0\n        end\n    end\n\
    \    return a\nend", "    local result = {}\n    for i = 1, #game do\n       \
    \ result[i] = math.abs(game[i] - guess[i])\n    end\n    return result\nend",
  "    -- TODO\nend", "    local result = {}\n    for idx,_ in ipairs(game) do\n \
    \       local num = game[idx] - guess[idx]\n        if num < 0 then\n        \
    \    num = -1 * num\n        end\n        table.insert(result, num)\n    end\n\
    \    return result\nend", "\tlocal results = {}\n\tfor i, _ in ipairs(game) do\n\
    \t\tresults[i] = math.abs(game[i] - guess[i])\n\tend\n\treturn results\nend",
  "  local res = {}\n  for i = 1, #game do\n    res[i] = math.abs(game[i] - guess[i])\n\
    \  end\n  return res\nend", "   local results = {}\n   for i = 1, #game do\n \
    \     results[i] = math.abs(game[i] - guess[i])\n   end\n   return results\nend",
  "  local r = {}\n  for i = 1, #game do\n    r[i] = math.abs(game[i] - guess[i])\n\
    \  end\n  return r\nend", "    local res = {}\n    for i,_ in ipairs(game) do\n\
    \        res[i] = math.abs(game[i] - guess[i])\n    end\n    return res\nend",
  "    local result = {}\n    for i = 1, #game do\n        if game[i] == guess[i]\
    \ then\n            result[i] = 0\n        else\n            result[i] = math.abs(game[i]\
    \ - guess[i])\n        end\n    end\n    return result\nend", "  local res = {}\n\
    \  for i, v in ipairs(game) do\n    res[i] = math.abs(v - guess[i])\n  end\n \
    \ return res\nend", "  local result = {}\n  for i = 1, #game do\n    result[i]\
    \ = math.abs(game[i] - guess[i])\n  end\n  return result\nend", "    local ret\
    \ = {}\n    for idx, value in ipairs(game) do\n        ret[idx] = math.abs(value\
    \ - guess[idx])\n    end\n    return ret\nend", "\tlocal result = {}\n\tfor k,v\
    \ in pairs(game) do\n\t\tresult[k] = math.abs(game[k] - guess[k])\n\tend\n\treturn\
    \ result\nend", "    local result = {}\n    for index,value in ipairs(game) do\n\
    \        result[index] = math.abs(value - guess[index])\n    end\n    return result\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

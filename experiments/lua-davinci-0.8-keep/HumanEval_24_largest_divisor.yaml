name: HumanEval_24_largest_divisor
language: lua
prompt: "-- For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n-- >>> largest_divisor(15)\n-- 5\nlocal function largest_divisor(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = largest_divisor\n\
  \    lu.assertEquals(candidate(3), 1)\n    lu.assertEquals(candidate(7), 1)\n  \
  \  lu.assertEquals(candidate(10), 5)\n    lu.assertEquals(candidate(100), 50)\n\
  \    lu.assertEquals(candidate(49), 7)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local m = math.floor(math.sqrt(n))\n    while m > 1 do\n      \
    \  if n % m == 0 then\n            return m\n        end\n        m = m - 1\n\
    \    end\n    return m\nend", "  local largest = 1\n  local i = 2\n  while i <\
    \ n do\n    if n % i == 0 then\n      largest = i\n    end\n    i = i + 1\n  end\n\
    \  return largest\nend", "  local m = n / 2\n  while m > 1 do\n    if n % m ==\
    \ 0 then\n      return m\n    end\n    m = m - 1\n  end\n  return 1\nend", '    local
    m = math.floor(math.sqrt(n))', "\tlocal d = math.floor(n / 2)\n\twhile (d > 1)\
    \ do\n\t\tif n % d == 0 then\n\t\t\treturn d\n\t\tend\n\t\td = d - 1\n\tend\n\t\
    return 1\nend", "    local i = 2\n    while n % i ~= 0 do\n        i = i + 1\n\
    \    end\n    return i\nend", "  local d = 2\n  while n % d ~= 0 do\n    d = d\
    \ + 1\n  end\n  return d\nend", "    local i = n-1\n    while i > 0 do\n     \
    \   if n % i == 0 then\n            return i\n        end\n        i = i - 1\n\
    \    end\n    return nil\nend", "    if n <= 1 then\n        return 0\n    end\n\
    \    local i = 2\n    while n % i ~= 0 do\n        i = i + 1\n    end\n    return\
    \ i\nend", "\tlocal d = 2\n\tlocal largest = 1\n\twhile d * d <= n do\n\t\tif\
    \ n % d == 0 then\n\t\t\tlargest = d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn\
    \ largest\nend", "  return (n % 2 == 0) and (n/2) or math.floor(n/3)\nend", "\t\
    if n == 0 then return 0 end\n\tfor d = n - 1, 2, -1 do\n\t\tif n % d == 0 then\
    \ return d end\n\tend\n\treturn n\nend", "  local divisor = 2\n  while n > divisor\
    \ do\n    if n % divisor == 0 then\n      return divisor\n    end\n    divisor\
    \ = divisor + 1\n  end\n  return nil\nend", "    if n == 0 then return 0 end\n\
    \    if n == 1 then return 1 end\n    local max = math.floor(n/2)\n    local i\
    \ = max\n    while i > 1 do\n        if n % i == 0 then return i end\n       \
    \ i = i - 1\n    end\n    return 1\nend", "  -- Use the Euclidean algorithm. \
    \ If n is not prime, then n = a*b where\n  -- a < n and b < n.  If a > b, then\
    \ a = c*d where c < a and d < a.\n  -- We reduce the problem to finding the largest\
    \ divisor of b.\n  local a = n\n  local c = math.sqrt(n)\n  -- Check whether sqrt(n)\
    \ is integral.\n  local d = math.floor(c)\n  if c == d then\n    -- sqrt(n) is\
    \ integral.  So is d.\n    return d\n  end\n  -- sqrt(n) is not integral.  So\
    \ is c.\n  -- Find the largest d such that n = c*d.\n  local d = math.floor(n/c)\n\
    \  while n % d ~= 0 do\n    d = d - 1\n  end\n  return d\nend", "    if n == 1\
    \ then\n        return 1\n    end\n    local d = 2\n    while n % d ~= 0 do\n\
    \        d = d + 1\n    end\n    return d\nend", "    local d = math.floor(n /\
    \ 2)\n    while n % d ~= 0 do\n        d = d - 1\n    end\n    return d\nend",
  "    local ld = n - 1\n    while n % ld ~= 0 do\n        ld = ld - 1\n    end\n\
    \    return ld\nend", "  local largest_divisor_so_far = 1\n  for i = 2, math.floor(n\
    \ / 2) do\n    if n % i == 0 then\n      largest_divisor_so_far = i\n    end\n\
    \  end\n  return largest_divisor_so_far\nend", "  local divisor = n - 1\n  while\
    \ (divisor > 0) do\n    if (n % divisor == 0) then\n      return divisor\n   \
    \ end\n    divisor = divisor - 1\n  end\n  return nil\nend", "  for i=math.floor(n/2),1,-1\
    \ do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return 1\nend",
  "\tlocal i = 1\n\twhile i < n do\n\t\ti = i + 1\n\t\tif n % i == 0 then\n\t\t\t\
    return i\n\t\tend\n\tend\n\treturn n\nend", "\tlocal d = 2\n\twhile d < n do\n\
    \t\tif n % d == 0 then\n\t\t\treturn d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn\
    \ 1\nend", '    local result = 1', "\tfor i = n-1, 1, -1 do\n\t\tif n % i == 0\
    \ then\n\t\t\treturn i\n\t\tend\n\tend\nend", "  -- Note: we could try more efficiently\
    \ by looping until n^2, but this is good enough\n  -- for the purposes of this\
    \ exercise\n  local result = 1\n  local limit = n-1\n  for i=2,limit do\n    if\
    \ n % i == 0 then\n      result = i\n    end\n  end\n  return result\nend", " \
    \   local divisor = n - 1\n    while n % divisor ~= 0 do\n        divisor = divisor\
    \ - 1\n    end\n    return divisor\nend", "\tlocal lim = math.sqrt(n)\n\tfor d\
    \ = 2, lim do\n\t\tif n % d == 0 then\n\t\t\treturn n / d\n\t\tend\n\tend\n\t\
    return 1\nend", "    for i = n - 1, 2, -1 do\n        if n % i == 0 then\n   \
    \         return i\n        end\n    end\n    return 1\nend", "    local i = 2\n\
    \    local d = n", "    if (n % 2 == 0) then\n        return n / 2\n    end\n\
    \    local m = math.floor(math.sqrt(n))\n    for i = m, 2, -1 do\n        if (n\
    \ % i == 0) then\n            return i\n        end\n    end\n    return 1\nend",
  "  local largest_divisor = 1\n  for i = 2, n - 1 do\n    if n % i == 0 then\n  \
    \    largest_divisor = i\n    end\n  end\n  return largest_divisor\nend", "  \
    \  for d = math.floor(n/2), 2, -1 do\n        if math.fmod(n, d) == 0 then\n \
    \           return d\n        end\n    end\n    return 1\nend", "  return n/2\n\
    end", "    for i = n-1, 1, -1 do\n        if n % i == 0 then\n            return\
    \ i\n        end\n    end\nend", "  for i=n-1,1,-1 do\n    if n % i == 0 then\n\
    \      return i\n    end\n  end\n  return nil\nend", "    local divisor = math.floor(n\
    \ / 2)\n    while divisor > 1 do\n        if n % divisor == 0 then\n         \
    \   return divisor\n        end\n        divisor = divisor - 1\n    end\n    return\
    \ divisor\nend", "    local d = 2\n    while (n % d) ~= 0 do\n        d = d +\
    \ 1\n    end\n    return d\nend", "  for i = n - 1, 2, -1 do\n    if n % i ==\
    \ 0 then\n      return i\n    end\n  end\n  return 1\nend", "  for i = 2, (n -\
    \ 1) do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return 1\n\
    end", "\tlocal d = 2\n\twhile n % d ~= 0 do\n\t\td = d + 1\n\tend\n\treturn d\n\
    end", "  local b = n - 1\n  while n % b ~= 0 do\n    b = b - 1\n  end\n  return\
    \ b\nend", "  local divisor = n - 1\n  while n % divisor ~= 0 do\n    divisor\
    \ = divisor - 1\n  end\n  return divisor\nend", "    if n % 2 == 0 then\n    \
    \    return n/2\n    end\n    for i = 3, math.sqrt(n), 2 do\n        if n % i\
    \ == 0 then\n            return n/i\n        end\n    end\n    return 1\nend",
  "\tlocal i = 2\n\twhile i <= n do\n\t\tif n % i == 0 then\n\t\t\treturn n / i\n\t\
    \tend\n\t\ti = i + 1\n\tend\n\treturn nil\nend", "\tlocal i\n\tfor i = n-1, 1,\
    \ -1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn nil\n\
    end", "    for i = 2, n - 1 do\n        if n % i == 0 then\n            return\
    \ i\n        end\n    end\n    return 1\nend", "    local divisor = 1\n    while\
    \ (n % divisor) ~= 0 do\n        divisor = divisor + 1\n    end\n    return divisor\n\
    end", "  local d = 2\n  while d < n do\n    if n % d == 0 then\n      return d\n\
    \    end\n    d = d + 1\n  end\n  return 1\nend", "  for i=n-1,2,-1 do\n    if\
    \ n % i == 0 then\n      return i\n    end\n  end\n  return 1\nend", "    local\
    \ i = n - 1\n    while n % i ~= 0 do\n        i = i - 1\n    end\n    return i\n\
    end", "    for i = math.floor(n/2), 2, -1 do\n        if n % i == 0 then\n   \
    \         return i\n        end\n    end\n    return 1\nend", "    return select(2,\
    \ (n):gsub('.(.)(.)*', '%1'))\nend", "\tlocal largest_divisor = 1\n\tfor i = 2,\
    \ n-1 do\n\t\tif n % i == 0 then\n\t\t\tlargest_divisor = i\n\t\tend\n\tend\n\t\
    return largest_divisor\nend", "\t-- This infinite list will include all prime\
    \ numbers\n\tlocal primes = sieve(n)\n\tfor _, x in pairs(primes) do\n\t\tif n\
    \ % x == 0 then\n\t\t\treturn x\n\t\tend\n\tend\nend", "    local d = math.floor(n\
    \ / 2)\n    while (n % d ~= 0) do\n        d = d - 1\n    end\n    return d\n\
    end", '  local largest = 1', "    for i = n - 1, 1, -1 do\n        if n % i ==\
    \ 0 then\n            return i\n        end\n    end\nend", "    local m = 2\n\
    \    while m * m <= n do\n        if n % m == 0 then\n            n = n / m\n\
    \        else\n            m = m + 1\n        end\n    end\n    return n\nend",
  "    for i=2,n-1 do\n        if n % i == 0 then\n            return i\n        end\n\
    \    end\n    return nil\nend", "    if n == 1 then\n        return 1\n    end\n\
    \    local d = 1\n    while d <= math.sqrt(n) do\n        if n % d == 0 then\n\
    \            n = n / d\n        else\n            d = d + 1\n        end\n   \
    \ end\n    return n\nend", "\tlocal i = 2\n\twhile i < n do\n\t\tif n % i == 0\
    \ then\n\t\t\treturn i\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn n\nend", "   \
    \ for i = n - 1, 1, -1 do\n        if n % i == 0 then\n            return i\n\
    \        end\n    end\nend", "    if n % 2 == 0 then\n        return n / 2\n \
    \   end\n    local d = 3\n    while n % d ~= 0 do\n        d = d + 2\n    end\n\
    \    return d\nend", "\tlocal d = 2\n\twhile d < n do\n\t\tif n % d == 0 then\n\
    \t\t\treturn d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn n\nend", "  for i=n-1,1,-1\
    \ do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return 1\nend",
  '    local divisor = math.floor(n / 2)', "  local ld = n - 1\n  while n % ld ~=\
    \ 0 do\n    ld = ld - 1\n  end\n  return ld\nend", "\tlocal divisor = n-1\n\t\
    while divisor > 0 do\n\t\tif n % divisor == 0 then\n\t\t\treturn divisor\n\t\t\
    end\n\t\tdivisor = divisor - 1\n\tend\n\treturn 0\nend", "  return math.floor(n\
    \ / 2)\nend", "    for d = math.floor(n/2), 2, -1 do\n        if n % d == 0 then\n\
    \            return d\n        end\n    end\n    return 1\nend", "\tif n < 2 then\n\
    \t\treturn 1\n\tend\n\tfor i = 2, n do\n\t\tif n % i == 0 then\n\t\t\treturn n\
    \ / i\n\t\tend\n\tend\nend", "\tfor i = math.floor(n/2), 1, -1 do\n\t\tif n %\
    \ i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn 1\nend", "    for i =\
    \ n - 1, 1, -1 do\n        if n % i == 0 then\n            return i\n        end\n\
    \    end\nend", "    local d = 2\n    while d <= n do\n        if n % d == 0 then\n\
    \            n = n/d\n        else\n            d = d + 1\n        end\n    end\n\
    \    return d\nend", "\tif n == 1 then\n\t\treturn 1\n\tend\n\tlocal m = n - 1\n\
    \twhile n % m ~= 0 do\n\t\tm = m - 1\n\tend\n\treturn m\nend", "    for i=n-1,\
    \ 1, -1 do\n        if n % i == 0 then\n            return i\n        end\n  \
    \  end\nend", "  if n % 2 == 0 then\n    return largest_divisor(n/2)\n  end\n\
    \  for i = 3, math.sqrt(n), 2 do\n    if n % i == 0 then\n      return largest_divisor(n/i)\n\
    \    end\n  end\n  return n\nend", "\tfor i = 1, n do\n\t\tif n % i == 0 then\n\
    \t\t\tlocal x = n/i\n\t\t\tif x == 1 then\n\t\t\t\treturn x\n\t\t\telse\n\t\t\t\
    \treturn x\n\t\t\tend\n\t\tend\n\tend\nend", "    local ldiv = 1\n    for i =\
    \ 1, math.sqrt(n) do\n        if n % i == 0 then\n            if i > ldiv then\n\
    \                ldiv = i\n            end\n            if n / i > ldiv then\n\
    \                ldiv = n / i\n            end\n        end\n    end\n    return\
    \ ldiv\nend", "    for i = math.floor(n / 2), 1, -1 do\n        if math.fmod(n,\
    \ i) == 0 then\n            return i\n        end\n    end\n    return 1\nend",
  "    if n < 2 then\n        return 1\n    end\n    local largest = 1\n    for i\
    \ = 2, n - 1 do\n        if n % i == 0 then\n            largest = i\n       \
    \ end\n    end\n    return largest\nend", "    for i=n-1, 2, -1 do\n        if\
    \ n % i == 0 then\n            return i\n        end\n    end\n    return 1\n\
    end", "  for i=n-1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n\
    \  end\n  return 1\nend", "    local i = math.floor(n/2)\n    while n % i ~= 0\
    \ do\n        i = i - 1\n    end\n    return i\nend", "    for i = n - 1, 1, -1\
    \ do\n        if n % i == 0 then\n            return i\n        end\n    end\n\
    end", "    local i = n\n    while i > 0 do\n        if n % i == 0 then\n     \
    \       return i\n        end\n        i = i - 1\n    end\nend", "\tif n > 1 then\n\
    \t\tlocal d = 2\n\t\twhile n%d > 0 do\n\t\t\td = d + 1\n\t\tend\n\t\treturn d\n\
    \telse\n\t\treturn 0\n\tend\nend", "\tlocal i = 2\n\twhile i <= n do\n\t\tif n\
    \ % i == 0 then\n\t\t\treturn n / i\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn 1\n\
    end", "    if n % 2 == 0 then\n        return n / 2\n    end\n    local divisor\
    \ = 3\n    while n % divisor ~= 0 do\n        divisor = divisor + 2\n    end\n\
    \    return divisor\nend", "\tlocal divisor = 2\n\twhile (n % divisor ~= 0) do\n\
    \t\tdivisor = divisor + 1\n\tend\n\treturn divisor\nend", "    for i = n - 1,\
    \ 1, -1 do\n        if n % i == 0 then\n            return i\n        end\n  \
    \  end\nend", "  return (n//2)\nend", "  local divisor = n-1\n  while n % divisor\
    \ ~= 0 do\n    divisor = divisor - 1\n  end\n  return divisor\nend", "    if n\
    \ == 1 then\n        return 1\n    end\n    local d = 2\n    while n % d ~= 0\
    \ do\n        d = d + 1\n    end\n    return d\nend", "\tlocal max = math.floor(n\
    \ / 2)\n\tfor i = max, 2, -1 do\n\t\tif math.fmod(n, i) == 0 then\n\t\t\treturn\
    \ i\n\t\tend\n\tend\n\treturn 1\nend", "  for i = n - 1, 2, -1 do\n    if n %\
    \ i == 0 then\n      return i\n    end\n  end\n  return 1\nend", "  local divisor\
    \ = n\n  while not (divisor == 1) do\n    divisor = divisor - 1\n    if n % divisor\
    \ == 0 then return divisor end\n  end\n  return 1\nend", "  local largest_d =\
    \ 1\n  for i = 2, n-1 do\n    if n % i == 0 then\n      largest_d = i\n    end\n\
    \  end\n  return largest_d\nend", "  local max = math.floor(n / 2)\n  for i =\
    \ max, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return\
    \ 1\nend", "    local max_divisor = math.floor(n/2)\n    for i = max_divisor,\
    \ 2, -1 do\n        if n % i == 0 then\n            return i\n        end\n  \
    \  end\n    return 1\nend", "    local divisor = math.floor(n / 2)\n    while\
    \ n % divisor ~= 0 do\n        divisor = divisor - 1\n    end\n    return divisor\n\
    end", "  for i = n-1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n\
    \  end\n  return n\nend", "\tlocal d = 1\n\twhile n % d ~= 0 do\n\t\td = d + 1\n\
    \tend\n\treturn d\nend", "  for i = math.floor(n/2), 1, -1 do\n    if (n % i ==\
    \ 0) then\n      return i\n    end\n  end\n  return n\nend", "    local result\
    \ = 1\n    local i = 2\n    while i*i <= n do\n        if n % i == 0 then\n  \
    \          result = i\n        end\n        i = i + 1\n    end\n    return result\n\
    end", "    for i = math.floor(n / 2), 1, -1 do\n        if n % i == 0 then\n \
    \           return i\n        end\n    end\n    return n\nend", "  for i = n -\
    \ 1, 1, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return\
    \ 1\nend", "    for i = n - 1, 2, -1 do\n        if n % i == 0 then\n        \
    \    return i\n        end\n    end\n    return 1\nend", "\tfor i = n - 1, 2,\
    \ -1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn 1\n\
    end", "    local half = n // 2\n    for i = half, 2, -1 do\n        if n % i ==\
    \ 0 then\n            return i\n        end\n    end\n    return 1\nend", "  \
    \  local divisor = n - 1\n    while true do\n        if n % divisor == 0 then\n\
    \            return divisor\n        end\n        divisor = divisor - 1\n    end\n\
    end", "  for i = 1, n do\n    if n % i == 0 then\n      n = i\n    end\n  end\n\
    \  return n\nend", "    for i = n - 1, 2, -1 do\n        if n % i == 0 then\n\
    \            return i\n        end\n    end\n    return 0\nend", "  for i = 2,\
    \ n do\n    if n % i == 0 then\n      return n / i\n    end\n  end\n  return 1\n\
    end", "  for i = n-1, 1, -1 do\n    if(i % n == 0) then\n      return i\n    end\n\
    \  end\nend", "\t--find the largest divisor\n\tfor i = n-1, 1, -1 do\n\t\tif n\
    \ % i == 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn 1\nend", "  for i=2,n-1\
    \ do\n    if n % i == 0 then\n      return i\n    end\n  end\n  return 1\nend",
  "\tlocal result = 1\n\tlocal i = 2\n\twhile i <= n do\n\t\twhile n % i == 0 do\n\
    \t\t\tresult = i\n\t\t\tn = n / i\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn result\n\
    end", "  for i = n - 1, 2, -1 do\n    if n % i == 0 then\n      return i\n   \
    \ end\n  end\n  return 1\nend", "  for i = n-1, 2, -1 do\n    if n % i == 0 then\n\
    \      return i\n    end\n  end\n  return 1\nend", "\tif n == 1 then\n\t\treturn\
    \ 1\n\tend\n\tlocal x = n\n\twhile n%x > 0 do\n\t\tx = x - 1\n\tend\n\treturn\
    \ x\nend", "\tfor i=n-1,2,-1 do\n\t\tif n % i == 0 then\n\t\t\treturn i\n\t\t\
    end\n\tend\n\treturn 1\nend", "    for i = math.floor(n / 2), 1, -1 do\n     \
    \   if math.fmod(n, i) == 0 then\n            return i\n        end\n    end\n\
    \    return n\nend", "\tfor i = n-1, 2, -1 do\n\t\tif n % i == 0 then\n\t\t\t\
    return i\n\t\tend\n\tend\n\treturn 0\nend", "    for d = n - 1, 2, -1 do\n   \
    \     if n % d == 0 then\n            return d\n        end\n    end\n    return\
    \ 0\nend", "  local last_result = 0\n  for i = 2, math.floor(n/2) do\n    if n\
    \ % i == 0 then\n      last_result = i\n    end\n  end\n  return last_result\n\
    end", "    local divisor = 2\n    while divisor < n do\n        if n % divisor\
    \ == 0 then\n            return n / divisor\n        end\n        divisor = divisor\
    \ + 1\n    end\n    return n\nend", "  if n <= 1 then\n    return 1\n  end\n \
    \ local p = 2\n  while p < n do\n    if (n % p) == 0 then\n      return n / p\n\
    \    end\n    p = p + 1\n  end\n  return 1\nend", "    -- We only need to check\
    \ up to the square root of n\n    local limit = math.sqrt(n)\n    for i = 2, limit\
    \ do\n        if n % i == 0 then\n            return n / i\n        end\n    end\n\
    \    return 1\nend", "  local n_sqrt = math.floor(math.sqrt(n))\n  local divisor\
    \ = n_sqrt\n  while divisor > 0 do\n    if n % divisor == 0 then\n      return\
    \ divisor\n    end\n    divisor = divisor - 1\n  end\n  return nil\nend", "\t\
    local d = 2\n\twhile n % d ~= 0 do\n\t\td = d + 1\n\tend\n\treturn d\nend", " \
    \   local result = 2\n    local sqr_n = math.sqrt(n)\n    while result <= sqr_n\
    \ do\n        if n % result == 0 then\n            n = n / result\n          \
    \  sqr_n = math.sqrt(n)\n        else\n            result = result + 1\n     \
    \   end\n    end\n    return n\nend", "    for i=n-1,1,-1 do\n        if n % i\
    \ == 0 then\n            return i\n        end\n    end\n    return 0\nend", " \
    \ for i=n-1, 2, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n\
    \  return 1\nend", "    local d = 2\n    while n % d ~= 0 do\n        d = d +\
    \ 1\n    end\n    return d\nend", "  -- if n is divisible by 2\n  if n % 2 ==\
    \ 0 then\n    -- divide n by 2\n    n = n / 2\n    -- if n is divisible by 2\n\
    \    while n % 2 == 0 do\n      -- divide n by 2\n      n = n / 2\n    end\n \
    \ end\n  -- declare i, start at 3 and increment by 2 until\n  -- it reaches the\
    \ square root of n\n  for i = 3, math.sqrt(n), 2 do\n    -- if n is divisible\
    \ by i\n    if n % i == 0 then\n      -- divide n by i\n      n = n / i\n    \
    \  -- if n is divisible by i\n      while n % i == 0 do\n        -- divide n by\
    \ i\n        n = n / i\n      end\n    end\n  end\n  -- return n\n  return n\n\
    end", "\tlocal i = math.floor(n/2)\n\twhile (n % i) ~= 0 do\n\t\ti = i - 1\n\t\
    end\n\treturn i\nend", "    if n < 2 then return n end\n    local largest = 0\n\
    \    for i = 2, n do\n        if n % i == 0 then\n            largest = i\n  \
    \      end\n    end\n    return largest\nend", "    local i = 2\n    while i <\
    \ n do\n        if n % i == 0 then\n            return i\n        end\n      \
    \  i = i + 1\n    end\n    return 1\nend", "    local d = 2\n    while n % d ~=\
    \ 0 do\n        d = d + 1\n    end\n    return d\nend", "\tlocal largest = 1\n\
    \tfor i = 2, math.sqrt(n) do\n\t\tif n % i == 0 then\n\t\t\tlargest = i\n\t\t\
    end\n\tend\n\treturn largest\nend", "  local f = 2\n  while n % f ~= 0 do\n  \
    \  f = f + 1\n  end\n  return f\nend", "\tfor i = n-1,2,-1 do\n\t\tif n % i ==\
    \ 0 then\n\t\t\treturn i\n\t\tend\n\tend\n\treturn -1\nend", "  return n % 2 and\
    \ n or largest_divisor(n / 2)\nend", "\tassert(n >= 1, \"bad argument #1 to 'largest_divisor'\
    \ (out of range)\")\n\tlocal i = 2\n\twhile n % i ~= 0 do\n\t\ti = i + 1\n\tend\n\
    \treturn i\nend", "    local d = 2\n    while n % d ~= 0 do\n        d = d + 1\n\
    \    end\n    return d\nend", "    for i = 2, n do\n        if(n % i == 0) then\n\
    \            return largest_divisor(n / i)\n        end\n    end\n    return n\n\
    end", "  local last_factor = n\n  for i = 2, n - 1 do\n    if n % i == 0 then\n\
    \      last_factor = i\n    end\n  end\n  return last_factor\nend", "    local\
    \ largest = nil\n    for i = 1, n do\n        if n % i == 0 then\n           \
    \ largest = i\n        end\n    end\n    return largest\nend", "    local i =\
    \ n - 1\n    while i > 0 do\n        if n % i == 0 then\n            return i\n\
    \        end\n        i = i - 1\n    end\n    return n\nend", "    local i = 2\n\
    \    while i * i <= n do\n        if n % i == 0 then\n            return n / i\n\
    \        end\n        i = i + 1\n    end\n    return 1\nend", "  local largest\
    \ = 1\n  for i = 2, n-1 do\n    if n % i == 0 then\n      largest = i\n    end\n\
    \  end\n  return largest\nend", "  local divisor = 2\n  while divisor <= n do\n\
    \    if n % divisor == 0 then\n      local result = largest_divisor(n / divisor)\n\
    \      if result > divisor then\n        return result\n      else\n        return\
    \ divisor\n      end\n    end\n    divisor = divisor + 1\n  end\n  return 1\n\
    end", "\t-- todo\nend", "\tfor i = n - 1, 1, -1 do\n\t\tif n % i == 0 then\n\t\
    \t\treturn i\n\t\tend\n\tend\nend", "  local i = n - 1\n  while n % i ~= 0 do\n\
    \    i = i - 1\n  end\n  return i\nend", "\t-- assert that n is of type 'number'\
    \ and integer\n\tassert(type(n) == 'number' and n == math.floor(n),\n\t\t\"Largest\
    \ divisor can only be found for integer n.\")\n\t-- assert that n is at least\
    \ 2\n\tassert(n >= 2, \"Largest divisor can only be found for n >= 2.\")\n\t--\
    \ loop from 2 to n-1\n\tfor i = 2, n-1 do\n\t\t-- if n is evenly divisible by\
    \ i\n\t\tif n % i == 0 then\n\t\t\t-- return i\n\t\t\treturn i\n\t\tend\n\tend\n\
    \t-- by now, if there is a largest divisor it must be 1.\n\treturn 1\nend", "\t\
    for d = math.floor(n/2), 2, -1 do\n\t\tif n % d == 0 then\n\t\t\treturn d\n\t\t\
    end\n\tend\n\treturn 1\nend", "  for d = n - 1, 2, -1 do\n    if n % d == 0 then\n\
    \      return d\n    end\n  end\n  return 0\nend", "  local d = 1\n  while d *\
    \ d < n do\n    if n % d == 0 then\n      return n / d\n    end\n    d = d + 1\n\
    \  end\n  return d\nend", "\tlocal divisor = n-1\n\twhile n % divisor ~= 0 do\n\
    \t\tdivisor = divisor - 1\n\tend\n\treturn divisor\nend", "  local largest = 1\n\
    \  local limit = n / 2", "    -- If a number is divisible by 2, then it's also\
    \ divisible by 2*2 = 4.\n    -- If it's divisible by 3, then it's also divisible\
    \ by 3*3 = 9.\n    -- If it's divisible by 5, then it's also divisible by 5*5\
    \ = 25.\n    -- If it's divisible by 7, then it's also divisible by 7*7 = 49.\n\
    \    -- If it's divisible by 11, then it's also divisible by 11*11 = 121.\n  \
    \  -- If it's divisible by 13, then it's also divisible by 13*13 = 169.\n    --\
    \ If it's divisible by 17, then it's also divisible by 17*17 = 289.\n    -- If\
    \ it's divisible by 19, then it's also divisible by 19*19 = 361.\n    -- If it's\
    \ divisible by 23, then it's also divisible by 23*23 = 529.\n    -- If it's divisible\
    \ by 29, then it's also divisible by 29*29 = 841.\n    -- If it's divisible by\
    \ 31, then it's also divisible by 31*31 = 961.\n    -- If it's divisible by 37,\
    \ then it's also divisible by 37*37 = 1369.\n    -- If it's divisible by 41, then\
    \ it's also divisible by 41*41 = 1681.\n    -- If it's divisible by 43, then it's\
    \ also divisible by 43*43 = 1849.\n    -- If it's divisible by 47, then it's also\
    \ divisible by 47*47 = 2209.\n    -- If it's divisible by 53, then it's also divisible\
    \ by 53*53 = 2809.\n    -- If it's divisible by 59, then it's also divisible by\
    \ 59*59 = 3481.\n    -- If it's divisible by 61, then it's also divisible by 61*61\
    \ = 3721.\n    -- If it's divisible by 67, then it's also divisible by 67*67 =\
    \ 4489.\n    -- If it's divisible by 71, then it's also divisible by 71*71 = 5041.\n\
    \    -- If it's divisible by 73, then it's also divisible by 73*", "    for d\
    \ = n - 1, 2, -1 do\n        if (n % d) == 0 then\n            return d\n    \
    \    end\n    end\n    return 1\nend", "    -- Find the greatest common divisor\
    \ of n and n-1\n    while n % (n-1) ~= 0 do\n        n = n - 1\n    end\n    return\
    \ n-1\nend", "  -- check if n is even or zero\n  if n > 0 and n % 2 == 0 then\n\
    \    return n / 2\n  end\n  -- check if n is odd\n  if n > 0 and n % 2 == 1 then\n\
    \    -- try all numbers divisible by 2 smaller than n\n    for i = n - 1, 1, -2\
    \ do\n      if n % i == 0 then\n        return i\n      end\n    end\n  end\n\
    \  -- n was less than or equal to zero\n  return 1\nend", "    if n % 2 == 0 then\n\
    \        return largest_divisor(n / 2)\n    end\n    i = 3\n    while i < n do\n\
    \        if n % i == 0 then\n            return largest_divisor(n / i)\n     \
    \   end\n        i = i + 2\n    end\n    return n\nend", "    local k = math.floor(math.sqrt(n))\n\
    \    while n % k ~= 0 do\n        k = k - 1\n    end\n    return k\nend", "  for\
    \ i = 1,n do\n    if n % i == 0 then\n      n = i\n    end\n  end\n  return n\n\
    end", "  for i=n-1, 2, -1 do\n    if (n % i) == 0 then\n      return i\n    end\n\
    \  end\n  return 1\nend", "    if n == 1 then\n        return n\n    end\n   \
    \ for i = math.floor(n/2), 2, -1 do\n        if n % i == 0 then\n            return\
    \ i\n        end\n    end\n    return 1\nend", "    if n == 1 then\n        return\
    \ 1\n    end\n    for i = 2, n - 1 do\n        if n % i == 0 then\n          \
    \  return i\n        end\n    end\n    return n\nend", "  local d = 2\n  while\
    \ n % d ~= 0 do\n    d = d + 1\n  end\n  return d\nend", "\tfor i=n-1,1,-1 do\n\
    \t\tif math.fmod(n,i) == 0 then\n\t\t\treturn i\n\t\tend\n\tend\nend", "  local\
    \ d = 2\n  while (n % d) ~= 0 do\n    d = d + 1\n  end\n  return d\nend", "  \
    \  local i = 2\n    while true do\n        if n%i == 0 then\n            return\
    \ i\n        end\n        i = i + 1\n    end\nend", "  local d = 2\n  while d\
    \ < n do\n    if n % d == 0 then\n      return d\n    end\n    d = d + 1\n  end\n\
    \  return n\nend", "  for i = 2, n do\n    if n % i == 0 then\n      return i\n\
    \    end\n  end\n  return 1\nend", "    local d = n - 1\n    while d > 1 do\n\
    \        if math.fmod(n, d) == 0 then\n            return d\n        end\n   \
    \     d = d - 1\n    end\n    return nil\nend", "    for i = math.floor(n/2),\
    \ 1, -1 do\n        if math.fmod(n, i) == 0 then\n            return i\n     \
    \   end\n    end\n    return 1\nend", "  for i=n-1,2,-1 do\n    if n % i == 0\
    \ then\n      return i\n    end\n  end\n  return 1\nend", "    local d = 2\n \
    \   while d < n do\n        if n % d == 0 then\n            return d\n       \
    \ end\n        d = d + 1\n    end\n    return 1\nend", "    local divisor = 2\n\
    \    while n % divisor ~= 0 do\n        divisor = divisor + 1\n    end\n    return\
    \ divisor\nend", "  if n == 0 then return nil end\n  -- we need to start at the\
    \ largest potential number\n  local floor = math.floor(math.sqrt(n))\n  for i\
    \ = floor, 2, -1 do\n    if n % i == 0 then\n      return i\n    end\n  end\n\
    \  return nil\nend", "  for i = math.floor(n/2), 1, -1 do\n    if n % i == 0 then\n\
    \      return i\n    end\n  end\n  return n\nend", "    local divisor = math.floor(n/2)\n\
    \    while n % divisor ~= 0 do\n        divisor = divisor - 1\n    end\n    return\
    \ divisor\nend", "  for i=n-1,2,-1 do\n    if n % i == 0 then\n      return i\n\
    \    end\n  end\n  return 1\nend", "    for i=n-1,2,-1 do\n        if n % i ==\
    \ 0 then\n            return i\n        end\n    end\n    return nil\nend", " \
    \   local divisor = math.floor(n/2)\n    local largest = 0\n    while divisor\
    \ > 1 do\n        if n % divisor == 0 then\n            largest = divisor\n  \
    \          break\n        end\n        divisor = divisor - 1\n    end\n    return\
    \ largest\nend", "    local divisor = 2\n    while divisor < n do\n        local\
    \ rem = n % divisor\n        if rem == 0 then\n            return divisor\n  \
    \      end\n        divisor = divisor + 1\n    end\n    return nil\nend", "\t\
    local m = 1", "\tassert(n > 1, \"number should be greater than 1\")\n\tlocal i\
    \ = 2\n\twhile (n % i) ~= 0 do\n\t\ti = i + 1\n\tend\n\treturn i\nend", '  local
    largest = n-1', "\tlocal limit = math.floor(math.sqrt(n))\n\tfor i = 2, limit\
    \ do\n\t\tif math.fmod(n, i) == 0 then\n\t\t\treturn math.floor(n / i)\n\t\tend\n\
    \tend\n\treturn 1\nend", "\tlocal i = n - 1\n\tlocal flag = true\n\twhile flag\
    \ do\n\t\tif n % i == 0 then\n\t\t\tflag = false\n\t\t\treturn i\n\t\telse\n\t\
    \t\ti = i - 1\n\t\tend\n\tend\nend", "    local largest = 1\n    for i = 2, n\
    \ do\n        if n % i == 0 then\n            largest = i\n        end\n    end\n\
    \    return largest\nend", "\tlocal i = 1\n\twhile i * i < n do\n\t\tif n % i\
    \ == 0 then\n\t\t\tn = i\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn n\nend", " \
    \   for i = math.floor(n / 2), 1, -1 do\n        if n % i == 0 then\n        \
    \    return i\n        end\n    end\n    return 1\nend", "\tlocal divisor = 2\n\
    \tlocal max = 1\n\twhile (divisor <= n) do\n\t\tif (n % divisor == 0) then\n\t\
    \t\tmax = divisor\n\t\tend\n\t\tdivisor = divisor + 1\n\tend\n\treturn max\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

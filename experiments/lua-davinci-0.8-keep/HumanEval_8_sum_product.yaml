name: HumanEval_8_sum_product
language: lua
prompt: "-- For a given list of integers, return a tuple consisting of a sum and a\
  \ product of all the integers in a list.\n-- Empty sum should be equal to 0 and\
  \ empty product should be equal to 1.\n-- >>> sum_product([])\n-- (0, 1)\n-- >>>\
  \ sum_product([1, 2, 3, 4])\n-- (10, 24)\nlocal function sum_product(numbers)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_product\n\
  \    lu.assertEquals(candidate({}), {0, 1})\n    lu.assertEquals(candidate({1, 1,\
  \ 1}), {3, 1})\n    lu.assertEquals(candidate({100, 0}), {100, 0})\n    lu.assertEquals(candidate({3,\
  \ 5, 7}), {15, 105})\n    lu.assertEquals(candidate({10}), {10, 10})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local sum = 0\n  local product = 1\n  for _, number in ipairs(numbers)\
    \ do\n    sum = sum + number\n    product = product * number\n  end\n  return\
    \ sum, product\nend", "  if #numbers == 0 then\n    return 0, 1\n  end\n  local\
    \ sum = 0\n  local product = 1\n  for _, number in ipairs(numbers) do\n    sum\
    \ = sum + number\n    product = product * number\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for k, v in pairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for i = 1,\
    \ #numbers do\n        sum = sum + numbers[i]\n        product = product * numbers[i]\n\
    \    end\n    return sum, product\nend", "    local sum = 0\n    local product\
    \ = 1\n    for _, i in ipairs(numbers) do\n        sum = sum + i\n        product\
    \ = product * i\n    end\n    return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n\
    \    product = product * number\n  end\n  return sum, product\nend", end, "\t\
    if #numbers == 0 then\n\t\treturn 0, 1\n\tend\n\tlocal result = {\n\t\tsum = 0,\n\
    \t\tproduct = 1\n\t}\n\tfor i = 1, #numbers do\n\t\tresult.sum = result.sum +\
    \ numbers[i]\n\t\tresult.product = result.product * numbers[i]\n\tend\n\treturn\
    \ result.sum, result.product\nend", "    local sum = 0\n    local product = 1\n\
    \    for _, num in ipairs(numbers) do\n        sum = sum + num\n        product\
    \ = product * num\n    end\n    return sum, product\nend", "  -- TODO: implement\
    \ this function\n  -- Hint: take a look at the solution for the previous exercise,\
    \ it's similar.\n  return (0, 1)\nend", end, "  local sum = 0\n  local product\
    \ = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product\
    \ * numbers[i]\n  end\n  return sum, product\nend", "\tlocal sum = 0\n\tlocal\
    \ product = 1\n\tfor i, v in ipairs(numbers) do\n\t\tsum = sum + v\n\t\tproduct\
    \ = product * v\n\tend\n\treturn sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for i = 1, #numbers do\n        sum = sum + numbers[i]\n  \
    \      product = product * numbers[i]\n    end\n    return sum, product\nend",
  end, "    return nil\nend", "  if #numbers > 0 then\n    local sum = 0\n    local\
    \ product = 1\n    for _, number in ipairs(numbers) do\n      sum = sum + number\n\
    \      product = product * number\n    end\n    return sum, product\n  else\n\
    \    return 0, 1\n  end\nend", "    local sum = 0\n    local product = 1\n   \
    \ for _, n in ipairs(numbers) do\n        sum = sum + n\n        product = product\
    \ * n\n    end\n    return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product\
    \ * numbers[i]\n  end\n  return sum, product\nend", "    local s = 0\n    local\
    \ p = 1\n    for _, v in ipairs(numbers) do\n        s = s + v\n        p = p\
    \ * v\n    end\n    return s, p\nend", "    local sum = 0\n    local product =\
    \ 1\n    for _, n in ipairs(numbers) do\n        sum = sum + n\n        product\
    \ = product * n\n    end\n    return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for _, x in ipairs(numbers) do\n    sum = sum + x\n    product\
    \ = product * x\n  end\n  return sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for _, n in ipairs(numbers) do\n        sum = sum + n\n   \
    \     product = product * n\n    end\n    return sum, product\nend", "  local\
    \ p = 1\n  local s = 0\n  for i, v in ipairs(numbers) do\n    p = p * v\n    s\
    \ = s + v\n  end\n  return s, p\nend", "    return 0, 1\nend", "    local sum\
    \ = 0\n    local product = 1\n    for _, n in ipairs(numbers) do\n        sum\
    \ = sum + n\n        product = product * n\n    end\n    return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "  local sum = 0\n  local product = 1\n  for i,\
    \ number in ipairs(numbers) do\n    sum = sum + number\n    product = product\
    \ * number\n  end\n  return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for i, number in ipairs(numbers) do\n    sum = sum + number\n    product\
    \ = product * number\n  end\n  return sum, product\nend", "  local sum = 0\n \
    \ local product = 1\n  for _, num in ipairs(numbers) do\n    sum = sum + num\n\
    \    product = product * num\n  end\n  return sum, product\nend", "  local sum\
    \ = 0\n  local product = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n\
    \    product = product * numbers[i]\n  end\n  return sum, product\nend", "   \
    \ local sum = 0\n    local product = 1\n    for i, number in ipairs(numbers) do\n\
    \        sum = sum + number\n        product = product * number\n    end\n   \
    \ return sum, product\nend", "    local sum = 0\n    local product = 1\n    for\
    \ _, v in ipairs(numbers) do\n        sum = sum + v\n        product = product\
    \ * v\n    end\n    return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n    product\
    \ = product * number\n  end\n  return sum, product\nend", "    local s = 0\n \
    \   local p = 1\n    for _, num in ipairs(numbers) do\n        s = s + num\n \
    \       p = p * num\n    end\n    return s, p\nend", "    local sum = 0\n    local\
    \ product = 1\n    for _, number in ipairs(numbers) do\n        sum = sum + number\n\
    \        product = product * number\n    end\n    return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for _, n in ipairs(numbers) do\n\
    \        sum = sum + n\n        product = product * n\n    end\n    return sum,\
    \ product\nend", "  local sum = 0\n  local product = 1\n  for _, num in ipairs(numbers)\
    \ do\n    sum = sum + num\n    product = product * num\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, n in ipairs(numbers)\
    \ do\n        sum = sum + n\n        product = product * n\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, num\
    \ in ipairs(numbers) do\n        sum = sum + num\n        product = product *\
    \ num\n    end\n    return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for _, v in ipairs(numbers) do\n    sum = sum + v\n    product = product\
    \ * v\n  end\n  return sum, product\nend", "    return 1, 1\nend", "    local\
    \ sum = 0\n    local product = 1\n    for _, value in ipairs(numbers) do\n   \
    \     sum = sum + value\n        product = product * value\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _,v in\
    \ ipairs(numbers) do\n        sum = sum + v\n        product = product * v\n \
    \   end\n    return sum, product\nend", "  local sum = 0\n  local product = 1\n\
    \  for i, number in ipairs(numbers) do\n    sum = sum + number\n    product =\
    \ product * number\n  end\n  return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product\
    \ = product * numbers[i]\n  end\n  return sum, product\nend", "  local sum = 0\n\
    \  local product = 1\n  for _, n in ipairs(numbers) do\n    sum = sum + n\n  \
    \  product = product * n\n  end\n  return sum, product\nend", "    local sum =\
    \ 0\n    local product = 1\n    for _, value in ipairs(numbers) do\n        sum\
    \ = sum + value\n        product = product * value\n    end\n    return sum, product\n\
    end", "  -- Check if we are dealing with an empty table.\n  if #numbers == 0 then\n\
    \    return 0, 1\n  end", "  local sum = 0\n  local product = 1\n  for _, v in\
    \ ipairs(numbers) do\n    sum = sum + v\n    product = product * v\n  end\n  return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, value\
    \ in ipairs(numbers) do\n        sum = sum + value\n        product = product\
    \ * value\n    end\n    return sum, product\nend", end, "    local sum = 0\n \
    \   local product = 1\n    for _, number in ipairs(numbers) do\n        sum =\
    \ sum + number\n        product = product * number\n    end\n    return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, value in ipairs(numbers)\
    \ do\n        sum = sum + value\n        product = product * value\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, n in ipairs(numbers) do\n        sum = sum + n\n        product = product\
    \ * n\n    end\n    return sum, product\nend", "  return {reduce(op.add, 0, numbers),\
    \ reduce(op.mul, 1, numbers)}\nend", "  local sum = 0\n  local product = 1\n \
    \ for i, v in ipairs(numbers) do\n    sum = sum + v\n    product = product * v\n\
    \  end\n  return sum, product\nend", "  local sum = 0\n  local product = 1\n \
    \ for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product *\
    \ numbers[i]\n  end\n  return sum, product\nend", "\tlocal sum = 0\n\tlocal product\
    \ = 1\n\tfor i = 1, #numbers do\n\t\tsum = sum + numbers[i]\n\t\tproduct = product\
    \ * numbers[i]\n\tend\n\treturn sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for i, number in ipairs(numbers) do\n    sum = sum + number\n\
    \    product = product * number\n  end\n  return sum, product\nend", "    local\
    \ s = 0\n    local p = 1\n    for _, n in ipairs(numbers) do\n        s = s +\
    \ n\n        p = p * n\n    end\n    return s, p\nend", "  -- Enter code here\n\
    end", "    local sum = 0\n    local product = 1\n    for _, value in ipairs(numbers)\
    \ do\n        sum = sum + value\n        product = product * value\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, v in ipairs(numbers) do\n        sum = sum + v\n        product = product\
    \ * v\n    end\n    return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product = product\
    \ * n\n  end\n  return sum, product\nend", "    return add_all(numbers), mult_all(numbers)\n\
    end", "    local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, number in ipairs(numbers) do\n        sum = sum + number\n        product\
    \ = product * number\n    end\n    return sum, product\nend", "    local sum =\
    \ 0\n    local product = 1\n    for _, v in ipairs(numbers) do\n        sum =\
    \ sum + v\n        product = product * v\n    end\n    return sum, product\nend",
  "  local sum = 0\n  local product = 1\n  for _, number in ipairs(numbers) do\n \
    \   sum = sum + number\n    product = product * number\n  end\n  return sum, product\n\
    end", "    local prod = 1\n    local sum = 0\n    for _, v in ipairs(numbers)\
    \ do\n        prod = prod * v\n        sum = sum + v\n    end\n    return sum,\
    \ prod\nend", "  local sum = 0\n  local product = 1\n  for i = 1, #numbers do\n\
    \    sum = sum + numbers[i]\n    product = product * numbers[i]\n  end\n  return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, v\
    \ in ipairs(numbers) do\n        sum = sum + v\n        product = product * v\n\
    \    end\n    return sum, product\nend", "    local sum = 0\n    local product\
    \ = 1\n    for _,number in ipairs(numbers) do\n        sum = sum + number\n  \
    \      product = product * number\n    end\n    return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for i = 1, #numbers do\n       \
    \ sum = sum + numbers[i]\n        product = product * numbers[i]\n    end\n  \
    \  return sum, product\nend", "  local sum = 0\n  local product = 1\n  for k,\
    \ v in pairs(numbers) do\n    sum = sum + v\n    product = product * v\n  end\n\
    \  return sum, product\nend", "  return (reduce(add, numbers) or 0), (reduce(mul,\
    \ numbers) or 1)\nend", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers)\
    \ do\n    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for _, v in ipairs(numbers) do\n\
    \    sum = sum + v\n    product = product * v\n  end\n  return sum, product\n\
    end", "    -- check\n    if not is_list(numbers) then\n        return false\n\
    \    end", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers)\
    \ do\n    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, value in ipairs(numbers)\
    \ do\n        sum = sum + value\n        product = product * value\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for i, num in ipairs(numbers) do\n        sum = sum + num\n        product\
    \ = product * num\n    end\n    return sum, product\nend", "    local sum = 0\n\
    \    local product = 1\n    for _, number in ipairs(numbers) do\n        sum =\
    \ sum + number\n        product = product * number\n    end\n    return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "  local res = {0, 1}\n  for _, v in ipairs(numbers) do\n\
    \    res[1] = res[1] + v\n    res[2] = res[2] * v\n  end\n  return res\nend",
  "  local sum = 0\n  local product = 1\n  for _, v in ipairs(numbers) do\n    sum\
    \ = sum + v\n    product = product * v\n  end\n  return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for i, n in ipairs(numbers) do\n\
    \        sum = sum + n\n        product = product * n\n    end\n    return sum,\
    \ product\nend", "    -- TODO: return sum and product\n    local product = 1\n\
    \    local sum = 0\n    for i, v in ipairs(numbers) do\n        product = product\
    \ * v\n        sum = sum + v\n    end\n    return sum, product\nend", "    local\
    \ sum = 0\n    local product = 1\n    for _, v in ipairs(numbers) do\n       \
    \ sum = sum + v\n        product = product * v\n    end\n    return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, num in ipairs(numbers) do\n        sum = sum + num\n        product\
    \ = product * num\n    end\n    return sum, product\nend", "  local sum = 0\n\
    \  local product = 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n\
    \    product = product * number\n  end\n  return sum, product\nend", "    return\
    \ from_iterator(numbers)\n               :map(product)\n               :sum(),\n\
    \           from_iterator(numbers)\n               :map(sum)\n               :product()\n\
    end", "\tlocal sum = 0\n\tlocal product = 1\n\tfor _, number in ipairs(numbers)\
    \ do\n\t\tsum = sum + number\n\t\tproduct = product * number\n\tend\n\treturn\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers)\
    \ do\n    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "    -- Write your code here\n    return 0, 1\nend", "    local sum = 0\n\
    \    local product = 1\n    for _, num in ipairs(numbers) do\n        sum = sum\
    \ + num\n        product = product * num\n    end\n    return sum, product\nend",
  "  local sum = 0\n  local product = 1\n  for i = 1, #numbers do\n    sum = sum +\
    \ numbers[i]\n    product = product * numbers[i]\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, n in ipairs(numbers)\
    \ do\n        sum = sum + n\n        product = product * n\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for i = 1, #numbers\
    \ do\n    sum = sum + numbers[i]\n    product = product * numbers[i]\n  end\n\
    \  return sum, product\nend", "  return foldr(function(x, y)\n           return\
    \ x[1] + y[1], x[2] * y[2]\n         end, {0, 1}, numbers)\nend", "    local sum\
    \ = 0\n    local product = 1\n    for i,v in ipairs(numbers) do\n        sum =\
    \ sum + v\n        product = product * v\n    end\n    return sum, product\nend",
  "    local sum = 0\n    local product = 1\n    for i = 1, #numbers do\n        sum\
    \ = sum + numbers[i]\n        product = product * numbers[i]\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for _, number in\
    \ ipairs(numbers) do\n    sum = sum + number\n    product = product * number\n\
    \  end\n  return sum, product\nend", "    -- Implementation\nend", "    local\
    \ sum = 0\n    local product = 1\n    for i, number in ipairs(numbers) do\n  \
    \      sum = sum + number\n        product = product * number\n    end\n    return\
    \ sum, product\nend", "    return 0, 1\nend", "    local sum = 0\n    local product\
    \ = 1\n    for _, num in ipairs(numbers) do\n        sum = sum + num\n       \
    \ product = product * num\n    end\n    return sum, product\nend", "    local\
    \ sum = 0\n    local product = 1\n    for i = 1, #numbers do\n        sum = sum\
    \ + numbers[i]\n        product = product * numbers[i]\n    end\n    return sum,\
    \ product\nend", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers)\
    \ do\n    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "  return {\n    sum = 0,\n    product = 1\n  }\nend", "    local sum =\
    \ 0\n    local product = 1\n    for _, value in ipairs(numbers) do\n        sum\
    \ = sum + value\n        product = product * value\n    end\n    return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for _, number in ipairs(numbers)\
    \ do\n    sum = sum + number\n    product = product * number\n  end\n  return\
    \ sum, product\nend", "\tlocal sum = 0\n\tlocal product = 1\n\tfor i = 1, #numbers\
    \ do\n\t\tsum = sum + numbers[i]\n\t\tproduct = product * numbers[i]\n\tend\n\t\
    return sum, product\nend", "    local sum = 0\n    local product = 1\n    for\
    \ _, number in ipairs(numbers) do\n        sum = sum + number\n        product\
    \ = product * number\n    end\n    return sum, product\nend", "  local sum = 0\n\
    \  local product = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n \
    \   product = product * numbers[i]\n  end\n  return sum, product\nend", "  local\
    \ sum = 0\n  local product = 1\n  for _, value in ipairs(numbers) do\n    sum\
    \ = sum + value\n    product = product * value\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, x in ipairs(numbers) do\n        sum = sum + x\n        product = product\
    \ * x\n    end\n    return sum, product\nend", "    local sum = 0\n    local product\
    \ = 1\n    for _,n in ipairs(numbers) do\n        sum = sum + n\n        product\
    \ = product * n\n    end\n    return sum, product\nend", "    -- TODO: Finish\
    \ implementing the function.\n    return sum(numbers), prod(numbers)\nend", " \
    \ local s = 0\n  local p = 1\n  for _, v in ipairs(numbers) do\n    s = s + v\n\
    \    p = p * v\n  end\n  return s, p\nend", "  local sum = 0\n  local product\
    \ = 1\n  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product = product\
    \ * n\n  end\n  return sum, product\nend", "    local sum = 0\n    local product\
    \ = 1\n    for i, n in ipairs(numbers) do\n        sum = sum + n\n        product\
    \ = product * n\n    end\n    return sum, product\nend", "\tlocal sum = 0\n\t\
    local product = 1\n\tfor _,n in ipairs(numbers) do\n\t\tsum = sum + n\n\t\tproduct\
    \ = product * n\n\tend\n\treturn sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for _, n in ipairs(numbers) do\n        sum = sum + n\n   \
    \     product = product * n\n    end\n    return sum, product\nend", "    local\
    \ sum = 0\n    local product = 1\n    for i, x in ipairs(numbers) do\n       \
    \ sum = sum + x\n        product = product * x\n    end\n    return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "  local sum = 0\n  local product = 1\n  for i,\
    \ v in ipairs(numbers) do\n    sum = sum + v\n    product = product * v\n  end\n\
    \  return sum, product\nend", "    local sum = 0\n    local product = 1\n    for\
    \ _, n in ipairs(numbers) do\n        sum = sum + n\n        product = product\
    \ * n\n    end\n    return sum, product\nend", "    return foldl(function(acc,\
    \ x) return acc[1] + x, acc[2] * x end, {0, 1}, numbers)\nend", "    local sum\
    \ = 0\n    local product = 1\n    for _, n in ipairs(numbers) do\n        sum\
    \ = sum + n\n        product = product * n\n    end\n    return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, num in ipairs(numbers)\
    \ do\n        sum = sum + num\n        product = product * num\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, value\
    \ in ipairs(numbers) do\n        sum = sum + value\n        product = product\
    \ * value\n    end\n    return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product = product\
    \ * n\n  end\n  return sum, product\nend", "  return 10, 24\nend", "    local\
    \ sum = 0\n    local product = 1\n    for _, n in ipairs(numbers) do\n       \
    \ sum = sum + n\n        product = product * n\n    end\n    return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    -- TODO: implement this\n    local sum =\
    \ 0\n    local product = 1\n    for _, v in ipairs(numbers) do\n        sum =\
    \ sum + v\n        product = product * v\n    end\n    return sum, product\nend",
  "    local sum = 0\n    local product = 1\n    for _, i in ipairs(numbers) do\n\
    \        sum = sum + i\n        product = product * i\n    end\n    return sum,\
    \ product\nend", "    local sum = 0\n    local product = 1\n    for _, i in ipairs(numbers)\
    \ do\n        sum = sum + i\n        product = product * i\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, number\
    \ in ipairs(numbers) do\n        sum = sum + number\n        product = product\
    \ * number\n    end\n    return sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for _, v in ipairs(numbers) do\n        sum = sum + v\n   \
    \     product = product * v\n    end\n    return sum, product\nend", "    local\
    \ sum = 0\n    local product = 1\n    for i, num in ipairs(numbers) do\n     \
    \   sum = sum + num\n        product = product * num\n    end\n    return sum,\
    \ product\nend\nassert_equal(sum_product({}), 0, 1)\nassert_equal(sum_product({1,\
    \ 2, 3, 4}), 10, 24)", "  local sum = 0\n  local product = 1\n  for i, number\
    \ in ipairs(numbers) do\n    sum = sum + number\n    product = product * number\n\
    \  end\n  return sum, product\nend", "  local sum = 0\n  local product = 1\n \
    \ for _, v in ipairs(numbers) do\n    sum = sum + v\n    product = product * v\n\
    \  end\n  return sum, product\nend", "  -- TODO\nend", "    local sum = 0\n  \
    \  local product = 1\n    for i = 1, #numbers do\n        sum = sum + numbers[i]\n\
    \        product = product * numbers[i]\n    end\n    return sum, product\nend",
  "    local sum = 0\n    local product = 1\n    for i, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "  if (type(numbers) ~= \"table\") then\n    return\
    \ error(\"Invalid argument, not a table!\")\n  end\n  local sum = 0\n  local product\
    \ = 1\n  for _, v in ipairs(numbers) do\n    sum = sum + v\n    product = product\
    \ * v\n  end\n  return sum, product\nend", "  local sum = 0\n  local product =\
    \ 1\n  for _, v in ipairs(numbers) do\n    sum = sum + v\n    product = product\
    \ * v\n  end\n  return sum, product\nend", "  local n = 0\n  local p = 1\n  for\
    \ _, number in ipairs(numbers) do\n    n = n + number\n    p = p * number\n  end\n\
    \  return n, p\nend", "    local sum = 0\n    local product = 1\n    for _, number\
    \ in ipairs(numbers) do\n        sum = sum + number\n        product = product\
    \ * number\n    end\n    return sum, product\nend", "  -- Write your code here:\n\
    \  local sum = 0\n  local product = 1\n  for i = 1, #numbers do\n    sum = sum\
    \ + numbers[i]\n    product = product * numbers[i]\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for k, v in pairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for _, number in\
    \ ipairs(numbers) do\n    sum = sum + number\n    product = product * number\n\
    \  end\n  return sum, product\nend", "  return math.sum(numbers), math.product(numbers)\n\
    end", "    local sum = 0\n    local product = 1\n    for _,v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for i, x in ipairs(numbers)\
    \ do\n    sum = sum + x\n    product = product * x\n  end\n  return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for _, number in ipairs(numbers)\
    \ do\n    sum = sum + number\n    product = product * number\n  end\n  return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, v\
    \ in ipairs(numbers) do\n        sum = sum + v\n        product = product * v\n\
    \    end\n    return sum, product\nend", "  local sum = 0\n  local product = 1\n\
    \  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product = product *\
    \ n\n  end\n  return sum, product\nend", "  local sum = 0\n  local product = 1\n\
    \  for _, number in ipairs(numbers) do\n    sum = sum + number\n    product =\
    \ product * number\n  end\n  return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for i, v in ipairs(numbers) do\n    sum = sum + v\n    product\
    \ = product * v\n  end\n  return sum, product\nend", "\tlocal sum = 0\n\tlocal\
    \ product = 1\n\tfor i, v in ipairs(numbers) do\n\t\tsum = sum + v\n\t\tproduct\
    \ = product * v\n\tend\n\treturn sum, product\nend", "  local result = {sum =\
    \ 0, product = 1}\n  for _, v in ipairs(numbers) do\n    result.sum = result.sum\
    \ + v\n    result.product = result.product * v\n  end\n  return result.sum, result.product\n\
    end\nprint(sum_product({1, 2, 3, 4}))", "  local sum = 0\n  local product = 1\n\
    \  for _, v in ipairs(numbers) do\n    sum = sum + v\n    product = product *\
    \ v\n  end\n  return sum, product\nend", "    local sum = 0\n    local product\
    \ = 1\n    for i, number in ipairs(numbers) do\n        sum = sum + number\n \
    \       product = product * number\n    end\n    return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for _, v in ipairs(numbers) do\n\
    \        sum = sum + v\n        product = product * v\n    end\n    return sum,\
    \ product\nend", "    local sum = 0\n    local product = 1\n    for i, v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, num\
    \ in ipairs(numbers) do\n        sum = sum + num\n        product = product *\
    \ num\n    end\n    return sum, product\nend", "  if #numbers == 0 then\n    return\
    \ 0, 1\n  end\n  return reduce(numbers, \n    function(sum, product, number)\n\
    \      return sum + number, product * number\n    end,\n    0, 1)\nend", "\tlocal\
    \ sum = 0\n\tlocal product = 1\n\tfor i, v in ipairs(numbers) do\n\t\tsum = sum\
    \ + v\n\t\tproduct = product * v\n\tend\n\treturn sum, product\nend", "  return\
    \ foldl(function(acc, x) return {acc[1] + x, acc[2] * x} end, {0, 1}, numbers)\n\
    end", "    local sum = 0\n    local product = 1\n    for _, n in ipairs(numbers)\
    \ do\n        sum = sum + n\n        product = product * n\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, n\
    \ in ipairs(numbers) do\n        sum = sum + n\n        product = product * n\n\
    \    end\n    return sum, product\nend", end, "    local sum = 0\n    local product\
    \ = 1\n    for _, number in ipairs(numbers) do\n        sum = sum + number\n \
    \       product = product * number\n    end\n    return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for i, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, num in ipairs(numbers) do\n        sum = sum + num\n        product\
    \ = product * num\n    end\n    return sum, product\nend", "    local sum = 0\n\
    \    local product = 1\n    for _, v in ipairs(numbers) do\n        sum = sum\
    \ + v\n        product = product * v\n    end\n    return sum, product\nend",
  "    local sum = 0\n    local product = 1\n    for i, v in ipairs(numbers) do\n\
    \        sum = sum + v\n        product = product * v\n    end\n    return sum,\
    \ product\nend", "  local sum = 0\n  local product = 1\n  for _, x in ipairs(numbers)\
    \ do\n    sum = sum + x\n    product = product * x\n  end\n  return sum, product\n\
    end", "    return foldl(function(acc, x) return acc[1] + x, acc[2] * x end, {0,\
    \ 1}, numbers)\nend", "\tlocal product = 1\n\tlocal sum = 0\n\tfor _, n in ipairs(numbers)\
    \ do\n\t\tproduct = product * n\n\t\tsum = sum + n\n\tend\n\treturn sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i = 1, #numbers do\n\
    \        sum = sum + numbers[i]\n        product = product * numbers[i]\n    end\n\
    \    return sum, product\nend", "  return {table.unpack(numbers)}\nend", "  --\
    \ Fill here!\n  return 0, 1\nend", "    local sum = 0\n    local product = 1\n\
    \    for _,n in ipairs(numbers) do\n        sum = sum + n\n        product = product\
    \ * n\n    end\n    return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product\
    \ * numbers[i]\n  end\n  return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product\
    \ = product * numbers[i]\n  end\n  return sum, product\nend", "  if #numbers ==\
    \ 0 then\n    return 0, 1\n  end\n  local sum = 0\n  local product = 1\n  for\
    \ _, value in ipairs(numbers) do\n    sum = sum + value\n    product = product\
    \ * value\n  end\n  return sum, product\nend", "  return foldl(function(acc, x)\n\
    \                return {acc[1] + x, acc[2] * x}\n              end, {0, 1}, numbers)\n\
    end", "    local sum = 0\n    local product = 1\n    for i, v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers)\
    \ do\n    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for i, v in ipairs(numbers) do\n\
    \    sum = sum + v\n    product = product * v\n  end\n  return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for i, number in ipairs(numbers)\
    \ do\n    sum = sum + number\n    product = product * number\n  end\n  return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for i, v in ipairs(numbers)\
    \ do\n    sum = sum + v\n    product = product * v\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_13_greatest_common_divisor
language: lua
prompt: "-- Return a greatest common divisor of two integers a and b\n-- >>> greatest_common_divisor(3,\
  \ 5)\n-- 1\n-- >>> greatest_common_divisor(25, 15)\n-- 5\nlocal function greatest_common_divisor(a,\
  \ b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
  \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
  \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
  \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\treturn a == 0 and b or greatest_common_divisor(b % a, a)\nend", " \
    \   local x = abs(a)\n    local y = abs(b)\n    while y ~= 0 do\n        local\
    \ temp = y\n        y = x % y\n        x = temp\n    end\n    return x\nend",
  "    if a < b then\n        return greatest_common_divisor(b, a)\n    end\n    while\
    \ b ~= 0 do\n        r = a % b\n        a = b\n        b = r\n    end\n    return\
    \ a\nend", "\twhile b ~= 0 do\n\t\tlocal temp = a % b\n\t\ta = b\n\t\tb = temp\n\
    \tend\n\treturn a\nend", "    local res = 1\n    local big = math.max(a, b)\n\
    \    local small = math.min(a, b)\n    for i = 2, small, 1 do\n        if big\
    \ % i == 0 and small % i == 0 then\n            res = i\n        end\n    end\n\
    \    return res\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    while b\
    \ ~= 0 do\n        local r = a % b\n        a = b\n        b = r\n    end\n  \
    \  return a\nend", "\twhile (b ~= 0) do\n\t\tlocal temp = b\n\t\tb = a % b\n\t\
    \ta = temp\n\tend\n\treturn a\nend", "    local divisor\n    local smaller = min(a,\
    \ b)\n    local bigger = max(a, b)\n    for i = 1, smaller do\n        if smaller\
    \ % i == 0 and bigger % i == 0 then\n            divisor = i\n        end\n  \
    \  end\n    return divisor\nend", "    if b > a then\n        a, b = b, a\n  \
    \  end\n    while a % b ~= 0 do\n        a, b = b, a % b\n    end\n    return\
    \ b\nend", "  if a == 0 then\n    return b\n  elseif b == 0 then\n    return a\n\
    \  else\n    return greatest_common_divisor(b, a % b)\n  end\nend", "    while\
    \ b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "    local\
    \ r\n    while b ~= 0 do\n        r = a % b\n        a = b\n        b = r\n  \
    \  end\n    return a\nend", "  if a == 0 then\n    return b\n  elseif b == 0 then\n\
    \    return a\n  else\n    local c = a % b\n    return greatest_common_divisor(b,\
    \ c)\n  end\nend", "    return (b == 0) and a or greatest_common_divisor(b, a\
    \ % b)\nend", "    if b == 0 then\n        return a\n    else\n        return\
    \ greatest_common_divisor(b, a % b)\n    end\nend", "  a = math.abs(a)\n  b =\
    \ math.abs(b)\n  while a ~= 0 do\n    a, b = b % a, a\n  end\n  return b\nend",
  "\twhile b ~= 0 do\n\t\tlocal remainder = a % b\n\t\ta = b\n\t\tb = remainder\n\t\
    end\n\treturn a\nend", "    local a, b = math.abs(a), math.abs(b)\n    while a\
    \ > 0 do\n        a, b = b % a, a\n    end\n    return b\nend", "    while a ~=\
    \ b do\n        if a > b then\n            a = a - b\n        else\n         \
    \   b = b - a\n        end\n    end\n    return a\nend", "\treturn b == 0 and\
    \ a or greatest_common_divisor(b, a % b)\nend", "\treturn b == 0 and a or greatest_common_divisor(b,\
    \ a % b)\nend", "    while a ~= b do\n        if a > b then\n            a = a\
    \ - b\n        else\n            b = b - a\n        end\n    end\n    return a\n\
    end", "    -- Get the divisors of both a and b\n    local a_divisors = divisors(a)\n\
    \    local b_divisors = divisors(b)", "    local a, b = math.abs(a), math.abs(b)\n\
    \    while a ~= 0 do\n        a, b = b % a, a\n    end\n    return b\nend", " \
    \   a = abs(a)\n    b = abs(b)\n    local r = a % b\n    while r ~= 0 do\n   \
    \     a = b\n        b = r\n        r = a % b\n    end\n    return b\nend", " \
    \   if b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    if b == 0 then\n        return a\n    else\n   \
    \     return greatest_common_divisor(b, a % b)\n    end\nend", "  if a == 0 then\n\
    \    return b\n  elseif b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    while b\
    \ ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "  if a == 0\
    \ then\n    return b\n  elseif b == 0 then\n    return a\n  else\n    if a > b\
    \ then\n      return greatest_common_divisor(a % b, b)\n    else\n      return\
    \ greatest_common_divisor(a, b % a)\n    end\n  end\nend", "  if b == 0 then\n\
    \    return a\n  else\n    return greatest_common_divisor(b, a % b)\n  end\nend",
  "    while b ~= 0 do\n        local tmp = a % b\n        a = b\n        b = tmp\n\
    \    end\n    return a\nend", "\tlocal r = 1\n\tlocal x = a\n\tlocal y = b\n\t\
    while y ~= 0 do\n\t\tr = x % y\n\t\tx = y\n\t\ty = r\n\tend\n\treturn x\nend",
  "\tlocal common_divisors = {}\n\tlocal common_divisors_number = 0\n\tlocal max =\
    \ 0\n\tfor i = 1, a do\n\t\tif a % i == 0 and b % i == 0 then\n\t\t\tcommon_divisors_number\
    \ = common_divisors_number + 1\n\t\t\tcommon_divisors[common_divisors_number]\
    \ = i\n\t\tend\n\tend\n\tfor i = 1, common_divisors_number do\n\t\tif common_divisors[i]\
    \ > max then\n\t\t\tmax = common_divisors[i]\n\t\tend\n\tend\n\treturn max\nend",
  "\ta = math.abs(a)\n\tb = math.abs(b)\n\tif a == 0 or b == 0 then\n\t\treturn 0\n\
    \tend\n\twhile a ~= b do\n\t\tif a > b then\n\t\t\ta = a - b\n\t\telse\n\t\t\t\
    b = b - a\n\t\tend\n\tend\n\treturn a\nend", "    -- calculate gcd_a_b\n    local\
    \ gcd_a_b = 1\n    for i = 1, a, 1 do\n        if a % i == 0 and b % i == 0 then\n\
    \            gcd_a_b = i\n        end\n    end\n    return gcd_a_b\nend", "  \
    \  if a % b == 0 then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n\
    \    return a\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    if a == 0\
    \ then\n        return b\n    elseif b == 0 then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend", "  if a == 0\
    \ then\n    return b\n  elseif b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n\
    \    return a\nend", "  if b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "  local divisor = 2\n  local common_divisor = 1", "\t\
    -- Make a positive\n\ta = absolute(a)\n\tb = absolute(b)\n\t\n\t-- Make b <= a\n\
    \tif b > a then\n\t\ta, b = b, a\n\tend\n\t\n\t-- The Euclidean algorithm\n\t\
    while b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\t\n\treturn a\nend", "    local\
    \ a_prime = a\n    local b_prime = b\n    while b_prime ~= 0 do\n        local\
    \ c = a_prime % b_prime\n        a_prime = b_prime\n        b_prime = c\n    end\n\
    \    return a_prime\nend", "    while b ~= 0 do\n        a, b = b, a % b\n   \
    \ end\n    return a\nend", "    return b == 0 and a or greatest_common_divisor(b,\
    \ a % b)\nend", "  while b ~= 0 do\n    local r = a % b\n    a = b\n    b = r\n\
    \  end\n  return a\nend", "    return gcd(a, b)\nend", "  if b == 0 then\n   \
    \ return a\n  else\n    return greatest_common_divisor(b, a % b)\n  end\nend",
  "  while b ~= 0 do\n    a, b = b, a % b\n  end\n  return a\nend", "  if a < b then\n\
    \    a, b = b, a\n  end\n  while b ~= 0 do\n    a, b = b, a % b\n  end\n  return\
    \ a\nend", "\tif a == 0 then\n\t\treturn b\n\telseif b == 0 then\n\t\treturn a\n\
    \telse\n\t\treturn greatest_common_divisor(b, a % b)\n\tend\nend", "    if b ==\
    \ 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    if (b == 0) then\n        return a\n    else\n \
    \       return greatest_common_divisor(b, a % b)\n    end\nend", "  if a == 0\
    \ then\n    return b\n  elseif b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "    if b > a then\n        a, b = b, a\n    end\n    while\
    \ b ~= 0 do\n        local c = a % b\n        a = b\n        b = c\n    end\n\
    \    return a\nend", "    local function helper(a, b)\n        if b == 0 then\n\
    \            return a\n        else\n            return helper(b, a % b)\n   \
    \     end\n    end\n    if a > b then\n        return helper(a, b)\n    else\n\
    \        return helper(b, a)\n    end\nend", "\twhile b ~= 0 do\n\t\ta, b = b,\
    \ a % b\n\tend\n\treturn a\nend", "    if b == 0 then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend", "  if b == 0\
    \ then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n \
    \ end\nend", "\tlocal gcd = 1\n\tlocal x, y = math.max(a, b), math.min(a, b)\n\
    \tlocal r = math.fmod(x, y)\n\twhile r ~= 0 do\n\t\tx, y = y, r\n\t\tr = math.fmod(x,\
    \ y)\n\tend\n\treturn y\nend", "    if (b == 0) then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend", "    if b ==\
    \ 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    while a ~= b do\n        if a > b then\n       \
    \     a = a - b\n        else\n            b = b - a\n        end\n    end\n \
    \   return a\nend", "\treturn b ~= 0 and greatest_common_divisor(b, a % b) or\
    \ a\nend", "    if a < b then\n        a, b = b, a\n    end\n    local c = a %\
    \ b\n    if c == 0 then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ c)\n    end\nend", "  local a, b = toint(a), toint(b)\n  while b ~= 0 do\n \
    \   a, b = b, a % b\n  end\n  return abs(a)\nend", "    while b ~= 0 do\n    \
    \    a, b = b, a % b\n    end\n    return a\nend", "  if b == 0 then\n    return\
    \ a\n  else\n    return greatest_common_divisor(b, a % b)\n  end\nend", "  while\
    \ b ~= 0 do\n    a, b = b, a % b\n  end\n  return a\nend", "\twhile b ~= 0 do\n\
    \t\ta, b = b, a % b\n\tend\n\treturn a\nend", "  return (b == 0) and a or greatest_common_divisor(b,\
    \ a % b)\nend", "    while a ~= b do\n        if a > b then\n            a = a\
    \ - b\n        else\n            b = b - a\n        end\n    end\n    return a\n\
    end", "\tif b == 0 then\n\t\treturn a\n\telse\n\t\treturn greatest_common_divisor(b,\
    \ a % b)\n\tend\nend", "    if b > a then\n        a, b = b, a\n    end\n    while\
    \ b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "\ta = abs(a)\n\
    \tb = abs(b)\n\twhile b ~= 0 do\n\t\tlocal temp = a % b\n\t\ta = b\n\t\tb = temp\n\
    \tend\n\treturn a\nend", "\tlocal c;\n\twhile b ~= 0 do\n\t\tc = a % b;\n\t\t\
    a = b;\n\t\tb = c;\n\tend\n\treturn a;\nend", "  a = math.abs(a)\n  b = math.abs(b)\n\
    \  -- Euclid's algorithm\n  while b ~= 0 do\n    local remainder = a % b\n   \
    \ a = b\n    b = remainder\n  end\n  return a\nend", "\treturn b == 0 and a or\
    \ greatest_common_divisor(b, a % b)\nend", "    if a < b then\n        a, b =\
    \ b, a\n    end\n    local r = a % b\n    if r == 0 then\n        return b\n \
    \   else\n        return greatest_common_divisor(b, r)\n    end\nend", "  local\
    \ x = math.max(a, b)\n  local y = math.min(a, b)\n  while y ~= 0 do\n    local\
    \ t = y\n    y = x % y\n    x = t\n  end\n  return x\nend", "    while b ~= 0\
    \ do\n        local temp = a % b\n        a = b\n        b = temp\n    end\n \
    \   return a\nend", "    local divisor = 2\n    local gcd = 1", "    local a =\
    \ math.abs(a)\n    local b = math.abs(b)\n    if a < b then\n        a, b = b,\
    \ a\n    end\n    local r = a % b\n    while r ~= 0 do\n        a = b\n      \
    \  b = r\n        r = a % b\n    end\n    return b\nend", "    local r = a % b\n\
    \    if r == 0 then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ r)\n    end\nend", "\tlocal x, y = math.max(a, b), math.min(a, b)\n\tlocal r\n\
    \twhile y ~= 0 do\n\t\tr = x % y\n\t\tx = y\n\t\ty = r\n\tend\n\treturn x\nend",
  "  if b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a\
    \ % b)\n  end\nend", "  if a == 0 then\n    return b\n  elseif b == 0 then\n \
    \   return a\n  else\n    return greatest_common_divisor(b, a % b)\n  end\nend",
  "    --a should always be greater than b\n    if a < b then\n        a, b = b, a\n\
    \    end\n    local div = 2\n    while div <= b do\n        if a % div == 0 and\
    \ b % div == 0 then\n            return div\n        end\n        div = div +\
    \ 1\n    end\n    return 1\nend", "    if a == 0 then\n        return b\n    elseif\
    \ b == 0 then\n        return a\n    else\n        local ab = a * b\n        a\
    \ = floor(ab / a)\n        b = floor(ab / b)\n        local ab = a * b\n     \
    \   a = floor(ab / a)\n        b = floor(ab / b)\n        return greatest_common_divisor(ab\
    \ % a, ab % b)\n    end\nend", "    local r, t\n    if a < b then\n        r =\
    \ a\n        a = b\n        b = r\n    end\n    while b ~= 0 do\n        r = a\
    \ % b\n        a = b\n        b = r\n    end\n    return a\nend", "    local m\
    \ = a\n    local n = b\n    while m % n ~= 0 do\n        local t = m % n\n   \
    \     m = n\n        n = t\n    end\n    return n\nend", "    local c = a % b\n\
    \    if c == 0 then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ c)\n    end\nend", "  if b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "    if b == 0 then\n        return a\n    else\n     \
    \   return greatest_common_divisor(b, a % b)\n    end\nend", "  while a ~= b do\n\
    \    if a > b then\n      a = a - b\n    else\n      b = b - a\n    end\n  end\n\
    \  return a\nend", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n  \
    \  return a\nend", "\treturn a % b == 0 and b or greatest_common_divisor(b, a\
    \ % b)\nend", "    -- Euclidean algorithm\n    while b ~= 0 do\n        local\
    \ t = b\n        b = a % b\n        a = t\n    end\n    return a\nend", "  if\
    \ a < b then\n    a, b = b, a\n  end\n  while b ~= 0 do\n    a, b = b, a % b\n\
    \  end\n  return a\nend", "  return b == 0 and a or greatest_common_divisor(b,\
    \ a % b)\nend", "  local m, n = math.abs(a), math.abs(b)\n  local c = 0\n  while\
    \ m ~= 0 and n ~= 0 do\n    if m > n then\n      m = m % n\n    else\n      n\
    \ = n % m\n    end\n  end\n  return m + n\nend", "    local r\n    a = math.abs(a)\n\
    \    b = math.abs(b)\n    while b > 0 do\n        r = a % b\n        a = b\n \
    \       b = r\n    end\n    return a\nend", "    while b ~= 0 do\n        a, b\
    \ = b, a % b\n    end\n    return a\nend", "    a = abs(a)\n    b = abs(b)\n \
    \   while b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", " \
    \   return b == 0 and a or greatest_common_divisor(b, a % b)\nend", "    local\
    \ temp\n    while b ~= 0 do\n        temp = a % b\n        a = b\n        b =\
    \ temp\n    end\n    return a\nend", "    local res = math.abs(b)\n    while a\
    \ ~= 0 do\n        res = math.abs(a)\n        a = math.abs(b) % math.abs(a)\n\
    \        b = res\n    end\n    return res\nend", "  if a == 0 then\n    return\
    \ b\n  elseif b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    while b\
    \ ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "    while a\
    \ ~= b do\n        if a > b then\n            a = a - b\n        else\n      \
    \      b = b - a\n        end\n    end\n    return a\nend", "  local a, b = math.abs(a),\
    \ math.abs(b)\n  if a < b then\n    a, b = b, a\n  end\n  local t = a % b\n  while\
    \ t ~= 0 do\n    a, b = b, t\n    t = a % b\n  end\n  return b\nend", "    local\
    \ m = math.min(a, b)\n    local gcd = 1\n    for i = 2, m do\n        if a % i\
    \ == 0 and b % i == 0 then\n            gcd = i\n        end\n    end\n    return\
    \ gcd\nend", "    local a, b = abs(a), abs(b)\n    while b ~= 0 do\n        a,\
    \ b = b, a % b\n    end\n    return a\nend", "    a = math.abs(a)\n    b = math.abs(b)\n\
    \    while a ~= 0 do\n        local old_a = a\n        a = b % a\n        b =\
    \ old_a\n    end\n    return b\nend", "    -- Let's put a < b\n    if a > b then\n\
    \        local tmp = a\n        a = b\n        b = tmp\n    end", "    local a,\
    \ b = abs(a), abs(b)\n    while b ~= 0 do\n        a, b = b, a % b\n    end\n\
    \    return a\nend", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n\
    \    return a\nend", "  while b ~= 0 do\n    local t = b\n    b = a % b\n    a\
    \ = t\n  end\n  return a\nend", "    if a < b then\n        a, b = b, a\n    end\n\
    \    while a ~= b do\n        a, b = b, a % b\n    end\n    return a\nend", " \
    \   return b == 0 and a or greatest_common_divisor(b, a % b)\nend", "    while\
    \ b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "    if b ==\
    \ 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    a = abs(a)\n    b = abs(b)\n    while a ~= 0 do\n\
    \        a, b = b % a, a\n    end\n    return b\nend", "  if a == 0 then\n   \
    \ return b\n  elseif b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "  local r\n  if a == 0 then\n    return b\n  elseif b\
    \ == 0 then\n    return a\n  else\n    r = a % b\n    return greatest_common_divisor(b,\
    \ r)\n  end\nend", "  if b == 0 then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend", "    local temp = nil\n    if b > a then\n        temp\
    \ = a\n        a = b\n        b = temp\n    end\n    local factor = a\n    while\
    \ factor >= 2 do\n        if a % factor == 0 and b % factor == 0 then\n      \
    \      return factor\n        end\n        factor = factor - 1\n    end\n    return\
    \ 1\nend", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return\
    \ a\nend", "  local t\n  while b ~= 0 do\n    t = b\n    b = a % b\n    a = t\n\
    \  end\n  return a\nend", "    if b == 0 then\n        return a\n    else\n  \
    \      return greatest_common_divisor(b, a % b)\n    end\nend", "    while b ~=\
    \ 0 do\n        local tmp = a % b\n        a = b\n        b = tmp\n    end\n \
    \   return a\nend", "    local temp = 0\n    while a ~= 0 do\n        temp = a\n\
    \        a = b % a\n        b = temp\n    end\n    return b\nend", "    -- swap\n\
    \    if b > a then\n        a, b = b, a\n    end", "  local r = a % b\n  while\
    \ r ~= 0 do\n    a = b\n    b = r\n    r = a % b\n  end\n  return b\nend", " \
    \ -- base case:\n  if b == 0 then\n    return a\n  end\n  return greatest_common_divisor(b,\
    \ a % b)\nend", "\twhile b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend",
  "  local a, b = math.abs(a), math.abs(b)\n  if a < b then\n    a, b = b, a\n  end\n\
    \  while a % b ~= 0 do\n    a, b = b, a % b\n  end\n  return b\nend", "    while\
    \ b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "    if a ==\
    \ 0 then\n        return b\n    elseif b == 0 then\n        return a\n    else\n\
    \        local r = a % b\n        return greatest_common_divisor(b, r)\n    end\n\
    end", "    if b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "\tlocal r = a % b\n\twhile r ~= 0 do\n\t\ta = b\n\t\t\
    b = r\n\t\tr = a % b\n\tend\n\treturn b\nend", "  while b ~= 0 do\n    a, b =\
    \ b, a % b\n  end\n  return a\nend", "    local bigger, smaller = math.max(a,\
    \ b), math.min(a, b)\n    while true do\n        local remainder = bigger % smaller\n\
    \        if remainder == 0 then\n            return smaller\n        end\n   \
    \     bigger, smaller = smaller, remainder\n    end\nend", "\twhile b ~= 0 do\n\
    \t\ta, b = b, a % b\n\tend\n\treturn a\nend", "    while b ~= 0 do\n        a,\
    \ b = b, a % b\n    end\n    return a\nend", "    local m, n = math.abs(a), math.abs(b)\n\
    \    local r = n % m\n    while r ~= 0 do\n        n = m\n        m = r\n    \
    \    r = n % m\n    end\n    return m\nend", "\ta = math.abs(a)\n\tb = math.abs(b)\n\
    \t\n\tlocal r = a % b\n\twhile r ~= 0 do\n\t\ta = b\n\t\tb = r\n\t\tr = a % b\n\
    \tend\n\t\n\treturn b\nend", "  local bigger, smaller\n  if a >= b then\n    bigger\
    \ = a\n    smaller = b\n  else\n    bigger = b\n    smaller = a\n  end\n  local\
    \ remainder = bigger % smaller\n  if remainder == 0 then\n    return smaller\n\
    \  else\n    return greatest_common_divisor(smaller, remainder)\n  end\nend",
  "    local r = a % b\n    while r ~= 0 do\n        a = b\n        b = r\n      \
    \  r = a % b\n    end\n    return b\nend", "  return b == 0 and a or greatest_common_divisor(b,\
    \ a % b)\nend", "    if b == 0 then\n        return a\n    else\n        return\
    \ greatest_common_divisor(b, a % b)\n    end\nend", "    if a == 0 then\n    \
    \    return b\n    elseif b == 0 then\n        return a\n    else\n        if\
    \ a > b then\n            return greatest_common_divisor(a % b, b)\n        else\n\
    \            return greatest_common_divisor(a, b % a)\n        end\n    end\n\
    end", "    while b ~= 0 do\n        local remainder = a % b\n        a = b\n \
    \       b = remainder\n    end\n    return a\nend", "  local r = a % b\n  if r\
    \ == 0 then\n    return b\n  else\n    return greatest_common_divisor(b, r)\n\
    \  end\nend", "  while b ~= 0 do\n    local t = b\n    b = a % b\n    a = t\n\
    \  end\n  return a\nend", "  -- replace this with your implementation\n  local\
    \ m = math.max(a, b)\n  local n = math.min(a, b)\n  if n == 0 then\n    return\
    \ m\n  else\n    return greatest_common_divisor(n, m % n)\n  end\nend", "\tlocal\
    \ t\n\twhile b ~= 0 do\n\t\tt = b\n\t\tb = a % b\n\t\ta = t\n\tend\n\treturn a\n\
    end", "    return a == 0 and b or greatest_common_divisor(b % a, a)\nend", " \
    \   local tmp\n    while b ~= 0 do\n        tmp = a % b\n        a = b\n     \
    \   b = tmp\n    end\n    return a\nend", "\tlocal c = a % b\n\twhile c ~= 0 do\n\
    \t\ta = b\n\t\tb = c\n\t\tc = a % b\n\tend\n\treturn b\nend", "\tlocal r = a %\
    \ b\n\twhile r ~= 0 do\n\t\ta = b\n\t\tb = r\n\t\tr = a % b\n\tend\n\treturn b\n\
    end", "  -- Euclid's Algorithm\n  while a ~= 0 do\n    a, b = b % a, a\n  end\n\
    \  return b\nend", "    if b == 0 then\n        return a\n    else\n        return\
    \ greatest_common_divisor(b, a % b)\n    end\nend", "    while a ~= b do\n   \
    \     if a > b then\n            a = a - b\n        else\n            b = b -\
    \ a\n        end\n    end\n    return a\nend", "  local r = a % b\n  while r ~=\
    \ 0 do\n    a = b\n    b = r\n    r = a % b\n  end\n  return b\nend", "    local\
    \ remainder = a % b\n    if remainder == 0 then\n        return b\n    else\n\
    \        return greatest_common_divisor(b, remainder)\n    end\nend", "\twhile\
    \ b ~= 0 do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend", "    if a == 0 then\n\
    \        return b\n    elseif b == 0 then\n        return a\n    else\n      \
    \  return greatest_common_divisor(b, a % b)\n    end\nend", "    if b == 0 then\n\
    \        return a\n    else\n        return greatest_common_divisor(b, a % b)\n\
    \    end\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    while b ~= 0 do\n\
    \        a, b = b, a % b\n    end\n    return a\nend", "    while a > 0 do\n \
    \       a, b = b % a, a\n    end\n    return b\nend", "    a = math.abs(a)\n \
    \   b = math.abs(b)\n    local r = a % b\n    while r ~= 0 do\n        a = b\n\
    \        b = r\n        r = a % b\n    end\n    return b\nend", "    while b ~=\
    \ 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "\tlocal dividend,\
    \ divisor = math.max(a, b), math.min(a, b)\n\twhile divisor ~= 0 do\n\t\tlocal\
    \ remainder = math.fmod(dividend, divisor)\n\t\tdividend, divisor = divisor, remainder\n\
    \tend\n\treturn dividend\nend", "    -- Euclidean algorithm is used for GCD computation\n\
    \    if b == 0 then\n        return a\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend", "    return b == 0 and a or greatest_common_divisor(b,\
    \ a % b)\nend", "  -- The math.floor is not strictly necessary.\n  -- Instead\
    \ we could also use a <= b, but that would require a bit more code\n  -- lines\
    \ as in the if branch would be a > b\n  if math.floor(a) <= math.floor(b) then\n\
    \    if b % a == 0 then\n      return a\n    else\n      -- The math.floor is\
    \ not strictly necessary.\n      -- Instead we could also use a <= b, but that\
    \ would require a bit more code\n      -- lines as in the if branch would be a\
    \ > b\n      if math.floor(b / a) == math.floor(b / a) then\n        return greatest_common_divisor(a,\
    \ b - a * math.floor(b / a))\n      else\n        return greatest_common_divisor(a,\
    \ math.floor(b / a))\n      end\n    end\n  else\n    return greatest_common_divisor(b,\
    \ a)\n  end\nend", "    if b == 0 then\n        return a\n    else\n        return\
    \ greatest_common_divisor(b, a % b)\n    end\nend", "    local r = a % b\n   \
    \ while r ~= 0 do\n        a = b\n        b = r\n        r = a % b\n    end\n\
    \    return b\nend", "    local c = a % b\n    if c == 0 then\n        return\
    \ b\n    else\n        return greatest_common_divisor(b, c)\n    end\nend", "\t\
    local _gcd = a\n\tlocal _a = a\n\tlocal _b = b\n\twhile _b ~= 0 do\n\t\t_gcd =\
    \ _b\n\t\t_b = _a % _b\n\t\t_a = _gcd\n\tend\n\treturn _gcd\nend", "  while a\
    \ ~= b do\n    if a > b then\n      a = a - b\n    else\n      b = b - a\n   \
    \ end\n  end\n  return a\nend", "\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend", "\tlocal c\n\twhile b ~=\
    \ 0 do\n\t\tc = a % b\n\t\ta = b\n\t\tb = c\n\tend\n\treturn a\nend", "\tlocal\
    \ r = a % b\n\twhile r ~= 0 do\n\t\ta = b\n\t\tb = r\n\t\tr = a % b\n\tend\n\t\
    return b\nend", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return\
    \ a\nend", "\twhile b ~= 0 do\n\t\tlocal tmp = b\n\t\tb = a % b\n\t\ta = tmp\n\
    \tend\n\treturn a\nend", "  -- If one of the arguments is 0, then gcd is the other\
    \ argument\n  if a == 0 then\n    return b\n  elseif b == 0 then\n    return a\n\
    \  end", "    while b ~= 0 do\n        a, b = b, a % b\n    end\n    return a\n\
    end", "    if a == 0 then\n        return b\n    elseif b == 0 then\n        return\
    \ a\n    else\n        if a >= b then\n            a = a % b\n        else\n \
    \           b = b % a\n        end\n        return greatest_common_divisor(a,\
    \ b)\n    end\nend", "\ta = abs(a)\n\tb = abs(b)\n\t-- Euclidean algorithm\n\t\
    while (b ~= 0) do\n\t\ta, b = b, a % b\n\tend\n\treturn a\nend", "  -- From https://en.wikipedia.org/wiki/Euclidean_algorithm#Implementations\n\
    \  while b ~= 0 do\n    local t = b\n    b = a % b\n    a = t\n  end\n  return\
    \ a\nend", "  while b ~= 0 do\n    local c = a % b\n    a = b\n    b = c\n  end\n\
    \  return a\nend", "  while b ~= 0 do\n    local tmp = a % b\n    a = b\n    b\
    \ = tmp\n  end\n  return a\nend", "\tif b == 0 then\n\t\treturn a\n\telse\n\t\t\
    return greatest_common_divisor(b, a % b)\n\tend\nend", "    a = math.abs(a)\n\
    \    b = math.abs(b)\n    while a ~= 0 do\n        a, b = b % a, a\n    end\n\
    \    return b\nend", "    a = math.abs(a)\n    b = math.abs(b)\n    while b ~=\
    \ 0 do\n        a, b = b, a % b\n    end\n    return a\nend", "  if (a == 0) then\n\
    \    return b\n  elseif (b == 0) then\n    return a\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

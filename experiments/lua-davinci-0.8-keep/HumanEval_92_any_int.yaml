name: HumanEval_92_any_int
language: lua
prompt: "-- Create a function that takes 3 numbers.\n-- Returns true if one of the\
  \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
  -- Returns false in any other cases.\n-- Examples\n-- any_int(5, 2, 7) \u279E True\n\
  -- any_int(3, 2, 2) \u279E False\n-- any_int(3, -2, 1) \u279E True\n-- any_int(3.6,\
  \ -2.2, 2) \u279E False\nlocal function any_int(x, y, z)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = any_int\n\
  \    lu.assertEquals(candidate(2, 3, 1), true)\n    lu.assertEquals(candidate(2.5,\
  \ 2, 3), false)\n    lu.assertEquals(candidate(1.5, 5, 3.5), false)\n    lu.assertEquals(candidate(2,\
  \ 6, 2), false)\n    lu.assertEquals(candidate(4, 2, 2), true)\n    lu.assertEquals(candidate(2.2,\
  \ 2.2, 2.2), false)\n    lu.assertEquals(candidate(-4, 6, 2), true)\n    lu.assertEquals(candidate(2,\
  \ 1, 1), true)\n    lu.assertEquals(candidate(3, 4, 7), true)\n    lu.assertEquals(candidate(3.0,\
  \ 4, 7), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  return x % 1 == 0 and y % 1 == 0 and z % 1 == 0 and (x + y == z or\
    \ x + z == y or y + z == x)\nend", "  if x==math.floor(x) and y==math.floor(y)\
    \ and z==math.floor(z) then\n    if x==y+z or y==x+z or z==x+y then\n      return\
    \ true\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  return math.type(x) == \"integer\" and math.type(y) == \"integer\" and\
    \ math.type(z) == \"integer\" and (x + y == z or x + z == y or y + z == x)\nend",
  "    if x == y + z then\n        return true\n    elseif y == x + z then\n     \
    \   return true\n    elseif z == x + y then\n        return true\n    else\n \
    \       return false\n    end\nend", "    if x == (y + z) or y == (x + z) or z\
    \ == (x + y) then\n        return true\n    else\n        return false\n    end\n\
    end", "  if x ~= z and x ~= y and z ~= y then\n    if x + y == z or x + z == y\
    \ or y + z == x then\n      return true\n    else\n      return false\n    end\n\
    \  else\n    return false\n  end\nend", "  local sum = x + y + z\n  return (x\
    \ == y + z) or (y == x + z) or (z == x + y)\nend", "    return x + y == z or x\
    \ + z == y or y + z == x\nend", "    return ((x % 1 == 0) and (y % 1 == 0) and\
    \ (z % 1 == 0)) and ((x + y == z) or (x + z == y) or (y + z == x))\nend", "  if\
    \ x == y + z or y == x + z or z == x + y then\n    return true\n  else\n    return\
    \ false\n  end\nend", "\treturn type(x) == \"number\" and type(y) == \"number\"\
    \ and type(z) == \"number\" and (z==x+y or y==x+z or x==y+z)\nend\nreturn any_int",
  "    local a = x + y\n    local b = x + z\n    local c = y + z\n    if a == z or\
    \ b == y or c == x then\n        return true\n    else\n        return false\n\
    \    end\nend\nassert(any_int(5, 2, 7) == true)\nassert(any_int(3, 2, 2) == false)\n\
    assert(any_int(3, -2, 1) == true)\nassert(any_int(3.6, -2.2, 2) == false)", " \
    \   return (x == y + z or y == x + z or z == x + y) and (x % 1 == 0 and y % 1\
    \ == 0 and z % 1 == 0)\nend", "    if x % 1 == 0 and y % 1 == 0 and z % 1 == 0\
    \ then\n        if x == y + z or y == x + z or z == x + y then\n            return\
    \ true\n        else\n            return false\n        end\n    else\n      \
    \  return false\n    end\nend", "    return x == y + z or y == x + z or z == x\
    \ + y\nend", "    return x+y == z or x+z == y or y+z == x\nend", "\tlocal x, y,\
    \ z = math.floor(x), math.floor(y), math.floor(z)\n\treturn x == y + z or y ==\
    \ x + z or z == x + y\nend", "    if x + y == z or x + z == y or y + z == x then\n\
    \        return true\n    elseif x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then\n\
    \        return true\n    else\n        return false\n    end\nend", "    if x\
    \ + y == z or x + z == y or y + z == x then\n        return true\n    else\n \
    \       return false\n    end\nend", "  local result = false\n  if type(x) ==\
    \ \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n    if\
    \ x == y + z or y == x + z or z == x + y then\n      if x % 1 == 0 and y % 1 ==\
    \ 0 and z % 1 == 0 then\n        result = true\n      end\n    end\n  end\n  return\
    \ result\nend", "  if x == y + z or y == x + z or z == x + y then\n    return\
    \ true\n  else\n    return false\n  end\nend", "    return (x + y == z or x +\
    \ z == y or y + z == x) and (math.floor(x) == x and math.floor(y) == y and math.floor(z)\
    \ == z)\nend", "    local x_type = type(x)\n    local y_type = type(y)\n    local\
    \ z_type = type(z)\n    if x_type == \"number\" and y_type == \"number\" and z_type\
    \ == \"number\" then\n        if math.floor(x) == x and math.floor(y) == y and\
    \ math.floor(z) == z then\n            if x == y + z or y == x + z or z == x +\
    \ y then\n                return true\n            end\n        end\n    end\n\
    \    return false\nend", "    return x == y + z or y == x + z or z == x + y\n\
    end", "\tif x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then\n\t\tif x == y + z or\
    \ y == x + z or z == x + y then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\n\
    end", "    -- return false if any of the values is not an integer\n    if type(x)\
    \ ~= \"number\" or type(y) ~= \"number\" or type(z) ~= \"number\" then\n     \
    \   return false\n    end\n    -- return true if any of the integers is the sum\
    \ of the other two integers\n    if x == y + z or y == x + z or z == x + y then\n\
    \        return true\n    end\n    -- return false otherwise\n    return false\n\
    end", "  local numbers = {x, y, z}\n  table.sort(numbers)\n  local a, b, c = unpack(numbers)\n\
    \  return a + b == c and c % 1 == 0 and a % 1 == 0 and b % 1 == 0\nend", "  return\
    \ (x == y + z) or (y == x + z) or (z == x + y)\nend", "\treturn (x+y==z or x+z==y\
    \ or y+z==x) and x%1==0 and y%1==0 and z%1==0\nend", "    if type(x) ~= \"number\"\
    \ or type(y) ~= \"number\" or type(z) ~= \"number\" then\n        return false\n\
    \    end\n    if x - math.floor(x) == 0 and y - math.floor(y) == 0 and z - math.floor(z)\
    \ == 0 then\n        if x == y + z or y == x + z or z == x + y then\n        \
    \    return true\n        end\n    end\n    return false\nend", "    return (x\
    \ + y == z or x + z == y or y + z == x) and (x % 1 == 0 and y % 1 == 0 and z %\
    \ 1 == 0)\nend", "    return x % 1 == 0 and y % 1 == 0 and z % 1 == 0 and (x +\
    \ y == z or x + z == y or y + z == x)\nend", "  local result\n  if (x + y == z)\
    \ or (x + z == y) or (y + z == x) then\n    result = true\n  else\n    result\
    \ = false\n  end\n  return result\nend", "    if (x + y == z) or (x + z == y)\
    \ or (y + z == x) then\n        return true\n    else\n        return false\n\
    \    end\nend", "    -- body\nend", "\treturn (x + y == z or x + z == y or y +\
    \ z == x) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\nend", "    if type(x)\
    \ == \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n   \
    \     if x - math.floor(x) == 0 and y - math.floor(y) == 0 and z - math.floor(z)\
    \ == 0 then\n            if x == y + z or y == x + z or z == x + y then\n    \
    \            return true\n            else\n                return false\n   \
    \         end\n        else\n            return false\n        end\n    else\n\
    \        return false\n    end\nend", "  return x == y + z or y == x + z or z\
    \ == x + y\nend", "  return (x == y + z or y == x + z or z == x + y) and (x %\
    \ 1 == 0) and (y % 1 == 0) and (z % 1 == 0)\nend", "    if x ~= y + z and y ~=\
    \ x + z and z ~= x + y then\n        return false\n    else\n        return true\n\
    \    end\nend", "    if x == y + z or y == x + z or z == x + y then\n        return\
    \ true\n    else\n        return false\n    end\nend", "  local res = false\n\
    \  if x == y + z or y == x + z or z == x + y then\n    res = true\n  end\n  return\
    \ res\nend", "  return (x + y == z) or (x + z == y) or (y + z == x)\nend", " \
    \   return (x + y == z or x + z == y or y + z == x) and (x % 1 == 0) and (y %\
    \ 1 == 0) and (z % 1 == 0)\nend", "\tif x==y+z or y==x+z or z==x+y then\n\t\t\
    return true\n\telse\n\t\treturn false\n\tend\nend\nreturn any_int", "    return\
    \ x + y == z or x + z == y or y + z == x\nend", "    if (math.floor(x) == x and\
    \ math.floor(y) == y and math.floor(z) == z) then\n        if (x == y + z or y\
    \ == x + z or z == x + y) then\n            return true\n        end\n    end\n\
    \    return false\nend", "  return x % 1 == 0 and y % 1 == 0 and z % 1 == 0 and\
    \ (x + y == z or x + z == y or y + z == x)\nend", "    -- write the body of the\
    \ function here\n    sum = x + y + z\n    if x == sum then\n        return true\n\
    \    elseif y == sum then\n        return true\n    elseif z == sum then\n   \
    \     return true\n    else\n        return false\n    end\nend", "\tif type(x)\
    \ ~= \"number\" or type(y) ~= \"number\" or type(z) ~= \"number\" then\n\t\treturn\
    \ false\n\tend\n\tif x == y + z or y == x + z or z == x + y then\n\t\treturn true\n\
    \tend\n\treturn false\nend", "    if type(x) == \"number\" and type(y) == \"number\"\
    \ and type(z) == \"number\" then\n        if x == y + z or y == x + z or z ==\
    \ x + y then\n            return true\n        else\n            return false\n\
    \        end\n    else\n        return false\n    end\nend", "  if type(x) ==\
    \ \"number\" and type(y) == \"number\" and type(z) == \"number\" then\n    if\
    \ x == y + z or y == x + z or z == x + y then\n      return true\n    else\n \
    \     return false\n    end\n  else\n    return false\n  end\nend", "    return\
    \ (x + y == z or x + z == y or y + z == x) and x % 1 == 0 and y % 1 == 0 and z\
    \ % 1 == 0\nend", "  return x == y + z or y == x + z or z == x + y\nend", "  return\
    \ x + y == z or x + z == y or y + z == x\nend", "  if x == y + z or y == x + z\
    \ or z == x + y then\n    return true\n  else\n    return false\n  end\nend",
  "  if (x + y == z) or (x + z == y) or (y + z == x) then\n    return true\n  else\n\
    \    return false\n  end\nend\nreturn any_int", "    return x + y == z or x +\
    \ z == y or y + z == x\nend", "\tif x + y == z or x + z == y or y + z == x then\n\
    \t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "    return x == y + z\
    \ or y == x + z or z == x + y and math.floor(x) == x and math.floor(y) == y and\
    \ math.floor(z) == z\nend", "  if math.floor(x) == x and math.floor(y) == y and\
    \ math.floor(z) == z then\n    if x + y == z or x + z == y or y + z == x then\n\
    \      return true\n    else\n      return false\n    end\n  else\n    return\
    \ false\n  end\nend", "\treturn (x == y + z or y == x + z or z == x + y) and x\
    \ % 1 == 0 and y % 1 == 0 and z % 1 == 0\nend", "    if x == y + z then\n    \
    \    return true\n    elseif y == x + z then\n        return true\n    elseif\
    \ z == x + y then\n        return true\n    else\n        return false\n    end\n\
    end\nassert(any_int(5, 2, 7) == true)\nassert(any_int(3, 2, 2) == false)\nassert(any_int(3,\
    \ -2, 1) == true)\nassert(any_int(3.6, -2.2, 2) == false)", "    return (x+y ==\
    \ z or x+z == y or y+z == x) and (x == math.floor(x) and y == math.floor(y) and\
    \ z == math.floor(z))\nend", "    return math.floor(x) == x and math.floor(y)\
    \ == y and math.floor(z) == z and\n            (x + y == z or x + z == y or y\
    \ + z == x)\nend", "  if x == y + z or y == x + z or z == x + y then\n    return\
    \ true\n  else\n    return false\n  end\nend", "    if type(x) == \"number\" and\
    \ type(y) == \"number\" and type(z) == \"number\" then\n        if x % 1 == 0\
    \ and y % 1 == 0 and z % 1 == 0 then\n            if x + y == z or x + z == y\
    \ or y + z == x then\n                return true\n            else\n        \
    \        return false\n            end\n        else\n            return false\n\
    \        end\n    else\n        return false\n    end\nend", "    if x == y +\
    \ z or y == x + z or z == x + y then\n        return true\n    else\n        return\
    \ false\n    end\nend", "  return x == y + z or y == x + z or z == x + y\nend",
  "    local numbers = {x, y, z}\n    local success = false\n    for i, number in\
    \ ipairs(numbers) do\n        for j, number2 in ipairs(numbers) do\n         \
    \   if (number ~= number2) then\n                for k, number3 in ipairs(numbers)\
    \ do\n                    if (number2 ~= number3) and (number ~= number3) then\n\
    \                        if (number == number2 + number3) then\n             \
    \               success = true\n                        end\n                \
    \    end\n                end\n            end\n        end\n    end\n    return\
    \ success\nend", "\tif x == y + z or y == x + z or z == x + y then\n\t\tif math.floor(x)\
    \ == x and math.floor(y) == y and math.floor(z) == z then\n\t\t\treturn true\n\
    \t\tend\n\tend\n\treturn false\nend", "    return (x + y == z) or (x + z == y)\
    \ or (y + z == x)\nend", "    if type(x) ~= \"number\" or type(y) ~= \"number\"\
    \ or type(z) ~= \"number\" then\n        return false\n    end\n    if math.floor(x)\
    \ ~= x or math.floor(y) ~= y or math.floor(z) ~= z then\n        return false\n\
    \    end\n    if x == y + z or y == x + z or z == x + y then\n        return true\n\
    \    end\n    return false\nend", "  -- body\nend", "  if x + y == z or x + z\
    \ == y or y + z == x then\n    return true\n  else\n    return false\n  end\n\
    end", "  return x == y + z or y == x + z or z == x + y and not (x % 1 ~= 0 or\
    \ y % 1 ~= 0 or z % 1 ~= 0)\nend", "  return (x + y == z) or (x + z == y) or (y\
    \ + z == x)\nend", "  -- code goes here\n  --local is_equal, sum = z == x + y\
    \ or z == y + x, x + y + z\n  --return is_equal and sum % 1 == 0\n  return x %\
    \ 1 == 0 and y % 1 == 0 and z % 1 == 0 and (z == x + y or z == y + x)\nend", " \
    \   local sum = x + y + z\n    if x == sum or y == sum or z == sum then\n    \
    \    return true\n    else\n        return false\n    end\nend", "  return x %\
    \ 1 == 0 and y % 1 == 0 and z % 1 == 0 and\n  (x + y == z or x + z == y or y +\
    \ z == x)\nend", "    if (x + y == z or x + z == y or y + z == x) and\n      \
    \  (math.floor(x) == x and math.floor(y) == y and math.floor(z) == z) then\n \
    \       return true\n    else\n        return false\n    end\nend", "    return\
    \ (x + y == z or x + z == y or y + z == x) and (math.floor(x) == x and math.floor(y)\
    \ == y and math.floor(z) == z)\nend", "\tif type(x) == \"number\" and type(y)\
    \ == \"number\" and type(z) == \"number\" then\n\t\tlocal xi = (x == math.floor(x))\n\
    \t\tlocal yi = (y == math.floor(y))\n\t\tlocal zi = (z == math.floor(z))\n\t\t\
    local sum = (x + y == z)\n\t\tlocal sum2 = (x + z == y)\n\t\tlocal sum3 = (y +\
    \ z == x)\n\t\treturn xi and yi and zi and (sum or sum2 or sum3)\n\telse\n\t\t\
    return false\n\tend\nend", "  if x == y + z or y == x + z or z == x + y then\n\
    \    return true\n  else\n    return false\n  end\nend", "    -- your code goes\
    \ here\nend", "  return x == y + z or y == x + z or z == x + y\nend", "  if x\
    \ == y + z or y == x + z or z == x + y then\n    return true\n  else\n    return\
    \ false\n  end\nend", "  local bool = false\n  if ((x == y + z) or (y == x + z)\
    \ or (z == x + y)) and (x == math.floor(x)) and (y == math.floor(y)) and (z ==\
    \ math.floor(z)) then\n    bool = true\n  end\n  return bool\nend", "    if x\
    \ == y + z then\n        return true\n    elseif y == x + z then\n        return\
    \ true\n    elseif z == x + y then\n        return true\n    else\n        return\
    \ false\n    end\nend", "  -- write your code here\nend", "\treturn x+y==z or\
    \ x+z==y or y+z==x and x==x%1 and y==y%1 and z==z%1\nend", "    if x % 1 == 0\
    \ and y % 1 == 0 and z % 1 == 0 then\n        return (x + y == z) or (x + z ==\
    \ y) or (y + z == x)\n    else\n        return false\n    end\nend", "    local\
    \ x_is_sum, y_is_sum, z_is_sum = false, false, false\n    if math.floor(x) ==\
    \ x then\n        x_is_sum = x == y + z or x == y - z or x == z - y\n    end\n\
    \    if math.floor(y) == y then\n        y_is_sum = y == x + z or y == x - z or\
    \ y == z - x\n    end\n    if math.floor(z) == z then\n        z_is_sum = z ==\
    \ x + y or z == x - y or z == y - x\n    end\n    return x_is_sum or y_is_sum\
    \ or z_is_sum\nend", "  if type(x) == \"number\" and type(y) == \"number\" and\
    \ type(z) == \"number\" then\n    if x == y + z or y == x + z or z == x + y then\n\
    \      return true\n    else\n      return false\n    end\n  else\n    return\
    \ false\n  end\nend", "  -- code here\nend", "    if (x + y == z) or (x + z ==\
    \ y) or (y + z == x) then\n        return true\n    else\n        return false\n\
    \    end\nend", "  return (x + y == z) or (x + z == y) or (y + z == x)\nend",
  "\tif (x + y == z) and (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0) then\n\t\t\
    return true\n\telseif (x + z == y) and (x % 1 == 0) and (y % 1 == 0) and (z %\
    \ 1 == 0) then\n\t\treturn true\n\telseif (y + z == x) and (x % 1 == 0) and (y\
    \ % 1 == 0) and (z % 1 == 0) then\n\t\treturn true\n\telse\n\t\treturn false\n\
    \tend\nend", "    if (x == y + z) or (y == x + z) or (z == x + y) then\n     \
    \   return true\n    else\n        return false\n    end\nend\nprint(any_int(1,2,3))\n\
    print(any_int(1,2,2))", "    return (x == y + z or y == x + z or z == x + y) and\
    \ (math.floor(x) == x and math.floor(y) == y and math.floor(z) == z)\nend", " \
    \ return x + y == z or x + z == y or y + z == x\nend", "  -- code goes here\n\
    end", "\tif x == y + z or y == x + z or z == x + y then\n\t\treturn true\n\telse\n\
    \t\treturn false\n\tend\nend", "    -- Your code here\nend", "  local first_check\
    \ = x + y == z\n  local second_check = x + z == y\n  local third_check = y + z\
    \ == x\n  local fourth_check = x % 1 == 0 and y % 1 == 0 and z % 1 == 0\n  return\
    \ first_check or second_check or third_check and fourth_check\nend", "    local\
    \ result = false\n    if x == y + z or y == x + z or z == x + y then\n       \
    \ result = true\n    end\n    return result\nend", "\tif x+y == z or x+z == y\
    \ or y+z == x then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend", " \
    \   return x + y == z or x + z == y or y + z == x\nend", end, "    if x - y ==\
    \ z or y - x == z or x - z == y or z - x == y or y - z == x or z - y == x then\n\
    \        return true\n    elseif x + y == z or y + x == z or x + z == y or z +\
    \ x == y or y + z == x or z + y == x then\n        return true\n    else\n   \
    \     return false\n    end\nend", "    if x == y + z or y == x + z or z == x\
    \ + y then\n        return true\n    else\n        return false\n    end\nend",
  "    if x == y + z or y == x + z or z == x + y then\n        return true\n    else\n\
    \        return false\n    end\nend", "    -- write your code here\n    return\
    \ true\nend", "  return x + y == z or x + z == y or y + z == x and true or false\n\
    end", "  return x + y == z or x + z == y or y + z == x\nend", "    if (x + y ==\
    \ z) or (x + z == y) or (y + z == x) then\n        return true\n    else\n   \
    \     return false\n    end\nend", end, "    -- return (x == y + z or y == x +\
    \ z or z == x + y) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\n    -- \u4E09\
    \u4E2A\u6570\u5B57\u6A211\u4E4B\u540E\u5FC5\u987B\u662F0\uFF0C\u624D\u662F\u6574\
    \u6570\n    return (x % 1 == 0 and y % 1 == 0 and z % 1 == 0) and (x == y + z\
    \ or y == x + z or z == x + y)\nend", "  -- get the sum of x and y\n  local x_plus_y\
    \ = x + y\n  -- if x is the sum of x and y and x is an integer and y is an integer\n\
    \  if x == x_plus_y and math.floor(x) == x and math.floor(y) == y then\n    --\
    \ return true\n    return true\n  -- get the sum of x and z\n  local x_plus_z\
    \ = x + z\n  -- if x is the sum of x and z and x is an integer and z is an integer\n\
    \  elseif x == x_plus_z and math.floor(x) == x and math.floor(z) == z then\n \
    \   -- return true\n    return true\n  -- get the sum of y and z\n  local y_plus_z\
    \ = y + z\n  -- if y is the sum of y and z and y is an integer and z is an integer\n\
    \  elseif y == y_plus_z and math.floor(y) == y and math.floor(z) == z then\n \
    \   -- return true\n    return true\n  -- otherwise return false\n  else\n   \
    \ return false\n  end\nend", "    return (x % 1 == 0 and y % 1 == 0 and z % 1\
    \ == 0) and (x + y == z or x + z == y or y + z == x)\nend", "  return (x + y ==\
    \ z or x + z == y or y + z == x) and (x - math.floor(x) == 0 and y - math.floor(y)\
    \ == 0 and z - math.floor(z) == 0)\nend", "  return x + y == z or x + z == y or\
    \ y + z == x\nend", "  local sum = x + y + z\n  if x + y == z or x + z == y or\
    \ y + z == x then\n    return true\n  else\n    return false\n  end\nend", " \
    \ return (x - y == z) or (x - z == y) or (y - x == z) or (y - z == x) or (z -\
    \ x == y) or (z - y == x)\nend", "    return (\n        (x == y + z) or\n    \
    \    (y == x + z) or\n        (z == x + y)\n    ) and (\n        (math.floor(x)\
    \ == x) and\n        (math.floor(y) == y) and\n        (math.floor(z) == z)\n\
    \    )\nend", "  local function is_int(num)\n    return num % 1 == 0\n  end\n\
    \  return is_int(x) and is_int(y) and is_int(z) and (x + y == z or x + z == y\
    \ or y + z == x)\nend\nreturn any_int", "    return x + y == z or x + z == y or\
    \ y + z == x\nend", "    if x == y + z or y == x + z or z == x + y then\n    \
    \    return true\n    else\n        return false\n    end\nend", "  return (x\
    \ + y == z) or (x + z == y) or (y + z == x)\nend", "  return x + y == z or x +\
    \ z == y or y + z == x\nend", "  local t = {x, y, z}\n  local sum = 0\n  for i\
    \ = 1, 3 do\n    if math.type(t[i]) == \"integer\" then\n      sum = sum + 1\n\
    \    end\n  end\n  return sum >= 2 and x + y == z or x + z == y or y + z == x\n\
    end", "  local sum = x + y + z\n  if x == sum / 2 or y == sum / 2 or z == sum\
    \ / 2 then\n    return true\n  else\n    return false\n  end\nend", "    if x\
    \ == y + z or y == x + z or z == x + y then\n        return true\n    else\n \
    \       return false\n    end\nend", "  return x + y == z or x + z == y or y +\
    \ z == x\nend", "  local numbers = {x, y, z}\n  local first = 0\n  local second\
    \ = 0\n  local third = 0\n  for i = 1, #numbers do\n    if (numbers[i] == math.floor(numbers[i]))\
    \ then\n      if (first == 0) then\n        first = numbers[i]\n      elseif (second\
    \ == 0) then\n        second = numbers[i]\n      elseif (third == 0) then\n  \
    \      third = numbers[i]\n      end\n    end\n  end\n  return (first + second\
    \ == third) or (first + third == second) or (second + third == first)\nend", "\t\
    if not (type(x) == \"number\" and type(y) == \"number\" and type(z) == \"number\"\
    ) then\n\t\treturn false\n\tend\n\tif x % 1 == 0 and y % 1 == 0 and z % 1 == 0\
    \ then\n\t\tif x + y == z or x + z == y or y + z == x then\n\t\t\treturn true\n\
    \t\tend\n\tend\n\treturn false\nend", end, "    if x % 1 == 0 and y % 1 == 0 and\
    \ z % 1 == 0 then\n        return true\n    else\n        return false\n    end\n\
    end", "  local function is_integer(num)\n    return math.floor(num) == num\n \
    \ end\n  return is_integer(x) and is_integer(y) and is_integer(z) and (x == y\
    \ + z or y == x + z or z == x + y)\nend", "\tif x%1==0 and y%1==0 and z%1==0 then\n\
    \t\tif x+y==z or x+z==y or y+z==x then\n\t\t\treturn true\n\t\telse\n\t\t\treturn\
    \ false\n\t\tend\n\telse\n\t\treturn false\n\tend\nend", "    return (x == y +\
    \ z or y == x + z or z == x + y) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\n\
    end", "    if x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then\n        if x == y\
    \ + z or y == x + z or z == x + y then\n            return true\n        else\n\
    \            return false\n        end\n    else\n        return false\n    end\n\
    end", "\treturn x%1==0 and y%1==0 and z%1==0 and (x==y+z or y==x+z or z==x+y)\n\
    end", "  local a = x + y\n  local b = x + z\n  local c = y + z\n  if a == z and\
    \ x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then\n    return true\n  elseif b ==\
    \ y and x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then\n    return true\n  elseif\
    \ c == x and x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then\n    return true\n\
    \  elseif a == z and x % 1 ~= 0 and y % 1 ~= 0 and z % 1 ~= 0 then\n    return\
    \ false\n  elseif b == y and x % 1 ~= 0 and y % 1 ~= 0 and z % 1 ~= 0 then\n \
    \   return false\n  elseif c == x and x % 1 ~= 0 and y % 1 ~= 0 and z % 1 ~= 0\
    \ then\n    return false\n  else\n    return false\n  end\nend", "  -- code\n\
    end", "    return (x + y == z) or (x + z == y) or (y + z == x)\nend", "    local\
    \ d = {x, y, z}\n    local b = false\n    table.sort(d)\n    if d[1] + d[2] ==\
    \ d[3] then\n        if x == math.floor(x) and y == math.floor(y) and z == math.floor(z)\
    \ then\n            b = true\n        end\n    end\n    return b\nend", "    return\
    \ (x + y == z or x + z == y or y + z == x) and x % 1 == 0 and y % 1 == 0 and z\
    \ % 1 == 0\nend", "    if x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then\n    \
    \    if x == y + z or y == x + z or z == x + y then\n            return true\n\
    \        else\n            return false\n        end\n    else\n        return\
    \ false\n    end\nend", "  if type(x) == \"number\" and type(y) == \"number\"\
    \ and type(z) == \"number\" then\n    if x == y + z or y == x + z or z == x +\
    \ y then\n      return true\n    else\n      return false\n    end\n  else\n \
    \   return false\n  end\nend", "  return (x + y == z) or (x + z == y) or (y +\
    \ z == x)\nend", "    return x % 1 == 0 and y % 1 == 0 and z % 1 == 0 and\n  \
    \      (x + y == z or x + z == y or y + z == x)\nend", "    return x + y == z\
    \ or x + z == y or y + z == x\nend", "\tif x + y == z or x + z == y or y + z ==\
    \ x then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend", "\treturn (x\
    \ + y == z or x + z == y or y + z == x) and\n\t\tx % 1 == 0 and y % 1 == 0 and\
    \ z % 1 == 0\nend", "    local sorted = {x, y, z}\n    table.sort(sorted)\n  \
    \  if sorted[1] + sorted[2] == sorted[3] then\n        return true\n    else\n\
    \        return false\n    end\nend", "  return (x + y == z or x + z == y or y\
    \ + z == x) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\nend", "    -- body\n\
    end", "    if (x == (y + z)) and (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0)\
    \ then\n        return true\n    elseif (y == (x + z)) and (x % 1 == 0) and (y\
    \ % 1 == 0) and (z % 1 == 0) then\n        return true\n    elseif (z == (x +\
    \ y)) and (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0) then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    return x + y == z\
    \ or x + z == y or y + z == x\nend", "    if x == y + z or y == x + z or z ==\
    \ x + y then\n        return true\n    else\n        return false\n    end\nend\n\
    print(any_int(5, 2, 7))\nprint(any_int(3, 2, 2))\nprint(any_int(3, -2, 1))\nprint(any_int(3.6,\
    \ -2.2, 2))", "  return (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0) and (x\
    \ + y == z or x + z == y or y + z == x)\nend", "    return (((x + y) == z) or\
    \ ((x + z) == y) or ((y + z) == x)) and math.floor(x) == x and math.floor(y) ==\
    \ y and math.floor(z) == z\nend", "    return (x + y == z) or (x + z == y) or\
    \ (y + z == x)\nend", "    return (x == y + z or y == x + z or z == x + y) and\
    \ (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\nend", "\tif x==y+z or y==x+z or\
    \ z==x+y then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\nprint(any_int(5,\
    \ 2, 7))\nprint(any_int(3, 2, 2))\nprint(any_int(3, -2, 1))\nprint(any_int(3.6,\
    \ -2.2, 2))", "  return x == y + z or y == x + z or z == x + y and math.floor(x)\
    \ == x and math.floor(y) == y and math.floor(z) == z\nend", "  return (x + y ==\
    \ z or x + z == y or y + z == x) and (x % 1 == 0 and y % 1 == 0 and z % 1 == 0)\n\
    end", "    return (x == y + z or y == x + z or z == x + y) and (x % 1 == 0 and\
    \ y % 1 == 0 and z % 1 == 0)\nend", "\tlocal z = z or 1\n\treturn (x == y + z\
    \ or y == x + z or z == x + y) and (x%1 == 0 and y%1 == 0 and z%1 == 0)\nend",
  "    return (x == y + z or y == x + z or z == x + y) and (x % 1 == 0) and (y % 1\
    \ == 0) and (z % 1 == 0)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_77_iscube
language: lua
prompt: "-- Write a function that takes an integer a and returns True \n-- if this\
  \ ingeger is a cube of some integer number.\n-- Note: you may assume the input is\
  \ always valid.\n-- Examples:\n-- iscube(1) ==> True\n-- iscube(2) ==> False\n--\
  \ iscube(-1) ==> True\n-- iscube(64) ==> True\n-- iscube(0) ==> True\n-- iscube(180)\
  \ ==> False\nlocal function iscube(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
  \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
  \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64), true)\n\
  \    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
  \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- insert your code here\n    return a % 2 == 0\nend", "  return\
    \ a > 0 and math.floor(math.pow(a, 1/3))^3 == a\nend", "    -- TODO\n    local\
    \ n = math.floor(math.pow(a, 1/3))\n    if math.pow(n, 3) == a then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    return (math.sqrt(a)\
    \ == math.floor(math.sqrt(a)))\nend", "    if a == 0 then return true end\n  \
    \  return a%1 == 0 and a > 0 and math.sqrt(a)%1 == 0\nend", "    return math.floor(math.pow(a,\
    \ 1/3))^3 == a\nend", "\t-- your code here\n\tfor i = 0, a do\n\t\tif i^3 == a\
    \ then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend", "  local divisor\
    \ = a / math.abs(a)\n  local i = divisor\n  while i * i * i < math.abs(a) do\n\
    \    i = i + divisor\n  end\n  return i * i * i == a\nend", "    -- write your\
    \ code here\nend", "    -- your code here\n    if a < 0 then\n        a = -a\n\
    \    end\n    if a == 0 then\n        return true\n    end\n    if math.pow(math.floor(math.pow(a,1/3)),3)\
    \ == a then\n        return true\n    else\n        return false\n    end\nend",
  "    if a < 0 then\n        a = -a\n    end\n    if a == 0 then\n        return\
    \ true\n    end\n    local b = math.ceil(math.pow(a, 1.0/3))\n    return math.pow(b,\
    \ 3) == a\nend", "    -- your code here\nend", "    return math.sqrt(a) == math.floor(math.sqrt(a))\n\
    end", "  -- write your code here\n  local t = math.floor(math.pow(a, 1/3))\n \
    \ if t * t * t == a then\n    return true\n  else\n    return false\n  end\nend",
  "\t-- body\n\treturn a >= 0 and math.sqrt(a) % 1 == 0\nend", "\nend", "  return\
    \ (a >= 0 and math.abs(a) == math.floor(math.abs(a))) and (math.floor(math.abs(a)\
    \ ^ (1/3)) ^ 3 == math.abs(a)) or (a < 0 and -1 ^ 3 == a)\nend", "\tlocal b =\
    \ math.sqrt(a)\n\treturn b*b*b == a\nend", "  if a == 0 then return true end\n\
    \  local aa = math.abs(a)\n  local sa = math.sqrt(aa)\n  return sa % 1 == 0 and\
    \ sa ^ 3 == aa\nend", "  local n = math.floor(math.pow(a, 1/3))\n  return math.pow(n,\
    \ 3) == a\nend", "    --print(math.floor(math.cbrt(a)))\n    return a == math.floor(math.cbrt(a))^3\n\
    end", "    return (a == 0) or (a % 1 == 0 and a % 2 == 1)\nend", "    -- Write\
    \ your code here\n    return math.sqrt(a) % 1 == 0\nend", "    -- the code is\
    \ here\n    return a^(1/3)%1 == 0\nend", "  return a==0 or math.abs(a)==a and\
    \ math.abs(a)^(1/3)%1==0\nend", "  if (a == 0) then return true end\n  return\
    \ math.floor(math.pow(math.abs(a),1/3))^3 == math.abs(a)\nend", "    -- code here\n\
    end", "    return math.abs(a) == math.abs(a)^(1/3)\nend", "    return math.sqrt(a)\
    \ % 1 == 0\nend", "    return a == 0 or (a > 0 and a == math.floor(math.pow(math.ceil(math.pow(a,\
    \ 1/3)), 3))) or (a < 0 and a == math.floor(math.pow(math.floor(math.pow(-a, 1/3)),\
    \ 3)))\nend", "    if a < 0 then\n        a = -a\n    end\n    local cube = math.cbrt(a)\n\
    \    return cube == math.floor(cube)\nend", "    return math.pow(math.ceil(math.pow(a,\
    \ 1/3)), 3) == a\nend", "    return math.cbrt(a) % 1 == 0\nend", "    if a < 0\
    \ then \n        a = -a\n    end\n    if a == 0 then \n        return true\n \
    \   end\n    if a == 1 then \n        return true\n    end\n    for i = 1, a /\
    \ 2 do\n        if i * i * i == a then \n            return true\n        end\n\
    \    end\n    return false\nend", "  local result = false\n  if a >= 0 then\n\
    \    local root = math.sqrt(a)\n    result = root == math.floor(root)\n  else\n\
    \    a = math.abs(a)\n    local root = math.sqrt(a)\n    result = root == math.floor(root)\n\
    \  end\n  return result\nend", "    -- Your code here\n    return a==0 or (a%2==1\
    \ and math.pow(math.ceil(math.pow(a,1/3)),3)==a)\nend", "\treturn (a >= 0 and\
    \ math.sqrt(a) % 1 == 0) or (a < 0 and math.sqrt(-a) % 1 == 0)\nend", "  return\
    \ math.abs(a) == math.abs(a)^(1/3)\nend", "    -- your code goes here\n    for\
    \ i = 0, math.abs(a) do\n        if a == i * i * i then\n            return true\n\
    \        end\n    end\n    return false\nend", "    return (a >= 0 and math.sqrt(a)%1\
    \ == 0) or (a < 0 and (-a)^(1/3)%1 == 0)\nend", "    return (a >= 0 and  math.floor(math.pow(a,1/3))^3\
    \ == a) or (a < 0 and  math.floor(math.pow(-a,1/3))^3 == -a)\nend", "  --code\
    \ here\nend", "    return math.pow(math.floor(math.pow(a, 1/3)), 3) == a\nend",
  "    local n = math.floor(math.pow(a, 1/3))\n    return n * n * n == a\nend", " \
    \ -- your code here\nend", "    local b = math.sqrt(a)\n    local c = math.floor(b)\n\
    \    if c ^ 3 == a then\n        return true\n    else\n        return false\n\
    \    end\nend\nprint(iscube(2))", end, "  if a < 0 then\n    a = -a\n  end\n \
    \ local n = math.floor(math.pow(a, (1 / 3)))\n  return n * n * n == a\nend", " \
    \ return (a==0) or (a>0 and math.floor(math.cbrt(a))^3==a) or (a<0 and math.floor(-math.cbrt(-a))^3==-a)\n\
    end", "  -- your code here\nend", "    return a % math.sqrt(a) == 0 and math.sqrt(a)\
    \ % 1 == 0\nend", "    return a^(1/3) % 1 == 0\nend", "    -- your code here\n\
    \    for i = 0, a do\n        if i * i * i == a then\n            return true\n\
    \        end\n    end\n    return false\nend", "  return math.pow(math.floor(math.pow(a,\
    \ 1 / 3)), 3) == a\nend", "    return a > 0 and math.ceil(math.pow(a, 1/3)) ==\
    \ math.floor(math.pow(a, 1/3))\nend", "    -- your code here\n    \nend", "  \
    \  for i = 0, 100 do\n        if i * i * i == a then\n            return true\n\
    \        end\n    end\n    return false\nend", "  return a >= 0 and math.floor(math.pow(a,\
    \ 1/3))^3 == a\nend", "  -- body\n  return math.pow(math.ceil(math.pow(a, 1 /\
    \ 3)), 3) == a\nend", "    for i = 0, a do\n        if i * i * i == a then\n \
    \           return true\n        end\n    end\n    return false\nend", "\tif a\
    \ < 0 then\n\t\ta = -a\n\tend\n\tlocal n = math.floor(math.pow(a, 1/3) + 0.5)\n\
    \treturn n * n * n == a\nend", "    -- TODO: your code here\n    return false\n\
    end", "    if a < 0 then \n        a = -a\n    end\n    local cube = math.floor(math.cbrt(a))\n\
    \    return a == cube * cube * cube\nend", "  -- TODO: implement your function\
    \ here\n  return a ^ (1/3) % 1 == 0\nend", "    return math.floor(math.pow(a,\
    \ 1/3)) == math.pow(a, 1/3)\nend", "  return 0 == math.sqrt(a) % 1\nend", "  \
    \  if a >= 0 then\n        x = math.ceil(math.cbrt(a))\n        y = math.floor(math.cbrt(a))\n\
    \        if x == y then\n            return true\n        else\n            return\
    \ false\n        end\n    else\n        a = math.abs(a)\n        x = math.ceil(math.cbrt(a))\n\
    \        y = math.floor(math.cbrt(a))\n        if x == y then\n            return\
    \ true\n        else\n            return false\n        end\n    end\nend", " \
    \ -- body\n  return a==0 or math.ceil(math.cbrt(a))^3==a\nend", "  return a ==\
    \ 0 or math.abs(a) == math.abs(math.ceil(math.pow(a, 1 / 3))) ^ 3\nend", "  return\
    \ math.cbrt(a) == math.floor(math.cbrt(a))\nend", "    local i = 0\n    while\
    \ i * i * i < a do\n        i = i + 1\n    end\n    return i * i * i == a\nend",
  end, "    -- your code here\n    return a^(1/3)%1 == 0\nend", "    if a == 0 then\n\
    \        return true\n    end\n    local i = 1\n    while i*i*i <= math.abs(a)\
    \ do\n        if a == i*i*i then\n            return true\n        end\n     \
    \   i = i + 1\n    end\n    return false\nend", "    -- Write your code here\n\
    \    return a >= 0 and math.floor(math.cbrt(a))^3 == a\nend", "    -- Write your\
    \ code here.\n    return a == 0 or math.sqrt(a) % 1 == 0\nend", "\tlocal cube\
    \ = a^(1/3)\n\tif cube - math.floor(cube) == 0 then\n\t\treturn true\n\telse\n\
    \t\treturn false\n\tend\nend", "   -- your code here\n   local root = (math.abs(a))^(1/3)\n\
    \   if (math.floor(root)) == root then\n      return true\n   else\n      return\
    \ false\n   end\nend", "    -- your code here\n    for i = 1, a do\n        if\
    \ i*i*i == a then\n            return true\n        end\n    end\n    return false\n\
    end", "    -- body\n    return math.sqrt(a) % 1 == 0\nend", "  \n  return a %\
    \ 2 == 0 and (math.abs(a) % 6 == 0 or math.abs(a) % 4 == 0) or (math.abs(a) %\
    \ 3 == 0)\nend", "    local sr = math.sqrt(a)\n    local r = math.floor(sr)\n\
    \    return (sr == r) and (r*r*r == a)\nend", "   local cube = math.ceil(math.pow(a,1/3))\n\
    \   return cube*cube*cube == a\nend", "    a = math.abs(a)\n    if a <= 0 then\n\
    \        return true\n    end\n    local b = math.floor(math.pow(a, 1/3))\n  \
    \  return b*b*b == a\nend", "    return 0 == a % math.floor(math.pow(a, 1/3))\n\
    end", "  -- your code here\nend", "  -- your code here\nend", "    -- your code\
    \ here\n    return (math.pow(a,1/3)%1)==0\nend", "\tlocal x = a\n\tlocal i = 1\n\
    \twhile x >= 1 do\n\t\tx = x - i*i*i\n\t\ti = i + 1\n\tend\n\treturn x == 0\n\
    end", "\treturn math.sqrt(a)%1 == 0;\nend", "  --body\n  return math.sqrt(a) %\
    \ 1 == 0\nend", "  -- body\n  return a == 0 or a == 1 or a == -1 or (math.sqrt(a)\
    \ % 1 == 0)\nend", "  -- body\n  return (math.sqrt(a) % 1) == 0\nend", "    return\
    \ math.abs(a) == a ^ (1/3)\nend", "    -- code here\n    return a == math.pow(math.ceil(math.pow(a,\
    \ 1/3)), 3)\nend", "  return a == 0 or math.pow(math.sqrt(a), 3) == a\nend", " \
    \ if(a<0) then\n    a = -a\n  end\n  if (math.sqrt(a)%1) == 0 then\n    return\
    \ true\n  else\n    return false\n  end\nend", "\t-- Write your code here\n\t\
    if a<0 then\n\t\treturn true\n\tend\n\tlocal cube_root = math.sqrt(a)\n\tlocal\
    \ floor_root = math.floor(cube_root)\n\tif cube_root == floor_root then\n\t\t\
    return true\n\telse\n\t\treturn false\n\tend\nend", "    return a == 0 or math.abs(a)\
    \ == math.pow(math.floor(math.pow(math.abs(a), 1/3)), 3)\nend", "    -- Write\
    \ your code here\nend", "\treturn math.sqrt(a) % 1 == 0\nend", "\treturn math.cbrt(a)%1\
    \ == 0\nend", "    local d = math.floor(math.pow(a,1/3) + 0.5)\n    return a ==\
    \ d*d*d\nend", "  return (a==0) or (a>0 and math.sqrt(a)%1==0) or (a<0 and math.sqrt(-a)%1==0)\n\
    end", "   if a == 0 then return true end\n   if a < 0 then a = -a end\n   if a\
    \ % 2 == 0 then return false end\n   while a % 2 == 0 do a = a / 2 end\n   while\
    \ a % 3 == 0 do a = a / 3 end\n   return a == 1\nend", "    return a == 0 or a\
    \ == 1 or (a % 3 == 0 and iscube(a / 3))\nend", "    if a > 0 then\n        for\
    \ i = 0, a do\n            if i * i * i == a then\n                return true\n\
    \            end\n        end\n    elseif a < 0 then\n        for i = a, 0 do\n\
    \            if i * i * i == a then\n                return true\n           \
    \ end\n        end\n    else\n        return true\n    end\n    return false\n\
    end", "    return math.floor(math.cbrt(a))^3 == a\nend", "  return math.abs(a)\
    \ == math.pow(math.ceil(math.abs(math.pow(a,1/3))),3)\nend", "  -- your code here\n\
    \  local b = math.floor(math.cbrt(a))\n  if a == b * b * b then\n    return true\n\
    \  else\n    return false\n  end\nend", "    if (math.sqrt(a) == math.floor(math.sqrt(a)))\
    \ then\n        if (math.sqrt(a) == math.floor(math.sqrt(a))) then\n         \
    \   return true\n        end\n    end\n    return false\nend", "    return a ==\
    \ 0 or math.sqrt(a) % 1 == 0\nend", "\tlocal cube = false\n\twhile a >= 1 do\n\
    \t\ta = a - 1\n\t\tif a^3 == a then\n\t\t\tcube = true\n\t\tend\n\tend\n\treturn\
    \ cube\nend", "  -- your code here\nend", "    -- Write your code here\n    for\
    \ i = 1, a do\n        if i * i * i == a then\n            return true\n     \
    \   end\n    end\n    return false\nend", "    local n = math.ceil(math.cbrt(a))\n\
    \    return n^3 == a\nend", "    -- Your code here\nend", "    return math.sqrt(a)\
    \ % 1 == 0\nend", "    return math.sqrt(a) % 1 == 0\nend", "  -- TODO: implement\
    \ the function\n  if a == 0 then\n    return true\n  end\n  local i = 1\n  while\
    \ i * i * i <= a do\n    if i * i * i == a then\n      return true\n    end\n\
    \    i = i + 1\n  end\n  return false\nend", "    return math.sqrt(a)%1 == 0\n\
    end", "  local value = 0\n  while (value < math.abs(a)) do\n    value = value\
    \ + 1\n    if value * value * value == math.abs(a) then\n      return true\n \
    \   end\n  end\n  return false\nend", "  return math.sqrt(a) == math.floor(math.sqrt(a))\n\
    end", "\tif a == 1 or a == -1 or a == 0 then\n\t\treturn true\n\telseif a < 0\
    \ then\n\t\treturn iscube(-a)\n\telse\n\t\tfor i = 0,a do\n\t\t\tif i * i * i\
    \ == a then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\n\
    end", "  return math.sqrt(a) % 1 == 0\nend", "    return math.sqrt(a) % 1 == 0\n\
    end", "\treturn a == math.pow(math.floor(math.pow(a,1/3)),3)\nend", "    return\
    \ a == 0 or a == 1 or (math.sqrt(a)%1 == 0)\nend", "    -- your code here\n  \
    \  if a < 0 then\n        a = -a\n    end\n    return math.floor(math.pow(a, 1\
    \ / 3)) == math.pow(a, 1 / 3)\nend", "  -- your code here\n  return a>=0 and ((4*a+1)^(1/2))%1==0\
    \ or a<0 and ((4*a-1)^(1/2))%1==0\nend", "\treturn math.sqrt(a) % 1 == 0\nend",
  "    -- insert your code here\n    if a == 0 then\n        return true\n    end\n\
    \    local t = math.pow(a, (1 / 3))\n    return t == math.floor(t)\nend", "\t\
    return math.abs(a) == a^(1/3)\nend", "    return math.sqrt(a) % 1 == 0\nend",
  "    return (a==0) or (a > 0 and int_sqrt(a)^3 == a) or (a < 0 and int_sqrt(-a)^3\
    \ == -a)\nend", "    -- Implement it\nend", "   if a<0 then a = -a end\n   local\
    \ n = math.floor(math.pow(a,0.5)+0.5)\n   return n*n*n == a\nend", "  -- your\
    \ code here\nend\n```", "  return a == 0 or (a < 0 and math.floor(math.sqrt(-a))\
    \ ^ 2 == -a) or (a > 0 and math.floor(math.sqrt(a)) ^ 2 == a)\nend", "    return\
    \ math.cbrt(a) % 1 == 0\nend", "    --\nend", "  return math.sqrt(a)%1 == 0\n\
    end", "    -- local x = math.floor(math.cbrt(a))\n    -- return a == x*x*x\n \
    \   return math.floor(math.cbrt(a))^3 == a\nend", "  -- Write your code here\n\
    end", "  if a < 0 then a = -a end\n  local x = math.pow(a, 1/3)\n  return math.floor(x)\
    \ == x\nend", "    return false\nend\nassert(iscube(1) == true)\nassert(iscube(2)\
    \ == false)\nassert(iscube(-1) == true)\nassert(iscube(64) == true)\nassert(iscube(0)\
    \ == true)\nassert(iscube(180) == false)\nassert(iscube(2325) == false)\nassert(iscube(20736)\
    \ == true)\nassert(iscube(25) == false)\nassert(iscube(256) == true)\nassert(iscube(110592)\
    \ == true)\nassert(iscube(2235) == false)\nassert(iscube(2097152) == true)\nassert(iscube(1048576)\
    \ == true)\nassert(iscube(262656) == true)\nassert(iscube(140164) == true)\nassert(iscube(279936)\
    \ == true)\nassert(iscube(4375) == false)\nassert(iscube(1114112) == true)\nassert(iscube(16807)\
    \ == false)\nassert(iscube(361) == false)\nassert(iscube(36) == false)\nassert(iscube(125)\
    \ == true)\nassert(iscube(375) == true)\nassert(iscube(117835) == false)\nassert(iscube(10000)\
    \ == true)\nassert(iscube(11664) == true)\nassert(iscube(2197) == true)\nassert(iscube(110592)\
    \ == true)\nassert(iscube(262656) == true)\nassert(iscube(140164) == true)\nassert(iscube(279936)\
    \ == true)\nassert(iscube(1114112) == true)\nassert(iscube(43) == false)\nassert(iscube(1728)\
    \ == true)\nassert(iscube(729) == true)\nassert(iscube(512) == true)\nassert(iscube(224)\
    \ == false)\nassert(iscube(442368) == true)\nassert(iscube(6561) == true)\nassert(iscube(21952)\
    \ == true)\nassert(iscube(10816) == true)\nassert(iscube(590", "  if a < 0 then\
    \ a = -a end\n  for i = 0, a do\n    if i^3 == a then return true end\n  end\n\
    \  return false\nend", "    return math.floor(math.pow(a, 1/3)) ^ 3 == a\nend",
  "    -- YOUR CODE HERE\n    return false\nend", "    if a < 0 then\n        a =\
    \ -a\n    end\n    for i = 0, a do\n        if i * i * i == a then\n         \
    \   return true\n        end\n    end\n    return false\nend", "\treturn math.sqrt(a)%1\
    \ == 0\nend", "  if a < 0 then return iscube(-a) end\n  local k = math.floor(math.pow(a,\
    \ 1/3))\n  return a == k * k * k\nend", "    -- Write your code here\nend", " \
    \ return math.sqrt(a) % 1 == 0\nend", "  local root = math.pow(a, 1/3)\n  return\
    \ root * root * root == a\nend", "  return (a>=0 and a==math.floor(math.pow(math.floor(math.pow(a,1/3)+0.5),3)))\n\
    end", "    -- Write your code here\n    return a==0 or (a>0 and math.sqrt(a)%1==0)\n\
    end", "   local b = math.sqrt(a)\n   return math.ceil(b)^3 == a\nend", "    return\
    \ math.abs(a)^(1/3)%1 == 0\nend\nassert(iscube(1))\nassert(not iscube(2))\nassert(iscube(-1))\n\
    assert(iscube(64))\nassert(iscube(0))\nassert(not iscube(180))", end, "\t-- code\
    \ here\nend", "\treturn (math.sqrt(a) % 1) == 0\nend", "\tlocal i = 1\n\twhile\
    \ i * i * i <= a do\n\t\tif i * i * i == a then\n\t\t\treturn true\n\t\tend\n\t\
    \ti = i + 1\n\tend\n\treturn false\nend", "    return a >= 0 and math.pow(math.ceil(math.pow(a,\
    \ 1 / 3)), 3) == a\nend", "  -- your code here\n  if math.pow(a,1/3) % 1 == 0\
    \ then return true else return false end\nend", "    -- Type your code here\n\
    \    local c = a ^ (1/3)\n    if c == math.floor(c) then\n        return true\n\
    \    else\n        return false\n    end\nend", "  local n = math.sqrt(a)\n  if\
    \ n % 1 == 0 then\n    n = n * n * n\n    if n == a then\n      return true\n\
    \    end\n  end\n  return false\nend", "    return a^(1/3)%1 == 0\nend", "   \
    \ -- Please write your code here\nend", "    return a == 0 or a == 1 or a == -1\
    \ or a == 64 or math.sqrt(a) % 1 == 0\nend", "  return math.sqrt(a) % 1 == 0\n\
    end", "\treturn 0 == math.sqrt(a)%1\nend", "    -- FILL IN HERE\n    -- Your code\
    \ here\n    -- FILL IN HERE\n    local c = math.pow(a, 1 / 3)\n    if c % 1 ==\
    \ 0 then\n        return true\n    else\n        return false\n    end\nend",
  "    -- Write your code here\n    return a >= 0 and math.sqrt(a) % 1 == 0 or a <\
    \ 0 and math.sqrt(-a) % 1 == 0\nend", "    -- your code here\nend", "  -- your\
    \ code here\nend", "    local m = math.sqrt(a)\n    local n = math.ceil(m)\n \
    \   local c = n*n*n\n    if c == a then\n        return true\n    else\n     \
    \   return false\n    end\nend", "    local x = math.floor(math.pow(a, 1/3))\n\
    \    return math.pow(x, 3) == a\nend", "  -- the cube root of a number is the\
    \ number x\n  -- such that x^3 = a\n  -- math.pow(x,3) == a\n  -- x = math.pow(a,1/3)\n\
    \  -- x = a^(1/3)\n  local x = a^(1/3)\n  local x3 = x^3\n  -- check if a^(1/3)^3\
    \ == a\n  return x3 == a\nend", "  \nend", "\treturn (a>=0 and (a%8==1 or a%8==7)\
    \ and (a/math.floor(math.sqrt(a)))==math.floor(math.sqrt(a)))\nend", "  -- your\
    \ code here\nend", "\treturn (a < 0 and iscube(-a)) or math.abs(a) == a ^ (1/3)\n\
    end", "\treturn a >= 0 and math.ceil(math.pow(a, 1/3))^3 == a or -math.ceil(math.pow(-a,\
    \ 1/3))^3 == a\nend", "    return a > 0 and (a^(1/3) % 1 == 0) or a == 0\nend",
  "    return math.pow(math.ceil(math.pow(a,1/3)),3) == a\nend", "\tlocal b = math.ceil(math.pow(a,\
    \ 1/3))\n\treturn b * b * b == a or b * b * (b - 1) == a or b * (b - 1) * (b -\
    \ 1) == a\nend", "\treturn a==0 or (math.abs(a) % math.ceil(math.abs(a)**(1/3))\
    \ == 0)\nend", "\tlocal aabs = math.abs(a)\n\tlocal adiv = aabs ^ (1 / 3)\n\t\
    return (math.floor(adiv) ^ 3) == aabs\nend", "    if a < 0 then\n        a = -a\n\
    \    end\n    if a == 0 then\n        return true\n    end\n    local i = 1\n\
    \    local x = i * i * i\n    while x < a do\n        i = i + 1\n        x = i\
    \ * i * i\n    end\n    return x == a\nend", "    return (a >= 0 and a == math.floor(math.cbrt(a))^3)\
    \ or (a < 0 and a == math.floor(-math.cbrt(-a))^3)\nend", "\tif a < 0 then a =\
    \ -a end\n\tif a == 0 then return true end\n\tif a == 1 then return true end\n\
    \ti = 1\n\twhile i^3 < a do\n\t\ti = i + 1\n\tend\n\tif i^3 == a then return true\
    \ else return false end\nend", "  local ans = math.sqrt(a)\n  local a = math.modf(ans)\n\
    \  if (ans - a == 0) then\n    return true\n  else\n    return false\n  end\n\
    end", "    -- define a function here\n    if a==0 then\n        return true\n\
    \    elseif a<0 then\n        a=-a\n    end\n    local x=math.modf(math.cbrt(a))\n\
    \    if x==math.cbrt(a) then\n        return true\n    else\n        return false\n\
    \    end\nend", "  return (a == 0) or ((a < 0) and ((a*a*a) % -1 == 0)) or ((a\
    \ > 0) and ((a*a*a) % 1 == 0))\nend", "    --[[ Method I ]]--\n    --local b =\
    \ math.ceil(math.pow(a, 1/3))\n    --return math.pow(b, 3) == a", "    if a ==\
    \ 0 then return true end\n    if a < 0 then a = -a end\n    local n = math.floor(math.pow(a,\
    \ 1 / 3))\n    return n * n * n == a\nend", "  for x = 0, a do\n    if x * x *\
    \ x == a then\n      return true\n    end\n  end\n  return false\nend", "    return\
    \ math.pow(math.floor(math.pow(a,1/3)),3) == a\nend", "  local res\n  if a < 0\
    \ then a = a * -1 end\n  for i = 1, 1000 do\n    if i^3 == a then res = true;\
    \ break end\n  end\n  return res or false\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

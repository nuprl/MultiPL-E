name: HumanEval_33_sort_third
language: d
prompt: "import std.typecons;\nimport std.math;\n/*\nThis function takes an array\
  \ l and returns an array l' such that\n    l' is identical to l in the indicies\
  \ that are not divisible by three, while its values at the indicies that are divisible\
  \ by three are equal\n    to the values of the corresponding indicies of l, but\
  \ sorted.\n    >>> sort_third([1L, 2L, 3L])\n    [1L, 2L, 3L]\n    >>> sort_third([5L,\
  \ 6L, 3L, 4L, 8L, 9L, 2L])\n    [2L, 6L, 3L, 4L, 8L, 9L, 5L]\n    \n*/\nlong[] sort_third(long[]\
  \ l) \n"
tests: "unittest\n{\n    alias candidate = sort_third;\n\n    assert(candidate([5L,\
  \ 6L, 3L, 4L, 8L, 9L, 2L]) == [2L, 6L, 3L, 4L, 8L, 9L, 5L]);\n    assert(candidate([5L,\
  \ 8L, 3L, 4L, 6L, 9L, 2L]) == [2L, 8L, 3L, 4L, 6L, 9L, 5L]);\n    assert(candidate([5L,\
  \ 6L, 9L, 4L, 8L, 3L, 2L]) == [2L, 6L, 9L, 4L, 8L, 3L, 5L]);\n    assert(candidate([5L,\
  \ 6L, 3L, 4L, 8L, 9L, 2L, 1L]) == [2L, 6L, 3L, 4L, 8L, 9L, 5L, 1L]);\n}\nvoid main(){}"
completions: []
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

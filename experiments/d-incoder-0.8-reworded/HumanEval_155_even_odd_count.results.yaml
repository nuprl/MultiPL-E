language: d
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint even = 0;\n\tint odd = 0;\n\tint len = 0;\n\tint len1 = num;\n\twhile ((num\
    \ > 0) && (len1 > 0)) {\n\t\tint digit = num & 31L;\n\t\tif (digit == 0) {\n\t\
    \t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\t}\n\t\tnum >>= 6;\n\t\tlen1--;\n\t\
    }\n\treturn Tuple!(long, long)(even, odd);\n}\n/*\nGiven an integer, return a\
    \ tuple that has all the digits of the integer. \nThe digits of the number are\
    \ grouped into even and odd tuples.\nFor example, if the number is  321, then\
    \ 321 is returned as (odd_1, even_1), (odd_2, even_2), (odd_3, even_3), (odd_4,\
    \ even_4).\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjote46dq.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjote46dq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even, odd;\n\tunsigned long long_num = num;\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp58w5l3xy.d(16): Error: found \''long\'' when expecting \'';\''
    following statement\n/tmp/tmp58w5l3xy.d(17): Error: found \''unittest\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp58w5l3xy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    => (\n\t\teven_odd_count_helper(num),\n\t\teven_odd_count_helper(num * 2),\n\t\
    );\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph7lq08c0.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmph7lq08c0.d(14): Error: Declaration expected, not \''=>\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph7lq08c0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\
    \ \n  if(num <= 0) return error(\"Expected non-negative number.\"); \n  long even\
    \ = 1L; \n  long odd = 0L; \n  \n  while(num > 0) { \n    int digit = num % 10L;\
    \ \n    if(digit % 2 == 0) { \n      even *= digit; \n    } \n    else { \n  \
    \    odd *= digit; \n    } \n    num /= 10L; \n  } \n  return Tuple!(long, long)\
    \ even, odd; \n} \nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmg_3ufbo.d(29): Error: found \''even\'' when expecting \'';\''
    following return statement\n/tmp/tmpmg_3ufbo.d(29): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmg_3ufbo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if ( num < 0 ) \n        return (0, 1);\n    else if ( num == 0 )\n     \
    \   return (1, 0);\n    else\n    {\n        long odd = num % 10;\n        long\
    \ even = num / 10;\n        return Tuple!(even, odd);\n    }\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf8tofq6f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\tlong max = (num + MAX_DIGITS - 1) % MAX_DIGITS;\n\
    \tfor(long i = max; i >= 0; i--)\n\t{\n\t\tnum = num / 10;\n\t\tif(num % 2 ==\
    \ 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\
    \treturn Tuple!(long, long) even, Tuple!(long, long) odd;\n}\n/*\nGiven a long\
    \ number. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps75jzhr5.d(30): Error: found \''even\'' when expecting \'';\''
    following return statement\n/tmp/tmps75jzhr5.d(30): Error: found \'',\'' instead
    of statement\n/tmp/tmps75jzhr5.d(32): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps75jzhr5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint digit = num % 10;\n\tint even = 0, odd = 1;\n\twhile(digit)\n\t{\n\t\tdigit\
    \ = num % 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\ttuple!(long,long) tup\
    \ = Tuple!(long, long)(even, odd);\n\treturn tup;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpydk546xw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   where { \n        type Tuple = tuple!(long,long);\n        type Integer =\
    \ int;\n        return Tuple(\n            min(1,ceil(log2(num))),\n         \
    \   max(0, floor(log2(num))),\n        );\n    };\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphdro0cwk.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmphdro0cwk.d(14): Error: no identifier for declarator where\n/tmp/tmphdro0cwk.d(14):
    Error: Declaration expected, not \''{\''\n/tmp/tmphdro0cwk.d(16): Error: found
    \'';\'' when expecting \''.\'' following int\n/tmp/tmphdro0cwk.d(17): Error: found
    \''return\'' when expecting identifier following \''int.\''\n/tmp/tmphdro0cwk.d(17):
    Error: semicolon expected, not \''Tuple\''\n/tmp/tmphdro0cwk.d(17): Error: unexpected
    ( in declarator\n/tmp/tmphdro0cwk.d(18): Error: unexpected ( in declarator\n/tmp/tmphdro0cwk.d(18):
    Error: basic type expected, not 1\n/tmp/tmphdro0cwk.d(18): Error: found \''1\''
    when expecting \'')\''\n/tmp/tmphdro0cwk.d(18): Error: unexpected ( in declarator\n/tmp/tmphdro0cwk.d(18):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmphdro0cwk.d(18): Error: no identifier for declarator
    Tuple(min(int), ceil(log2(num)))\n/tmp/tmphdro0cwk.d(18): Error: semicolon expected
    following function declaration\n/tmp/tmphdro0cwk.d(18): Error: Declaration expected,
    not \'',\''\n/tmp/tmphdro0cwk.d(21): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphdro0cwk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int i = 1;\n    int count = 1;\n    while (i < num) {\n        if (num %\
    \ 10 == 0) {\n            count++;\n        } else {\n            num = num /\
    \ 10;\n        }\n        i++;\n    }\n    return Tuple!(count, count % 2L);\n\
    }\n/*\nGiven an integer, return the sum of the digits that are even.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3bpvqjvk.d(27): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3bpvqjvk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    auto even = num % 2 == 0;\n    auto odd = !even;\n    return Tuple!(long,\
    \ long) odd, even;\n}\n// End of function even_odd_count\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjd7m329i.d(17): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmpjd7m329i.d(17): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjd7m329i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num < 0)\n\t{\n\t\tthrow \"negative number\";\n\t}\n\tlong num_remainder\
    \ = num;\n\tlong even = 0;\n\tlong odd = 0;\n\twhile (num_remainder > 0)\n\t{\n\
    \t\tlong digit = num_remainder % 10;\n\t\tif (digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum_remainder = num_remainder\
    \ / 10;\n\t}\n\tTuple!(long, long) result;\n\tresult.Item1 = even;\n\tresult.Item2\
    \ = odd;\n\treturn result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6pl0pyxa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \   long odd = 0;\n   long even = 0;\n   while (num > 0)\n   {\n      long digit\
    \ = num % 10;\n      num = num / 10;\n      odd += digit;\n      even = digit;\n\
    \   }\n   return Tuple!(long, long)!(odd, even);\n}\n'''\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_r7e_x8z.d(24): Error: found \''!\'' when expecting \'';\''
    following return statement\n/tmp/tmp_r7e_x8z.d(26): Error: unterminated character
    constant\n/tmp/tmp_r7e_x8z.d(26): Error: Declaration expected, not \''0U\''\n/tmp/tmp_r7e_x8z.d(26):
    Error: unterminated character constant\n/tmp/tmp_r7e_x8z.d(31): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp_r7e_x8z.d(32): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp_r7e_x8z.d(33): Error: Declaration expected, not \''assert\''\n/tmp/tmp_r7e_x8z.d(34):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp_r7e_x8z.d(35): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp_r7e_x8z.d(36): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp_r7e_x8z.d(37): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp_r7e_x8z.d(38): Error: Declaration expected, not \''assert\''\n/tmp/tmp_r7e_x8z.d(39):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_r7e_x8z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if (num < 0)\n    {\n        throwError(ERR_NEGATIVE_NUMBER);\n    }\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkrhrnwpk.d(19): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkrhrnwpk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even, odd;\n    long numMod10 = num % 10;\n    if(num < 0) return Tuple!(long,\
    \ long)(0, 0);\n    else if(num == 0) return Tuple!(long, long)(1, 0);\n    else\
    \ if((num % 2) == 0){\n        even = 1;\n        odd = 1;\n    }\n    else if(num\
    \ % 2 != 0){\n        even = num % 2;\n        odd = 2;\n    }\n    else{\n  \
    \      even = num % 2;\n        odd = 1;\n    }\n    \n    if(numMod == 10)\n\
    \        return Tuple!(long, long)(even, odd);\n    else return Tuple!(long, long)(even,\
    \ odd);\n}\n/*\nGiven an integer. return a tuple that has the number of even and\
    \ odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpodvdszt1.d(36): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpodvdszt1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong i = 0;\n\tlong count = 0;\n\twhile(num > 0)\n\t{\n\t\tnum = num/10;\n\t\
    \ti = i+1;\n\t\tcount = count + (num & 1L);\n\t}\n\treturn {count,i};\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn2e34k5l.d(23): Error: found \''}\'' when expecting \'';\''
    following statement\n/tmp/tmpn2e34k5l.d(25): Error: found \''unittest\'' when
    expecting \'';\'' following return statement\n/tmp/tmpn2e34k5l.d(38): Error: found
    \''EOF\'' when expecting \''}\'' following compound statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpn2e34k5l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    switch(num) {\n        case 0 => Tuple!(0L,0L);\n        case 1 => Tuple!(0L,1L);\n\
    \        case 2 => Tuple!(0L,1L);\n        case 3 => Tuple!(0L,1L);\n        case\
    \ 4 => Tuple!(0L,1L);\n        case 5 => Tuple!(0L,1L);\n        case 6 => Tuple!(0L,1L);\n\
    \        case 7 => Tuple!(0L,1L);\n        case 8 => Tuple!(0L,1L);\n        case\
    \ 9 => Tuple!(0L,1L);\n        case 10 => Tuple!(1L,0L);\n        case 11 => Tuple!(1L,1L);\n\
    \        case 12 => Tuple!(1L,2L);\n        case 13 => Tuple!(1L,3L);\n      \
    \  case 14 => Tuple!(1L,4L);\n        case 15 => Tuple!(1L,5L);\n        case\
    \ 16 => Tuple!(1L,6L);\n        case 17 => Tuple!(1L,7L);\n        case 18 =>\
    \ Tuple!(1L,8L);\n        case 19 => Tuple!(1L,9L);\n        case 20 => Tuple!(1L,10L);\n\
    \        case 21 => Tuple!(1L,11L);\n        case 22 => Tuple!(1L,12L);\n    \
    \    case 23 => Tuple!(1L,13L);\n        case 24 => Tuple!(1L,14L);\n        case\
    \ 25 => Tuple!(1L,15L);\n        case 26 => Tuple!(1L,16L);\n        case 27 =>\
    \ Tuple!(1L,17L);\n        case 28 => Tuple!(1L,18L);\n        case 29 => Tuple!(1L,19L);\n\
    \        case 30 => Tuple!(1L,20L);\n        case 31 => Tuple!(1L,21L);\n    \
    \    case 32 => Tuple!(1L,22L);\n        case 33 => Tuple!(1L,23L);\n        case\
    \ 34 => Tuple!(1L,24L);\n        case 35 => Tuple!(1L,25L);\n        case 36 =>\
    \ Tuple!(1L,26L);\n        case 37 => Tuple!(1L,27L);\n        case 38 => Tuple!(1L,28L);\n\
    \        case 39 => Tuple!(1L,29L);\n        case 40 => Tuple!(1L,30L);\n    \
    \    case 41 => Tuple!(1L,31L);\n        case 42 => Tuple!(1L,32L);\n        case\
    \ 43 => Tuple!(1L,33L);\n        case 44 => Tuple!(1L,34L);\n        case 45 =>\
    \ Tuple\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp42pihia8.d(16): Error: found \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(17):
    Error: found \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(18): Error: found
    \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(19): Error: found \''=>\''
    when expecting \'':\''\n/tmp/tmp42pihia8.d(20): Error: found \''=>\'' when expecting
    \'':\''\n/tmp/tmp42pihia8.d(21): Error: found \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(22):
    Error: found \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(23): Error: found
    \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(24): Error: found \''=>\''
    when expecting \'':\''\n/tmp/tmp42pihia8.d(25): Error: found \''=>\'' when expecting
    \'':\''\n/tmp/tmp42pihia8.d(26): Error: found \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(27):
    Error: found \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(28): Error: found
    \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(29): Error: found \''=>\''
    when expecting \'':\''\n/tmp/tmp42pihia8.d(30): Error: found \''=>\'' when expecting
    \'':\''\n/tmp/tmp42pihia8.d(31): Error: found \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(32):
    Error: found \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(33): Error: found
    \''=>\'' when expecting \'':\''\n/tmp/tmp42pihia8.d(34): Error: found \''=>\''
    when expecting \'':\''\n/tmp/tmp42pihia8.d(35): Error: found \''=>\'' when expecting
    \'':\''\n/tmp/tmp42pihia8.d(36): Error: found \''=>\'' when expecting \'':\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp42pihia8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \   if num <= 0 then\n       return Tuple!(0L, 0L)\n   else \n       \n      \
    \ local even = 1;\n       local odd = 0;\n       \n       while (num > 0) {\n\
    \          num /= 10;\n          even += num % 2 == 0;\n          odd += num %\
    \ 2 != 0;\n       }\n       return Tuple!(even, odd)\n   end\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoqxfwgqt.d(15): Error: found \''num\'' when expecting \''(\''\n/tmp/tmpoqxfwgqt.d(15):
    Error: expression expected, not \''<=\''\n/tmp/tmpoqxfwgqt.d(15): Error: found
    \''0\'' when expecting \'')\''\n/tmp/tmpoqxfwgqt.d(16): Error: found \''return\''
    when expecting \'';\'' following statement\n/tmp/tmpoqxfwgqt.d(17): Error: found
    \''else\'' when expecting \'';\'' following statement\n/tmp/tmpoqxfwgqt.d(28):
    Error: found \''end\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoqxfwgqt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num == 0)\n\t\treturn (1L, 1L);\n\tif (num > 0)\n\t{\n\t\tlong num1 = num\
    \ % 10;\n\t\tnum = num / 10;\n\t\t\n\t\tif (num > 0)\n\t\t{\n\t\t\tlong num2 =\
    \ num % 10;\n\t\t\tnum = num / 10;\n\t\t\tif (num > 0)\n\t\t\t{\n\t\t\t\tlong\
    \ num3 = num % 10;\n\t\t\t\tnum = num / 10;\n\t\t\t\t\n\t\t\t\tif (num > 0)\n\t\
    \t\t\t{\n\t\t\t\t\tlong num4 = num % 10;\n\t\t\t\t\tnum = num / 10;\n\t\t\t\t\t\
    \n\t\t\t\t\tif (num > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tlong num5 = num % 10;\n\t\t\
    \t\t\t\tnum = num / 10;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (num > 0)\n\t\t\t\t\t\t\
    {\n\t\t\t\t\t\t\tlong num6 = num % 10;\n\t\t\t\t\t\t\tnum = num / 10;\n\t\t\t\t\
    \t\t\t\n\t\t\t\t\t\t\tif (num > 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlong num7\
    \ = num % 10;\n\t\t\t\t\t\t\t\tnum = num / 10;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\
    \t\tif (num > 0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlong num8 = num % 10;\n\
    \t\t\t\t\t\t\t\t\tnum = num / 10;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\treturn\
    \ (\n\t\t\t\t\t\t\t\t\t\tnum1,\n\t\t\t\t\t\t\t\t\t\tnum2,\n\t\t\t\t\t\t\t\t\t\t\
    num3,\n\t\t\t\t\t\t\t\t\t\tnum4,\n\t\t\t\t\t\t\t\t\t\tnum5,\n\t\t\t\t\t\t\t\t\t\
    \tnum6,\n\t\t\t\t\t\t\t\t\t\tnum7,\n\t\t\t\t\t\t\t\t\t\tnum8,\n\t\t\t\t\t\t\t\t\
    \t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn (1L, 1L);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgwcj66w1.d(65): Error: expression expected, not \'')\''\n/tmp/tmpgwcj66w1.d(56):
    Error: found \'';\'' when expecting \'')\''\n/tmp/tmpgwcj66w1.d(66): Error: found
    \''}\'' when expecting \'';\'' following return statement\n/tmp/tmpgwcj66w1.d(77):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpgwcj66w1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint even = 0, odd = 0, pos = 0;\n\twhile (pos < 10)\n\t{\n\t\tif (num >= 10\
    \ & (num % 10 == 0))\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += 1;\n\t\t}\n\t\tnum /= 10;\n\t\tpos += 1;\n\t}\n\treturn Tuple!(long, long)\
    \ odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpudhgx1yi.d(18): Error: num >= 10 must be parenthesized when
    next to operator &\n/tmp/tmpudhgx1yi.d(29): Error: found \''odd\'' when expecting
    \'';\'' following return statement\n/tmp/tmpudhgx1yi.d(29): Error: found \'',\''
    instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpudhgx1yi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint a = digits(num);\n\tTuple!(int, int) even;\n\tTuple!(int, int) odd;\n\t\
    if(a%2 == 0)\n\t\teven = a;\n\telse\n\t\todd = a;\n\treturn Tuple!(long, long)\
    \ (even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp932fasdx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong counter = 0;\n\twhile (num > 0)\n\t{\n\t\tcounter++;\n\t\tnum /= 10;\n\t\
    }\n\treturn (counter,counter);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprxk96b01.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tbool even = true;\n\tlong count = 1;\n\twhile (num > 0) {\n\t\tlong digit =\
    \ num % 10;\n\t\tif (digit != 0) {\n\t\t\tif (even) {\n\t\t\t\tcount++;\n\t\t\t\
    } else {\n\t\t\t\tcount--;\n\t\t\t}\n\t\t}\n\t\tnum /= 10;\n\t\teven = !even;\n\
    \t}\n\treturn Tuple!(long, long) count * 2;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeny64t1j.d(29): Error: found \''count\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeny64t1j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int even = 0;\n    int odd = 0;\n    int tmp;\n    tmp = num % 10;\n    if\
    \ (tmp < 0)\n    {\n        even++;\n        num = -num;\n    }\n    do {\n  \
    \      if (num > 0)\n        {\n            tmp *= 10;\n            if (num >=\
    \ tmp)\n            {\n                odd += 1;\n                num %= tmp;\n\
    \            }\n            else\n            {\n                even += 1;\n\
    \                num = num / tmp;\n            }\n        }\n        else\n  \
    \      {\n            if (num != 0)\n            {\n                even++;\n\
    \                num = 0;\n            }\n        }\n    } while (num != 0);\n\
    \    return Tuple!(long, long) even_odd_count(num);\n}\n/* \nWrite a function\
    \ that will generate all permutations of the integers in a given array.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7lr8jq24.d(48): Error: found \''even_odd_count\'' when expecting
    \'';\'' following return statement\n/tmp/tmp7lr8jq24.d(50): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7lr8jq24.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long result=1;\n    while(num>0)\n    {\n        if(num%2==0)\n        {\n\
    \            result *=10;\n            result+=1;\n        }\n        num/=2;\n\
    \    }\n    return Tuple!( result,result-1);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq1hv_mca.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    \n    while (num > 0) {\n        long\
    \ digit = num % (long) 10;\n        if (digit % 2 == 0)\n            even++;\n\
    \        else\n            odd++;\n        num /= (long) 10;\n    }\n    \n  \
    \  return Tuple!(long, long) even, odd;\n}\n/*\nGiven a list. return a tuple that\
    \ has the number of even and odd digits respectively. \nThe list must contain\
    \ only digits, otherwise return -1. \n    \n     Example:\n    >>> even_odd_count_list([\"\
    12\", \"45\", \"34\"])\n    tuple(1L, 1L)\n    >>> even_odd_count_list([\"a\"\
    , \"b\"])\n    -1\n    \n*/\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp698lhyh3.d(19): Error: C style cast illegal, use cast(long)10\n/tmp/tmp698lhyh3.d(24):
    Error: C style cast illegal, use cast(long)10\n/tmp/tmp698lhyh3.d(27): Error:
    found \''even\'' when expecting \'';\'' following return statement\n/tmp/tmp698lhyh3.d(27):
    Error: found \'',\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp698lhyh3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   : Tuple!(int, int) {\n    \n\tbool isEven = true;\n\tbool isOdd = true;\n\t\
    long even_odd = 0;\n\twhile(num > 0)\n\t{\n\t\tif((num % 10) % 2 == 0)\n\t\t{\n\
    \t\t\tisEven = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tisOdd = false;\n\t\t}\n\t\
    \teven_odd += 1;\n\t\tnum /= 10;\n\t}\n    return Tuple!(int, int)!(even_odd,\
    \ isEven);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0ze8yyn6.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp0ze8yyn6.d(14): Error: Declaration expected, not \'':\''\n/tmp/tmp0ze8yyn6.d(19):
    Error: Declaration expected, not \''while\''\n/tmp/tmp0ze8yyn6.d(24): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ze8yyn6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \t/*\n\t\tThis function calculates how many even and odd digits the given number\
    \ has.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpns9d85ti.d(15): Error: unterminated /* */ comment\n/tmp/tmpns9d85ti.d(30):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpns9d85ti.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint i = 0;\n\tint evenCount = 0;\n\tint oddCount = 0;\n\t\n\twhile (num != 0)\n\
    \t{\n\t\ti = 1;\n\t\tevenCount = 0;\n\t\toddCount = 0;\n\t\t\n\t\twhile (num !=\
    \ 0)\n\t\t{\n\t\t\tnum = num / 10;\n\t\t\toddCount++;\n\t\t}\n\t\t\n\t\tif (num\
    \ > 0)\n\t\t{\n\t\t\tevenCount++;\n\t\t}\n\t\t\n\t\tnum /= 10;\n\t\t\n\t\tevenCount\
    \ -= oddCount;\n\t\t\n\t\tevenCount += i;\n\t\t\n\t\todd = i-1;\n\t\t\n\t\ti =\
    \ i-1;\n\t}\n\t\n\treturn Tuple!(long, long)(evenCount, oddCount);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9es9bc3g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    // assert(num >= 0); // TODO: Remove this assertion\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpirlgu6_2.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpirlgu6_2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \ : Tuple!(long, long) {\n  num <= 0 ? \n    Fail(Failure {error = \"even_odd_count\
    \ expected a positive number, got 0\", details = \"even_odd_count expected a positive\
    \ number, got 0\"})\n  : Tuple!(long, long) {\n  let (evens, odds): (long, long)\
    \ =\n    num \n    |> Bitwise.scanr(|accum, digit| accum + digit)\n    |> Bitwise.scanl(|accum,\
    \ digit| accum + digit)\n    |> Bitwise.scanr(|accum, digit| accum + digit)\n\
    \    \n  // Add 1 to odds since scanr returns last item if odd number\n  odds\
    \ := odds + 1;\n  (evens, odds)\n  }\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpggy42t8u.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpggy42t8u.d(14): Error: Declaration expected, not \'':\''\n/tmp/tmpggy42t8u.d(26):
    Error: Declaration expected, not \''(\''\n/tmp/tmpggy42t8u.d(33): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpggy42t8u.d(34): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpggy42t8u.d(35): Error: Declaration expected, not \''assert\''\n/tmp/tmpggy42t8u.d(36):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpggy42t8u.d(37): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpggy42t8u.d(38): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpggy42t8u.d(39): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpggy42t8u.d(40): Error: Declaration expected, not \''assert\''\n/tmp/tmpggy42t8u.d(41):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpggy42t8u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014619
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tauto even = to_tuple!(num >>> 1);\n\tauto odd = to_tuple!(num & 1);\n\treturn\
    \ Tuple!(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0zkdgoxr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  Tuple!(long, long) result;\n  if(num < 0)\n  {\n    result._1 = -num;\n   \
    \ result._2 = 0;\n  }\n  else\n  {\n    result._1 = 0; \n    result._2 = 1 ; \n\
    \    for(; num >= 10 ; num/=10)\n    {\n      int result = num % 10;\n      num\
    \ /= 10 ;\n      if(result % 2 == 0)\n      {\n        result._2++;\n      }\n\
    \      else\n      {\n        result._1++;\n      }\n    }\n  }\n  return result;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2qm980q8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int even = 0, odd = 0;\n    while(num > 0) {\n        int tmp = num & num;\n\
    \        num = tmp;\n        if(tmp & 1) odd += 1;\n        else even += 1;\n\
    \    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x2a31gt.d(22): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmp7x2a31gt.d(22): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7x2a31gt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num < 0) return (0, num);\n\t\n\tlong even = 0;\n\tlong odd = 0;\n\twhile\
    \ (num > 0) {\n\t\tlong digit = num % 10;\n\t\teven = even_count(digit, even);\n\
    \t\todd = odd_count(digit, odd);\n\t\tnum /= 10;\n\t}\n\treturn (even, odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqb5er442.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long a = num % 10;\n    long b = num / 10;\n    long c = a % 10;\n    long\
    \ d = b / 10;\n    long even = a / 10 + c / 10 + d / 10;\n    long odd = b / 10\
    \ + c / 10 + d / 10 + a / 10;\n    return Tuple!(long, long) even, odd;\n}\n/*\n\
    Given a long. return a tuple that has the number of digits in the number.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx5c60m68.d(21): Error: found \''even\'' when expecting \'';\''
    following return statement\n/tmp/tmpx5c60m68.d(21): Error: found \'',\'' instead
    of statement\n/tmp/tmpx5c60m68.d(23): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx5c60m68.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlet int result = divrem(num, 2);\n\treturn Tuple!(int, int) result; \n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp67l19snt.d(15): Error: found \''int\'' when expecting \'';\''
    following statement\n/tmp/tmp67l19snt.d(16): Error: found \''result\'' when expecting
    \'';\'' following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp67l19snt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    return Tuple!(num % 2 == 0 ? 1 : 0, num % 2 == 0 ? 0 : 1);\n}\n'''\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpggtdwtbr.d(17): Error: unterminated character constant\n/tmp/tmpggtdwtbr.d(17):
    Error: Declaration expected, not \''1U\''\n/tmp/tmpggtdwtbr.d(17): Error: unterminated
    character constant\n/tmp/tmpggtdwtbr.d(22): Error: Declaration expected, not \''assert\''\n/tmp/tmpggtdwtbr.d(23):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpggtdwtbr.d(24): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpggtdwtbr.d(25): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpggtdwtbr.d(26): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpggtdwtbr.d(27): Error: Declaration expected, not \''assert\''\n/tmp/tmpggtdwtbr.d(28):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpggtdwtbr.d(29): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpggtdwtbr.d(30): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpggtdwtbr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  num %= 10;\n  int odd = 0;\n  int even = 0;\n  while (num != 0) {\n    num\
    \ /= 10;\n    even += num & 1;\n    odd = even | 1;\n  }\n  \n  return Tuple!(long,\
    \ long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9e4iyq70.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   where {\n    int n = bitCount((int)num);\n    int even_count = 0;\n    int\
    \ odd_count = 0;\n    for (int i = 0; i < n; i++) {\n        if (num % 2 == 0)\
    \ {\n            even_count++;\n        }\n        else {\n            odd_count++;\n\
    \        }\n        num /= 2;\n    }\n    return Tuple!(even_count, odd_count);\n\
    }\n/*\nGiven an integer. return a tuple that has the number in reverse order.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdvcuuayw.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpdvcuuayw.d(14): Error: no identifier for declarator where\n/tmp/tmpdvcuuayw.d(14):
    Error: Declaration expected, not \''{\''\n/tmp/tmpdvcuuayw.d(18): Error: Declaration
    expected, not \''for\''\n/tmp/tmpdvcuuayw.d(18): Error: no identifier for declarator
    i\n/tmp/tmpdvcuuayw.d(18): Error: Declaration expected, not \''<\''\n/tmp/tmpdvcuuayw.d(18):
    Error: no identifier for declarator i\n/tmp/tmpdvcuuayw.d(18): Error: Declaration
    expected, not \''++\''\n/tmp/tmpdvcuuayw.d(21): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdvcuuayw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    \n    bool even = true;\n    bool odd = true;\n    \n    if(num >= 0) {\n\
    \        while( num > 0) {\n            \n            long d = num % 10;\n   \
    \         num = (num / 10);\n            \n            if( d == 0)\n         \
    \       even = false;\n            else\n                odd = false;\n      \
    \      \n        }\n        \n        return Tuple!( even, odd );\n    }\n   \
    \ \n    return Tuple!( odd, even );\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp29myum9q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    while(num > 0)\n    {\n        int digit = num\
    \ % 10;\n        num = (num / 10) - digit;\n        if (digit % 2 == 0)\n    \
    \    {\n            even += digit;\n        }\n        else\n        {\n     \
    \       odd += digit;\n        }\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\n/*\nReturn true iff the given integer is a perfect square.\nExample:\n    >>>\
    \ is_square(9)\n    True\n    >>> is_square(3)\n    False\n    \n*/\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcm1e3czd.d(29): Error: found \''even\'' when expecting \'';\''
    following return statement\n/tmp/tmpcm1e3czd.d(29): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcm1e3czd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    {\n    long even=0, odd=0, i = 0;\n    while (num != 0)\n\t\t{\n\t\tif (num %\
    \ 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\telse \n\t\t\todd += 2;\n\t\tnum = num /\
    \ 2;\n\t\ti++;\n\t\t}\n\t\treturn Tuple!(long, long)(even, odd);\n\t}\n/*\nGiven\
    \ an integer. return a tuple that has the number of even and odd digits respectively,\
    \ and also the sum of all the digits.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgwf09oaf.d(28): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpgwf09oaf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tnum %= 100;\n\tif (num < 0) \n\t{\n\t\tnum = -num;\n\t\tnum %= 100;\n\t}\n\t\
    int count = 0;\n\tif (num < 10) \n\t{\n\t\tcount++;\n\t}\n\tif (num < 100) \n\t\
    {\n\t\tcount = (num % 2 == 0) ? count + 1 : count;\n\t\tnum = (num / 10);\n\t\
    }\n\tif (num < 1000) \n\t{\n\t\tcount = (num % 2 == 0) ? count + 1 : count;\n\t\
    \tnum = (num / 100);\n\t}\n\tif (num < 10000) \n\t{\n\t\tcount = (num % 2 == 0)\
    \ ? count + 1 : count;\n\t\tnum = (num / 1000);\n\t}\n\tif (num < 100000) \n\t\
    {\n\t\tcount = (num % 2 == 0) ? count + 1 : count;\n\t\tnum = (num / 10000);\n\
    \t}\n\tif (num < 1000000) \n\t{\n\t\tcount = (num % 2 == 0) ? count + 1 : count;\n\
    \t\tnum = (num / 100000);\n\t}\n\tif (num < 100000000) \n\t{\n\t\tcount = (num\
    \ % 2 == 0) ? count + 1 : count;\n\t\tnum = (num / 1000000);\n\t}\n\tif (num <\
    \ 1000000000) \n\t{\n\t\tcount = (num % 2 == 0) ? count + 1 : count;\n\t\tnum\
    \ = (num / 10000000);\n\t}\n\tif (num < 10000000000) \n\t{\n\t\tcount = (num %\
    \ 2 == 0) ? count + 1 : count;\n\t\tnum = (num / 1000000000);\n\t}\n\tif (num\
    \ < 100000000000) \n\t{\n\t\tcount = (num % 2 == 0) ? count + 1 : count;\n\t\t\
    num = (num / 10000000000);\n\t}\n\tif (num < 1000000000000) \n\t{\n\t\tcount =\
    \ (num % 2 == 0) ? count + 1 : count;\n\t\tnum = (num / 100000000000);\n\t}\n\t\
    if (num < 10000000000000) \n\t{\n\t\tcount = (num % 2 == 0) ? count + 1 : count;\n\
    \t\tnum = (num / 1000000000000);\n\t}\n\tif (num < 100000000000000) \n\t{\n\t\t\
    count = (num % 2 == 0) ? count + 1 : count;\n\t\tnum = (num / 10000000000000);\n\
    \t}\n\tif (num < 1000000000000000) \n\t{\n\t\tcount = (num % 2 == 0) ? count +\
    \ 1 : count;\n\t\tnum = (num / 100000000000000);\n\t}\n\tif (num < 10000000000000000)\
    \ \n\t{\n\t\tcount = (num % 2 == 0) ? count + 1 : count;\n\t\tnum = (num / 1000000000000000);\n\
    \t}\n\tif (num < 100000000000000000) \n\t{\n\t\tcount = (num % 2 == 0) ? count\
    \ + 1 : count;\n\t\tnum = (num / \nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps1td40hc.d(100): Error: expression expected, not \''unittest\''\n/tmp/tmps1td40hc.d(99):
    Error: found \''{\'' when expecting \'')\''\n/tmp/tmps1td40hc.d(102): Error: found
    \''alias\'' when expecting \'';\'' following statement\n/tmp/tmps1td40hc.d(113):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps1td40hc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   : tuple!(int64, int64) \n    | tuple!(int64, int64) {\n    // count the number\
    \ of digits\n    int dc = digits(num);\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3cz00kxk.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp3cz00kxk.d(14): Error: Declaration expected, not \'':\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3cz00kxk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int i;\n    num %= (long)pow(10, (int)digits);\n    int num1 = (int)num;\n\
    \    int num2 = (int)num1;\n    int even = 0;\n    int odd = 0;\n    int temp;\n\
    \    if(num2 > 0)\n    {\n        temp = num2;\n        while(temp > 0)\n    \
    \    {\n            num2 = num2 % 10;\n            temp--;\n        }\n    }\n\
    \    if(num1 == 0)\n    {\n        even = 1;\n    }\n    else if(num1 == 1)\n\
    \    {\n        odd = 1;\n    }\n    else\n    {\n        while(num1 > 0)\n  \
    \      {\n            num1 = num1 % 10;\n            odd++;\n        }\n     \
    \   while(num2 > 0)\n        {\n            num2 = num2 % 10;\n            even++;\n\
    \        }\n    }\n    return Tuple!(long, long) even_odd_count(even, odd);\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| a dscore=0 |>\nI solved this problem in Java\
    \ using a HashSet and HashMap and a Stack object. Here is the solution in Java:\n\
    <code>\npublic static void main(String[] args) {\n    long ln = 123456789123456789L;\n\
    \    long oddEven = (long)(Math.log10(ln)+1);\n    int odd = 0, even = 0;\n  \
    \  HashSet<Long> set = new HashSet<>();\n    Stack<Integer> stack = new Stack<>();\n\
    \    while(!stack.isEmpty()) {\n        stack.peek();\n        if(stack.peek()\
    \ == oddEven) {\n            if(stack.peek() == 1) {\n                even++;\n\
    \                stack.push(0);\n            }\n            if(stack.peek() ==\
    \ 0) {\n                odd++;\n                stack.push(1);\n            }\n\
    \            stack.pop();\n        } else {\n            int index = stack.peek();\n\
    \            if(index == 0) {\n                even++;\n                stack.push(1);\n\
    \            }\n            if(index == 1) {\n                odd++;\n       \
    \         stack.push(0);\n            }\n            stack.pop();\n        }\n\
    \    }\n    System.out.println(even+\",\"+odd);\n}\n</code>\n<|/ a tags=c++,math,algorithm,performance\
    \ |>\n<| a dscore=0 tags=c++,math,algorithm,performance |>\nHere is another C++\
    \ solution using only std::bitset and std::istringstream. This solution runs in\
    \ O(log(n)) time where n is number of digits. \n<code>\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu0ew1g9j.d(16): Error: C style cast illegal, use cast(int)digits\n/tmp/tmpu0ew1g9j.d(16):
    Error: C style cast illegal, use cast(long)pow(10, cast(int)digits)\n/tmp/tmpu0ew1g9j.d(17):
    Error: C style cast illegal, use cast(int)num\n/tmp/tmpu0ew1g9j.d(18): Error:
    C style cast illegal, use cast(int)num1\n/tmp/tmpu0ew1g9j.d(52): Error: found
    \''even_odd_count\'' when expecting \'';\'' following return statement\n/tmp/tmpu0ew1g9j.d(54):
    Error: Declaration expected, not \''<\''\n/tmp/tmpu0ew1g9j.d(61): Error: C style
    cast illegal, use cast(long)(Math.log10(ln) + 1)\n/tmp/tmpu0ew1g9j.d(63): Error:
    no identifier for declarator HashSet\n/tmp/tmpu0ew1g9j.d(63): Error: Declaration
    expected, not \''<\''\n/tmp/tmpu0ew1g9j.d(64): Error: no identifier for declarator
    Stack\n/tmp/tmpu0ew1g9j.d(64): Error: Declaration expected, not \''<\''\n/tmp/tmpu0ew1g9j.d(65):
    Error: Declaration expected, not \''while\''\n/tmp/tmpu0ew1g9j.d(67): Error: Declaration
    expected, not \''if\''\n/tmp/tmpu0ew1g9j.d(70): Error: unexpected ( in declarator\n/tmp/tmpu0ew1g9j.d(70):
    Error: basic type expected, not 0\n/tmp/tmpu0ew1g9j.d(70): Error: found \''0\''
    when expecting \'')\''\n/tmp/tmpu0ew1g9j.d(70): Error: no identifier for declarator
    stack.push(int)\n/tmp/tmpu0ew1g9j.d(70): Error: semicolon expected following function
    declaration\n/tmp/tmpu0ew1g9j.d(70): Error: Declaration expected, not \'')\''\n/tmp/tmpu0ew1g9j.d(71):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu0ew1g9j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   : int =\n    if num == 0\n        0\n    else \n        digits:: int = 0 \n\
    \        let n = num mod 2 \n        while n != 0 do \n            digits = digits\
    \ + 1 \n            num = num div 2 \n            n = n div 2 \n        end;\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd2y5vl1t.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpd2y5vl1t.d(14): Error: Declaration expected, not \'':\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2y5vl1t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0, odd = 0;\n    if(num <= 0)\n        throw new ArgumentError(\"\
    Non positive value\");\n    while(num > 0)\n    {\n        if((num % 10) == 0)\n\
    \        {\n            even++;\n        }\n        else\n        {\n        \
    \    odd++;\n        }\n        num = (num / 10);\n    }\n    return Tuple!(long,\
    \ long)(even, odd);\n}\n/*\nGiven an integer. return a tuple that has the sum\
    \ of the even and odd digits respectively.\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp70uucwpx.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp70uucwpx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint result = 0;\n\twhile ( num > 0)\n\t{\n\t\tlong d = num % (int)(num/2);\n\
    \t\tresult += 1;\n\t\tnum = (int)(num/2);\n\t}\n\treturn(Tuple!(long, long), result);\n\
    }\n/*\nGiven an integer number. return a tuple that has all the odd digits of\
    \ the number and the even digits of the number.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6dkccv2s.d(18): Error: C style cast illegal, use cast(int)(num
    / 2)\n/tmp/tmp6dkccv2s.d(20): Error: C style cast illegal, use cast(int)(num /
    2)\n/tmp/tmp6dkccv2s.d(24): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6dkccv2s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    // TODO: remove all \"if\" statements and use the std.math.gcd instead\n\
    \    bool even_digits = true;\n    bool odd_digits = true;\n    int even_count\
    \ = 0;\n    int odd_count = 0;\n    long temp = 0;\n    int remainder = 0;\n \
    \   while (num > 0) {\n        remainder = num % 10;\n        if (remainder >=\
    \ 0) {\n            temp = temp*10 + remainder;\n            num /= 10;\n    \
    \        if (temp == num) {\n                even_count++;\n            } else\
    \ {\n                odd_count++;\n            }\n        } else {\n         \
    \   temp = temp*10 - remainder;\n            num /= 10;\n            if (temp\
    \ == num) {\n                odd_count++;\n            } else {\n            \
    \    even_count++;\n            }\n        }\n    }\n    return Tuple!(even_count,\
    \ odd_count);\n}\n/*\nGiven a long integer. return the sum of all even digits.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo7x70us1.d(44): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpo7x70us1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even_count = 0;\n\tlong odd_count = 0;\n\tbool isEven = false;\n\tbool\
    \ isOdd = false;\n\twhile (num != 0) {\n\t\tisEven = isEven || num % 2 == 0;\n\
    \t\tisOdd = isOdd || num % 2 == 1;\n\t\tnum = num >> 1;\n\t}\n\treturn Tuple!(long,long)(even_count,\
    \ odd_count);\n}\n/*\nGiven two integers representing a number and another number\
    \ representing a power of two. return a tuple that has the quotient of the power\
    \ and the remainder.\nunittest\n{\n    alias candidate = even_odd_count;\n\n \
    \   assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ccyjhrd.d(26): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6ccyjhrd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int i = 0; // count of even digits\n    while(num > 0){\n        i = num\
    \ / 10;\n        num -= i * 10;\n    }\n    return Tuple!(i, i); \n}\n/*\nGiven\
    \ a number and a digit, return true if the digit is in the number\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp00rzvtwk.d(22): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp00rzvtwk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \ : Tuple!(long, long) {\n    let i = num;\n    if (i < 0) {\n        i = -i;\n\
    \    }\n    \n    Tuple!(long, long) tuple = i;\n    \n    while (i > 0 && (num\
    \ / 10).0 % 2 == 0) {\n        i = i / 10;\n        tuple.0 += 1;\n    }\n   \
    \ while (i > 0 && (num / 10).0 % 2 == 1) {\n        i = i / 10;\n        tuple.1\
    \ += 1;\n    }\n    \n    tuple;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa9d9ggn1.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpa9d9ggn1.d(14): Error: Declaration expected, not \'':\''\n/tmp/tmpa9d9ggn1.d(16):
    Error: Declaration expected, not \''if\''\n/tmp/tmpa9d9ggn1.d(18): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa9d9ggn1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Tuple!(long, long) tuple = tuple2(0,0);\n    while(num > 0) \n    {\n   \
    \     long even = 1;\n        long odd = 1;\n        while(num > 0) \n       \
    \ {\n            long temp = num % 10;\n            if(temp % 2 == 0)\n      \
    \      {\n                even *= temp;\n                num /= 10;\n        \
    \    }\n            else\n            {\n                odd *= temp;\n      \
    \          num /= 10;\n            }\n        }\n        tuple = tuple2(tuple.value1.value1\
    \ + even , tuple.value2.value1 + odd);\n    }\n    return tuple;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp53rsdw5k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 1;\n\twhile(num > 0)\n\t{\n\t\tif(num & 1)\n\t\t\
    {\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t\tnum = num >>\
    \ 1;\n\t}\n\treturn Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnp47s6lb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \trequire(num <= 0x3fffffffL, sprintf(\"the number must be less than or equal\
    \ to 0x3fffffffL\"));\n\tint even = 0, odd = 1, div = num / 2;\n\twhile(div !=\
    \ 0) {\n\t\tif(div % 2 != 0) {\n\t\t\todd++;\n\t\t} else {\n\t\t\teven++;\n\t\t\
    }\n\t\tdiv = div / 2;\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ Tuple!(long, long) even_odd_count(odd);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpakrfcjxz.d(25): Error: found \''even_odd_count\'' when expecting
    \'';\'' following return statement\n/tmp/tmpakrfcjxz.d(25): Error: found \''even_odd_count\''
    when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpakrfcjxz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  int num_digits = digits(num);\n  int evens = 0;\n  int odds = 0;\n  int i;\n\
    \  int n = num_digits - 1;\n  for(i = 0; i < n; i++) {\n    int digit = num /\
    \ (long long) pow(10, n);\n    int mod = num % (long long) pow(10, n);\n    if\
    \ (mod % 2 != 0)\n      odds += 1;\n    else\n      evens += 1;\n    num = digit;\n\
    \  }\n  return Tuple!(long, long)(evens, odds);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp84oc7w7w.d(21): Error: found \''long\'' when expecting \''.\''
    following long\n/tmp/tmp84oc7w7w.d(21): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmp84oc7w7w.d(21): Error: found \''pow\'' when expecting
    \'')\''\n/tmp/tmp84oc7w7w.d(22): Error: found \''long\'' when expecting \''.\''
    following long\n/tmp/tmp84oc7w7w.d(22): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmp84oc7w7w.d(22): Error: found \''pow\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84oc7w7w.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    var even = 0, odd = 1;\n    while (num > 0)\n    {\n        var tmp = num\
    \ % 10;\n        num = (num - tmp) / 10;\n        if (tmp % 2 != 0)\n        {\n\
    \            even = even * 10 + tmp;\n        }\n        else\n        {\n   \
    \         odd = odd * 10 + tmp;\n        }\n    }\n    return Tuple!(even, odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp83cd8ywl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint even = 0, odd = 0;\n\twhile (num != 0) {\n\t\tint digit = num % 10;\n\t\t\
    if (digit % 2 == 0) {\n\t\t\teven++;\n\t\t}\n\t\telse {\n\t\t\todd++;\n\t\t}\n\
    \t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpset5mudq.d(26): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmpset5mudq.d(26): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpset5mudq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long odd = 0;\n    long even = 0;\n    long digit = num;\n    while(digit\
    \ > 0){\n        if (digit % 2 == 0){\n            even++;\n            digit\
    \ /= 2;\n        }\n        else {\n            odd++;\n            digit /= 2;\n\
    \        }\n    }\n    return Tuple!(long,long)(even, odd);\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdedyezt7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Tuple!(long, long) ans = (0, 0);\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpezjglfmc.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpezjglfmc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   where {\n\tTuple!(long, long) even_odd_count_internal = tuple!(\n\t\tstd.math.getbit(num,0L),\n\
    \t\tstd.math.getbit(num,1L));\n\treturn even_odd_count_internal;\n}\n/*\nGiven\
    \ a long. return a string representing the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5i72c20j.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp5i72c20j.d(14): Error: no identifier for declarator where\n/tmp/tmp5i72c20j.d(14):
    Error: Declaration expected, not \''{\''\n/tmp/tmp5i72c20j.d(18): Error: Declaration
    expected, not \''return\''\n/tmp/tmp5i72c20j.d(19): Error: unrecognized declaration\n/tmp/tmp5i72c20j.d(20):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5i72c20j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  int count = 0;\n  while (num != 0) {\n    int digit = num % 10;\n    num /=\
    \ 10;\n    if (digit % 2 == 0) count += 1;\n  }\n  return Tuple!(long, long) count,\
    \ (long) count + 1;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb6bdvzql.d(21): Error: found \''count\'' when expecting \'';\''
    following return statement\n/tmp/tmpb6bdvzql.d(21): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb6bdvzql.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if(num < 0)\n        return Tuple!(1, 0);\n    \n    int even = 0, odd =\
    \ 0;\n    while(num != 0)\n    {\n        int digit = num % 10;\n        if(digit\
    \ % 2 == 0)\n            even++;\n        else\n            odd++;\n        num\
    \ /= 10;\n    }\n    return Tuple!(even, odd);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz_nr64z3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong digit = num;\n\tTuple!(long, long) even = Tuple!(long, long) ();\n\tTuple!(long,\
    \ long) odd = Tuple!(long, long) ();\n\t\n\twhile(digit) {\n\t\tif((digit & 1)\
    \ != 0) odd = Tuple!(long, long) $add!, odd, Tuple!(long, long) digit;\n\t\telse\
    \ even = Tuple!(long, long) $add!, even, Tuple!(long, long) digit;\n\t\tdigit\
    \ = digit/2;\n\t}\n\treturn even, odd;\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphoahf4z1.d(20): Error: found \''$\'' when expecting \'';\''
    following statement\n/tmp/tmphoahf4z1.d(20): Error: template argument expected
    following !\n/tmp/tmphoahf4z1.d(20): Error: found \''digit\'' when expecting \'';\''
    following statement\n/tmp/tmphoahf4z1.d(21): Error: found \''else\'' instead of
    statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphoahf4z1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \t// count the number of digits (including sign)\n\tnum %= 100;\n\tnum /= 100;\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp97q_4u7v.d(18): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97q_4u7v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint odd = 0, even = 0;\n\twhile(num > 0) {\n\t\tint c = num % 10;\n\t\tnum /=\
    \ 10;\n\t\todd += c & 1;\n\t\teven += c >> 1;\n\t}\n\treturn Tuple!(long, long)\
    \ odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsuj2kj61.d(22): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmpsuj2kj61.d(22): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsuj2kj61.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    var even = 0;\n    var odd = 1;\n    while (num != 0) {\n        num = num\
    \ / 10;\n        even = even * 10 + num;\n        odd = odd * 10 + 1;\n    }\n\
    \    return (even, odd);\n}\n/*\nGiven an integer. return a tuple that has the\
    \ number of digits in the integer and their position.\n    \n     Example:\n \
    \   >>> count_digits(-12)\n    (1, 0)\n    >>> count_digits(123)\n    (2, 1)\n\
    \    \n*/\nTuple!(long, int) count_digits(long num) \n{\n    var digits = 1;\n\
    \    while (num != 0) {\n        num = num / 10;\n        digits = digits + 1;\n\
    \    }\n    return (digits, digits);\n}\n/*\nGiven a floating point number. return\
    \ an integer that has only two decimals.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpccylb4fi.d(43): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpccylb4fi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlet evens = divrem(num, 0, 2);\n\tlet odds = divrem(num, 2, 2);\n\treturn (evens\
    \ , odds);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu7070rfl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint4 n = num / 10L;\n\tint result = 0;\n\twhile(n > 0){\n\t\tresult += n % 2\
    \ == 0 ? 1L : 2L;\n\t\tn /= 10L;\n\t}\n\treturn Tuple!(result, result);\n}\n/*\n\
    Given an integer N. return a tuple that has N times \"0\" in it.\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgfsv4270.d(23): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpgfsv4270.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong len = 0L;\n\tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0L) {\n\t\t\
    long digit = num % 10L;\n\t\teven = (even % 2L) + (digit % 2L);\n\t\todd  = (odd\
    \ % 2L) + (digit % 2L);\n\t\tnum /= 10L;\n\t\tlen++;\n\t}\n\treturn Tuple!(long,\
    \ long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoa9fjrg2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int odd = 0, even = 0;\n    while(num > 0)\n    {\n        num /= 10;\n \
    \       odd++;\n    }\n    while (num > 0)\n    {\n        num /= 10;\n      \
    \  even++;\n    }\n    Tuple!(long, long) tuple;\n    tuple._1 = even;\n    tuple._2\
    \ = odd;\n    return tuple;\n}\n/*\nGiven an integer and an integer.\n    return\
    \ a tuple that has the number of digits in both numbers, in order.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj3t3hblb.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpj3t3hblb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long odd = 0;\n    long even = 0;\n    for(int i = 1;i < num;i++) {\n   \
    \     if(num % i == 0) {\n            even += i;\n        } else {\n         \
    \   odd += i;\n        }\n    }\n    return Tuple!(long, long){ odd, even };\n\
    }\n</code>\n<|/ a |>\n<| a dscore=1 tags=c++ |>\nThis can be done with a single\
    \ line of Python code, so no reason to use C++.\n<code>\ndef even_odd_count(n):\n\
    \    even = []\n    odd = []\n    for i in range(1,n+1,2):\n        if i % 2:\n\
    \            even.append(i)\n        else:\n            odd.append(i)\n    return\
    \ (even,odd)\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphoa74e5q.d(24): Error: found \''{\'' when expecting \'';\''
    following return statement\n/tmp/tmphoa74e5q.d(24): Error: found \''}\'' when
    expecting \'';\'' following statement\n/tmp/tmphoa74e5q.d(26): Error: Declaration
    expected, not \''<\''\n/tmp/tmphoa74e5q.d(44): Error: Declaration expected, not
    \''assert\''\n/tmp/tmphoa74e5q.d(45): Error: Declaration expected, not \''assert\''\n/tmp/tmphoa74e5q.d(46):
    Error: Declaration expected, not \''assert\''\n/tmp/tmphoa74e5q.d(47): Error:
    Declaration expected, not \''assert\''\n/tmp/tmphoa74e5q.d(48): Error: Declaration
    expected, not \''assert\''\n/tmp/tmphoa74e5q.d(49): Error: Declaration expected,
    not \''assert\''\n/tmp/tmphoa74e5q.d(50): Error: Declaration expected, not \''assert\''\n/tmp/tmphoa74e5q.d(51):
    Error: Declaration expected, not \''assert\''\n/tmp/tmphoa74e5q.d(52): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphoa74e5q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \treturn Tuple(even_count(num), odd_count(num));\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0bjl7ton.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \trequire(isLong(num), \n\t\t\t\"The argument must be a valid long.\");\n\t\n\t\
    int even = 0, odd = 0, digit;\n\twhile(num > 0)\n\t{\n\t\tdigit = num % 10;\n\t\
    \tif(digit % 2 != 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    odd += 1;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\t\n\treturn Tuple!(int,int)(even,odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpippt9xes.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tTuple!(long, long) t = num;\n\tbool is_even = true;\n\twhile(is_even)\n\t{\n\
    \t\tif((num % 10) == 0)\n\t\t{\n\t\t\tis_even = false;\n\t\t\tt = Tuple!(long,\
    \ long) t;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tt = Tuple!(long, long) Tuple!(t.0, (t.0\
    \ % 10) + 1);\n\t\t}\n\t}\n\t\n\treturn t;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq6mnvald.d(22): Error: found \''t\'' when expecting \'';\''
    following statement\n/tmp/tmpq6mnvald.d(26): Error: found \''Tuple\'' when expecting
    \'';\'' following statement\n/tmp/tmpq6mnvald.d(26): Error: found \''0.00000\''
    when expecting \'')\''\n/tmp/tmpq6mnvald.d(26): Error: found \''0.00000\'' when
    expecting \'')\''\n/tmp/tmpq6mnvald.d(26): Error: found \'')\'' when expecting
    \'';\'' following statement\n/tmp/tmpq6mnvald.d(26): Error: found \'')\'' when
    expecting \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpq6mnvald.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    where {\n\tnum = (num < 0) ? -num : num;\n\tint even = 0, odd = 0;\n\tfor (int\
    \ i = 0; i < 32; i++) \n\t{\n\t\tint x = (num >> i*4) & 15; \n\t\tif (x != 0)\
    \ \n\t\t{\n\t\t\tif (x % 2 != 0) \n\t\t\t{\n\t\t\t\teven++;\n\t\t\t}\n\t\t\telse\
    \ \n\t\t\t{\n\t\t\t\todd++;\n\t\t\t}\n\t\t}\n\t}\n\treturn Tuple!(long, long)\
    \ even_odd_count(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp74xcfv4r.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp74xcfv4r.d(14): Error: no identifier for declarator where\n/tmp/tmp74xcfv4r.d(14):
    Error: Declaration expected, not \''{\''\n/tmp/tmp74xcfv4r.d(17): Error: Declaration
    expected, not \''for\''\n/tmp/tmp74xcfv4r.d(17): Error: no identifier for declarator
    i\n/tmp/tmp74xcfv4r.d(17): Error: Declaration expected, not \''<\''\n/tmp/tmp74xcfv4r.d(17):
    Error: no identifier for declarator i\n/tmp/tmp74xcfv4r.d(17): Error: Declaration
    expected, not \''++\''\n/tmp/tmp74xcfv4r.d(20): Error: Declaration expected, not
    \''if\''\n/tmp/tmp74xcfv4r.d(25): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp74xcfv4r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even, odd;\nunittest\n{\n    alias candidate = even_odd_count;\n\n \
    \   assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr7l_nicd.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr7l_nicd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint count = 0;\n\tint n = (int)floor(num);\n\tint remainder;\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp70q0u6tp.d(16): Error: C style cast illegal, use cast(int)floor(num)\n/tmp/tmp70q0u6tp.d(18):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp70q0u6tp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint count = 0;\n\tint even_count = 0;\n\tint odd_count = 0;\n\t\n\twhile (num\
    \ > 0) {\n\t\tint digit = num % 10;\n\t\tnum /= 10;\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi9lgsaos.d(22): Error: found \''unittest\'' instead of statement\n/tmp/tmpi9lgsaos.d(35):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi9lgsaos.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tassert(num > 0);\n\tassert(num <= 2147483647L);\n\t\n\tlong evenDigitCount =\
    \ 0;\n\tlong oddDigitCount = 0;\n\t\n\twhile(num > 0) {\n\t\tint digit = num %\
    \ 10;\n\t\tassert(digit >= 0 && digit < 10);\n\t\t\n\t\tif(digit % 2 == 0) {\n\
    \t\t\tevenDigitCount += 1;\n\t\t}\n\t\telse {\n\t\t\toddDigitCount += 1;\n\t\t\
    }\n\t\t\n\t\tnum /= 10;\n\t}\n\t\n\treturn Tuple!(long, long){evenDigitCount,\
    \ oddDigitCount};\n}\n/*\nGiven a tuple. return a tuple that has the first and\
    \ last element in the tuple respectively.\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpahny7ojd.d(35): Error: found \''{\'' when expecting \'';\''
    following return statement\n/tmp/tmpahny7ojd.d(35): Error: found \''}\'' when
    expecting \'';\'' following statement\n/tmp/tmpahny7ojd.d(37): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpahny7ojd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    => (num % 2 == 0 ? (num / 2 % 2 == 1 ? 1L : 2L) : 0L);\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvlyh3wev.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpvlyh3wev.d(14): Error: Declaration expected, not \''=>\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvlyh3wev.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint remainder;\n\tif((num % 2) == 0) return Tuple!(1L, 1L);\n\telse\n\t{\n\t\
    \tremainder = num % 10;\n\t\tif((num % 10) == 0) return Tuple!(1L, remainder);\n\
    \t\telse\n\t\t{\n\t\t\tint num_odd_digits = 0;\n\t\t\tint num_even_digits = 0;\n\
    \t\t\tfor(int i = 0; i <= remainder; i++)\n\t\t\t{\n\t\t\t\tif(i % 2 == 0)\n\t\
    \t\t\t{\n\t\t\t\t\tnum_even_digits++;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\
    \t\t\tnum_odd_digits++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif((num_odd_digits + num_even_digits\
    \ + 1) == 1)\n\t\t\t{\n\t\t\t\tint num_even = 0;\n\t\t\t\tint num_odd = 0;\n\t\
    \t\t\tfor(int i = 0; i <= remainder; i++)\n\t\t\t\t{\n\t\t\t\t\tif(i % 2 == 0)\n\
    \t\t\t\t\t{\n\t\t\t\t\t\tnum_even++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\
    {\n\t\t\t\t\t\tnum_odd++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(num_even % 2 ==\
    \ 0)\n\t\t\t\t{\n\t\t\t\t\treturn Tuple!(num_even, num_odd);\n\t\t\t\t}\n\t\t\t\
    \telse\n\t\t\t\t{\n\t\t\t\t\treturn Tuple!(0L, num_odd);\n\t\t\t\t}\n\t\t\t}\n\
    \t\t\telse if((num_odd_digits + num_even_digits + 1) == 2)\n\t\t\t{\n\t\t\t\t\
    int num_even = 0;\n\t\t\t\tint num_odd = 0;\n\t\t\t\tfor(int i = 0; i <= remainder;\
    \ i++)\n\t\t\t\t{\n\t\t\t\t\tif(i % 2 == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnum_even++;\n\
    \t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnum_odd++;\n\t\t\t\t\t}\n\
    \t\t\t\t}\n\t\t\t\tif(num_even % 2 == 0)\n\t\t\t\t{\n\t\t\t\t\treturn Tuple!(num_even,\
    \ num_odd);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn Tuple!(0L, num_even);\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppxwhcfq3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num <= 0L)\n\t\traise DomainError(f\"Cannot count {num}\");\n\t\n\tlong?\
    \ even, odd = (Long.wrap(num)).divmod(2L);\n\treturn Tuple!(long, long) Tuple!((even/2L).toInt(),\
    \ (odd).toInt());\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n \
    \   assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprjai9g3z.d(16): Error: found \''DomainError\'' when expecting
    \'';\'' following statement\n/tmp/tmprjai9g3z.d(16): Error: found \''"Cannot count
    {num}"\'' when expecting \'')\''\n/tmp/tmprjai9g3z.d(16): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmprjai9g3z.d(18): Error: no
    identifier for declarator long\n/tmp/tmprjai9g3z.d(18): Error: found \''?\'' instead
    of statement\n/tmp/tmprjai9g3z.d(19): Error: found \''Tuple\'' when expecting
    \'';\'' following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmprjai9g3z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long digit, even, odd;\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxjjgq98b.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxjjgq98b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Tuple!(long, long) result;\n    int i = 0;\n    int j = 0;\n    while (num\
    \ /= 10)\n    {\n        num /= 10;\n        i += 1;\n    }\n    while (i < 2)\n\
    \    {\n        result._1 = num;\n        result._2 = i;\n        i += 1;\n  \
    \  }\n    return result;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgh9i3sfc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \t\n\tint odd_count = 0;\n\tint even_count = 0;\n\t\n\twhile (num > 0)\n\t{\n\t\
    \tint remainder = (int)num % 10;\n\t\tif (remainder % 2 == 0)\n\t\t{\n\t\t\teven_count++;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\todd_count++;\n\t\t}\n\t\tnum = num / 10;\n\t}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv1c7_yd6.d(21): Error: C style cast illegal, use cast(int)num\n/tmp/tmpv1c7_yd6.d(32):
    Error: found \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpv1c7_yd6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    => (num % 2 == 0 ? 1 : 1), \n\t((num % 2 == 0) ? 2 : 1), \n\t((num % 2 == 0) ?\
    \ 2 : 1), \n\t((num % 2 == 0) ? 2 : 1), \n\t((num % 2 == 0) ? 2 : 1), \n\t((num\
    \ % 2 == 0) ? 2 : 1), \n\t((num % 2 == 0) ? 2 : 1);\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp66rqx3j5.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp66rqx3j5.d(14): Error: Declaration expected, not \''=>\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp66rqx3j5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   => ((num >> 5) % 2 != 0, (num & 1) == 0)\n    \n/**\n * Given a positive integer.\
    \ return True if is even and False if is odd.\n */\nBool is_even(long num) \n\
    \    => (num & 1) == 0;\n    \n/**\n * Given a positive integer. return True if\
    \ is odd and False if is even.\n */\nBool is_odd(long num) \n    => (num & 1)\
    \ == 1;\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp04zc2uf7.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp04zc2uf7.d(14): Error: Declaration expected, not \''=>\''\n/tmp/tmp04zc2uf7.d(26):
    Error: semicolon expected following function declaration\n/tmp/tmp04zc2uf7.d(26):
    Error: Declaration expected, not \''=>\''\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp04zc2uf7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \ if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n  if\n    num >  0L &&\n    num <= 20L;\nTuple!(long, long) even_odd_count(long\
    \ num) \n\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppl8a9v0d.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmppl8a9v0d.d(14): Error: Declaration expected, not \''if\''\n/tmp/tmppl8a9v0d.d(18):
    Error: semicolon expected following function declaration\n/tmp/tmppl8a9v0d.d(18):
    Error: Declaration expected, not \''if\''\n/tmp/tmppl8a9v0d.d(22): Error: semicolon
    expected following function declaration\n/tmp/tmppl8a9v0d.d(22): Error: Declaration
    expected, not \''if\''\n/tmp/tmppl8a9v0d.d(26): Error: semicolon expected following
    function declaration\n/tmp/tmppl8a9v0d.d(26): Error: Declaration expected, not
    \''if\''\n/tmp/tmppl8a9v0d.d(30): Error: semicolon expected following function
    declaration\n/tmp/tmppl8a9v0d.d(30): Error: Declaration expected, not \''if\''\n/tmp/tmppl8a9v0d.d(34):
    Error: semicolon expected following function declaration\n/tmp/tmppl8a9v0d.d(34):
    Error: Declaration expected, not \''if\''\n/tmp/tmppl8a9v0d.d(38): Error: semicolon
    expected following function declaration\n/tmp/tmppl8a9v0d.d(38): Error: Declaration
    expected, not \''if\''\n/tmp/tmppl8a9v0d.d(42): Error: semicolon expected following
    function declaration\n/tmp/tmppl8a9v0d.d(42): Error: Declaration expected, not
    \''if\''\n/tmp/tmppl8a9v0d.d(46): Error: semicolon expected following function
    declaration\n/tmp/tmppl8a9v0d.d(46): Error: Declaration expected, not \''if\''\n/tmp/tmppl8a9v0d.d(50):
    Error: semicolon expected following function declaration\n/tmp/tmppl8a9v0d.d(50):
    Error: Declaration expected, not \''if\''\n/tmp/tmppl8a9v0d.d(54): Error: semicolon
    expected following function declaration\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmppl8a9v0d.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long evenCount = 0;\n    long oddCount = 0;\n    long remainder = num;\n\
    \    while (remainder > 0)\n    {\n        if (remainder % 2 == 0)\n        {\n\
    \            evenCount++;\n        }\n        else\n        {\n            oddCount++;\n\
    \        }\n        remainder = remainder / 2;\n    }\n    return Tuple!(long,\
    \ long) evenCount, Tuple!(long, long) oddCount;\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a dscore=2 |>\nThe code is not tested, written by me, but here you go\n<code>\n\
    import std.algorithm: map;\nimport std.algorithm: range;\nimport std.algorithm:\
    \ not;\nimport std.conv: bits;\nimport std.conv: to!string;\nimport std.conv:\
    \ to!string;\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppfjcb9w3.d(30): Error: found \''evenCount\'' when expecting
    \'';\'' following return statement\n/tmp/tmppfjcb9w3.d(30): Error: found \'',\''
    instead of statement\n/tmp/tmppfjcb9w3.d(32): Error: Declaration expected, not
    \''<\''\n/tmp/tmppfjcb9w3.d(41): Error: \'';\'' expected\n/tmp/tmppfjcb9w3.d(41):
    Error: no identifier for declarator string\n/tmp/tmppfjcb9w3.d(42): Error: \'';\''
    expected\n/tmp/tmppfjcb9w3.d(42): Error: no identifier for declarator string\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppfjcb9w3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  if(num >= 0)\n    switch(num) \n    {\n      case(0) => Tuple!(1, 1);\n   \
    \   case(odd & num) => Tuple!(1, 0);\n      case(even) => Tuple!(0, 1);\n    }\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3g1kfp7v.d(18): Error: basic type expected, not 0\n/tmp/tmp3g1kfp7v.d(18):
    Error: found \''0\'' when expecting \'')\''\n/tmp/tmp3g1kfp7v.d(18): Error: missing
    { ... } for function literal\n/tmp/tmp3g1kfp7v.d(18): Error: found \'')\'' when
    expecting \'':\''\n/tmp/tmp3g1kfp7v.d(18): Error: found \''=>\'' instead of statement\n/tmp/tmp3g1kfp7v.d(19):
    Error: found \''&\'' when expecting \'')\''\n/tmp/tmp3g1kfp7v.d(19): Error: missing
    { ... } for function literal\n/tmp/tmp3g1kfp7v.d(19): Error: found \''num\'' when
    expecting \'':\''\n/tmp/tmp3g1kfp7v.d(19): Error: found \'')\'' instead of statement\n/tmp/tmp3g1kfp7v.d(20):
    Error: found \'';\'' when expecting \'':\''\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp3g1kfp7v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    \n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n    num\
    \ /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n   \
    \ num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    int4 m = num % 10;\n\
    \    num /= 10;\n    int4 n = num % 10;\n    num /= 10;\n    \nunittest\n{\n \
    \   alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpafnpwmaq.d(95): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafnpwmaq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlet result = num;\n\twhile (num != 0) \n\t{\n\t\tlet temp = num % 10;\n\t\t\
    if (temp == 0 || temp == 1 || temp == 2 || temp == 4)\n\t\t{\n\t\t\tresult = result\
    \ + (num / 10);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult = result + (temp + 1);\n\
    \t\t}\n\t\tnum = num / 10;\n\t}\n\treturn (result, num);\n}\n/*\nGiven a number.\
    \ return a tuple that has the number's decimal digits and then a tuple with the\
    \ first letter of the alphabet and the last letter of the alphabet.\n    Example:\n\
    \    >>> even_odd_count_dec(-1L)\n    (-4, (None, 'A'))\n    >>> even_odd_count_dec(123L)\n\
    \    (12, (3, 'B'))\n*/\nTuple!(int, (Tuple, char)) even_odd_count_dec(long num)\
    \ \n{\n\tlet (digits, firstLetter, endLetter) = num;\n\tif (digits != 0)\n\t{\n\
    \t\tlet temp = num;\n\t\twhile (temp > 0)\n\t\t{\n\t\t\tlet temp = temp % 10;\n\
    \t\t\tdigits = digits + temp;\n\t\t}\n\t}\n\treturn (digits, (firstLetter, endLetter));\n\
    }\n/*\nGiven a string, return a tuple that has the number of letters in the string\
    \ and the number of digits.\n    Example:\n    >>> even_odd_count_letters(\"\"\
    )\n    ((), 0)\n    >>> even_odd_count_letters(\"A\")\n    (('A', 0), 1)\n*/\n\
    Tuple!(string, Tuple) even_odd_count_letters(string str)\n{\n\tlet result = str;\n\
    \tlet letterCount = 0;\n\tlet digitCount = 0;\n\twhile (result != \"\")\n\t{\n\
    \t\tlet temp = result;\n\t\twhile (temp != \"\")\n\t\t{\n\t\t\tlet temp = temp[0];\n\
    \t\t\tletterCount = letterCount + 1;\n\t\t\tdigitCount = digitCount + temp.length\
    \ - 1;\n\t\t}\n\t\tresult = result.replace(/^[A-z]$/, \"\");\n\t}\n\treturn (letterCount,\
    \ digitCount);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7tk4elid.d(39): Error: found \'')\'' when expecting \''.\''
    following char\n/tmp/tmp7tk4elid.d(39): Error: found \'')\'' when expecting identifier
    following \''char.\''\n/tmp/tmp7tk4elid.d(39): Error: found \''even_odd_count_dec\''
    when expecting \'')\''\n/tmp/tmp7tk4elid.d(39): Error: found \''num\'' when expecting
    \''.\'' following long\n/tmp/tmp7tk4elid.d(39): Error: found \'')\'' when expecting
    identifier following \''long.\''\n/tmp/tmp7tk4elid.d(40): Error: found \''{\''
    when expecting \'',\''\n/tmp/tmp7tk4elid.d(41): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmp7tk4elid.d(42): Error: expression expected, not \''if\''\n/tmp/tmp7tk4elid.d(43):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmp7tk4elid.d(44): Error: found
    \''temp\'' when expecting \'',\''\n/tmp/tmp7tk4elid.d(44): Error: expression expected,
    not \''=\''\n/tmp/tmp7tk4elid.d(44): Error: found \''num\'' when expecting \'',\''\n/tmp/tmp7tk4elid.d(44):
    Error: expression expected, not \'';\''\n/tmp/tmp7tk4elid.d(45): Error: found
    \''while\'' when expecting \'',\''\n/tmp/tmp7tk4elid.d(45): Error: found \''>\''
    when expecting \'')\''\n/tmp/tmp7tk4elid.d(45): Error: missing { ... } for function
    literal\n/tmp/tmp7tk4elid.d(45): Error: found \''0\'' when expecting \'',\''\n/tmp/tmp7tk4elid.d(46):
    Error: found \''{\'' when expecting \'')\'' following template argument list\n/tmp/tmp7tk4elid.d(47):
    Error: semicolon expected, not \''temp\''\n/tmp/tmp7tk4elid.d(47): Error: no identifier
    for declarator temp\n/tmp/tmp7tk4elid.d(47): Error: Declaration expected, not
    \''=\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7tk4elid.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while (num != 0) {\n        num %=\
    \ 10;\n        if (num % 2 != 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long,\
    \ long) even, odd;\n}\n    \n/*\nGiven a tuple of integers. return a tuple that\
    \ has the absolute value of the difference of the two integer tuples.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgkun5m8a.d(27): Error: found \''even\'' when expecting \'';\''
    following return statement\n/tmp/tmpgkun5m8a.d(27): Error: found \'',\'' instead
    of statement\n/tmp/tmpgkun5m8a.d(30): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgkun5m8a.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong n1 = abs(num);\n\tlong n2 = 0;\n\tlong n3 = 0;\n\tlong n4 = 0;\n\tlong\
    \ n5 = 0;\n\t\n\tif(num < 0) \n\t\treturn Tuple!(1, 1);\n\t\n\tfor( int i = 0;\
    \ i < n1; i++ ) \n\t{\n\t\tif(num % 2 == 0) \n\t\t\tn2++;\n\t\telse \n\t\t{\n\t\
    \t\tif(num % 2 == 1) \n\t\t\t\tn3++;\n\t\t\telse \n\t\t\t{\n\t\t\t\tif(num % 2\
    \ == 3) \n\t\t\t\t\tn4++;\n\t\t\t\telse \n\t\t\t\t{\n\t\t\t\t\tif(num % 2 == 5)\
    \ \n\t\t\t\t\t\tn5++;\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow \"Error\
    \ - Number not even, odd, or non-prime\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn Tuple!(n2, n3);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1j5nv4c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong num_str = tostring(num);\n\tint evens = 0;\n\tint odds = 0;\n\tint index\
    \ = 0;\n\tfor (int i = 0; i < num_str.length(); i++) {\n\t\tbool is_even = false;\n\
    \t\tbool is_odd = false;\n\t\tswitch(num_str[i]){\n\t\t\tcase '0':\n\t\t\t\tbreak;\n\
    \t\t\tcase '1':\n\t\t\t\tis_even = true;\n\t\t\t\tbreak;\n\t\t\tcase '2':\n\t\t\
    \t\tis_even = true;\n\t\t\t\tbreak;\n\t\t\tcase '3':\n\t\t\t\tis_even = true;\n\
    \t\t\t\tbreak;\n\t\t\tcase '4':\n\t\t\t\tis_even = true;\n\t\t\t\tbreak;\n\t\t\
    \tcase '5':\n\t\t\t\tis_even = true;\n\t\t\t\tbreak;\n\t\t\tcase '6':\n\t\t\t\t\
    is_even = true;\n\t\t\t\tbreak;\n\t\t\tcase '7':\n\t\t\t\tis_even = true;\n\t\t\
    \t\tbreak;\n\t\t\tcase '8':\n\t\t\t\tis_even = true;\n\t\t\t\tbreak;\n\t\t\tcase\
    \ '9':\n\t\t\t\tis_even = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tis_even\
    \ = true;\n\t\t}\n\t\tif (is_even)\n\t\t\tevens++;\n\t\telse {\n\t\t\tis_odd =\
    \ true;\n\t\t\todds++;\n\t\t}\n\t\tindex++;\n\t}\n\treturn Tuple!(long, long)\
    \ evens, odds;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3rau6mc9.d(63): Error: found \''evens\'' when expecting \'';\''
    following return statement\n/tmp/tmp3rau6mc9.d(63): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3rau6mc9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int count = 0;\n    num /= 10;\n    while (num > 0) {\n        count++;\n\
    \        num /= 10;\n    }\n    return Tuple!(long, long)(count, count % 2);\n\
    }\n/*\nReturns the number of digits of an int in base 10\nExample:\n>>> digits(-100)\n\
    3\n>>> digits(12345)\n4\n*/\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvgtknp12.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num == 0)\n\t\treturn tuple!(1L, 1L);\n\t\n\tint evenDigits = 0;\n\tint\
    \ oddDigits = 0;\n\tfor (int i = 0; i < num.digits; i++)\n\t{\n\t\tif (num.digits[i]\
    \ % 2 == 0)\n\t\t\tevenDigits++;\n\t\telse\n\t\t\toddDigits++;\n\t}\n\treturn\
    \ tuple!(evenDigits, oddDigits);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi8le_ova.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong long remainder = num % 10;\n\tlong long even = num / 10;\n\tlong long odd\
    \ = num % 10;\n\tif (remainder % 2 == 0) return Tuple!<long, long>(even, odd);\n\
    \treturn Tuple!<long, long>(even + 1, odd + 1);\n}\n/* \nGiven a floating point\
    \ number. return a tuple that has number of digits in the integer part \nand the\
    \ float part. \nExample:\n>>> even_odd_count(-12.3)\ntuple(2L, -2.3)\n*/\nTuple!(long,\
    \ double) even_odd_count(double num) \n{\n\tlong long remainder = frexp(num, &exponent);\n\
    \tlong long even = remainder % 10;\n\tdouble floatPart = frexp(num, &exponent)\
    \ / 10;\n\tif (remainder % 2 == 0) return Tuple!<long, double>(even, floatPart);\n\
    \treturn Tuple!<long, double>(even + 1, floatPart);\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsahmfclh.d(15): Error: no identifier for declarator long\n/tmp/tmpsahmfclh.d(16):
    Error: no identifier for declarator long\n/tmp/tmpsahmfclh.d(17): Error: no identifier
    for declarator long\n/tmp/tmpsahmfclh.d(18): Error: found \'',\'' when expecting
    \''.\'' following long\n/tmp/tmpsahmfclh.d(18): Error: found \''long\'' when expecting
    identifier following \''long.\''\n/tmp/tmpsahmfclh.d(18): Error: found \''>\''
    when expecting \'';\'' following return statement\n/tmp/tmpsahmfclh.d(19): Error:
    found \'',\'' when expecting \''.\'' following long\n/tmp/tmpsahmfclh.d(19): Error:
    found \''long\'' when expecting identifier following \''long.\''\n/tmp/tmpsahmfclh.d(19):
    Error: found \''>\'' when expecting \'';\'' following return statement\n/tmp/tmpsahmfclh.d(30):
    Error: no identifier for declarator long\n/tmp/tmpsahmfclh.d(31): Error: no identifier
    for declarator long\n/tmp/tmpsahmfclh.d(33): Error: found \'',\'' when expecting
    \''.\'' following long\n/tmp/tmpsahmfclh.d(33): Error: found \''double\'' when
    expecting identifier following \''long.\''\n/tmp/tmpsahmfclh.d(33): Error: found
    \''>\'' when expecting \'';\'' following return statement\n/tmp/tmpsahmfclh.d(34):
    Error: found \'',\'' when expecting \''.\'' following long\n/tmp/tmpsahmfclh.d(34):
    Error: found \''double\'' when expecting identifier following \''long.\''\n/tmp/tmpsahmfclh.d(34):
    Error: found \''>\'' when expecting \'';\'' following return statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsahmfclh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \t\n\tTuple!(long, long) result = Tuple!(long, long);\n\t\n\tlong remainder =\
    \ num;\n\tlong odd = 0;\n\tlong even = 0;\n\t\n\twhile (num > 0)\n\t{\n\t\teven\
    \ = num % 10;\n\t\todd = even % 2;\n\t\tnum = num / 10;\n\t}\n\t\n\tresult._1\
    \ = even;\n\tresult._2 = odd;\n\t\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr_kh22h6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Tuple!(long, long) t = (0,0);\n    // check for even/odd number first\n \
    \   if(num != 0 && (num % 2 == 0 || num % 3 == 0)) {\n        t = (1, 1);\n  \
    \  }\n    else if(num != 0 && (num % 2 == 0 || num % 3 == 1)) {\n        t = (1,\
    \ 2);\n    }\n    else if(num != 0 && (num % 2 == 1 || num % 3 == 1)) {\n    \
    \    t = (2, 2);\n    }\n    else if(num != 0 && (num % 2 == 1 || num % 3 == 0))\
    \ {\n        t = (2, 1);\n    }\n    else if(num != 0 && (num % 2 == 2 || num\
    \ % 3 == 0)) {\n        t = (3, 3);\n    }\n    else if(num != 0 && (num % 2 ==\
    \ 2 || num % 3 == 1)) {\n        t = (3, 2);\n    }\n    else if(num != 0 && (num\
    \ % 2 == 3 || num % 3 == 0)) {\n        t = (3, 1);\n    }\n    else if(num !=\
    \ 0 && (num % 2 == 3 || num % 3 == 1)) {\n        t = (3, 2);\n    }\n    else\
    \ if(num != 0 && (num % 2 == 4 || num % 3 == 0)) {\n        t = (4, 3);\n    }\n\
    \    else if(num != 0 && (num % 2 == 4 || num % 3 == 1)) {\n        t = (4, 2);\n\
    \    }\n    else if(num != 0 && (num % 2 == 4 || num % 3 == 2)) {\n        t =\
    \ (4, 1);\n    }\n    else if(num != 0 && (num % 2 == 5 || num % 3 == 0)) {\n\
    \        t = (5, 3);\n    }\n    else if(num != 0 && (num % 2 == 5 || num % 3\
    \ == 1)) {\n        t = (5, 2);\n    }\n    else if(num != 0 && (num % 2 == 5\
    \ || num % 3 == 2)) {\n        t = (5, 1);\n    }\n    else if(num != 0 && (num\
    \ % 2 == 6 || num % 3 == 0)) {\n        t = (6, 3);\n    }\n    else if(num !=\
    \ 0 && (num % 2 == 6 || num % 3 == 1)) {\n        t = (6, 2);\n    }\n    else\
    \ if(num != 0 && (num % 2 == 6 || num % 3 == 2)) {\n        t = (6, 1);\n    }\n\
    \    else if(num != 0 && (num % 2 == 7 || num % 3 == 0)) {\n        t = (7, 3);\n\
    \    }\n    else if(num != 0 && (num % 2 == 7 || num % 3 == 1)) {\n        t =\
    \ (7, 2);\n    }\n    else if(num != 0 && (num % 2 == 7 || num % 3 == 2)) {\n\
    \        t = (7, 1);\n    }\n    else if(num != 0 && (num % 2 == 8 || num % 3\
    \ == 0)) {\n        t = (8, 3);\n    }\n    else if(num != 0 && (num % 2 == \n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc263d4hc.d(81): Error: expression expected, not \''unittest\''\n/tmp/tmpc263d4hc.d(80):
    Error: found \''{\'' when expecting \'')\''\n/tmp/tmpc263d4hc.d(83): Error: found
    \''alias\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpc263d4hc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \treturn Tuple!(sum(num.digits, 2, num.digits.len()), sum(num.digits, 0, num.digits.len()));\
    \ \n}\n</code>\n<|/ a dscore=1 tags=digits,rust,bit-manipulation |>\n<| a |>\n\
    I made an implementation based on this answer's approach but with some additions.\
    \ I hope it helps!\n<code>\nuse std::cmp::Ordering;\nuse std::ops::{Deref, DerefMut};\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6h5t0s79.d(17): Error: Declaration expected, not \''<\''\n/tmp/tmp6h5t0s79.d(20):
    Error: unterminated character constant\n/tmp/tmp6h5t0s79.d(23): Error: semicolon
    expected, not \'':\''\n/tmp/tmp6h5t0s79.d(23): Error: Declaration expected, not
    \'':\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6h5t0s79.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    | num < 0\n\t= Tuple!(1, 1);\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnm6x354j.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpnm6x354j.d(14): Error: Declaration expected, not \''|\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnm6x354j.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    var even = 0, odd = 1;\n    var tmp = num;\n    while (tmp > 0)\n    {\n\
    \        var div = divmod_by2(tmp);\n        if (div[1] > 0)\n        {\n    \
    \        even++;\n        }\n        else\n        {\n            odd++;\n   \
    \     }\n        tmp = div[0];\n    }\n    return (even, odd);\n}\n/* \nGiven\
    \ two integers. return the multiplicative inverse.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm5lxut7v.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpm5lxut7v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    where {\n\t\n\t/*\n\tWrite your solution here\n\t*/\n\tlet digits:Array{T} = num.digits();\n\
    \tlet even:int = 0;\n\tlet odd:int = 0;\n\t\n\tfor d in digits\n\t\tif d == 0\
    \ \n\t\t\tcontinue\n\t\telseif d == 1\n\t\t\teven++\n\t\telseif d == 2\n\t\t\t\
    odd++\n\t\telseif d == 3\n\t\t\teven++\n\t\t\todd++\n\t\telseif d == 4\n\t\t\t\
    even++\n\t\t\todd++\n\t\telseif d == 5\n\t\t\teven++\n\t\t\todd++\n\t\telseif\
    \ d == 6\n\t\t\teven++\n\t\t\todd++\n\t\telseif d == 7\n\t\t\teven++\n\t\t\todd++\n\
    \t\telseif d == 8\n\t\t\teven++\n\t\t\todd++\n\t\telseif d == 9\n\t\t\teven++\n\
    \t\t\todd++\n\t\telse\n\t\t\teven++\n\t\t\todd++\n\t\tend\n\t\t\n\t\treturn Tuple!(long,\
    \ long) Tuple!(long, long) Tuple!(long, long) Tuple!(long, long)\n\t}\n\t\nendfunction\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2lzn9dpx.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp2lzn9dpx.d(14): Error: no identifier for declarator where\n/tmp/tmp2lzn9dpx.d(14):
    Error: Declaration expected, not \''{\''\n/tmp/tmp2lzn9dpx.d(20): Error: semicolon
    expected, not \'':\''\n/tmp/tmp2lzn9dpx.d(20): Error: Declaration expected, not
    \'':\''\n/tmp/tmp2lzn9dpx.d(21): Error: semicolon expected, not \'':\''\n/tmp/tmp2lzn9dpx.d(21):
    Error: Declaration expected, not \'':\''\n/tmp/tmp2lzn9dpx.d(23): Error: Declaration
    expected, not \''for\''\n/tmp/tmp2lzn9dpx.d(64): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp2lzn9dpx.d(65): Error: Declaration expected, not \''assert\''\n/tmp/tmp2lzn9dpx.d(66):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp2lzn9dpx.d(67): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp2lzn9dpx.d(68): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp2lzn9dpx.d(69): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp2lzn9dpx.d(70): Error: Declaration expected, not \''assert\''\n/tmp/tmp2lzn9dpx.d(71):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp2lzn9dpx.d(72): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2lzn9dpx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num < 0) {\n\t\treturn Tuple!(int, int)(num*-1, num*-1);\n\t}\n\tint count\
    \ = 0;\n\tlong tmp = num;\n\twhile (tmp != 0) {\n\t\tif (tmp%2 == 0) {\n\t\t\t\
    count++;\n\t\t}\n\t\ttmp /= 10;\n\t}\n\treturn Tuple!(int, int)(count, count-1);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo1b2xahf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    \n    num <<= 1;\n    int even = 0;\n    int odd = 0;\n    while (num)\n\
    \    {\n        num >>= 1;\n        if (num & 1)\n        {\n            odd++;\n\
    \        }\n        else\n        {\n            even++;\n        }\n    }\n \
    \   return Tuple!(long, long) tuple(even, odd);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxw6axioi.d(31): Error: found \''tuple\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxw6axioi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong count = 0;\n\t\n\twhile (num >= 10)\n\t{\n\t\tif (num % 2 == 0) \n\t\t\
    {\n\t\t\tnum -= num % 10;\n\t\t\tcount += 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnum\
    \ -= num % 10;\n\t\t}\n\t\tnum /= 10;\n\t}\n\t\n\ttuple!(count, 1);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp64hethqd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\
    \ \n    num %= 100;\n    if (num < 10L) {\n        return (1L, num);\n    }\n\
    \    var even = 1;\n    var odd = 1;\n    while (num > 0) {\n        if (num %\
    \ 10L == 0) {\n            even *= 2;\n        } else if (num % 10L != 0) {\n\
    \            odd *= 2;\n        }\n        num /= 10L;\n    }\n    return (even,\
    \ odd);\n}\n/*\nGiven a string. return a list of characters in that string except\
    \ the first and last characters\n    \n     Example:\n    >>> remove_first_last(\"\
    hello\")\n    [\"he\", \"ll\"]\n    \n*/\nstring! remove_first_last(string! str)\
    \ \n{\n    var res = [str[0]];\n    var i = 1L;\n    while (i < str.len()) {\n\
    \        if (str[i] != str[0]) {\n            res.push(str[i]);\n        }\n \
    \       i++;\n    }\n    res.push(str[str.len() - 1]);\n    return res.join(\"\
    ,\");\n}\n/*\nGiven a list of numbers, return their sum\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0ceesj_k.d(39): Error: function declaration without return type.
    (Note that constructors are always named \''this\'')\n/tmp/tmp0ceesj_k.d(40):
    Error: no identifier for declarator string!remove_first_last(string!str)\n/tmp/tmp0ceesj_k.d(52):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ceesj_k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int odd_count = 0;\n    int even_count = 0;\n    while(num > 0)\n    {\n\
    \        num /= 10;\n        if(num % 2 == 0)\n        {\n            even_count++;\n\
    \        }\n        else\n        {\n            odd_count++;\n        }\n   \
    \ }\n    return Tuple!(even_count, odd_count);\n}\n</code>\n<|/ a dscore=1 |>\n\
    <| c |>\nThank you for your answer but I'm really trying to understand your answer\
    \ and I'm just not getting how I can use that code to get the number of even and\
    \ odd digits. I'm trying to implement your code in my code but I don't think I'm\
    \ understanding how I can return the numbers of even and odd digits as a tuple.\
    \ I have updated my question to show where I'm trying to use your code.\n<|/ c\
    \ |>\n<| c |>\nI added some comments to my answer. I hope that helps!\n<|/ c |>\n\
    <| a tags=c++,tuples,function |>\nThis is an example of using c++11 features \n\
    <code>\n#include <iostream>\n#include <tuple>\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpknfm2ew2.d(31): Error: Declaration expected, not \''<\''\n/tmp/tmpknfm2ew2.d(34):
    Error: unterminated character constant\n/tmp/tmpknfm2ew2.d(34): Error: unterminated
    character constant\n/tmp/tmpknfm2ew2.d(34): Error: unterminated character constant\n/tmp/tmpknfm2ew2.d(34):
    Error: unterminated character constant\n/tmp/tmpknfm2ew2.d(34): Error: unterminated
    character constant\n/tmp/tmpknfm2ew2.d(34): Error: unterminated character constant\n/tmp/tmpknfm2ew2.d(48):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpknfm2ew2.d(49): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpknfm2ew2.d(50): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpknfm2ew2.d(51): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpknfm2ew2.d(52): Error: Declaration expected, not \''assert\''\n/tmp/tmpknfm2ew2.d(53):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpknfm2ew2.d(54): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpknfm2ew2.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpknfm2ew2.d(56): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpknfm2ew2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    struct Rep{\n        bool even;\n        bool odd;\n    };\n    \n    \n\
    \    struct Rep* rep= (struct Rep*)calloc(1, sizeof(struct Rep));\n    long digits=\
    \ digits(num);\n    long even_odd;\n    if (digits==1){\n        rep->even=num%2==0;\n\
    \        rep->odd=num%2==0;\n        return (Tuple!(long, long)((rep->even),(rep->odd)));\n\
    \    }\n    \n    if (digits==2){\n        rep->even=num%2==1;\n        rep->odd=num%2==1;\n\
    \        return (Tuple!(long, long)((rep->even),(rep->odd)));\n    }\n    \n \
    \   long i=2;\n    while (i <= digits){\n        if (num%i == 0){\n          \
    \  rep->even=rep->even&&(num%i)%2==0;\n            rep->odd=rep->odd&&(num%i)%2==1;\n\
    \        }\n        i++;\n    }\n    return (Tuple!(long, long)((rep->even),(rep->odd)));\n\
    }\n'''\n</cell>\n<cell>\n%%writefile $bashfile\n#!/bin/bash -l\n#PBS -l walltime=23:59:00,nodes=1:ppn=24:gpus=2,mem=16gb\
    \ \n#PBS -m abe \n#PBS -N 9161_37_even_odd_count\n#PBS -o 9161_37_even_odd_count.txt\
    \ \n#PBS -q standard \n#PBS -l select=1:ncpus=1:mem=16gb\n### Request \"select\"\
    \ nodes, each with \"mpiprocs\" MPI task and \"ompthreads\" threads\n### Send\
    \ email on abort: \n#PBS -M removed@example.com \n#PBS -m bea \n#PBS -q standard\
    \ \nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3wgfuf0f.d(21): Error: { } expected following aggregate declaration\n/tmp/tmp3wgfuf0f.d(21):
    Error: expression expected, not \''struct\''\n/tmp/tmp3wgfuf0f.d(21): Error: found
    \''Rep\'' when expecting \'')\''\n/tmp/tmp3wgfuf0f.d(21): Error: expression expected,
    not \'')\''\n/tmp/tmp3wgfuf0f.d(21): Error: found \''calloc\'' when expecting
    \'';\'' following statement\n/tmp/tmp3wgfuf0f.d(21): Error: expression expected,
    not \''struct\''\n/tmp/tmp3wgfuf0f.d(21): Error: found \''Rep\'' when expecting
    \'',\''\n/tmp/tmp3wgfuf0f.d(25): Error: expression expected, not \''>\''\n/tmp/tmp3wgfuf0f.d(25):
    Error: found \''even\'' when expecting \'';\'' following statement\n/tmp/tmp3wgfuf0f.d(25):
    Error: found \''=\'' instead of statement\n/tmp/tmp3wgfuf0f.d(26): Error: expression
    expected, not \''>\''\n/tmp/tmp3wgfuf0f.d(26): Error: found \''odd\'' when expecting
    \'';\'' following statement\n/tmp/tmp3wgfuf0f.d(26): Error: found \''=\'' instead
    of statement\n/tmp/tmp3wgfuf0f.d(27): Error: expression expected, not \''>\''\n/tmp/tmp3wgfuf0f.d(27):
    Error: found \''even\'' when expecting \'')\''\n/tmp/tmp3wgfuf0f.d(27): Error:
    expression expected, not \''>\''\n/tmp/tmp3wgfuf0f.d(27): Error: found \''odd\''
    when expecting \'')\''\n/tmp/tmp3wgfuf0f.d(27): Error: found \'')\'' when expecting
    \'';\'' following return statement\n/tmp/tmp3wgfuf0f.d(27): Error: found \'')\''
    instead of statement\n/tmp/tmp3wgfuf0f.d(31): Error: expression expected, not
    \''>\''\n/tmp/tmp3wgfuf0f.d(31): Error: found \''even\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wgfuf0f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if (num == 0)\n        return (0, 0);\n    \n    int count = 0;\n    int\
    \ odd = 0;\n    int even = 0;\n    while (num > 0) {\n        count += 1;\n  \
    \      int remainder = num % 10;\n        num = num / 10;\n        \n        if\
    \ (remainder % 2 == 1) {\n            even = even * 10 + remainder;\n        }\n\
    \        if (remainder % 2 == 0) {\n            odd = odd * 10 + remainder;\n\
    \        }\n    }\n    return Tuple!(long, long) odd, even;\n}\n</code>\nUsing\
    \ this technique we get:\n<code>\nimport std.typecons;\nimport std.math;\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppqp89o8t.d(33): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmppqp89o8t.d(33): Error: found \'',\'' instead
    of statement\n/tmp/tmppqp89o8t.d(35): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppqp89o8t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if (num < 0)\n        return error(\"Non positive value.\");\n    \n    int\
    \ odd = 1;\n    int even = 1;\n    while (num != 0) {\n        if (num%2 == 0)\n\
    \            even++;\n        else\n            odd++;\n        num = num / 10;\n\
    \    }\n    return Tuple!(long, long) even_odd_count(odd) even_odd_count(even);\n\
    }\n/*\nWrite a function that returns the sum of two given numbers.\nIf the sum\
    \ is negative, print out a statement and exit with an error message.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg46v5j95.d(27): Error: found \''even_odd_count\'' when expecting
    \'';\'' following return statement\n/tmp/tmpg46v5j95.d(27): Error: C style cast
    illegal, use cast(odd)even_odd_count(even)\n/tmp/tmpg46v5j95.d(29): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg46v5j95.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num < 0)\n\t\tnum = -num;\n\tif (num == 0) \n\t\treturn Tuple!(1, 0);\n\t\
    long even = 0;\n\tlong odd = 0;\n\t\n\tlong i = 1;\n\twhile (num > 0) {\n\t\t\
    long tmp = num % 10;\n\t\teven += tmp;\n\t\tnum/=10;\n\t\ti += 1;\n\t}\n\t\n\t\
    while (num > 0) {\n\t\tlong tmp = num % 10;\n\t\todd += tmp;\n\t\tnum/=10;\n\t\
    \ti += 1;\n\t}\n\treturn Tuple!(even, odd);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprfpr_kn2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \t\n\t\n\tTuple!(long, long) result = num;\n\t\n\tint evencount = 0;\n\tint oddcount\
    \ = 0;\n\t\n\twhile (num > 0)\n\t{\n\t\tif (num % 2 == 0)\n\t\t{\n\t\t\tevencount++;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\toddcount++;\n\t\t}\n\t\t\n\t\tnum /= 10;\n\t}\n\t\
    \n\treturn Tuple!(evencount, oddcount);\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp10_i9axl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    var even = 0, odd = 0;\n    var tt = num;\n    while (num > 0) {\n      \
    \  var digit = num % 10;\n        even = even + digit * 2;\n        odd = odd\
    \ + digit;\n        num /= 10;\n    }\n    return Tuple!(long, long)(odd, even);\n\
    }\n/*\nGiven an integer and an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjeyqxd9m.d(25): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjeyqxd9m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tTuple!(long, long) result = Tuple!(long, long) num;\n\t\n\tif (num < 0) result\
    \ = even_odd_count(-num);\n\t\n\tint n = 0;\n\tint odd = 0;\n\tint even = 0;\n\
    \t\n\twhile (result != Tuple!(long, long) Tuple!(long, long) Tuple!(long, long)\
    \ Tuple!(long, long)) \n\t{\n\t\tn = result.0;\n\t\todd = result.1;\n\t\teven\
    \ = result.2;\n\t\tresult = even_odd_count(n << 1 | 1);\n\t}\n\treturn Tuple!(long,\
    \ long) Tuple!(n, odd) Tuple!(even, odd);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi5xgg529.d(15): Error: semicolon expected, not \''num\''\n/tmp/tmpi5xgg529.d(23):
    Error: found \''Tuple\'' when expecting \'')\''\n/tmp/tmpi5xgg529.d(23): Error:
    found \'',\'' when expecting \''.\'' following long\n/tmp/tmpi5xgg529.d(23): Error:
    found \''long\'' when expecting identifier following \''long.\''\n/tmp/tmpi5xgg529.d(23):
    Error: found \''Tuple\'' when expecting \'';\'' following statement\n/tmp/tmpi5xgg529.d(23):
    Error: found \'',\'' when expecting \''.\'' following long\n/tmp/tmpi5xgg529.d(23):
    Error: found \''long\'' when expecting identifier following \''long.\''\n/tmp/tmpi5xgg529.d(23):
    Error: found \''Tuple\'' when expecting \'';\'' following statement\n/tmp/tmpi5xgg529.d(23):
    Error: found \'',\'' when expecting \''.\'' following long\n/tmp/tmpi5xgg529.d(23):
    Error: found \''long\'' when expecting identifier following \''long.\''\n/tmp/tmpi5xgg529.d(23):
    Error: found \'')\'' when expecting \'';\'' following statement\n/tmp/tmpi5xgg529.d(25):
    Error: found \''0.00000\'' when expecting \'';\'' following statement\n/tmp/tmpi5xgg529.d(26):
    Error: found \''0.1\'' when expecting \'';\'' following statement\n/tmp/tmpi5xgg529.d(27):
    Error: found \''0.2\'' when expecting \'';\'' following statement\n/tmp/tmpi5xgg529.d(30):
    Error: found \''Tuple\'' when expecting \'';\'' following return statement\n/tmp/tmpi5xgg529.d(30):
    Error: found \''Tuple\'' when expecting \'';\'' following statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi5xgg529.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  long odd = 0;\n  long even = 0;\n  while (num > 0) {\n    long mod = num %\
    \ 10;\n    num /= 10;\n    if (mod > 0 && mod <= 3) {\n      even++;\n    } else\
    \ {\n      odd++;\n    }\n  }\n  return Tuple!(long,long)(even,odd);\n}\n/*\n\
    Return true if the given float number is negative.\n*/\nBool is_negative(Float)\
    \ \n{\n  return this.sign != 0;\n}\n/*\nReturn true if the given float number\
    \ is positive.\n*/\nBool is_positive(Float) \n{\n  return this.sign == 0;\n}\n\
    /*\nReturn true if the given float number is zero.\n*/\nBool is_zero(Float) \n\
    {\n  return this.num == 0;\n}\n/*\nReturn true if the given float number is positive.\n\
    */\nBool is_odd(Float) \n{\n  return this.num % 2 != 0;\n}\n/*\nReturn true if\
    \ the given float number is even.\n*/\nBool is_even(Float) \n{\n  return this.num\
    \ % 2 == 0;\n}\n/*\nReturn the floor of the given float.\n*/\nFloat floor(Float)\
    \ \n{\n  return this.num == 0 ? 0.0 : this.num / 2.0;\n}\n/*\nReturn the ceiling\
    \ of the given float.\n*/\nFloat ceil(Float) \n{\n  return this.num == 0 ? 0.0\
    \ : this.num * 2.0;\n}\n/*\nReturn the rounding of the given float.\n*/\nFloat\
    \ round(Float) \n{\n  return this.num == 0 ? 0.0 : (this.num + 0.5) / 2.0;\n}\n\
    /*\nReturn a copy of this float with the sign set to negative if it is positive.\n\
    */\nFloat negate() \n{\n  if (this.sign == 1) {\n    return this.num;\n  } else\
    \ {\n    return this.num * -1.0;\n  }\n}\n/*\nReturn a copy of this float with\
    \ the sign set to positive if it is negative.\n*/\nFloat copysign() \n{\n  if\
    \ (this.sign == -1) {\n    return this.num;\n  } else {\n    return this.num *\
    \ 1.0;\n  }\n}\n/*\nReturn a copy of this float with the sign cleared.\n*/\nFloat\
    \ clearsign() \n{\n  return this.num;\n}\n/*\nReturn true if the given float is\
    \ equal to 0.0.\n*/\nBool is_zero(Float) \n{\n  return this.num == 0;\n}\n/*\n\
    Return true if the given float is equal to 1.0.\n*/\nBool is_one(Float) \n{\n\
    \  return this.num == 1.0;\n}\n/*\nReturn true if the given float \nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpztuukbnj.d(127): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpztuukbnj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    \n    long[] result = new long[2];\n    long remainder = num;\n    int even,\
    \ odd;\n    while(remainder > 0)\n    {\n        even = remainder % 10;\n    \
    \    odd  = (remainder % 1000000000L) / 10;\n        remainder = (remainder-even)%10;\n\
    \        result[0] = even;\n        result[1] = odd;\n        \n        \n   \
    \ }\n    \n    return Tuple!{result[0]};\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7sufll_q.d(30): Error: template argument expected following
    !\n/tmp/tmp7sufll_q.d(30): Error: found \''{\'' when expecting \'';\'' following
    return statement\n/tmp/tmp7sufll_q.d(30): Error: found \''}\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7sufll_q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Tuple!(long, long) tuple = tupleize(num);\n    // return tuple;\n    long\
    \ n = long(abs(num));\n    long odd = n%2;\n    long even = n%2;\n    long count\
    \ = std::max(even, odd);\n    tuple.first = (count*2)-1;\n    tuple.second = count-1;\n\
    \    return tuple;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprmpy_z_3.d(17): Error: found \''(\'' when expecting \''.\''
    following long\n/tmp/tmprmpy_z_3.d(17): Error: semicolon expected, not \'')\''\n/tmp/tmprmpy_z_3.d(17):
    Error: found \'')\'' instead of statement\n/tmp/tmprmpy_z_3.d(20): Error: semicolon
    expected, not \'':\''\n/tmp/tmprmpy_z_3.d(20): Error: found \'':\'' instead of
    statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprmpy_z_3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif( num < 0 )\n\t\treturn Tuple!(long, long) error(\"even_odd_count\", \"Input\
    \ can not be negative.\");\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5430n0ew.d(16): Error: found \''error\'' when expecting \'';\''
    following return statement\n/tmp/tmp5430n0ew.d(17): Error: found \''unittest\''
    instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5430n0ew.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if(num < 0) return (num, num);\n    if(num < 10) return (num, num);\n   \
    \ int even = 0, odd = 0;\n    while(num > 0) {\n        int val = num % (int)(num/10);\n\
    \        num /= 10;\n        if(val % 2 == 0) {\n            even++;\n       \
    \ } else {\n            odd++;\n        }\n    }\n    return (even, odd);\n}\n\
    </code>\n<|/ a dscore=1 tags=c++,integer,string |>\n<| c |>\nI like your idea,\
    \ but I think my solution was a little simpler.\n<|/ c |>\n<| c |>\nThe code I\
    \ posted is definitely not simpler, but maybe it makes things easier to understand.\
    \ In any case, it was fun to write :).\n<|/ c |>\n<| c |>\nI love your solution.\
    \ But I can't find anywhere that I can get information about how to work with\
    \ `std::bitset` and how to use it in my problem. I would be so happy if you could\
    \ help me with that. Also if you have any other methods to solve my problem that\
    \ would be also appreciated.\n<|/ c |>\n<| c |>\nJust to let you know - I updated\
    \ the answer to show how to use std::bitset.\n<|/ c |>\n<| c |>\nI really appreciate\
    \ your help. Your solution is working great for my problem. One last question\
    \ though: I see that you are using `std::bitset` in the `even_odd_count_test`.\
    \ But I did not understand exactly how to use it in my code. Do I need to use\
    \ `std::bitset` when working with integers or strings, or maybe in some other\
    \ places?\n<|/ c |>\n<| a |>\nYou can use a recursive function to count how many\
    \ digits the number has. \n<code>\n#include <bits/stdc++.h>\nunittest\n{\n   \
    \ alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpre4h0_f3.d(19): Error: C style cast illegal, use cast(int)(num
    / 10)\n/tmp/tmpre4h0_f3.d(29): Error: Declaration expected, not \''<\''\n/tmp/tmpre4h0_f3.d(38):
    Error: unterminated character constant\n/tmp/tmpre4h0_f3.d(54): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpre4h0_f3.d(55): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpre4h0_f3.d(56): Error: Declaration expected, not \''assert\''\n/tmp/tmpre4h0_f3.d(57):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpre4h0_f3.d(58): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpre4h0_f3.d(59): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpre4h0_f3.d(60): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpre4h0_f3.d(61): Error: Declaration expected, not \''assert\''\n/tmp/tmpre4h0_f3.d(62):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpre4h0_f3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tvar even = 0;\n\tvar odd = 1;\n\tvar tmp;\n\twhile(num /= 10)\n\t{\n\t\ttmp\
    \ = num;\n\t\tnum = int(num / 10);\n\t\tif(tmp % 2 == 0)\n\t\t{\n\t\t\teven +=\
    \ 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long,\
    \ long)(even, odd);\n}\n/* \n Given an integer. return a tuple that has the smallest\
    \ prime factor and the remaining \n factors. Example\n    >>> smallest_prime_factor(5L)\n\
    \    (3L, 1L)\n    \n*/\nTuple!(long, long) smallest_prime_factor(long num) \n\
    {\n\tvar factor;\n\twhile(num > 1)\n\t{\n\t\tfactor = even_odd_count(num);\n\t\
    \tif(factor.second == 1)\n\t\t{\n\t\t\treturn Tuple!(long, long)(factor.first,\
    \ 1);\n\t\t}\n\t\tnum = factor.first;\n\t}\n\treturn Tuple!(long, long)(num, 1);\n\
    }\n/* Given an integer. Return a list of factors upto the number \n    \n    \
    \ Example:\n    >>> factor_list(15L)\n    [2, 2, 3, 3]\n    \n*/\nVec<long> factor_list(long\
    \ num) \n{\n\tvar factors;\n\tvar tmp;\n\tvar i;\n\tvar factor;\n\tvar remainder;\n\
    \tvar factor_count;\n\tfactors = [];\n\twhile(num > 1)\n\t{\n\t\tfactor = even_odd_count(num);\n\
    \t\tfactor_count = factor.second;\n\t\tnum = factor.first;\n\t\tremainder = num\
    \ % 2;\n\t\tfor(i = 0; i < factor_count; i++)\n\t\t{\n\t\t\ttmp = num;\n\t\t\t\
    num = remainder;\n\t\t\tremainder = tmp;\n\t\t}\n\t\tfactors.push(remainder);\n\
    \t}\n\treturn factors;\n}\n/* \nGiven an integer. return a list with prime factors\
    \ of the number \n    \n     Example:\n    >>> prime_factors(15L)\n    [2, 2,\
    \ 3, 5, 7]\n    \n*/\nVec<long> prime_factors(long num) \n{\n\tvar factors;\n\t\
    var i;\n\tvar factor;\n\tvar factor_count;\n\tvar divisor;\n\tfactors = [];\n\t\
    while(num > 1)\n\t{\n\t\tfactor = even_odd_count(num);\n\t\tfactor_count = factor.second;\n\
    \t\tdivisor = 2;\n\t\tnum = factor.first;\n\t\tfor(i = 0; i < factor_count; i++)\n\
    \t\t{\n\t\t\tif(num % divisor == 0)\n\t\t\t{\n\t\t\t\tfactors.push(divisor);\n\
    \t\t\t}\n\t\t\tdivisor *= 2;\n\t\t}\n\t}\n\treturn factors;\n}\n/*\nGiven an integer\
    \ and a list \nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgridll04.d(21): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpgridll04.d(21): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmpgridll04.d(61): Error: no identifier for declarator
    Vec\n/tmp/tmpgridll04.d(61): Error: Declaration expected, not \''<\''\n/tmp/tmpgridll04.d(69):
    Error: no identifier for declarator factors\n/tmp/tmpgridll04.d(69): Error: Declaration
    expected, not \''=\''\n/tmp/tmpgridll04.d(70): Error: Declaration expected, not
    \''while\''\n/tmp/tmpgridll04.d(73): Error: no identifier for declarator factor_count\n/tmp/tmpgridll04.d(73):
    Error: Declaration expected, not \''=\''\n/tmp/tmpgridll04.d(74): Error: no identifier
    for declarator num\n/tmp/tmpgridll04.d(74): Error: Declaration expected, not \''=\''\n/tmp/tmpgridll04.d(75):
    Error: no identifier for declarator remainder\n/tmp/tmpgridll04.d(75): Error:
    Declaration expected, not \''=\''\n/tmp/tmpgridll04.d(76): Error: Declaration
    expected, not \''for\''\n/tmp/tmpgridll04.d(76): Error: no identifier for declarator
    i\n/tmp/tmpgridll04.d(76): Error: Declaration expected, not \''<\''\n/tmp/tmpgridll04.d(76):
    Error: no identifier for declarator i\n/tmp/tmpgridll04.d(76): Error: Declaration
    expected, not \''++\''\n/tmp/tmpgridll04.d(79): Error: no identifier for declarator
    num\n/tmp/tmpgridll04.d(79): Error: Declaration expected, not \''=\''\n/tmp/tmpgridll04.d(80):
    Error: no identifier for declarator remainder\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgridll04.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int i;\n    long even = 1L;\n    long odd = 1L;\n    for (i = 1; i < sizeof(num);\
    \ ++i) {\n        if(num % 2 == 0)\n            even = even * 2L;\n        else\n\
    \            odd = odd * 2L;\n    }\n    return Tuple!(long, long) even, odd;\n\
    }\n/*\nGiven an integer, and a decimal point. return a string that has integer\
    \ and decimal point in the string.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl80_bp5p.d(24): Error: found \''even\'' when expecting \'';\''
    following return statement\n/tmp/tmpl80_bp5p.d(24): Error: found \'',\'' instead
    of statement\n/tmp/tmpl80_bp5p.d(26): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl80_bp5p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tauto even = num / 2;\n\tauto odd = num - even;\n\treturn Tuple!(long, long)\
    \ odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyrixs0o6.d(17): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmpyrixs0o6.d(17): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyrixs0o6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   => (\n        Tuple!(long, int) even_odd_count_internal(num) |> \n       \
    \ map(|x| even_odd_count_internal(x) |> fst)\n    );\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqam_ba3e.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpqam_ba3e.d(14): Error: Declaration expected, not \''=>\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqam_ba3e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint[] arr = int[(int)num];\n\t\n\tarr[(int)num-1] = arr.length - 1;\n\t\n\t\
    for (int i = 0; i < arr.length; ++i)\n\t{\n\t\tif (i % 2 != 0 && arr[i] % 2 !=\
    \ 0)\n\t\t\treturn Tuple!(int, int)(1,1);\n\t\telse if (i % 2 == 0 && arr[i] %\
    \ 2 == 0)\n\t\t\treturn Tuple!(int, int)(1,2);\n\t}\n\t\n\treturn Tuple!(int,\
    \ int)(0,0);\n}\n/* \nGiven an integer. return a tuple that has the largest possible\
    \ product of 2 factors.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu1dxkmz4.d(15): Error: found \''[\'' when expecting \''.\''
    following int\n/tmp/tmpu1dxkmz4.d(15): Error: found \''(\'' when expecting identifier
    following \''int.\''\n/tmp/tmpu1dxkmz4.d(15): Error: semicolon expected, not \''int\''\n/tmp/tmpu1dxkmz4.d(15):
    Error: no identifier for declarator int\n/tmp/tmpu1dxkmz4.d(15): Error: found
    \'')\'' instead of statement\n/tmp/tmpu1dxkmz4.d(17): Error: C style cast illegal,
    use cast(int)num\n/tmp/tmpu1dxkmz4.d(29): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu1dxkmz4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int odd = num % 10;\n    int even = num / 10\n    if (even > num/10)\n  \
    \  {\n        even = even - num/10;\n        odd = 1 + odd;\n    }\n    else \n\
    \    {\n        odd = 1 + odd;\n        even = even - num/10;\n    }\n    return\
    \ Tuple!{even, odd};\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgyr_2mob.d(17): Error: semicolon expected, not \''if\''\n/tmp/tmpgyr_2mob.d(27):
    Error: template argument expected following !\n/tmp/tmpgyr_2mob.d(27): Error:
    found \''{\'' when expecting \'';\'' following return statement\n/tmp/tmpgyr_2mob.d(27):
    Error: found \''}\'' when expecting \'';\'' following statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpgyr_2mob.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    return Tuple!(even_count(num), odd_count(num));\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnbg102cs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    size_t num_even = 0, num_odd = 0;\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxid1xump.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxid1xump.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    bool evenOddFlag = num/2 % 2 == 0;\n    num = num % 2;\n    return Tuple!(long,\
    \ long){evenOddFlag, num};\n}\n</code>\n<|/ a |>\n<| a tags=recursion,fibonacci,haskell,tail-recursion\
    \ dscore=1 |>\nMy solution with tail recursion:\n<code>\nfib :: Int -> Int\nfib\
    \ 0 = 0\nfib 1 = 1\nfib n = fib (n-1) + fib (n-2) + fib (n-3)\n</code>\n<|/ a\
    \ |>\n<| a tags=recursion,fibonacci,haskell,tail-recursion |>\nHere's a solution\
    \ using recursion without using any imports. In other words, this solution is\
    \ tail-recursive, while yours is not.\n<code>\nfib 0 = 0\nfib 1 = 1\nfib n = fib\
    \ (n-1) + fib (n-2)\nunittest\n{\n    alias candidate = even_odd_count;\n\n  \
    \  assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5x427buu.d(17): Error: found \''{\'' when expecting \'';\''
    following return statement\n/tmp/tmp5x427buu.d(17): Error: found \''}\'' when
    expecting \'';\'' following statement\n/tmp/tmp5x427buu.d(19): Error: Declaration
    expected, not \''<\''\n/tmp/tmp5x427buu.d(31): Error: unterminated character constant\n/tmp/tmp5x427buu.d(40):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp5x427buu.d(41): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp5x427buu.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp5x427buu.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp5x427buu.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmp5x427buu.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp5x427buu.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp5x427buu.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp5x427buu.d(48): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5x427buu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  long temp = num;\n  int even, odd;\n  while(temp > 0) {\n    temp = temp /\
    \ 10;\n    even++;\n    odd++;\n  }\n  return Tuple!(long, long) even, odd;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkdhsahlq.d(22): Error: found \''even\'' when expecting \'';\''
    following return statement\n/tmp/tmpkdhsahlq.d(22): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkdhsahlq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 1, odd = 0;\n    while(num > 0) {\n        if (num % 2 == 0)\
    \ {\n            even++;\n        }\n        else {\n            odd++;\n    \
    \    }\n        num /= 10;\n    }\n    return Tuple!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvc70t9n4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    num :> I;\n    even_odd_count_digits(num) |> Tuple;\n}\nunittest\n{\n   \
    \ alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcdvvvfoi.d(15): Error: found \''>\'' instead of statement\n/tmp/tmpcdvvvfoi.d(16):
    Error: expression expected, not \''>\''\n/tmp/tmpcdvvvfoi.d(16): Error: found
    \''Tuple\'' when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpcdvvvfoi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int even = 0, odd = 0;\n    while (num > 0)\n    {\n        long digit =\
    \ num %10;\n        num /= 10;\n        if (digit % 2 == 0)\n        {\n     \
    \       even++;\n        }\n        else\n        {\n            odd++;\n    \
    \    }\n    }\n    return Tuple!(long, long) even_odd_count(even), even_odd_count(odd);\n\
    }\n</code>\nNow you can use it like this:\n<code>\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp870gkwqz.d(29): Error: found \''even_odd_count\'' when expecting
    \'';\'' following return statement\n/tmp/tmp870gkwqz.d(31): Error: Declaration
    expected, not \''<\''\n/tmp/tmp870gkwqz.d(38): Error: Declaration expected, not
    \''assert\''\n/tmp/tmp870gkwqz.d(39): Error: Declaration expected, not \''assert\''\n/tmp/tmp870gkwqz.d(40):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp870gkwqz.d(41): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp870gkwqz.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp870gkwqz.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp870gkwqz.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmp870gkwqz.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp870gkwqz.d(46): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp870gkwqz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long temp = (long) num;\n    return Tuple!(temp % 2, temp);\n}\n/*\nGiven\
    \ an integer. return a tuple that has the number of characters of the given string\
    \ and all others zeros respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpofd8at5o.d(15): Error: C style cast illegal, use cast(long)num\n/tmp/tmpofd8at5o.d(18):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpofd8at5o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if(num < 0)\n        throw new ArgumentError(\"Can only count numbers from\
    \ 0 to -ve\");\n    if(num % 2 == 0)\n        return (num / 2, 1L);\n    else\n\
    \        return (num / 2, 2L);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxdilyqq6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int4 evenodd;\n    if (num < 0) {\n        num = -num;\n        evenodd =\
    \ 1;\n    } \n    else {\n        evenodd = 2;\n    }\n    int count = 0;\n  \
    \  while(num != 0) {\n        count += num / 10;\n        num = (num - (count\
    \ * 10)) / 10;\n    }\n    return Tuple!(long, long, int4, int) even_odd_count1(evenodd,\
    \ count);\n}\n    \n/*\nGiven an integer. return a tuple that has the number of\
    \ even and odd digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdor0aa4o.d(28): Error: found \''even_odd_count1\'' when expecting
    \'';\'' following return statement\n/tmp/tmpdor0aa4o.d(31): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdor0aa4o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    bool even = true;\n    long counter = 0;\n    while (num > 0)\n    {\n  \
    \      long digit = num % 10;\n        num /= 10;\n        if (digit % 2 == 0)\n\
    \        {\n            counter++;\n        }\n        else\n        {\n     \
    \       counter = counter - 1;\n            if (counter == 0 && even)\n      \
    \      {\n                even = false;\n                return (counter, counter);\n\
    \            }\n        }\n    }\n    return (counter, counter);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyw58xv_9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    require(isLong(num), \"num must be Long\");\n    int even=0, odd=0;\n   \
    \ \n    if (num & 0x01L) {\n        odd++;\n        num >>>= 1;\n    }\n    else\
    \ {\n        even++;\n        num >>>= 1;\n    }\n    return Tuple!(long, long)(even,\
    \ odd);\n}\n</code>\nTest cases:\n<code>\ntest(even, odd) =\n    even_odd_count(123L)\
    \ ~= Tuple!(long, long)(1, 2);\ntest(even, odd) =\n    even_odd_count(0x123L)\
    \ ~= Tuple!(long, long)(1, 2);\ntest(even, odd) =\n    even_odd_count(0xdeadbeefL)\
    \ ~= Tuple!(long, long)(1, 2);\ntest(even, odd) =\n    even_odd_count(123L) ~=\
    \ Tuple!(long, long)(1, 2);\ntest(even, odd) =\n    even_odd_count(123L) ~= Tuple!(long,\
    \ long)(1, 2);\ntest(even, odd) =\n    even_odd_count(0x123L) ~= Tuple!(long,\
    \ long)(1, 2);\ntest(even, odd) =\n    even_odd_count(0xdeadbeefL) ~= Tuple!(long,\
    \ long)(1, 2);\ntest(even, odd) =\n    even_odd_count(0xdeadbeefL) ~= Tuple!(long,\
    \ long)(1, 2);\n</code>\nFor 64 bit integer you can use the following macros based\
    \ on this answer:\n<code>\nimport std.stdio;\nimport std.range;\nimport std.conv;\n\
    import std.array;\nimport std.string;\nimport std.math;\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxfamsnuw.d(28): Error: Declaration expected, not \''<\''\n/tmp/tmpxfamsnuw.d(33):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmpxfamsnuw.d(33): Error: no identifier for declarator
    test\n/tmp/tmpxfamsnuw.d(33): Error: Declaration expected, not \''=\''\n/tmp/tmpxfamsnuw.d(35):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmpxfamsnuw.d(35): Error: no identifier for declarator
    test\n/tmp/tmpxfamsnuw.d(35): Error: Declaration expected, not \''=\''\n/tmp/tmpxfamsnuw.d(37):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmpxfamsnuw.d(37): Error: no identifier for declarator
    test\n/tmp/tmpxfamsnuw.d(37): Error: Declaration expected, not \''=\''\n/tmp/tmpxfamsnuw.d(39):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmpxfamsnuw.d(39): Error: no identifier for declarator
    test\n/tmp/tmpxfamsnuw.d(39): Error: Declaration expected, not \''=\''\n/tmp/tmpxfamsnuw.d(41):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmpxfamsnuw.d(41): Error: no identifier for declarator
    test\n/tmp/tmpxfamsnuw.d(41): Error: Declaration expected, not \''=\''\n/tmp/tmpxfamsnuw.d(43):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmpxfamsnuw.d(43): Error: no identifier for declarator
    test\n/tmp/tmpxfamsnuw.d(43): Error: Declaration expected, not \''=\''\n/tmp/tmpxfamsnuw.d(45):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmpxfamsnuw.d(45): Error: no identifier for declarator
    test\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxfamsnuw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint even = 0, odd = 0;\n\twhile (num >= 0) {\n\t\tint digit = num % 10;\n\t\t\
    if (digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\tnum = num / 10;\n\
    \t}\n\treturn Tuple!(long, long) even_odd_count(even, odd);\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphboqza3a.d(24): Error: found \''even_odd_count\'' when expecting
    \'';\'' following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmphboqza3a.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \t\n\tint len = bitCountRight(bitCount(num));\n\t\n\treturn Tuple!(long, long)\
    \ even_odd_count(num / num % 2L), len >= 0 ? len : 0L;\n}\n/* Given a real number.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6_c7ywgw.d(18): Error: found \''even_odd_count\'' when expecting
    \'';\'' following return statement\n/tmp/tmp6_c7ywgw.d(20): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_c7ywgw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long nDigits = digits(num);\n    if(nDigits == 0) return Tuple!(long, long);\n\
    \    \n    long evenDigit, oddDigit;\n    evenDigit = num / 2;\n    oddDigit =\
    \ num - evenDigit * 2;\n    \n    return Tuple!(oddDigit, evenDigit);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_qz2f8uz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    require(num >=0,\"Invalid argument to even_odd_count\");\n    int odd = 0;\n\
    \    int even = 0;\n    int digit = num%10;\n    int count = 1;\n    \n    while\
    \ (num/10 > 0)\n    {\n        num /= 10;\n        count++;\n    }\n    \n   \
    \ if (num%10 == 0)\n    {\n        even++;\n    }\n    \n    while (num > 0)\n\
    \    {\n        digit = num%10;\n        num = num/10;\n        if (digit %2 ==\
    \ 0)\n        {\n            even++;\n        }\n        else\n        {\n   \
    \         odd++;\n        }\n    }\n    \n    return Tuple!(long, long) even,\
    \ odd;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdmlrpqy7.d(46): Error: found \''even\'' when expecting \'';\''
    following return statement\n/tmp/tmpdmlrpqy7.d(46): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdmlrpqy7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    : Tuple!(num.toLong(), num.toLong()) \n\twhere num.toLong() in \n\t\t0..num.toLong()-1\
    \ \n\t\t( (num.and(num.wrapAt(num.toLong()+1)))==0 );\n    \n/* Given an integer.\
    \ return a tuple that has the number of even, odd digits and if the number is\
    \ negative, \nthen return the number of odd digits.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp15epqx15.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp15epqx15.d(14): Error: Declaration expected, not \'':\''\n/tmp/tmp15epqx15.d(19):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp15epqx15.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tassert(!is_negative(num), \"Invalid input\");\n\t\n\tint even = 0, odd = 0;\n\
    \t\n\tint digit = 0;\n\t\n\twhile(true)\n\t{\n\t\tdigit = (int)(num % 10);\n\t\
    \tif(digit)\n\t\t{\n\t\t\tnum /= 10;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\
    \t}\n\t\t\n\t\tif(digit%2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\
    \t\t\todd++;\n\t\t}\n\t}\n\t\n\treturn Tuple!(long, long)((Tuple!(int, int)(even,\
    \ odd)), 0L);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptds6cmn1.d(23): Error: C style cast illegal, use cast(int)(num
    % 10)\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptds6cmn1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if (num == 0)\n        throw new Exception(\"num should > 0\");\n    long\
    \ even = 0, odd = 0, temp;\n    while (num != 0) {\n        temp = num % 10;\n\
    \        if (temp != 0)\n            even = even + temp;\n        num = num /\
    \ 10;\n    }\n    temp = num;\n    while (temp != 0) {\n        temp = temp /\
    \ 10;\n        odd = odd + temp;\n    }\n    return Tuple!(long, long) odd, even;\n\
    }\n/*\nGiven an integer and a tuple. return a tuple that has all the digits of\
    \ the given integer in the given tuple.\nExample:\n  \n     Example:\n    >>>\
    \ digits_in_tuple(123L, Tuple!(int32, int32, int32, int32, int32, int32, int32,\
    \ int32, int32, int32, int32)) // return Tuple!(int32, int32, int32, int32, int32,\
    \ int32, int32, int32, int32, int32, int32)\n    (1L, 2L, 3L, 4L, 5L, 6L, 7L,\
    \ 8L, 9L)\n*/\nTuple!(int, int, int, int, int, int, int, int, int, int) digits_in_tuple(int\
    \ num1, Tuple!(int32, int32, int32, int32, int32, int32, int32, int32, int32,\
    \ int32, int32, int32)) \n{\n    if (num1 == 0)\n        throw new Exception(\"\
    num should > 0\");\n    int even = 0, odd = 0, temp;\n    int count = 0;\n   \
    \ while (num1 != 0) {\n        temp = num1 % 10;\n        if (temp != 0)\n   \
    \         even = even + temp;\n        num1 = num1 / 10;\n        count = count\
    \ + 1;\n    }\n    temp = num1;\n    while (temp != 0) {\n        temp = temp\
    \ / 10;\n        odd = odd + temp;\n        count = count + 1;\n    }\n    temp\
    \ = count;\n    count = 0;\n    while (temp != 0) {\n        temp = temp / 10;\n\
    \        odd = odd + temp;\n        count = count + 1;\n    }\n    return Tuple!(int,\
    \ int, int, int, int, int, int, int, int, int) odd, even, count;\n}\n/*\nGiven\
    \ a tuple. return a tuple that has the first n digits of the given tuple (n >=\
    \ 0)\nExample:\n    >>> digits_first_n(Tuple!(int32, int32, int32, int32, int32,\
    \ int32, int32, int32, int32, int32, int32)) // return Tuple!(int32, int32, int32,\
    \ int32, int32, int32, int32, int32, int32, int32, int32)\n    (1L, 2L, 3L, 4L,\
    \ 5L, 6L, 7L, 8L, 9L)\n*/\nTuple!(int, int, int, int, int, int, int, int, int,\
    \ int) digits_first_n(Tuple!(int32, int32, int32, int32, int32, int32, int32,\
    \ int32, int32, int32, int32, int32)) \n{\n    if (num == 0)\n        throw new\
    \ Exception(\"num should > 0\");\n    int even = 0, odd = 0, temp;\n\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp3a6av17.d(29): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmpp3a6av17.d(29): Error: found \'',\'' instead
    of statement\n/tmp/tmpp3a6av17.d(65): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmpp3a6av17.d(65): Error: found \'',\'' instead
    of statement\n/tmp/tmpp3a6av17.d(79): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp3a6av17.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Tuple!(long, long) result;\n    auto odd = num % 10;\n    auto even = num\
    \ - even;\n    if (even % 2 == 0) {\n        result = even_odd_count(even);\n\
    \        result.1 = result.1 + 1;\n    } else {\n        result = even_odd_count(odd);\n\
    \        result.1 = result.1 + 1;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq_ffdhl4.d(20): Error: found \''0.1\'' when expecting \'';\''
    following statement\n/tmp/tmpq_ffdhl4.d(20): Error: found \''=\'' instead of statement\n/tmp/tmpq_ffdhl4.d(23):
    Error: found \''0.1\'' when expecting \'';\'' following statement\n/tmp/tmpq_ffdhl4.d(23):
    Error: found \''=\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpq_ffdhl4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tassert(is_integer(num));\n\tTuple!(long, long) even;\n\tTuple!(long, long) odd;\n\
    \t\n\tif (num == 0)\n\t\treturn even, odd;\n\t\n\tint digit = num % 10;\n\tnum\
    \ /= 10;\n\t\n\tif (digit % 2 == 0)\n\t\treturn even, Tuple!(digit, 1L);\n\telse\n\
    \t\treturn odd, Tuple!(digit, 1L);\n\t\n}\n/*\nGiven an integer. return a tuple\
    \ that has the number of even and odd digits respectively.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv9lwil1k.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpv9lwil1k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Tuple!(long, long) result;\n    int count = 1;\n    while (num != 0)\n  \
    \  {\n        if (num % 2 == 0)\n        {\n            result.0 = result.0 +\
    \ count;\n        }\n        num = num / 2;\n        count++;\n    }\n    result.0\
    \ = result.0 + count;\n    \n    return result;\n}\n</cell>\n<text>\nExercise\
    \ 11: even_odd_count\nWrite a function called even_odd_count() that has one argument\
    \ and return one tuple.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7lfqk__4.d(21): Error: found \''0.00000\'' when expecting \'';\''
    following statement\n/tmp/tmp7lfqk__4.d(21): Error: found \''=\'' instead of statement\n/tmp/tmp7lfqk__4.d(26):
    Error: found \''0.00000\'' when expecting \'';\'' following statement\n/tmp/tmp7lfqk__4.d(26):
    Error: found \''=\'' instead of statement\n/tmp/tmp7lfqk__4.d(30): Error: Declaration
    expected, not \''<\''\n/tmp/tmp7lfqk__4.d(38): Error: Declaration expected, not
    \''assert\''\n/tmp/tmp7lfqk__4.d(39): Error: Declaration expected, not \''assert\''\n/tmp/tmp7lfqk__4.d(40):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7lfqk__4.d(41): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp7lfqk__4.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp7lfqk__4.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp7lfqk__4.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmp7lfqk__4.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7lfqk__4.d(46): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7lfqk__4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int even = 0, odd = 0;\n    \n    long long num_temp = num;\n    while (true)\n\
    \    {\n        int digit = num % 10;\n        if (digit == 0) break;\n      \
    \  num = num / 10;\n        digit--;\n        even++;\n    }\n    while (true)\n\
    \    {\n        int digit = num % 10;\n        if (digit == 0) break;\n      \
    \  num = num / 10;\n        digit--;\n        odd++;\n    }\n    \n    return\
    \ Tuple!(long, long)(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpys31wf_o.d(17): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpys31wf_o.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    :- evens(num), odd(num), Tuple!(int, int).\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxfv5_tfz.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpxfv5_tfz.d(14): Error: Declaration expected, not \'':\''\n/tmp/tmpxfv5_tfz.d(19):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpxfv5_tfz.d(20): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpxfv5_tfz.d(21): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpxfv5_tfz.d(22): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpxfv5_tfz.d(23): Error: Declaration expected, not \''assert\''\n/tmp/tmpxfv5_tfz.d(24):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpxfv5_tfz.d(25): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpxfv5_tfz.d(26): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpxfv5_tfz.d(27): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxfv5_tfz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong a = num / 10;\n\tlong b = num % 10;\n\tif( a % 2 == 0 )\n\t\treturn( b,\
    \ b );\n\telse\n\t\treturn( a, a );\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmr936855.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long n = 0;\n    while ( num > 0 )\n    {\n        n += num %2 == 0 ? 1 :\
    \ 0;\n        num /= 2;\n    }\n    \n    return Tuple!(n, num);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp2yylx03.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint even = 0;\n\tint odd = 0;\n\t\n\twhile (num >= 10) {\n\t\tint temp = (num\
    \ / 10) % 10;\n\t\tif (temp == 0) \n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\t\t\
    num = (num / 10) / 10;\n\t}\n\treturn Tuple!(long, long)(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_xubw8rs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  int oddDigit = 0;\n  int evenDigit = 0;\n  int sumOddDigit = 0;\n  int sumEvenDigit\
    \ = 0;\n  int maxDigit = digits(num).first;\n  while(maxDigit > 0)\n  {\n    \
    \  if(num > 0)\n      {\n        evenDigit = num % 10;\n        sumEvenDigit +=\
    \ evenDigit;\n        num = (num / 10) - evenDigit;\n      }\n      else\n   \
    \   {\n        evenDigit = 0;\n        sumEvenDigit += evenDigit;\n        num\
    \ = 0;\n      }\n      maxDigit--;\n  }\n  num = (num - sumEvenDigit);\n  while(num\
    \ > 0)\n  {\n      oddDigit = num % 10;\n      sumOddDigit += oddDigit;\n    \
    \  num = (num / 10) - oddDigit;\n  }\n  return tuple(sumOddDigit, sumEvenDigit);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpre3oz0o6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num <= 0) then\n\t\treturn (1, 1);\n\telse\n\t\tnum %= 10;\n\t\tif (num\
    \ < 0) then\n\t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\t\
    if (num < 0) then\n\t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\
    \t\tif (num < 0) then\n\t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %=\
    \ 10;\n\t\tif (num < 0) then\n\t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\t\
    num %= 10;\n\t\tif (num < 0) then\n\t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\
    \t\tnum %= 10;\n\t\tif (num < 0) then\n\t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\t\
    end\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\
    \t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\t\t\tnum *= -1;\n\t\t\tnum -=\
    \ 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\t\t\tnum *= -1;\n\t\t\t\
    num -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\t\t\tnum *= -1;\n\t\
    \t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\t\t\tnum *= -1;\n\
    \t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\t\t\tnum *=\
    \ -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\t\t\t\
    num *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\t\
    \t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\
    \t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\
    \t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\
    \t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\
    \t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\
    \t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\
    \t\t\tnum *= -1;\n\t\t\tnum -= 1;\n\t\tend\n\t\tnum %= 10;\n\t\tif (num < 0) then\n\
    \t\t\tnum *= -1;\n\t\t\t\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu_l501is.d(16): Error: found \''return\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(17): Error: found \''else\'' instead of
    statement\n/tmp/tmpu_l501is.d(20): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(20): Error: found \''*=\'' instead of
    statement\n/tmp/tmpu_l501is.d(23): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(23): Error: found \''%=\'' instead of
    statement\n/tmp/tmpu_l501is.d(25): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(25): Error: found \''*=\'' instead of
    statement\n/tmp/tmpu_l501is.d(28): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(28): Error: found \''%=\'' instead of
    statement\n/tmp/tmpu_l501is.d(30): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(30): Error: found \''*=\'' instead of
    statement\n/tmp/tmpu_l501is.d(33): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(33): Error: found \''%=\'' instead of
    statement\n/tmp/tmpu_l501is.d(35): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(35): Error: found \''*=\'' instead of
    statement\n/tmp/tmpu_l501is.d(38): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(38): Error: found \''%=\'' instead of
    statement\n/tmp/tmpu_l501is.d(40): Error: found \''num\'' when expecting \'';\''
    following statement\n/tmp/tmpu_l501is.d(40): Error: found \''*=\'' instead of
    statement\n/tmp/tmpu_l501is.d(43): Error: found \''num\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu_l501is.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num <= 0)\n\t{\n\t\tthrow \"Invalid argument\";\n\t}\n\tlong sumEven = 0;\n\
    \tlong sumOdd = 0;\n\tnum *= 10;\n\twhile(num > 0)\n\t{\n\t\tint digit = num %\
    \ 10;\n\t\tnum/=10;\n\t\tif (digit % 2 == 0)\n\t\t{\n\t\t\tsumEven++;\n\t\t}\n\
    \t\telse\n\t\t{\n\t\t\tsumOdd++;\n\t\t}\n\t}\n\treturn (sumEven, sumOdd);\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5q5kg4k_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \treturn tuple((num % 2 == 0) ? 1 : num / 10, (num %2 == 0) ? num / 10 : 1);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp_1cj23_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long result = 0;\n    for(long i = 0; i < num; i += 2)\n    {\n        result\
    \ += i;\n    }\n    for(long i = 1; i < num; i += 1) \n    {\n        if(i % 2\
    \ == 0)\n        {\n            result += i;\n        }\n    }\n    return (result\
    \ / 2, result % 2);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5fwxg03.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   where {\n    int remainder = 0;\n    \n    while (remainder < num) {\n   \
    \     remainder = num % 10;\n        num = (num - remainder) / 10;\n    }\n  \
    \  \n    Tuple!(int, int) even = (num == 0) ? Tuple!(int, int) : (num % 2 == 0)\
    \ ? Tuple!(int, int) < (num % 2 == 0) ? Tuple!(int, int) : (Tuple!(int, int),\
    \ (num % 2 == 0) ? 1L : 2L);\n    Tuple!(int, int) odd = (num == 0) ? Tuple!(int,\
    \ int) : (num % 2 != 0) ? Tuple!(int, int) < (num % 2 == 0) ? Tuple!(int, int)\
    \ : (Tuple!(int, int), (num % 2 == 0) ? 2L : 1L);\n    \n    return even, odd;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9yjg6vsm.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp9yjg6vsm.d(14): Error: no identifier for declarator where\n/tmp/tmp9yjg6vsm.d(14):
    Error: Declaration expected, not \''{\''\n/tmp/tmp9yjg6vsm.d(17): Error: Declaration
    expected, not \''while\''\n/tmp/tmp9yjg6vsm.d(19): Error: no identifier for declarator
    num\n/tmp/tmp9yjg6vsm.d(19): Error: Declaration expected, not \''=\''\n/tmp/tmp9yjg6vsm.d(20):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yjg6vsm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tauto rem = num;\n\tlong num2{};\n\twhile(rem > 0)\n\t{\n\t\tnum2 = rem % 10;\n\
    \t\tif(num2 == 0 && num2 != 2)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tif(num2 == 2 &&\
    \ num2 != 4)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\trem = rem/10;\n\t}\n\t\n\treturn\
    \ Tuple!(1, num2);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd5f7ya9n.d(16): Error: semicolon expected, not \''{\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd5f7ya9n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    if(num == 0)\n        return (1L, 1L);\n    else if(num < 0)\n        return\
    \ (0, even_odd_count(-num)!0);\n    else\n    {\n        int count = 0;\n    \
    \    long num = abs(num);\n        while(num != 0)\n        {\n            int\
    \ remainder = num % 10;\n            count += (remainder % 2 == 0);\n        \
    \    num = num / 10;\n        }\n        return (count, count + 1);\n    }\n}\n\
    /* End of file evenodd.js */\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgt8kc624.d(18): Error: found \''!\'' when expecting \'')\''\n/tmp/tmpgt8kc624.d(18):
    Error: found \''0\'' when expecting \'';\'' following return statement\n/tmp/tmpgt8kc624.d(18):
    Error: found \'')\'' instead of statement\n/tmp/tmpgt8kc624.d(19): Error: found
    \''else\'' instead of statement\n/tmp/tmpgt8kc624.d(31): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgt8kc624.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint count = 0;\n\tint i = 0;\n\tint odd = 0;\n\twhile( i < num)\n\t{\n\t\tcount\
    \ += (int)num % 10;\n\t\tnum = (long)num / 10;\n\t\ti++;\n\t}\n\twhile(count >\
    \ 0)\n\t{\n\t\tcount -= (int)num % 10;\n\t\tnum /= 10;\n\t\ti++;\n\t}\n\treturn\
    \ Tuple!(long, long) Tuple!(odd, i);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzg52ax11.d(20): Error: C style cast illegal, use cast(int)num\n/tmp/tmpzg52ax11.d(21):
    Error: C style cast illegal, use cast(long)num\n/tmp/tmpzg52ax11.d(26): Error:
    C style cast illegal, use cast(int)num\n/tmp/tmpzg52ax11.d(30): Error: found \''Tuple\''
    when expecting \'';\'' following return statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpzg52ax11.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \ if\n    num isInt &&\n    not (num isEven or num isOdd);\n  else\n    throw\
    \ ErrorException(\"Invalid Parameter\");\nend\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxd_1m91s.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpxd_1m91s.d(14): Error: Declaration expected, not \''if\''\n/tmp/tmpxd_1m91s.d(17):
    Error: Declaration expected, not \''else\''\n/tmp/tmpxd_1m91s.d(20): Error: no
    identifier for declarator end\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxd_1m91s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    \n    if (num <= 0) return (-1L, -1L);\n    int n = 0;\n    long d = 0;\n\
    \    long c = 0;\n    while(num > 0)\n    {\n        d = (num % 10) % 2;\n   \
    \     n = n + (d * d);\n        num = num / 10;\n        c += d;\n    }\n    \n\
    \    return (n, c);\n    \n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb5dtmc9p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int n = 0;\n    while ( num > 0 )\n    {\n        if ( num % 2 != 0 )\n \
    \           n++;\n        num /= 2;\n    }\n    return make_tuple(1, n);\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp8gn79lp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    auto even = num / 2;\n    auto odd = num - even;\n    return (odd, even);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbw1wnt41.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \ if(is_positive(num) && is_odd(num))\n    return Tuple!(is_even(num), is_odd(num));\n\
    \  else\n    return Tuple!(is_even(num), is_odd(num));\n  \nend\n\"\"\"\neven_odd_count_doc\
    \ = \"\"\"\nGiven an integer. return a tuple that has the number of even and odd\
    \ digits respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdsc6ymu0.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpdsc6ymu0.d(14): Error: Declaration expected, not \''if\''\n/tmp/tmpdsc6ymu0.d(16):
    Error: Declaration expected, not \''else\''\n/tmp/tmpdsc6ymu0.d(20): Error: no
    identifier for declarator end\n/tmp/tmpdsc6ymu0.d(20): Error: Declaration expected,
    not \''""\''\n/tmp/tmpdsc6ymu0.d(27): Error: Declaration expected, not \''assert\''\n/tmp/tmpdsc6ymu0.d(28):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpdsc6ymu0.d(29): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpdsc6ymu0.d(30): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpdsc6ymu0.d(31): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpdsc6ymu0.d(32): Error: Declaration expected, not \''assert\''\n/tmp/tmpdsc6ymu0.d(33):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpdsc6ymu0.d(34): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpdsc6ymu0.d(35): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdsc6ymu0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint count = 0;\n\tfor(int i = 0; i < num.toInt(); i++)\n\t{\n\t\tlong remainder\
    \ = num % 10;\n\t\tcount = (remainder % 2 == 0 ? 1 : 0) + count;\n\t\tnum /= 10;\n\
    \t}\n\treturn Tuple!(long, long)!(count, count);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7knwvgq4.d(22): Error: found \''!\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7knwvgq4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num > 0)\n\t{\n\t\tlong even = 0, odd = 0;\n\t\twhile (num > 0)\n\t\t{\n\
    \t\t\tlong digit = num % 10;\n\t\t\tnum /= 10;\n\t\t\tif (digit % 2 == 0)\n\t\t\
    \t{\n\t\t\t\teven += 1;\n\t\t\t}\n\t\t\tif (digit % 2 != 0)\n\t\t\t{\n\t\t\t\t\
    odd += 1;\n\t\t\t}\n\t\t}\n\t\treturn tuple(even, odd);\n\t}\n\telse\n\t{\n\t\t\
    return tuple(1, 1);\n\t}\n}\n/*\nGiven a tuple of integers. return a tuple that\
    \ has all the numbers from the tuple in the order in which they appear in the\
    \ tuple.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptywpk9u1.d(38): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmptywpk9u1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tshort n = (int)num;\n\tif (n & 1) { \n\t\treturn Tuple!((n>>1)+1,n>>1);\n\t\
    } else {\n\t\treturn Tuple!(n>>1,1);\n\t}\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa0g3bxym.d(15): Error: C style cast illegal, use cast(int)num\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa0g3bxym.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    auto even = divisibleBy(num, 2);\n    auto odd = divisibleBy(num, 1);\n \
    \   return Tuple!(long, long)!(even, odd);\n}\n/*\nGiven a number. Return a tuple\
    \ that contains all the factors except the number itself.\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc_n29mt4.d(17): Error: found \''!\'' when expecting \'';\''
    following return statement\n/tmp/tmpc_n29mt4.d(19): Error: unterminated /* */
    comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc_n29mt4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \t\n\tbool even=false, odd=false, num=num;\n\t\n\twhile ((num > 0L) && (num !=\
    \ 0L))\n\t{\n\t\tif ((num % 2L) == 0L)\n\t\t{\n\t\t\teven = true;\n\t\t\tnum =\
    \ num / 2L;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd = true;\n\t\t\tnum = num / 2L;\n\
    \t\t}\n\t}\n\treturn (Tuple!(long, long)(even, odd));\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw9fz57v8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  long int numBits = (long)num;\n  long int evenBits = numBits & 1;\n  long int\
    \ oddBits = numBits >> 1;\n  \n  if((numBits | 0) < 0)\n    return Tuple!(0, 0);\n\
    \  else\n    return Tuple!(evenBits, oddBits);\n}\nstruct even_odd_count_sig\n\
    {\n  string name;\n  long long int (*count)(long);\n};\nextern even_odd_count_sig\
    \ even_odd_count;\nstruct even_odd_count_sig1\n{\n  string name;\n  long long\
    \ int (*count)(long);\n  int (*even_odd_count)(long);\n};\nextern even_odd_count_sig1\
    \ even_odd_count_1;\nstruct even_odd_count_sig2\n{\n  string name;\n  long long\
    \ int (*count)(long);\n  int (*even_odd_count)(long);\n  int (*even_odd_count_1)(long);\n\
    };\nextern even_odd_count_sig2 even_odd_count_2;\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmd6cfdxe.d(15): Error: no identifier for declarator long\n/tmp/tmpmd6cfdxe.d(15):
    Error: C style cast illegal, use cast(long)num\n/tmp/tmpmd6cfdxe.d(16): Error:
    no identifier for declarator long\n/tmp/tmpmd6cfdxe.d(17): Error: no identifier
    for declarator long\n/tmp/tmpmd6cfdxe.d(27): Error: no identifier for declarator
    long\n/tmp/tmpmd6cfdxe.d(27): Error: no identifier for declarator long\n/tmp/tmpmd6cfdxe.d(27):
    Deprecation: C-style function pointer and pointer to array syntax is deprecated.
    Use \''function\'' to declare function pointers\n/tmp/tmpmd6cfdxe.d(33): Error:
    no identifier for declarator long\n/tmp/tmpmd6cfdxe.d(33): Error: no identifier
    for declarator long\n/tmp/tmpmd6cfdxe.d(33): Deprecation: C-style function pointer
    and pointer to array syntax is deprecated. Use \''function\'' to declare function
    pointers\n/tmp/tmpmd6cfdxe.d(34): Deprecation: C-style function pointer and pointer
    to array syntax is deprecated. Use \''function\'' to declare function pointers\n/tmp/tmpmd6cfdxe.d(40):
    Error: no identifier for declarator long\n/tmp/tmpmd6cfdxe.d(40): Error: no identifier
    for declarator long\n/tmp/tmpmd6cfdxe.d(40): Deprecation: C-style function pointer
    and pointer to array syntax is deprecated. Use \''function\'' to declare function
    pointers\n/tmp/tmpmd6cfdxe.d(41): Deprecation: C-style function pointer and pointer
    to array syntax is deprecated. Use \''function\'' to declare function pointers\n/tmp/tmpmd6cfdxe.d(42):
    Deprecation: C-style function pointer and pointer to array syntax is deprecated.
    Use \''function\'' to declare function pointers\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpmd6cfdxe.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  int i = 0;\n  long even = 1;\n  long odd = 0;\n  while (num > 0) {\n    num\
    \ /= 10;\n    i += 1;\n  }\n  while ((num > 0) && (i < 5)) {\n    num /= 10;\n\
    \    if (num % 2 == 0) {\n      even += 1;\n    } else {\n      odd += 1;\n  \
    \  }\n    i += 1;\n  }\n  return Tuple!(long, long)(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4zf9mdqk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   where {\n    \n    long result = (num % 10 == 0) ? 1 : 2;\n    return Tuple!{result};\n\
    }\n        \n/*\nGiven a tuple of digits. return a tuple of number of even and\
    \ odd digits. \nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuy7mdqtf.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpuy7mdqtf.d(14): Error: no identifier for declarator where\n/tmp/tmpuy7mdqtf.d(14):
    Error: Declaration expected, not \''{\''\n/tmp/tmpuy7mdqtf.d(17): Error: Declaration
    expected, not \''return\''\n/tmp/tmpuy7mdqtf.d(18): Error: unrecognized declaration\n/tmp/tmpuy7mdqtf.d(20):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuy7mdqtf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \t/*\n\tCheck if number is negative then handle appropriately.\n\t\n\t*/\n\tif((num\
    \ & 1) == 1)\n\t{\n\t\tint odd = num&~((long)1);\n\t\treturn (Tuple!(int, int)\
    \ odd, Tuple!(int, int) odd);\n\t}\n\treturn (Tuple!(int, int) 1, Tuple!(int,\
    \ int) 1);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuv12e010.d(21): Error: C style cast illegal, use cast(long)1\n/tmp/tmpuv12e010.d(22):
    Error: found \''odd\'' when expecting \'')\''\n/tmp/tmpuv12e010.d(22): Error:
    found \''odd\'' when expecting \'';\'' following return statement\n/tmp/tmpuv12e010.d(22):
    Error: found \'')\'' instead of statement\n/tmp/tmpuv12e010.d(24): Error: found
    \''1\'' when expecting \'')\''\n/tmp/tmpuv12e010.d(24): Error: found \''1\'' when
    expecting \'';\'' following return statement\n/tmp/tmpuv12e010.d(24): Error: found
    \'')\'' instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuv12e010.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \  if(num < 0) return fail;\n  num /= 10;\n  if((num&1) == 0) return Tuple!(1,\
    \ 1L);\n  num -= (num&1);\n  num /= 10;\n  if((num&1) == 0) return Tuple!(1, 1L);\n\
    \  return Tuple!(2L, 3L);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw5lvd6pf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   require(\n        num > 0, \n        \"Invalid value for num.\");\n    \n\
    \    if(num < 0) {\n        throw(DomainError(\"invalid argument for even_odd_count\"\
    ));\n    }\n    \n    var numDigits = num.toInt();\n    var evenCount = 0;\n \
    \   var oddCount = 0;\n    var evenDigitsCount = 0;\n    var oddDigitsCount =\
    \ 0;\n    var remainder = num % 10;\n    if(remainder == 0) {\n        return\
    \ Tuple!(evenCount, oddCount);\n    }\n    else {\n        while(num > 0) {\n\
    \            remainder = num % 10;\n            if(remainder == 0) {\n       \
    \         evenCount++;\n                num/=10;\n                evenDigitsCount++;\n\
    \            }\n            else {\n                oddCount++;\n            \
    \    num/=10;\n                oddDigitsCount++;\n            }\n        }\n \
    \       return Tuple!(evenCount, oddCount);\n    }\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi2xsdzrr.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpi2xsdzrr.d(14): Error: unexpected ( in declarator\n/tmp/tmpi2xsdzrr.d(15):
    Error: found \''>\'' when expecting \'')\''\n/tmp/tmpi2xsdzrr.d(15): Error: no
    identifier for declarator require(num)\n/tmp/tmpi2xsdzrr.d(15): Error: semicolon
    expected following function declaration\n/tmp/tmpi2xsdzrr.d(15): Error: Declaration
    expected, not \''0\''\n/tmp/tmpi2xsdzrr.d(18): Error: Declaration expected, not
    \''if\''\n/tmp/tmpi2xsdzrr.d(20): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi2xsdzrr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n\t\
    => (\n\t\teven_digit = num % 10,\n\t\todd_digit  = num - even_digit * 10\n\t);\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp844md2n6.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmp844md2n6.d(14): Error: Declaration expected, not \''=>\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp844md2n6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long odd = 0;\n    long even = 0;\n    while (num >= 0)\n    {\n        long\
    \ digit = num % 10;\n        if (digit % 2 == 0)\n            even++;\n      \
    \  else\n            odd++;\n        num /= 10;\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq21ospty.d(26): Error: found \''odd\'' when expecting \'';\''
    following return statement\n/tmp/tmpq21ospty.d(26): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq21ospty.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint i, n = (int) num;\n\tint even = 1;\n\tint odd = 1;\n\tfor (i = 0; i < n;\
    \ i++) {\n\t\teven *= (int)num;\n\t\tif (even % 2 == 0)\n\t\t\teven++;\n\t\telse\n\
    \t\t\todd++;\n\t}\n\treturn Tuple!(long,long) odd, even;\n}\nunittest\n{\n   \
    \ alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0k643l7j.d(15): Error: C style cast illegal, use cast(int)num\n/tmp/tmp0k643l7j.d(19):
    Error: C style cast illegal, use cast(int)num\n/tmp/tmp0k643l7j.d(25): Error:
    found \''odd\'' when expecting \'';\'' following return statement\n/tmp/tmp0k643l7j.d(25):
    Error: found \'',\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp0k643l7j.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint odd = 0;\n\tint even = 0;\n\twhile(num != 0)\n\t{\n\t\tnum /= 10;\n\t\t\
    odd += num % 2 ? 1 : 0;\n\t\teven += num % 2 ? 0 : 1;\n\t}\n\treturn Tuple!(odd,\
    \ even);\n}\n/*\nGiven an integer. return a tuple that has the number of odd digits\
    \ respectively.\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprrp6847n.d(25): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmprrp6847n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Assert1(isintegral(num));\n    \n    long odd = 0;\n    long even = 0;\n\
    \    int sign = 1;\n    \n    for(int i = 0; i < 32; i++) \n    {\n        long\
    \ x = num;\n        \n        if((x >> i) & 1) \n        {\n            odd +=\
    \ 1;\n        } \n        else \n        {\n            even += 1;\n        }\n\
    \    }\n    \n    Tuple evenodd = Tuple!(even, odd);\n    \n    return sign *\
    \ evenodd;\n}\n \n/*\nGiven an integer and an integer, return a tuple that has\
    \ the first number as even, and the second as odd.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnas6dnig.d(40): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpnas6dnig.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \ : Tuple!(long, long) {\n  int rem = num % 10;\n  int even = 0;\n  int odd =\
    \ 1;\n  if(rem >= 0) {\n    while(num > 0) {\n      num = num / 10;\n      even++;\n\
    \    }\n  }\n  else {\n    while(num > 0) {\n      num = num / 10;\n      odd++;\n\
    \    }\n  }\n  return Tuple!(rem, odd);\n}\n</code>\n<|/ a dscore=2 tags=dart,flutter\
    \ |>\n<| a tags=dart,flutter |>\nMy approach is to use regular expressions and\
    \ capture groups (i.e. parenthesis):\n<code>\nstatic int[] countEvenOdd(int number)\
    \ {\n  if (number == 0) return [0, 0];\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu50k810m.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpu50k810m.d(14): Error: Declaration expected, not \'':\''\n/tmp/tmpu50k810m.d(18):
    Error: Declaration expected, not \''if\''\n/tmp/tmpu50k810m.d(21): Error: no identifier
    for declarator even\n/tmp/tmpu50k810m.d(21): Error: Declaration expected, not
    \''++\''\n/tmp/tmpu50k810m.d(22): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpu50k810m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int even = 0, odd = 0;\n    long temp;\n    while (num > 0)\n    {\n    \
    \    if (num % 2 == 0) {\n            even++;\n        }\n        else {\n   \
    \         odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long,\
    \ long)(even, odd);\n}\n/*\nReturns the square root of num.\nunittest\n{\n   \
    \ alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9z_jtcqr.d(29): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp9z_jtcqr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint even=0, odd=0;\n\tint numDigits=digits(num);\n\twhile(num>0)\n\t{\n\t\t\
    int digit=num%10;\n\t\teven+=digit==0? 1:0;\n\t\todd+=digit==1? 1:0;\n\t\tnum=num/10;\n\
    \t}\n\treturn make_tuple(even, odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp04otc6q5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlet mut count = (num%2 == 0) ? 0 : 1 ;\n\tlet mut digit = 0 ;\n\twhile ((num\
    \ > 0) && (num % 10 != 0)) \n\t{\n\t\tnum/=10;\n\t\tdigit++;\n\t}\n\tcount = count\
    \ + digit ;\n\treturn Tuple(count, count + 1L);\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw9ik866d.d(15): Error: found \''mut\'' when expecting \'';\''
    following statement\n/tmp/tmpw9ik866d.d(16): Error: found \''mut\'' when expecting
    \'';\'' following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw9ik866d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tassert(isInt(num));\n\t\n\tlong __evenDigits = 0, __oddDigits = 0;\n\t\n\tif\
    \ (num > 0) {\n\t\twhile (num > 0) {\n\t\t\tnum /= 10;\n\t\t\t__evenDigits++;\n\
    \t\t}\n\t\t\n\t\twhile (num > 0) {\n\t\t\tnum /= 10;\n\t\t\t__oddDigits++;\n\t\
    \t}\n\t}\n\t\n\treturn Tuple!(__evenDigits, __oddDigits);\n}\nunittest\n{\n  \
    \  alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3yogs3l8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   =>\n    Tuple!(long, long) even_odd_count(num) in\n    if (num == 0) then\
    \ (0L, 0L);\n    else if ((num & 1) == 0L) then (1L, 1L);\n    else if ((num &\
    \ 1) == (1L << (num.abs()%2L))) then (2L, 1L);\n    else (even_odd_count(num /\
    \ 2L), even_odd_count(num / 2L) + 1);\n</code>\n<|/ a tags=functional-programming,ocaml,recursion\
    \ dscore=1 |>\n<| a dscore=1 tags=functional-programming,ocaml,recursion |>\n\
    Just for fun, here is some OCaml that computes the number of even and odd digits\
    \ without recursion :)\n<code>\nlet rec count_digits n =\n    match n with\n \
    \   | 0 -> 0\n    | x when x < 10 -> 1\n    | x when x < 100 -> 2\n    | x when\
    \ x < 1000 -> 3\n    | x when x < 10000 -> 4\n    | x when x < 100000 -> 5\n \
    \   | x when x < 1000000 -> 6\n    | x when x < 10000000 -> 7\n    | x when x\
    \ < 100000000 -> 8\n    | x when x < 1000000000 -> 9\n    | _ -> 10\n;;\n</code>\n\
    <|/ a |>\n<| a tags=functional-programming,ocaml,recursion |>\nMy version:\n<code>\n\
    let rec even n =\n  match n with\n  | 0 -> false\n  | x when x mod 2 = 0 -> true\n\
    \  | _ -> even n - 1\nunittest\n{\n    alias candidate = even_odd_count;\n\n \
    \   assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps098h5zv.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmps098h5zv.d(14): Error: Declaration expected, not \''=>\''\n/tmp/tmps098h5zv.d(17):
    Error: Declaration expected, not \''else\''\n/tmp/tmps098h5zv.d(18): Error: Declaration
    expected, not \''else\''\n/tmp/tmps098h5zv.d(19): Error: Declaration expected,
    not \''else\''\n/tmp/tmps098h5zv.d(20): Error: Declaration expected, not \''<\''\n/tmp/tmps098h5zv.d(39):
    Error: Declaration expected, not \''<\''\n/tmp/tmps098h5zv.d(53): Error: Declaration
    expected, not \''assert\''\n/tmp/tmps098h5zv.d(54): Error: Declaration expected,
    not \''assert\''\n/tmp/tmps098h5zv.d(55): Error: Declaration expected, not \''assert\''\n/tmp/tmps098h5zv.d(56):
    Error: Declaration expected, not \''assert\''\n/tmp/tmps098h5zv.d(57): Error:
    Declaration expected, not \''assert\''\n/tmp/tmps098h5zv.d(58): Error: Declaration
    expected, not \''assert\''\n/tmp/tmps098h5zv.d(59): Error: Declaration expected,
    not \''assert\''\n/tmp/tmps098h5zv.d(60): Error: Declaration expected, not \''assert\''\n/tmp/tmps098h5zv.d(61):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps098h5zv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    let n = trunc(n);\n    let even_count = 0;\n    let odd_count = 0;\n    \n\
    \    for(i <- 0..n) {\n        if(num % 10 == 0) even_count += 1;\n        else\
    \ odd_count += 1;\n        num /= 10;\n    }\n    \n    Tuple!(long, long) even_odd_count\
    \ = even_count, odd_count;\n    \n    return even_odd_count;\n}\n</code>\n<|/\
    \ a tags=integer,algorithm,bigint,racket,lisp |>\n<| c |>\nThis is a nice solution,\
    \ but is this really faster than the other approaches? Can you benchmark this\
    \ yourself?\n<|/ c |>\n<| c |>\nIt's not that slow, but it's also not \"faster\"\
    , since I started out trying to write this in Scheme, so it wasn't optimized for\
    \ speed, it was just fast enough to give the expected results.\n<|/ c |>\n<| a\
    \ dscore=0 |>\nHere's a solution in Racket that works with big-int types too:\n\
    <code>\n(define (even-odd? x bigint)\n  (even? (bit-vector x (ceiling (logbit-length\
    \ bigint) 1))))\n</code>\n<|/ a tags=integer,algorithm,bigint,racket,lisp |>\n\
    <| a dscore=0 |>\nHere's a solution in Racket:\n<code>\n#lang racket\n(define\
    \ (even-odd-count x)\n  (define (even-count? n)\n    (zero? (remainder n 2)))\n\
    \  (define (odd-count? n)\n    (zero? (remainder n 1)))\n  (let ([n (floor (log\
    \ (/ x 10)) (ceiling (log (/ x 10))))])\n    (cond\n      [(even-count? n) (list\
    \ n 1)]\n      [else (cons (- n 2) (list 1 n))]))))\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa21rzbl2.d(19): Error: found \''..\'' when expecting \'';\''
    following statement\n/tmp/tmpa21rzbl2.d(19): Error: found \'')\'' when expecting
    \'';\'' following for condition\n/tmp/tmpa21rzbl2.d(25): Error: found \''Tuple\''
    when expecting \'')\''\n/tmp/tmpa21rzbl2.d(25): Error: found \'',\'' when expecting
    \''.\'' following long\n/tmp/tmpa21rzbl2.d(25): Error: found \''long\'' when expecting
    identifier following \''long.\''\n/tmp/tmpa21rzbl2.d(25): Error: found \''even_odd_count\''
    when expecting \'';\'' following statement\n/tmp/tmpa21rzbl2.d(25): Error: found
    \''=\'' instead of statement\n/tmp/tmpa21rzbl2.d(29): Error: Declaration expected,
    not \''<\''\n/tmp/tmpa21rzbl2.d(35): Error: unterminated character constant\n/tmp/tmpa21rzbl2.d(35):
    Error: unterminated character constant\n/tmp/tmpa21rzbl2.d(35): Error: unterminated
    character constant\n/tmp/tmpa21rzbl2.d(38): Error: unterminated character constant\n/tmp/tmpa21rzbl2.d(45):
    Error: unterminated character constant\n/tmp/tmpa21rzbl2.d(61): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpa21rzbl2.d(62): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpa21rzbl2.d(63): Error: Declaration expected, not \''assert\''\n/tmp/tmpa21rzbl2.d(64):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpa21rzbl2.d(65): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpa21rzbl2.d(66): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpa21rzbl2.d(67): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpa21rzbl2.d(68): Error: Declaration expected, not \''assert\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa21rzbl2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    int count = 0;\n    bool odd = 0;\n    long result = 0;\n    if(num < 0)\n\
    \    {\n        num = -num;\n        odd = 1;\n    }\n    while(num > 0)\n   \
    \ {\n        result = result * 10 + num % 10;\n        num = num / 10;\n     \
    \   count++;\n    }\n    if(odd != 0)\n    {\n        result = result * 10 + 1;\n\
    \    }\n    return Tuple!(long, long) result,count;\n}\n/*\nGiven a double or\
    \ a float, return a tuple that has the absolute value of the double and the\n\
    number of digits after the decimal point.\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_iui72dp.d(33): Error: found \''result\'' when expecting \'';\''
    following return statement\n/tmp/tmp_iui72dp.d(33): Error: found \'',\'' instead
    of statement\n/tmp/tmp_iui72dp.d(35): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_iui72dp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tint even_count = 0;\n\tint odd_count = 0;\n\tlong temp = num;\n\twhile(temp\
    \ != 0)\n\t{\n\t\tint digit = num % 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\t\
    even_count++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\todd_count++;\n\t\t}\n\t\tnum /= 10;\n\
    \t}\n\treturn (even_count, odd_count);\n}\nunittest\n{\n    alias candidate =\
    \ even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0vadolci.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long  even_digit, odd_digit;\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf45om1_1.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf45om1_1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong i = 1;\n\twhile(num>0)\n\t{\n\t\tnum/=10;\n\t\ti++;\n\t}\n\treturn Tuple!(int,\
    \ int) [i,i];\n}\n/*\nGiven an array. return a tuple that has an array of the\
    \ even and odd numbers of the same length as the input array respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcvem_w3v.d(23): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpcvem_w3v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    Tuple!(long, long) evenOdd;\n    \n    long remain = num % 10;\n    num =\
    \ num / 10;\n    \n    while(remain != 0)\n    {\n        evenOdd[0] += remain;\n\
    \        remain = num % 10;\n        num = num / 10;\n    }\n    \n    evenOdd[1]\
    \ += num;\n    return evenOdd;\n}\n/*\nGiven a number, return a tuple that represents\
    \ the number of zeros after the decimal point.\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr115tu19.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpr115tu19.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014621
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n \
    \   : Tuple!(int, int) \n        when (num < 0)\n            => Tuple!(1, 1)\n\
    \            when (num <= 9)\n            => Tuple!(1, 1)\n            otherwise\n\
    \        {\n            int evenCount = 0;\n            int oddCount = 0;\n  \
    \          while(num > 0) {\n                int digit = num % 10;\n         \
    \       if (digit % 2 == 0) evenCount++;\n                else oddCount++;\n \
    \               num /= 10;\n            }\n            return Tuple!(evenCount,\
    \ oddCount);\n        }\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz6vprdp5.d(14): Error: semicolon expected following function
    declaration\n/tmp/tmpz6vprdp5.d(14): Error: Declaration expected, not \'':\''\n/tmp/tmpz6vprdp5.d(23):
    Error: Declaration expected, not \''while\''\n/tmp/tmpz6vprdp5.d(25): Error: Declaration
    expected, not \''if\''\n/tmp/tmpz6vprdp5.d(26): Error: Declaration expected, not
    \''else\''\n/tmp/tmpz6vprdp5.d(27): Error: no identifier for declarator num\n/tmp/tmpz6vprdp5.d(27):
    Error: Declaration expected, not \''/=\''\n/tmp/tmpz6vprdp5.d(28): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz6vprdp5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tif (num < 0) \n\t\terror(\"even_odd_count(): input must be non-negative\");\n\
    \telse if (num == 0) \n\t\treturn 0L;\n\telse {\n\t\tlong even_count = 0L;\n\t\
    \tlong odd_count = 0L;\n\t\tlong result = 0L;\n\t\twhile (num > 0) {\n\t\t\tint\
    \ digit = (int)(num % 10);\n\t\t\tnum /= 10;\n\t\t\tif (digit == 0) \n\t\t\t\t\
    continue;\n\t\t\telse if (digit % 2 == 0) {\n\t\t\t\teven_count += 1;\n\t\t\t\
    } else {\n\t\t\t\todd_count += 1;\n\t\t\t}\n\t\t}\n\t\treturn Tuple!(long,long)\
    \ even_count, odd_count;\n\t}\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeovpucd7.d(24): Error: C style cast illegal, use cast(int)(num
    % 10)\n/tmp/tmpeovpucd7.d(34): Error: found \''even_count\'' when expecting \'';\''
    following return statement\n/tmp/tmpeovpucd7.d(34): Error: found \'',\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeovpucd7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014621
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long      odd,even;\n    long      count;\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf969h_rt.d(17): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf969h_rt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1660014620

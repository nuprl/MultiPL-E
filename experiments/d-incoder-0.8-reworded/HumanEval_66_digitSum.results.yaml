language: d
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if (s.empty()) return\
    \ 0L;\n    long digits = 0L;\n    bool is_positive = true;\n    for (int i = 0;\
    \ i < s.length(); i++)\n    {\n        if (is_positive)\n        {\n         \
    \   bool is_upper = s[i]>='A' && s[i]<='Z';\n            bool is_lower = s[i]>='a'\
    \ && s[i]<='z';\n            if (is_upper && is_lower)\n                digits\
    \ += s[i] - 'A' + 1L;\n            else if (is_upper)\n                digits\
    \ += s[i] - 'A' + 1L;\n            else if (is_lower)\n                digits\
    \ += s[i] - 'a' + 1L;\n            else\n                throw \"Unexpected character\
    \ '\"+s[i]+\"'\";\n        }\n        else\n        {\n            bool is_upper\
    \ = s[i]>=65 && s[i]<90;\n            bool is_lower = s[i]>=97 && s[i]<122;\n\
    \            if (is_upper && is_lower)\n                digits += s[i] - 'a' +\
    \ 1L;\n            else if (is_upper)\n                digits += s[i] - 'A' +\
    \ 1L;\n            else if (is_lower)\n                digits += s[i] - 'z' +\
    \ 1L;\n            else\n                throw \"Unexpected character '\"+s[i]+\"\
    '\";\n        }\n        is_positive ^= 1;\n    }\n    return digits;\n}\n</code>\n\
    Test\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwraup322.d(60): Error: Declaration expected, not \''<\''\n/tmp/tmpwraup322.d(67):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpwraup322.d(68): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpwraup322.d(69): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpwraup322.d(70): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpwraup322.d(71): Error: Declaration expected, not \''assert\''\n/tmp/tmpwraup322.d(72):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpwraup322.d(73): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpwraup322.d(74): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpwraup322.d(75): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwraup322.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  if(s.length == 0)\n    return\
    \ 0;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbluowu0k.d(27): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbluowu0k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    int length\
    \ = s.length();\n    for(int i =0; i<length; i++)\n    {\n        if(char.IsDigit(s[i]))\
    \ sum += (int)s[i]-'0';\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c# |>\n\
    <| a |>\nYou can use LINQ:\n<code>\nstring s = \"123abC\";\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgs6b0kvu.d(29): Error: C style cast illegal, use cast(int)s[i]\n/tmp/tmpgs6b0kvu.d(33):
    Error: Declaration expected, not \''<\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpgs6b0kvu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if(s.length() == 0) {\n\
    \        return 0L;\n    }\n    long sum = 0L;\n    int currentChar;\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        currentChar = s[i];\n        sum += (int)currentChar;\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThank you for answering\
    \ my question. My code was able to return the sum of a string but for some reason\
    \ the answer it returns is incorrect for any string with more than 4 digits. I\
    \ posted the question here https://stackoverflow.com/questions/53900208/my-function-returns-different-results-when-i-use-a-string-with-more-than-4-digits\n\
    <|/ c |>\n<| c |>\nI added the new code I wrote to my question and added a link\
    \ to my code. It seems like my code is able to return strings with more than 4\
    \ digits, but it is not returning the correct answer. I think it is an issue with\
    \ my code or with the way I am using the function.\n<|/ c |>\n<| c |>\nThe link\
    \ to your code is very helpful. I modified my answer based on what I could find\
    \ from it. Hopefully it helps.\n<|/ c |>\n<| c |>\nOkay, I used your function\
    \ to create my answer and it worked perfectly. I will update my question with\
    \ my code in the morning.\n<|/ c |>\n<| c |>\nOkay, I updated my answer based\
    \ on your code. I tested it on my machine. I hope it helps.\n<|/ c |>\n<| a dscore=0\
    \ tags=c++,string |>\nYou can use this function to calculate the sum of digits\
    \ of a string\n<code>\nstring digitsum(string s)\n{\n    string s1,temp;\n   \
    \ int sum=0;\n    int length = (int)s.length();\n    int i=0;\n    while(i<length)\n\
    \    {\n        if(s[i]>='0' && s[i]<='9')\n            sum+=s[i]-'0';\n     \
    \   i++;\n    }\n    i=0;\n    while(i<length)\n    {\n        if(s[i]>='0' &&\
    \ s[i]<='9')\n        {\n            s1=s+string(s[i],1);\n        }\n       \
    \ i++;\n    }\n    while(!s1.empty())\n    {\n        temp=s1;\n        s1=temp;\n\
    \    }\n    return s1;\n}\n</code>\n<|/ a |>\n<| a tags=c++,string |>\nTry this:\n\
    <code>\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw_ichos2.d(32): Error: C style cast illegal, use cast(int)currentChar\n/tmp/tmpw_ichos2.d(36):
    Error: Declaration expected, not \''<\''\n/tmp/tmpw_ichos2.d(60): Error: C style
    cast illegal, use cast(int)s.length()\n/tmp/tmpw_ichos2.d(62): Error: Declaration
    expected, not \''while\''\n/tmp/tmpw_ichos2.d(66): Error: no identifier for declarator
    i\n/tmp/tmpw_ichos2.d(66): Error: Declaration expected, not \''++\''\n/tmp/tmpw_ichos2.d(67):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw_ichos2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    var result = 0;\n    for(var\
    \ i = 0; i < s.length; i++) \n    {\n        var c = s[i];\n        result +=\
    \ toChar(c) - '0';\n    }\n    return result;\n}\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the lowercase letters only'\n\
    \    ASCII codes.\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppdjzlou4.d(33): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmppdjzlou4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    for(int\
    \ i=0;i<s.size();i++)\n    {\n        if(s[i]==65&&s[i+1]==66)\n            sum+=3;\n\
    \        else if(s[i]==66)\n            sum+=2;\n        else if(s[i]==67)\n \
    \           sum+=4;\n        else if(s[i]==68)\n            sum+=5;\n        else\
    \ if(s[i]==69)\n            sum+=6;\n        else if(s[i]==70)\n            sum+=7;\n\
    \        else if(s[i]==71)\n            sum+=8;\n        else if(s[i]==72)\n \
    \           sum+=9;\n        else if(s[i]==73)\n            sum+=10;\n       \
    \ else if(s[i]==74)\n            sum+=11;\n        else if(s[i]==75)\n       \
    \     sum+=12;\n        else if(s[i]==76)\n            sum+=13;\n        else\
    \ if(s[i]==77)\n            sum+=14;\n        else if(s[i]==78)\n            sum+=15;\n\
    \        else if(s[i]==79)\n            sum+=16;\n        else if(s[i]==80)\n\
    \            sum+=17;\n        else if(s[i]==81)\n            sum+=18;\n     \
    \   else if(s[i]==82)\n            sum+=19;\n        else if(s[i]==83)\n     \
    \       sum+=20;\n        else if(s[i]==84)\n            sum+=21;\n        else\
    \ if(s[i]==85)\n            sum+=22;\n        else if(s[i]==86)\n            sum+=23;\n\
    \        else if(s[i]==87)\n            sum+=24;\n        else if(s[i]==88)\n\
    \            sum+=25;\n        else if(s[i]==89)\n            sum+=26;\n     \
    \   else if(s[i]==90)\n            sum+=27;\n        else if(s[i]==91)\n     \
    \       sum+=28;\n        else if(s[i]==92)\n            sum+=29;\n        else\
    \ if(s[i]==93)\n            sum+=30;\n        else if(s[i]==94)\n            sum+=31;\n\
    \        else if(s[i]==95)\n            sum+=32;\n        else if(s[i]==96)\n\
    \            sum+=33;\n        else if(s[i]==97)\n            sum+=34;\n     \
    \   else if(s[i]==98)\n            sum+=35;\n        else if(s[i]==99)\n     \
    \       sum+=36;\n        else if(s[i]==100)\n            sum+=37;\n        else\
    \ if(s[i]==101)\n            sum+=38;\n        else if(s[i]==102)\n          \
    \  sum+=39;\n        else if(s[i]==103)\n            sum+=40;\n        else if(s[i]==104)\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjpam8xay.d(107): Error: found \''unittest\'' instead of statement\n/tmp/tmpjpam8xay.d(120):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjpam8xay.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum=0;\n    foreach(char\
    \ c in s)\n        if(isUpper(c) && c != 'A')\n            sum += toUpper(c);\n\
    \    return sum;\n}\n</code>\n<|/ a dscore=0 tags=c++,string |>\n<| c |>\nThanks\
    \ for the response. I have updated the OP. I'm really confused on how to write\
    \ this in C++.\n<|/ c |>\n<| a |>\nThis solution is written in C++03 :\n<code>\n\
    #include <iostream>\n#include <ctype.h>\nusing namespace std;\nunittest\n{\n \
    \   alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo205vruq.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpo205vruq.d(31):
    Error: Declaration expected, not \''<\''\n/tmp/tmpo205vruq.d(34): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo205vruq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(int\
    \ i = 0; i < s.length(); i += 1) {\n        sum += s.codePointAt(i) - 'A';\n \
    \   }\n    return sum;\n}\n</code>\n<|/ a tags=algorithm,string,c++,c++11 |>\n\
    <| c |>\nThe C++ solution doesn't even compile for me with g++ 4.9.2. `sum` should\
    \ be `long`, not `int`.\n<|/ c |>\n<| c |>\n.J.Hakala I fixed the code to use\
    \ long instead of int and fixed a compiler error.\n<|/ c |>\n<| c |>\nI made a\
    \ mistake in the code, sorry for that. The code works correctly for me now.\n\
    <|/ c |>\n<| c |>\nThis code isn't using templates, and is thus not suitable for\
    \ general use.  It also doesn't use anything that wasn't available in C++11.\n\
    <|/ c |>\n<| c |>\n.J.Hakala What makes you say that it doesn't use templates?\
    \ I'm just curious because this is how it works without templates. C++ doesn't\
    \ really have templates, it's just a language extension.\n<|/ c |>\n<| a dscore=4\
    \ tags=algorithm,string,c++,c++11 |>\nUse a stringstream and read character by\
    \ character from the string, until you find an uppercase character. Continue until\
    \ there are no more characters and you find the end of the string. Something like:\n\
    <code>\n#include <iostream>\n#include <string>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5kjh_6b_.d(31): Error: Declaration expected, not \''<\''\n/tmp/tmp5kjh_6b_.d(34):
    Error: unterminated character constant\n/tmp/tmp5kjh_6b_.d(43): Error: unterminated
    character constant\n/tmp/tmp5kjh_6b_.d(43): Error: unterminated character constant\n/tmp/tmp5kjh_6b_.d(43):
    Error: unterminated character constant\n/tmp/tmp5kjh_6b_.d(46): Error: unterminated
    character constant\n/tmp/tmp5kjh_6b_.d(46): Error: unterminated character constant\n/tmp/tmp5kjh_6b_.d(46):
    Error: unterminated character constant\n/tmp/tmp5kjh_6b_.d(46): Error: unterminated
    character constant\n/tmp/tmp5kjh_6b_.d(57): Error: Declaration expected, not \''assert\''\n/tmp/tmp5kjh_6b_.d(58):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp5kjh_6b_.d(59): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp5kjh_6b_.d(60): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp5kjh_6b_.d(61): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp5kjh_6b_.d(62): Error: Declaration expected, not \''assert\''\n/tmp/tmp5kjh_6b_.d(63):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp5kjh_6b_.d(64): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp5kjh_6b_.d(65): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5kjh_6b_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    int\
    \ i=0;\n    while(i < s.size())\n    {\n        sum+=(int)s[i]-'A';\n        i++;\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,string,algorithm |>\n<| c\
    \ |>\nThat only works if the characters are all in the range of the `int`. The\
    \ question clearly states that ASCII codes are the expected result.\n<|/ c |>\n\
    <| c |>\nThe code above is C++ and the question clearly states that C++ is okay.\
    \ Why do you say `int` has to be in the `[0, 128]` range?\n<|/ c |>\n<| c |>\n\
    `i` should start at `0` instead of `1`.\n<|/ c |>\n<| c |>\nOh I misread the question;\
    \ I thought that the input was always lowercase. I'll fix it now. Thanks.\n<|/\
    \ c |>\n<| c |>\nHmmm, this doesn't seem to work correctly with strings of length\
    \ 1, or strings with an even number of characters. E.g. `\"a\"` -> `0`, `\"\"\
    ` -> `0`, `\"aA\"` -> `3`.\n<|/ c |>\n<| a tags=c++,string,algorithm dscore=2\
    \ |>\nI suggest that to find the sum of all characters in string, you can just\
    \ use below code:\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\n  \
    \  assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj1hglroi.d(29): Error: C style cast illegal, use cast(int)s[i]\n/tmp/tmpj1hglroi.d(34):
    Error: Declaration expected, not \''<\''\n/tmp/tmpj1hglroi.d(46): Error: semicolon
    expected, not \''that\''\n/tmp/tmpj1hglroi.d(46): Error: semicolon expected, not
    \''input\''\n/tmp/tmpj1hglroi.d(46): Error: semicolon expected, not \''always\''\n/tmp/tmpj1hglroi.d(46):
    Error: semicolon expected, not \''.\''\n/tmp/tmpj1hglroi.d(46): Error: unterminated
    character constant\n/tmp/tmpj1hglroi.d(46): Error: no identifier for declarator
    .I\n/tmp/tmpj1hglroi.d(46): Error: Declaration expected, not \''108U\''\n/tmp/tmpj1hglroi.d(49):
    Error: unterminated character constant\n/tmp/tmpj1hglroi.d(58): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpj1hglroi.d(59): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpj1hglroi.d(60): Error: Declaration expected, not \''assert\''\n/tmp/tmpj1hglroi.d(61):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpj1hglroi.d(62): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpj1hglroi.d(63): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpj1hglroi.d(64): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpj1hglroi.d(65): Error: Declaration expected, not \''assert\''\n/tmp/tmpj1hglroi.d(66):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj1hglroi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  if(s.isNull()) return 0L;\n\
    \  \n  // TODO: Implement your solution here.\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuy_0mi0p.d(28): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuy_0mi0p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ char c;\n    int i = 0;\n    while(i<s.length())\n    {\n        c = (char)s[i];\n\
    \        if(isUpper(c))\n        {\n            result+=toUpper(c) - toUpper('0');\n\
    \        }\n        i++;\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,arrays\
    \ dscore=0 |>\n<| a tags=c++,arrays |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <fstream>\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9bzsiwg4.d(30): Error: C style cast illegal, use cast(char)s[i]\n/tmp/tmp9bzsiwg4.d(39):
    Error: Declaration expected, not \''<\''\n/tmp/tmp9bzsiwg4.d(50): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9bzsiwg4.d(51): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9bzsiwg4.d(52): Error: Declaration expected, not \''assert\''\n/tmp/tmp9bzsiwg4.d(53):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp9bzsiwg4.d(54): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp9bzsiwg4.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9bzsiwg4.d(56): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9bzsiwg4.d(57): Error: Declaration expected, not \''assert\''\n/tmp/tmp9bzsiwg4.d(58):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9bzsiwg4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    int\
    \ count = 0;\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(s.charAt(i)\
    \ >= 'A' && s.charAt(i) <= 'Z')\n            sum += s.charAt(i);\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=string,char,c++ |>\n<| a dscore=1 |>\nMy solution\
    \ looks like this:\n<code>\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph2dx760f.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmph2dx760f.d(46):
    Error: Declaration expected, not \''assert\''\n/tmp/tmph2dx760f.d(47): Error:
    Declaration expected, not \''assert\''\n/tmp/tmph2dx760f.d(48): Error: Declaration
    expected, not \''assert\''\n/tmp/tmph2dx760f.d(49): Error: Declaration expected,
    not \''assert\''\n/tmp/tmph2dx760f.d(50): Error: Declaration expected, not \''assert\''\n/tmp/tmph2dx760f.d(51):
    Error: Declaration expected, not \''assert\''\n/tmp/tmph2dx760f.d(52): Error:
    Declaration expected, not \''assert\''\n/tmp/tmph2dx760f.d(53): Error: Declaration
    expected, not \''assert\''\n/tmp/tmph2dx760f.d(54): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2dx760f.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c in s) \n    {\n        int d = toAscii(c);\n        sum += d;\n    }\n   \
    \ return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nI wonder why it is returning the\
    \ sum of the digits when they have no significance in the original string and\
    \ why it is being asked for a string as input. Can you elaborate?\n<|/ c |>\n\
    <| c |>\nThe input is a string of digits. The output is the sum of the digits\
    \ of the string.\n<|/ c |>\n<| c |>\nWhy do we need this condition  if(!(c >=\
    \ '0' && c <= '9')) ?\n<|/ c |>\n<| c |>\nthe function will only work if a string\
    \ of digits in it.\n<|/ c |>\n<| c |>\nWhy? The function can take any string,\
    \ not just those with digits. You don't need to use an `if` statement at all.\n\
    <|/ c |>\n<| a |>\nA more generalized answer, that works on any character in a\
    \ string with a digit:\n<code>\n// Returns a string containing all digits from\
    \ the given string\nstring digits(string s)\n{\n   string digits = \"\";\n   int\
    \ count = 0;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp07voyfc9.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmp07voyfc9.d(33):
    Error: Declaration expected, not \''<\''\n/tmp/tmp07voyfc9.d(48): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp07voyfc9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  int i = 0;\n  long sum =\
    \ 0;\n  while (i < s.length())\n  {\n    sum += toupper(s[i]);\n    i++;\n  }\n\
    \  return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe4udm1_4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(string::iterator\
    \ it = s.begin(); it != s.end(); it++)\n    {\n        if(!isUpper(*it))\n   \
    \         continue;\n        if(*it == 'A')\n            sum += 'A' - 'a' + 1;\n\
    \        if(*it == 'a')\n            sum += 'a' - 'A' + 1;\n        if(*it ==\
    \ 'X')\n            sum += 'X' - 'a' + 1;\n        if(*it == 'a')\n          \
    \  sum += 'a' - 'A' + 1;\n        if(*it == 'b')\n            sum += 'b' - 'B'\
    \ + 1;\n        if(*it == 'B')\n            sum += 'B' - 'B' + 1;\n        if(*it\
    \ == 'c')\n            sum += 'c' - 'C' + 1;\n        if(*it == 'C')\n       \
    \     sum += 'C' - 'C' + 1;\n        if(*it == 'd')\n            sum += 'd' -\
    \ 'D' + 1;\n        if(*it == 'D')\n            sum += 'D' - 'D' + 1;\n      \
    \  if(*it == 'e')\n            sum += 'e' - 'E' + 1;\n        if(*it == 'E')\n\
    \            sum += 'E' - 'E' + 1;\n        if(*it == 'f')\n            sum +=\
    \ 'f' - 'F' + 1;\n        if(*it == 'F')\n            sum += 'F' - 'F' + 1;\n\
    \        if(*it == 'g')\n            sum += 'g' - 'G' + 1;\n        if(*it ==\
    \ 'G')\n            sum += 'G' - 'G' + 1;\n        if(*it == 'h')\n          \
    \  sum += 'h' - 'H' + 1;\n        if(*it == 'H')\n            sum += 'H' - 'H'\
    \ + 1;\n        if(*it == 'i')\n            sum += 'i' - 'I' + 1;\n        if(*it\
    \ == 'I')\n            sum += 'I' - 'I' + 1;\n        if(*it == 'j')\n       \
    \     sum += 'j' - 'J' + 1;\n        if(*it == 'J')\n            sum += 'J' -\
    \ 'J' + 1;\n        if(*it == 'k')\n            sum += 'k' - 'K' + 1;\n      \
    \  if(*it == 'K')\n            sum += 'K' - 'K' + 1;\n        if(*it == 'l')\n\
    \            sum += 'l' - 'L' + 1;\n        if(*it == 'L')\n            sum +=\
    \ 'L' - 'L' + 1;\n        if(*it == 'm')\n            sum += 'm' - 'M' + 1;\n\
    \        if(*it == 'M')\n            sum += 'M' - 'M' + 1;\n        if(*it ==\
    \ 'n\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkbzys5uq.d(26): Error: found \'':\'' instead of statement\n/tmp/tmpkbzys5uq.d(86):
    Error: unterminated character constant\n/tmp/tmpkbzys5uq.d(87): Error: found \''unittest\''
    when expecting \'')\''\n/tmp/tmpkbzys5uq.d(100): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpkbzys5uq.d(100): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpkbzys5uq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int i = 0;\n    char curr;\n\
    \    long res = 0;\n    \n    while (i < s.length())\n    {\n        switch(s[i++])\n\
    \        {\n            case '0':\n                curr = s[i];\n            \
    \    switch(curr)\n                {\n                    case '0':\n        \
    \                res += 0L;\n                        break;\n                \
    \    case '1':\n                        res += 1L;\n                        break;\n\
    \                    case '2':\n                        res += 2L;\n         \
    \               break;\n                    case '3':\n                      \
    \  res += 3L;\n                        break;\n                    case '4':\n\
    \                        res += 4L;\n                        break;\n        \
    \            case '5':\n                        res += 5L;\n                 \
    \       break;\n                    case '6':\n                        res +=\
    \ 6L;\n                        break;\n                    case '7':\n       \
    \                 res += 7L;\n                        break;\n               \
    \     case '8':\n                        res += 8L;\n                        break;\n\
    \                    case '9':\n                        res += 9L;\n         \
    \               break;\n                    default:\n                       \
    \ throw runtime_error(\"unexpected charcter encountered\");\n                }\n\
    \                break;\n            case '1':\n                curr = s[i];\n\
    \                switch(curr)\n                {\n                    case '0':\n\
    \                        res += 0L;\n                        break;\n        \
    \            case '1':\n                        res += 1L;\n                 \
    \       break;\n                    case '2':\n                        res +=\
    \ 2L;\n                        break;\n                    case '3':\n       \
    \                 res += 3L;\n                        break;\n               \
    \     case '4':\n                        res += 4L;\n                        break;\n\
    \                    case '5':\n                        res += 5L;\n         \
    \               break;\n                    case '6':\n                      \
    \  res += 6L;\n                        break;\n                    case '7':\n\
    \                        res += 7L;\n                        break;\n        \
    \            case '8':\n                        res += 8L;\n                 \
    \       break;\n                    case '9':\n                        res +=\
    \ 9L;\n                        break;\n                    default:\n        \
    \                throw runtime_error(\"unexpected charcter encountered\");\n \
    \               }\n                break;\n            case '2':\n           \
    \     curr = s[i];\n                switch(curr)\n                {\n        \
    \            case '0':\n                        res += 0L;\n                 \
    \       break;\n                    case '1':\n                        res +=\
    \ 1L;\n                        break;\n                    case '2':\n       \
    \                 res += 2L;\n                        break;\n               \
    \     case '3':\n                        res += 3L;\n                        break;\n\
    \                    case '4':\n                        res += 4L;\n         \
    \               break;\n                    case '5':\n                      \
    \  res += 5L;\n                        break;\n                    case '6':\n\
    \                        res += \nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp88z9luav.d(133): Error: expression expected, not \''unittest\''\n/tmp/tmp88z9luav.d(134):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmp88z9luav.d(146):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp88z9luav.d(146):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp88z9luav.d(146):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp88z9luav.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    // Complete this function\n\
    \    long sum = 0;\n    for (int i = 0; i < s.length(); i++)\n        sum += char(s[i])-'a';\n\
    \    return sum;\n}\n</code>\n<|/ a tags=string,c++ dscore=0 |>\n<| a dscore=0\
    \ |>\nYou can get it by looping through each character of the string, converting\
    \ the char into a int, and summing up the values.\n<code>\nstring str = \"abcde\"\
    ;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq0rpgzgu.d(28): Error: found \''(\'' when expecting \''.\''
    following char\n/tmp/tmpq0rpgzgu.d(28): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmpq0rpgzgu.d(31): Error: Declaration expected, not
    \''<\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq0rpgzgu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(char\
    \ c : s) sum += (int)toupper(c);\n    return sum;\n}\n</code>\n<|/ a dscore=0\
    \ tags=c++ |>\n<| c |>\nThis is not going to work if you try \"aAaaaXa\" (there\
    \ are two X's, not one, which is what your program does).  It should probably\
    \ return 95 not 131.\n<|/ c |>\n<| a tags=c++ |>\nYou might want to take a look\
    \ at std::accumulate:\n<code>\n#include <iostream>\n#include <iterator>\n#include\
    \ <algorithm>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp49njcjo0.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmp49njcjo0.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmp49njcjo0.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmp49njcjo0.d(26):
    Error: C style cast illegal, use cast(int)toupper(c)\n/tmp/tmp49njcjo0.d(29):
    Error: Declaration expected, not \''<\''\n/tmp/tmp49njcjo0.d(32): Error: unterminated
    character constant\n/tmp/tmp49njcjo0.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmp49njcjo0.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp49njcjo0.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp49njcjo0.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp49njcjo0.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp49njcjo0.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmp49njcjo0.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp49njcjo0.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp49njcjo0.d(52): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49njcjo0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (auto c : s)\n        sum += charToInt(c);\n    return sum;\n}\n</code>\n<|/\
    \ a |>\n<| a dscore=1 |>\nThis should work:\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjmddha1u.d(26): Error: no identifier for declarator c\n/tmp/tmpjmddha1u.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpjmddha1u.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpjmddha1u.d(30):
    Error: Declaration expected, not \''<\''\n/tmp/tmpjmddha1u.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpjmddha1u.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpjmddha1u.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmpjmddha1u.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjmddha1u.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpjmddha1u.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpjmddha1u.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpjmddha1u.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmpjmddha1u.d(50):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjmddha1u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    \n\
    \    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= 'a' && s[i] <=\
    \ 'z')\n            sum += s[i] - 'a' + 1; // adding to sum all upper ASCII characters\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5kfzl8ew.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ ch, s)\n    {\n        sum = (sum * 10) + toUpper(ch);\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpymczu6ew.d(26): Error: no identifier for declarator s\n/tmp/tmpymczu6ew.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpymczu6ew.d(30): Error: found
    \''return\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpymczu6ew.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ foreach (int c, s) \n    {\n        if (c >= '0' && c <= '9') result += c -\
    \ '0';\n        else if (c >= 'A' && c <= 'Z') result += c - 'A' + 10;\n     \
    \   else result -= 26; // subtract 26 to make it an uppercase letter\n    }\n\
    \    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI disagree with the\
    \ general premise, that you should never use casting.  You can sometimes use casting,\
    \ especially when reading from and writing to files or databases, but there are\
    \ also valid reasons to use casting when doing things like this.\n<|/ c |>\n<|\
    \ c |>\nOk I edited my answer. Thanks for pointing this out.\n<|/ c |>\n<| a tags=c++,casting\
    \ |>\nTo elaborate on the second answer: \nThe reason is because there is no implicit\
    \ conversion from char to int. There is implicit conversion from int to char and\
    \ char can be implicitly converted to int.\n<|/ a dscore=0 |>\n<| c |>\nThere\
    \ is implicit conversion from char to int. There is no implicit conversion from\
    \ int to char.\n<|/ c |>\n<| c |>\nYes, that is a simplification.\n<|/ c |>\n\
    <| a tags=c++,casting |>\nThe reason is that you can't use char as an index into\
    \ an array of long.  You'll have to cast the char to an int first, which will\
    \ also truncate the value to the nearest long.\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ tags=c++,casting |>\nThe reason is simply that char is an integer type. Since\
    \ int and char are both integers, the compiler must convert the char to int before\
    \ it will allow you to index into an array of int. Since there is no implicit\
    \ conversion from char to int, the compiler will complain that there is no int\
    \ type in the array you are indexing into. \nIn short, you are indexing into an\
    \ array of int, but there is no int type. The compiler doesn't know how to convert\
    \ the char to an int in order to index into the array. \nEDIT:\nIf you have a\
    \ look at the language definition for char, you'll see that char does not behave\
    \ like an integer type. \nIn other words, char is not an integer type. \nThe language\
    \ does not allow you to index into an array of char. That's not valid C++. If\
    \ you try to compile this code, you'll see that it doesn't compile. \n<code>\n\
    char arr[] = \"Hello, World!\";\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjh3vv23m.d(26): Error: no identifier for declarator s\n/tmp/tmpjh3vv23m.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpjh3vv23m.d(32): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmpjh3vv23m.d(34): Error: Declaration
    expected, not \''<\''\n/tmp/tmpjh3vv23m.d(53): Error: unterminated character constant\n/tmp/tmpjh3vv23m.d(53):
    Error: unterminated character constant\n/tmp/tmpjh3vv23m.d(57): Error: unterminated
    character constant\n/tmp/tmpjh3vv23m.d(59): Error: unterminated character constant\n/tmp/tmpjh3vv23m.d(61):
    Error: unterminated character constant\n/tmp/tmpjh3vv23m.d(61): Error: unterminated
    character constant\n/tmp/tmpjh3vv23m.d(61): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjh3vv23m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long l=0;\n    for(char\
    \ c:s) \n    {\n        if(c.isUpper()) l+=c.toInt();\n    }\n    return l;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,char,string |>\n<code>\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptmzrydxr.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmptmzrydxr.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmptmzrydxr.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmptmzrydxr.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmptmzrydxr.d(40): Error: Declaration
    expected, not \''assert\''\n/tmp/tmptmzrydxr.d(41): Error: Declaration expected,
    not \''assert\''\n/tmp/tmptmzrydxr.d(42): Error: Declaration expected, not \''assert\''\n/tmp/tmptmzrydxr.d(43):
    Error: Declaration expected, not \''assert\''\n/tmp/tmptmzrydxr.d(44): Error:
    Declaration expected, not \''assert\''\n/tmp/tmptmzrydxr.d(45): Error: Declaration
    expected, not \''assert\''\n/tmp/tmptmzrydxr.d(46): Error: Declaration expected,
    not \''assert\''\n/tmp/tmptmzrydxr.d(47): Error: Declaration expected, not \''assert\''\n/tmp/tmptmzrydxr.d(48):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptmzrydxr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    // Your code goes here!\n\
    \    long sum = 0; int i;\n    for (i=0;i<s.length();i++){\n        sum = sum\
    \ + std.digit(s[i], 0);\n    }\n    return sum;\n}\n</code>\n<|/ a tags=algorithm,c++,string\
    \ |>\n<| a dscore=0 |>\nHere is another solution:\n<code>\nlong digitSum(string\
    \ s) \n{\n    // Your code goes here!\n    long sum = 0;\n    size_t len = s.length();\n\
    \    for( size_t i = 0; i < len; ++i )\n    {\n        sum = sum + s[i] == 'a'\
    \ ? 10 : s[i] - '0';\n    }\n    return sum;\n}\n</code>\nThe function can be\
    \ easily generalized if you need it for other cases.\n<|/ a tags=algorithm,c++,string\
    \ |>\n<| a dscore=0 |>\nTry this\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdejit00f.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmpdejit00f.d(42):
    Error: Declaration expected, not \''for\''\n/tmp/tmpdejit00f.d(42): Error: no
    identifier for declarator i\n/tmp/tmpdejit00f.d(42): Error: Declaration expected,
    not \''<\''\n/tmp/tmpdejit00f.d(42): Error: Declaration expected, not \''++\''\n/tmp/tmpdejit00f.d(45):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdejit00f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  \n}\n``\n\"\"\"\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwovxgns.d(27): Error: Declaration expected, not \''""\''\n/tmp/tmpjwovxgns.d(40):
    Error: unterminated string constant starting at /tmp/tmpjwovxgns.d(40)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjwovxgns.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0L;\n    int\
    \ index = 0;\n    while(index < s.size())\n    {\n        if(s[index] >= 'A' &&\
    \ s[index] <= 'Z')\n            sum += s[index] - 'A' + 1L;\n        index++;\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=string,c++ dscore=0 |>\n<| c |>\n\
    This is wrong because 'W'==66.\n<|/ c |>\n<| c |>\nI don't think so. You want\
    \ to sum all upper cases. But 'W' has two uppercase characters and you want to\
    \ treat them the same. So 'W' -> 66 instead of 65. Thus your code gives wrong\
    \ result.\n<|/ c |>\n<| c |>\n, you are wrong. `W` is 66. W is ASCII code of 'w'.\
    \ 66 stands for upper case 'W'\n<|/ c |>\n<| c |>\n, my fault. My fault\n<|/ c\
    \ |>\n<| c |>\nYour code is wrong. The ascii table is wrong too. `W` 65 but your\
    \ code says 65 is `W`.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cctype>\nusing namespace std;\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvk64ewpq.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmpvk64ewpq.d(41):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpvk64ewpq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  long sum = 0;\n  for (int\
    \ i = 0; i < s.length(); i++)\n  {\n    sum += (s[i]-'0');\n  }\n  return sum;\n\
    }\n*/\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54if5t5j.d(32): Error: Declaration expected, not \''*\''\n/tmp/tmp54if5t5j.d(37):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp54if5t5j.d(38): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp54if5t5j.d(39): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp54if5t5j.d(40): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp54if5t5j.d(41): Error: Declaration expected, not \''assert\''\n/tmp/tmp54if5t5j.d(42):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp54if5t5j.d(43): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp54if5t5j.d(44): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp54if5t5j.d(45): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp54if5t5j.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    for (auto\
    \ c : s)\n    {\n       if((int)c >='A' && (int)c <='Z')\n       {\n        sum+=(int)c-'A';\n\
    \       }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 tags=function,c++,pointers,string,int\
    \ |>\n<| a tags=function,c++,pointers,string,int |>\nAs your problem statement\
    \ is \"Write a function that takes a string as input and returns the sum of the\
    \ upper characters only'\nASCII codes.\" I believe this is actually a very simple\
    \ question for you and your teacher, to accomplish, please follow these simple\
    \ steps:\nFirst, create a string from the input string and then apply the logic\
    \ of finding the sum of ascii codes for uppercase characters.\nFor instance:\n\
    <code>\nstring inputString = \"Hello World\";\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfkh9ysq3.d(26): Error: no identifier for declarator c\n/tmp/tmpfkh9ysq3.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpfkh9ysq3.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpfkh9ysq3.d(28):
    Error: C style cast illegal, use cast(int)c\n/tmp/tmpfkh9ysq3.d(28): Error: C
    style cast illegal, use cast(int)c\n/tmp/tmpfkh9ysq3.d(30): Error: C style cast
    illegal, use cast(int)c\n/tmp/tmpfkh9ysq3.d(35): Error: Declaration expected,
    not \''<\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfkh9ysq3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    map<int,int> m;\n    for\
    \ (auto it = s.begin(); it != s.end(); ++it)\n    {\n        if (m.find(*it) !=\
    \ m.end())\n        {\n            m[*it]++;\n        }\n        else\n      \
    \  {\n            m[*it] = 1;\n        }\n    }\n    long result = 0;\n    for\
    \ (auto it = m[char(0)]; it < m.size(); ++it)\n    {\n        result += it * m[char(*it)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 tags=string,c++,std |>\n\
    <| a tags=string,c++,std |>\nA solution using two for loops with chars in them\n\
    <code>\n#include <string>\n#include <iostream>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprskugoo9.d(25): Error: found \'',\'' when expecting \''.\''
    following int\n/tmp/tmprskugoo9.d(25): Error: found \''int\'' when expecting identifier
    following \''int.\''\n/tmp/tmprskugoo9.d(25): Error: found \''>\'' when expecting
    \'';\'' following statement\n/tmp/tmprskugoo9.d(38): Error: found \''(\'' when
    expecting \''.\'' following char\n/tmp/tmprskugoo9.d(38): Error: found \''0\''
    when expecting identifier following \''char.\''\n/tmp/tmprskugoo9.d(38): Error:
    found \'')\'' when expecting \'']\''\n/tmp/tmprskugoo9.d(38): Error: semicolon
    expected following auto declaration, not \'']\''\n/tmp/tmprskugoo9.d(38): Error:
    expression expected, not \'']\''\n/tmp/tmprskugoo9.d(38): Error: found \'';\''
    when expecting \'')\''\n/tmp/tmprskugoo9.d(38): Error: found \'')\'' when expecting
    \'';\'' following statement\n/tmp/tmprskugoo9.d(40): Error: found \''(\'' when
    expecting \''.\'' following char\n/tmp/tmprskugoo9.d(40): Error: found \''*\''
    when expecting identifier following \''char.\''\n/tmp/tmprskugoo9.d(40): Error:
    found \''it\'' when expecting \'']\''\n/tmp/tmprskugoo9.d(40): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmprskugoo9.d(40): Error: found
    \'']\'' instead of statement\n/tmp/tmprskugoo9.d(44): Error: Declaration expected,
    not \''<\''\n/tmp/tmprskugoo9.d(55): Error: Declaration expected, not \''assert\''\n/tmp/tmprskugoo9.d(56):
    Error: Declaration expected, not \''assert\''\n/tmp/tmprskugoo9.d(57): Error:
    Declaration expected, not \''assert\''\n/tmp/tmprskugoo9.d(58): Error: Declaration
    expected, not \''assert\''\n/tmp/tmprskugoo9.d(59): Error: Declaration expected,
    not \''assert\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprskugoo9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if (s.empty()) return\
    \ 0L;\n    int sum = 0;\n    for (auto c: s) {\n        sum += std.math.toUpper(c)\
    \ - std.math.toUpper('a');\n    }\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmputcgcjdl.d(27): Error: no identifier for declarator c\n/tmp/tmputcgcjdl.d(27):
    Error: expression expected, not \'':\''\n/tmp/tmputcgcjdl.d(27): Error: found
    \''s\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmputcgcjdl.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    auto result = std.int::zero;\n\
    \    for (auto i = 0; i < s.length(); i++) {\n        int ascii = std.charcodeAt(s.begin()\
    \ + i);\n        if (ascii >= 64 && ascii < 91) {\n            result += (ascii\
    \ - 64);\n        }\n    }\n    return result;\n}\n</code>\nIt should work for\
    \ arbitrary character count. I've used auto to deduce types for the variables.\
    \ If you're not familiar with C++20 then you can explicitly type the variables\
    \ like:\n<code>\nlong digitSum(string s) \n{\n    long result = 0;\n    for (auto\
    \ i = 0; i < s.length(); i++) {\n        int ascii = std.charcodeAt(s.begin()\
    \ + i);\n        if (ascii >= 64 && ascii < 91) {\n            result += ascii\
    \ - 64;\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| c |>\nThank you, this is really helpful!\n<|/ c |>\n<| c |>\nI've added\
    \ a shorter C++ version.\n<|/ c |>\n<| c |>\nWhy did you remove `std::wstring`\
    \ from the answer?\n<|/ c |>\n<| c |>\nYou didn't? The question asked for `std::string`\
    \ and this answer is tagged with `std::wstring`. Those are two different things.\n\
    <|/ c |>\n<| c |>\nHmmm, I removed it because I wanted to keep the answer as close\
    \ to OP's code as possible.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\nIf your\
    \ string is a number in base 10 you can use function stoi from <cstdlib> in combination\
    \ with function strlen() from <string.h>.\nIf you need to use only lower case\
    \ letters you can use\n<code>\nif (isdigit(s[i]) || s[i] == '.') {\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThe question doesn't require this.\n<|/ c |>\n<| c\
    \ |>\n\"the sum of the upper characters only\" does require it!\n<|/ c |>\n<|\
    \ c |>\nSo `stoi()` doesn't do what you want?\n<|/ c |>\n<| a dscore=0 tags=string,c++,algorithm\
    \ |>\n<code>\nstd::wstring s = \"hello\";\nstd::wstring result = std::wstring();\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7to15m21.d(25): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp7to15m21.d(25): Error: semicolon expected following auto
    declaration, not \'':\''\n/tmp/tmp7to15m21.d(25): Error: found \'':\'' instead
    of statement\n/tmp/tmp7to15m21.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmp7to15m21.d(35):
    Error: unterminated character constant\n/tmp/tmp7to15m21.d(35): Error: unterminated
    character constant\n/tmp/tmp7to15m21.d(40): Error: Declaration expected, not \''for\''\n/tmp/tmp7to15m21.d(40):
    Error: no identifier for declarator i\n/tmp/tmp7to15m21.d(40): Error: Declaration
    expected, not \''<\''\n/tmp/tmp7to15m21.d(40): Error: no identifier for declarator
    i\n/tmp/tmp7to15m21.d(40): Error: Declaration expected, not \''++\''\n/tmp/tmp7to15m21.d(42):
    Error: Declaration expected, not \''if\''\n/tmp/tmp7to15m21.d(44): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7to15m21.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++)\n    {\n        if (char.IsUpper(s[i]))\n \
    \       {\n            sum += tolower(s[i]);\n        }\n    }\n    return sum;\n\
    }\n</code>\nAnd I hope it helps.\n<|/ a dscore=0 |>\n<| a |>\n<code>\npackage\
    \ com.example;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprsop4qx6.d(35): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprsop4qx6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum=0;\n    foreach(char\
    \ c, s) \n    {\n        if(isupper(c))\n            sum+=(int)c;\n    }\n   \
    \ return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyf9vgkzc.d(26): Error: no identifier for declarator s\n/tmp/tmpyf9vgkzc.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpyf9vgkzc.d(29): Error: C
    style cast illegal, use cast(int)c\n/tmp/tmpyf9vgkzc.d(31): Error: found \''return\''
    when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyf9vgkzc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (char ch : s)\n        sum += ch.toUpper() == 'A' ? ch.toInt() - 'A' + 10 :\
    \ ch.toInt() - '0';\n    return sum;\n}\n/*\nTask\n    Write a function that takes\
    \ a string as input and returns the sum of the numbers only \n    in the string.\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpejo0mo76.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmpejo0mo76.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpejo0mo76.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpejo0mo76.d(30):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpejo0mo76.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    auto sum = std.algorithm.foldl(\
    \ [](long a, char b){ return std.digit(std.ascii(b) ) + a; }, 0L, s );\n    \n\
    \    return sum;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nI wrote this\
    \ answer for the same problem but for counting digits in a string\n<code>\n def\
    \ numDigits(s):\n    return len(s) - len(s.lstrip('0')) - len(s.rstrip('0'))\n\
    </code>\n<|/ a tags=string,sum,c++ |>\n<| c |>\nThis one does not work for negative\
    \ numbers: `numDigits(\"-3\")` returns 1 instead of 2 because it removes the '-'\
    \ in the end.\n<|/ c |>\n<| a tags=string,sum,c++ dscore=1 |>\nI think this will\
    \ help you\n<code>\n#include <iostream>\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpylijynv0.d(25): Error: found \''a\'' when expecting \''.\''
    following long\n/tmp/tmpylijynv0.d(25): Error: found \'',\'' when expecting identifier
    following \''long.\''\n/tmp/tmpylijynv0.d(25): Error: found \''char\'' when expecting
    \'',\''\n/tmp/tmpylijynv0.d(25): Error: found \''{\'' when expecting \'',\''\n/tmp/tmpylijynv0.d(25):
    Error: expression expected, not \''return\''\n/tmp/tmpylijynv0.d(25): Error: found
    \''std\'' when expecting \'',\''\n/tmp/tmpylijynv0.d(25): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmpylijynv0.d(25): Error: expression expected, not
    \''}\''\n/tmp/tmpylijynv0.d(29): Error: Declaration expected, not \''<\''\n/tmp/tmpylijynv0.d(49):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpylijynv0.d(50): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpylijynv0.d(51): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpylijynv0.d(52): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpylijynv0.d(53): Error: Declaration expected, not \''assert\''\n/tmp/tmpylijynv0.d(54):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpylijynv0.d(55): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpylijynv0.d(56): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpylijynv0.d(57): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpylijynv0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    // your code\n    int\
    \ sum = 0;\n    int countOfA = 0;\n    int countOfB = 0;\n    int countOfC = 0;\n\
    \    int countOfD = 0;\n    int countOfE = 0;\n    int countOfF = 0;\n    int\
    \ countOfG = 0;\n    int countOfH = 0;\n    int countOfI = 0;\n    int countOfJ\
    \ = 0;\n    int countOfK = 0;\n    int countOfL = 0;\n    int countOfM = 0;\n\
    \    int countOfN = 0;\n    int countOfO = 0;\n    int countOfP = 0;\n    int\
    \ countOfQ = 0;\n    int countOfR = 0;\n    int countOfS = 0;\n    int countOfT\
    \ = 0;\n    int countOfU = 0;\n    int countOfV = 0;\n    int countOfW = 0;\n\
    \    int countOfX = 0;\n    int countOfY = 0;\n    int countOfZ = 0;\n    int\
    \ countOfSpace = 0;\n    int countOfUpper = 0;\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(s[i] == 'A')\n        {\n            countOfA++;\n \
    \       }\n        if(s[i] == 'B')\n        {\n            countOfB++;\n     \
    \   }\n        if(s[i] == 'C')\n        {\n            countOfC++;\n        }\n\
    \        if(s[i] == 'D')\n        {\n            countOfD++;\n        }\n    \
    \    if(s[i] == 'E')\n        {\n            countOfE++;\n        }\n        if(s[i]\
    \ == 'F')\n        {\n            countOfF++;\n        }\n        if(s[i] == 'G')\n\
    \        {\n            countOfG++;\n        }\n        if(s[i] == 'H')\n    \
    \    {\n            countOfH++;\n        }\n        if(s[i] == 'I')\n        {\n\
    \            countOfI++;\n        }\n        if(s[i] == 'J')\n        {\n    \
    \        countOfJ++;\n        }\n        if(s[i] == 'K')\n        {\n        \
    \    countOfK++;\n        }\n        if(s[i] == 'L')\n        {\n            countOfL++;\n\
    \        }\n        if(s[i] == 'M')\n        {\n            countOfM++;\n    \
    \    }\n        if(s[i] == 'N')\n        {\n            countOfN++;\n        }\n\
    \        if(s[i] == 'O')\n        {\n            countOfO++;\n        }\n    \
    \    if(s[i] == 'P')\n        {\n            countOfP++;\n        }\n        if(s[i]\
    \ == 'Q')\n        {\n            countOfQ++;\n        }\n        if(s[i] == 'R')\n\
    \        {\n            countOfR++;\n        }\n        if(s[i] == 'S')\n    \
    \    {\n            countOfS++;\n        }\n        if(s[i] == 'T')\n        {\n\
    \            countOfT++;\n        }\n        if(s[i] == 'U')\nunittest\n{\n  \
    \  alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcfkfl49y.d(138): Error: found \''unittest\'' instead of statement\n/tmp/tmpcfkfl49y.d(151):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcfkfl49y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long total = 0;\n    for(int\
    \ i = 0; i < s.length; i++)\n        total += (int)s.chars[i]-(int)'A';\n    return\
    \ total;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThe algorithm is correct but\
    \ I don't think it's necessary to import those functions in your solution. `char`\
    \ is a global function, so the algorithm can be re-written as a simple `sum` function\
    \ without importing those functions.\n<|/ c |>\n<| c |>\nThanks, I have updated\
    \ my answer. As you mentioned, I didn't think about it at the first time.\n<|/\
    \ c |>\n<| c |>\nThank you so much! I was having trouble with the 'A' and 'a'\
    \ variables before. My professor said \"don't use std:: and don't use functions\"\
    . Anyway, your solution makes a lot of sense and thank you for your help!\n<|/\
    \ c |>\n<| c |>\nGlad I could help! :) Your professor is right. He is very particular\
    \ about how you write your programs. I didn't think to use a for loop so I wrote\
    \ a while loop and made it work with a for loop. Glad I could be of help. Keep\
    \ asking questions though! :D\n<|/ c |>\n<| c |>\nThe problem is that the `while`\
    \ loop still needs to import `char` as a global function. I think it's better\
    \ practice to import `char` only where you need it and not everywhere. That's\
    \ why I used a `for` loop in the first place. :-)\n<|/ c |>\n<| a tags=c++ |>\n\
    You can use the fact that char is a primitive datatype in C and C++:\n<code>\n\
    #include <iostream>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9sftr_4j.d(27): Error: C style cast illegal, use cast(int)s.chars[i]\n/tmp/tmp9sftr_4j.d(27):
    Error: C style cast illegal, use cast(int)\''A\''\n/tmp/tmp9sftr_4j.d(30): Error:
    Declaration expected, not \''<\''\n/tmp/tmp9sftr_4j.d(33): Error: unterminated
    character constant\n/tmp/tmp9sftr_4j.d(33): Error: unterminated character constant\n/tmp/tmp9sftr_4j.d(36):
    Error: unterminated character constant\n/tmp/tmp9sftr_4j.d(42): Error: unterminated
    character constant\n/tmp/tmp9sftr_4j.d(45): Error: unterminated character constant\n/tmp/tmp9sftr_4j.d(45):
    Error: unterminated character constant\n/tmp/tmp9sftr_4j.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9sftr_4j.d(56): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9sftr_4j.d(57): Error: Declaration expected, not \''assert\''\n/tmp/tmp9sftr_4j.d(58):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp9sftr_4j.d(59): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp9sftr_4j.d(60): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9sftr_4j.d(61): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9sftr_4j.d(62): Error: Declaration expected, not \''assert\''\n/tmp/tmp9sftr_4j.d(63):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9sftr_4j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c in s) \n    {\n        if(!('a' <= c && c <= 'z') && !('A' <= c && c <= 'Z'))\n\
    \        {\n            int cp = toupper(c) - 'A';\n            sum += cp;\n \
    \       }\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_kbmu9_c.d(26): Error: found \''in\'' when expecting \'';\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_kbmu9_c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  int sum=0;\n  \n  for (int\
    \ i = 0; i<s.length(); i++)\n  {\n    if(s.at(i)>='A' && s.at(i)<='Z')\n    {\n\
    \      sum+=s.at(i)-'A'; // subtract the value of 'A'\n    }\n  }\n  \n  return\
    \ sum;\n}\n/*\nTask\n    Write a function that takes a string as input and returns\
    \ the sum of the numbers of the string in ascending order.\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_pvrmmcw.d(37): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp_pvrmmcw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if (s.length() < 1)\n\
    \        throw new Exception(\"Empty string\");\n    long sum = 0;\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z')\n            sum += s.charAt(i);\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=loops,character,sum,string,java dscore=1 |>\n<| a |>\n<code>\npublic\
    \ static long digitSum(String s) {\n    return s.chars().mapToLong(c -> (c - '0')).sum();\n\
    }\n</code>\n<|/ a dscore=1 tags=loops,character,sum,string,java |>\n<| c |>\n\
    Welcome to SO! While this code snippet may solve the question, [including an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion.\n<|/ c |>\n<| a tags=loops,character,sum,string,java\
    \ |>\nFor each char in the input string, subtract '0' from it to get the value\
    \ of the char.\nThen just add all those values.\n<code>\npublic static long digitSum(String\
    \ s) {\n  long sum = 0;\n  for(int i = 0; i < s.length(); i++) {\n    sum += s.charAt(i)\
    \ - '0';\n  }\n  return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=loops,character,sum,string,java\
    \ dscore=0 |>\n<code>\npublic class CharSum {\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmgnam9el.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmpmgnam9el.d(41):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmgnam9el.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    foreach(char\
    \ c in s){\n        if(!('0' <= c && c <= '9')){\n            throw new Exception(\"\
    String contains non-digit characters\");\n        }\n        sum+=toupper(c) -\
    \ '0';\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work\
    \ if the string contains digits that are not in an ASCII range.\n<|/ c |>\n<|\
    \ c |>\n: it works, just not in the way you want. Try `digitSum(\"123\")`.\n<|/\
    \ c |>\n<| a tags=d,string,digits,ascii |>\nYou could always try something like:\n\
    <code>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjoh0vz8z.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpjoh0vz8z.d(34):
    Error: Declaration expected, not \''<\''\n/tmp/tmpjoh0vz8z.d(37): Error: unterminated
    character constant\n/tmp/tmpjoh0vz8z.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmpjoh0vz8z.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjoh0vz8z.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpjoh0vz8z.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpjoh0vz8z.d(53): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpjoh0vz8z.d(54): Error: Declaration expected, not \''assert\''\n/tmp/tmpjoh0vz8z.d(55):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjoh0vz8z.d(56): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpjoh0vz8z.d(57): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjoh0vz8z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0L;\n  \
    \  for (char c: s)\n    {\n        if ((int)c >= 32)\n        {\n            result\
    \ += (int)c;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpizsw7kt6.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmpizsw7kt6.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpizsw7kt6.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpizsw7kt6.d(28):
    Error: C style cast illegal, use cast(int)c\n/tmp/tmpizsw7kt6.d(30): Error: C
    style cast illegal, use cast(int)c\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpizsw7kt6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ int i = 0;\n    for(i; i < s.length; i++)\n    {\n        if((int)s[i] >= 65\
    \ && (int)s[i] <= 90)\n        {\n            result += (int)s[i] - 64;\n    \
    \    }\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,ascii,function |>\n\
    <| a dscore=0 |>\n<code>\n//I changed your function a bit\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplyzfvgwh.d(29): Error: C style cast illegal, use cast(int)s[i]\n/tmp/tmplyzfvgwh.d(29):
    Error: C style cast illegal, use cast(int)s[i]\n/tmp/tmplyzfvgwh.d(31): Error:
    C style cast illegal, use cast(int)s[i]\n/tmp/tmplyzfvgwh.d(36): Error: Declaration
    expected, not \''<\''\n/tmp/tmplyzfvgwh.d(45): Error: Declaration expected, not
    \''assert\''\n/tmp/tmplyzfvgwh.d(46): Error: Declaration expected, not \''assert\''\n/tmp/tmplyzfvgwh.d(47):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplyzfvgwh.d(48): Error:
    Declaration expected, not \''assert\''\n/tmp/tmplyzfvgwh.d(49): Error: Declaration
    expected, not \''assert\''\n/tmp/tmplyzfvgwh.d(50): Error: Declaration expected,
    not \''assert\''\n/tmp/tmplyzfvgwh.d(51): Error: Declaration expected, not \''assert\''\n/tmp/tmplyzfvgwh.d(52):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplyzfvgwh.d(53): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplyzfvgwh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0L;\n    foreach\
    \ (char c in s)\n    {\n        if ( c >= 'a' && c <= 'z' )\n        {\n     \
    \       sum += c-'a'+1;\n        }\n    }\n    return sum;\n}\nunittest\n{\n \
    \   alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxa6qgki8.d(26): Error: found \''in\'' when expecting \'';\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxa6qgki8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long total = 0;\n    for\
    \ (char c : s) \n    {\n        if (char.IsUpper(c))\n        {\n            total\
    \ += char.GetNumericValue(c);\n        }\n    }\n    return total;\n}\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8zve0qfj.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmp8zve0qfj.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmp8zve0qfj.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp8zve0qfj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(char\
    \ ch : s)\n        sum = sum + ch;\n    return sum;\n}\n</code>\n<|/ a tags=string,c,c-strings,c++\
    \ |>\n<| c |>\nPlease [edit] your answer to add an explanation of how your code\
    \ works and how it solves the OP's problem. Many SO posters are newbies and will\
    \ not understand the code. You should explain what your code does and how it does\
    \ it.\n<|/ c |>\n<| c |>\nIt's not my homework, it's my task from our teacher.\
    \ Thanks for trying to help, anyways. I already solved it like that. Thanks anyways.\
    \ :)\n<|/ c |>\n<| c |>\nYou did not write this in the original question. `:)`\
    \ My answer was for your homework assignment. Be careful next time!\n<|/ c |>\n\
    <| c |>\nBtw, I didn't write this in the original question, but I did write it\
    \ in a comment. I've edited my answer to include an explanation.\n<|/ c |>\n<|\
    \ a dscore=2 |>\nMy solution is similar to others but I try to improve it a little\
    \ bit\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3ofd698y.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmp3ofd698y.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmp3ofd698y.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmp3ofd698y.d(30):
    Error: Declaration expected, not \''<\''\n/tmp/tmp3ofd698y.d(33): Error: unterminated
    character constant\n/tmp/tmp3ofd698y.d(36): Error: unterminated character constant\n/tmp/tmp3ofd698y.d(36):
    Error: unterminated character constant\n/tmp/tmp3ofd698y.d(42): Error: unterminated
    character constant\n/tmp/tmp3ofd698y.d(42): Error: unterminated character constant\n/tmp/tmp3ofd698y.d(51):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp3ofd698y.d(52): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp3ofd698y.d(53): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp3ofd698y.d(54): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp3ofd698y.d(55): Error: Declaration expected, not \''assert\''\n/tmp/tmp3ofd698y.d(56):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp3ofd698y.d(57): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp3ofd698y.d(58): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp3ofd698y.d(59): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ofd698y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong result = 0;\n\tint\
    \ len = s.length();\n\tfor (int i = 0; i < len; i++)\n\t{\n\t\tresult += tolower(s[i]);\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n \
    \   assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp23wg9d_8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    int\
    \ i = 0;\n    for(int j = s.length() - 1; j >= 0; j--) \n    {\n        if(s.at(j)\
    \ >= 'a' && s.at(j) <= 'z') \n        {\n            sum += s.at(j) - 'a';\n \
    \       }\n        else \n        {\n            sum += s.at(j);\n        }\n\
    \        i++;\n    }\n    return sum;\n}\n</code>\n<|/ a tags=recursion,algorithm,c++\
    \ |>\n<| a dscore=1 |>\n<code>\n#include <stdio.h>\n#include <string.h>\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcc1r1yr8.d(41): Error: Declaration expected, not \''<\''\n/tmp/tmpcc1r1yr8.d(51):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpcc1r1yr8.d(52): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpcc1r1yr8.d(53): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpcc1r1yr8.d(54): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpcc1r1yr8.d(55): Error: Declaration expected, not \''assert\''\n/tmp/tmpcc1r1yr8.d(56):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpcc1r1yr8.d(57): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpcc1r1yr8.d(58): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpcc1r1yr8.d(59): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcc1r1yr8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n       char c = s[i];\n       sum += (c\
    \ >= 'A' && c <= 'Z') ? c - 'A' + 10 : c - '0';\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=string,c++,digit,char,if-statement |>\n<| a tags=string,c++,digit,char,if-statement\
    \ |>\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwn2bugp.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmpjwn2bugp.d(41):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjwn2bugp.d(42): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpjwn2bugp.d(43): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpjwn2bugp.d(44): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpjwn2bugp.d(45): Error: Declaration expected, not \''assert\''\n/tmp/tmpjwn2bugp.d(46):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjwn2bugp.d(47): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpjwn2bugp.d(48): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpjwn2bugp.d(49): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjwn2bugp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return sum(to!int(s[1..$]));\n\
    }\n</code>\n<|/ a tags=string,int,dart,sum |>\n<| a |>\n<code>\nimport 'dart:convert';\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7xrnzi_n.d(27): Error: Declaration expected, not \''<\''\n/tmp/tmp7xrnzi_n.d(31):
    Error: unterminated character constant\n/tmp/tmp7xrnzi_n.d(31): Error: unterminated
    character constant\n/tmp/tmp7xrnzi_n.d(36): Error: Declaration expected, not \''assert\''\n/tmp/tmp7xrnzi_n.d(37):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7xrnzi_n.d(38): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp7xrnzi_n.d(39): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp7xrnzi_n.d(40): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp7xrnzi_n.d(41): Error: Declaration expected, not \''assert\''\n/tmp/tmp7xrnzi_n.d(42):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7xrnzi_n.d(43): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp7xrnzi_n.d(44): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7xrnzi_n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (auto c : s)\n        sum += toupper(c);\n    return sum;\n}\n</code>\nOutput:\n\
    <code>\ndigitSum(\"\")\n0L\ndigitSum(\"abAB\")\n131L\ndigitSum(\"abcCd\")\n67L\n\
    digitSum(\"helloE\")\n69L\ndigitSum(\"woArBld\")\n131L\ndigitSum(\"aAaaaXa\")\n\
    153L\n</code>\n<|/ a tags=string,c++,sum dscore=0 |>\n<| c |>\nI believe this\
    \ will return incorrect result for empty string (or any string containing only\
    \ spaces); also it can be done without looping through all characters.\n<|/ c\
    \ |>\n<| c |>\nThe empty string does not contain only spaces, so the result is\
    \ not incorrect. Also it is not necessary to loop through all characters since\
    \ `std::str::size` and `std::str::find_first_of` are used to get the index and\
    \ length of the substring. Then the sum is calculated with these indices.\n<|/\
    \ c |>\n<| c |>\n`digitSum(\"abC\")` returns `121L` instead of `131L`\n<|/ c |>\n\
    <| c |>\nThis also doesn't work for `digitSum(\"aAaaaXa\")`.\n<|/ c |>\n<| c |>\n\
    This also doesn't work for `digitSum(\"XaAaaaXa\")`.\n<|/ c |>\n<| a tags=string,c++,sum\
    \ |>\nIn C++17 you can use std::ranges::accumulate\n<code>\n#include <ranges>\n\
    #include <string>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq_hruut8.d(26): Error: no identifier for declarator c\n/tmp/tmpq_hruut8.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpq_hruut8.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpq_hruut8.d(30):
    Error: Declaration expected, not \''<\''\n/tmp/tmpq_hruut8.d(48): Error: semicolon
    expected, not \''can\''\n/tmp/tmpq_hruut8.d(48): Error: semicolon expected, not
    \''done\''\n/tmp/tmpq_hruut8.d(48): Error: semicolon expected, not \''looping\''\n/tmp/tmpq_hruut8.d(48):
    Error: semicolon expected, not \''all\''\n/tmp/tmpq_hruut8.d(48): Error: semicolon
    expected, not \''.\''\n/tmp/tmpq_hruut8.d(49): Error: identifier expected following
    \''.\'' instead of \''<\''\n/tmp/tmpq_hruut8.d(49): Error: no identifier for declarator
    \n/tmp/tmpq_hruut8.d(49): Error: Declaration expected, not \''<\''\n/tmp/tmpq_hruut8.d(57):
    Error: unterminated character constant\n/tmp/tmpq_hruut8.d(60): Error: unterminated
    character constant\n/tmp/tmpq_hruut8.d(71): Error: Declaration expected, not \''assert\''\n/tmp/tmpq_hruut8.d(72):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpq_hruut8.d(73): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpq_hruut8.d(74): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpq_hruut8.d(75): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpq_hruut8.d(76): Error: Declaration expected, not \''assert\''\n/tmp/tmpq_hruut8.d(77):
    Error: Declaration expected, not \''assert\''\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpq_hruut8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (auto it=s.cbegin(); it!=s.cend(); ++it) {\n        if(isupper(*it)) {\n   \
    \         sum += toupper(*it);\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=algorithm,c++ |>\n<| a tags=algorithm,c++ |>\nIf you're using a recent\
    \ enough compiler, you can use regular expressions to find and remove all but\
    \ uppercase characters from your string. Since you're using C++, I assume you're\
    \ using GCC, so the following code should work:\n<code>\n#include <iostream>\n\
    #include <string>\n#include <regex>\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq873z5ne.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmpq873z5ne.d(36):
    Error: unterminated character constant\n/tmp/tmpq873z5ne.d(36): Error: unterminated
    character constant\n/tmp/tmpq873z5ne.d(36): Error: unterminated character constant\n/tmp/tmpq873z5ne.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpq873z5ne.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpq873z5ne.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpq873z5ne.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpq873z5ne.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmpq873z5ne.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpq873z5ne.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpq873z5ne.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpq873z5ne.d(53): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq873z5ne.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long res = 0;\n    for(\
    \ int i = 0; i < s.length(); i++){\n        if(s[i] >= 'A' && s[i] <= 'Z'){\n\
    \            res = res + 1 * (s[i]-'A');\n        }\n    }\n    return res;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nIt's worth mentioning that `'a'-'A'` is just `97`.\n\
    <|/ c |>\n<| c |>\nOh! yes, you are right. I've updated the answer. Thank you!\n\
    <|/ c |>\n<| a tags=string,c++,arrays |>\nYou could use the std::string::find\
    \ method to locate the first character that isn't a lowercase letter, e.g. using\
    \ the std::isalpha function\n<code>\n#include <string>\n#include <algorithm>\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4soiakuf.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmp4soiakuf.d(36):
    Error: unterminated character constant\n/tmp/tmp4soiakuf.d(39): Error: unterminated
    character constant\n/tmp/tmp4soiakuf.d(42): Error: unterminated character constant\n/tmp/tmp4soiakuf.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp4soiakuf.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp4soiakuf.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp4soiakuf.d(53): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp4soiakuf.d(54): Error: Declaration expected, not \''assert\''\n/tmp/tmp4soiakuf.d(55):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp4soiakuf.d(56): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp4soiakuf.d(57): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp4soiakuf.d(58): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4soiakuf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    foreach\
    \ (char c in s)\n    {\n        if(c >= 'A' && c <= 'Z')\n            sum += (int)c\
    \  - 'A';\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++ |>\n<| a tags=c++\
    \ |>\nIn c++ you can use STD library to achieve the same.\nstd::isupper function\
    \ returns true if c is an uppercase letter.\n<code>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjv2_5ng1.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpjv2_5ng1.d(29):
    Error: C style cast illegal, use cast(int)c\n/tmp/tmpjv2_5ng1.d(33): Error: Declaration
    expected, not \''<\''\n/tmp/tmpjv2_5ng1.d(43): Error: Declaration expected, not
    \''assert\''\n/tmp/tmpjv2_5ng1.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmpjv2_5ng1.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjv2_5ng1.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpjv2_5ng1.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpjv2_5ng1.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpjv2_5ng1.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmpjv2_5ng1.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjv2_5ng1.d(51): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjv2_5ng1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n     \n    long result = 0;\n\
    \     \n    for (int i = 0; i < s.length(); i++) {\n       result += (s[i] >=\
    \ 'A') ? (s[i] - 'A' + 10) : (s[i] - '0');\n    }\n     \n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string,function |>\n<| a dscore=0 tags=c++,string,function\
    \ |>\nYou could use the following algorithm:\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptysfwa25.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmptysfwa25.d(42):
    Error: Declaration expected, not \''assert\''\n/tmp/tmptysfwa25.d(43): Error:
    Declaration expected, not \''assert\''\n/tmp/tmptysfwa25.d(44): Error: Declaration
    expected, not \''assert\''\n/tmp/tmptysfwa25.d(45): Error: Declaration expected,
    not \''assert\''\n/tmp/tmptysfwa25.d(46): Error: Declaration expected, not \''assert\''\n/tmp/tmptysfwa25.d(47):
    Error: Declaration expected, not \''assert\''\n/tmp/tmptysfwa25.d(48): Error:
    Declaration expected, not \''assert\''\n/tmp/tmptysfwa25.d(49): Error: Declaration
    expected, not \''assert\''\n/tmp/tmptysfwa25.d(50): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptysfwa25.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ int i = 0;\n    foreach(char c, s) \n    {\n        if (c == 'A' || c == 'B'\
    \ || c == 'C' || c == 'D' || c == 'E' || c == 'F' || c == 'G' || c == 'H' || c\
    \ == 'I' || c == 'J' || c == 'K' || c == 'L' || c == 'M' || c == 'N' || c == 'O'\
    \ || c == 'P' || c == 'Q' || c == 'R' || c == 'S' || c == 'T' || c == 'U' || c\
    \ == 'V' || c == 'W' || c == 'X' || c == 'Y' || c == 'Z') \n        {\n      \
    \      result += std.char.digit(c) - std.char.digit('A') + 1;\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a tags=string,c#,methods,string |>\n\
    <| a |>\nAs a follow up on the answer from Nikhil, here is how you could do it\
    \ without a foreach loop.\n<code>\nlong digitSum(string s) {\n    long result\
    \ = 0;\n    foreach (char c in s) {\n        result += (c == 'A') ? (long)'1'\
    \ : (c == 'B') ? (long)'2' : \n                (c == 'C') ? (long)'3' : (c ==\
    \ 'D') ? (long)'4' :\n                (c == 'E') ? (long)'5' : (c == 'F') ? (long)'6'\
    \ :\n                (c == 'G') ? (long)'7' : (c == 'H') ? (long)'8' :\n     \
    \           (c == 'I') ? (long)'9' : (c == 'J') ? (long)'10' :\n             \
    \   (c == 'K') ? (long)'11' : (c == 'L') ? (long)'12' :\n                (c ==\
    \ 'M') ? (long)'13' : (c == 'N') ? (long)'14' :\n                (c == 'O') ?\
    \ (long)'15' : (c == 'P') ? (long)'16' :\n                (c == 'Q') ? (long)'17'\
    \ : (c == 'R') ? (long)'18' :\n                (c == 'S') ? (long)'19' : (c ==\
    \ 'T') ? (long)'20' :\n                (c == 'U') ? (long)'21' : (c == 'V') ?\
    \ (long)'22' :\n                (c == 'W') ? (long)'23' : (c == 'X') ? (long)'24'\
    \ :\n                (c == 'Y') ? (long)'25' : (c == 'Z') ? (long)'26' :\n   \
    \             (c == 'a') ? (long)'27' : (c == 'b') ? (long)'28' :\n          \
    \      (c == 'c') ? (long)'29' : (c == 'd') ? (long)'30\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpin8sbur_.d(27): Error: no identifier for declarator s\n/tmp/tmpin8sbur_.d(27):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpin8sbur_.d(31): Error: identifier
    expected following \''.\'', not \''char\''\n/tmp/tmpin8sbur_.d(31): Error: identifier
    expected following \''.\'', not \''char\''\n/tmp/tmpin8sbur_.d(34): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmpin8sbur_.d(36): Error: Declaration
    expected, not \''<\''\n/tmp/tmpin8sbur_.d(43): Error: Declaration expected, not
    \''foreach\''\n/tmp/tmpin8sbur_.d(48): Error: unterminated character constant\n/tmp/tmpin8sbur_.d(48):
    Error: unterminated character constant\n/tmp/tmpin8sbur_.d(49): Error: unterminated
    character constant\n/tmp/tmpin8sbur_.d(49): Error: unterminated character constant\n/tmp/tmpin8sbur_.d(49):
    Error: unterminated character constant\n/tmp/tmpin8sbur_.d(49): Error: unterminated
    character constant\n/tmp/tmpin8sbur_.d(50): Error: unterminated character constant\n/tmp/tmpin8sbur_.d(50):
    Error: unterminated character constant\n/tmp/tmpin8sbur_.d(50): Error: unterminated
    character constant\n/tmp/tmpin8sbur_.d(50): Error: unterminated character constant\n/tmp/tmpin8sbur_.d(51):
    Error: unterminated character constant\n/tmp/tmpin8sbur_.d(51): Error: unterminated
    character constant\n/tmp/tmpin8sbur_.d(51): Error: unterminated character constant\n/tmp/tmpin8sbur_.d(51):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpin8sbur_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (char c : s) {\n        if (c >= 'a' && c <= 'z')\n            sum += c - 'a'\
    \ + 1;\n    }\n    return sum;\n}\n</code>\n<|/ a tags=string,algorithm |>\n<|\
    \ a dscore=0 |>\nPython's str has a isupper method that checks if a character\
    \ is uppercase:\n<code>\ndef uppcase(s):\n    return sum(1 for c in s if c.isupper())\n\
    </code>\n<|/ a tags=string,algorithm |>\n<| c |>\nThat is really unpythonic. Using\
    \ a for loop is much clearer and efficient.\n<|/ c |>\n<| a dscore=0 tags=string,algorithm\
    \ |>\nJava Solution:\n<code>\npublic long uppcase(String s) {\n    if(s == null\
    \ || s.length() == 0)\n        return 0;\n    long sum = 0;\n    for (int i =\
    \ 0; i < s.length(); i++){\n        if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z')\n\
    \            sum += s.charAt(i) - 'A' + 1;\n    }\n    return sum;\n}\n</code>\n\
    <|/ a |>\n<| a |>\n<code>\npublic long UpperCaseCounter(String str) {\n    if\
    \ (str==null || str.length()==0) {\n        return 0;\n    }\n    int upperCase\
    \ = 0;\n    for(int i=0;i<str.length();i++){\n        char ch=str.charAt(i);\n\
    \        if(ch>=65 && ch<=90){\n            upperCase+=1;\n        }\n    }\n\
    \    return upperCase;\n}\n</code>\n<|/ a dscore=0 tags=string,algorithm |>\n\
    <| c |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ what your code does and how it solves the problem of the question. Answers with\
    \ an explanation are usually more helpful and of better quality, and are more\
    \ likely to attract upvotes.\n<|/ c |>\n<| c |>\nWhile this code may provide a\
    \ solution to the question, it's better to add context as to why/how it works.\
    \ This can help future users learn and eventually apply that knowledge to their\
    \ own code. You are also likely to have positive feedback/upvotes from users,\
    \ when the code is explained.\n<|/ c |>\n<| c |>\nPlease edit your question to\
    \ explain why this solution is superior to others, and what the problem was.\n\
    <|/ c |>\n<| a dscore=0 tags=string,algorithm |>\nHere's a recursive version that\
    \ I find readable and easy to understand:\n<code>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsryboi2q.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmpsryboi2q.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpsryboi2q.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpsryboi2q.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmpsryboi2q.d(35): Error: unterminated
    character constant\n/tmp/tmpsryboi2q.d(51): Error: Declaration expected, not \''for\''\n/tmp/tmpsryboi2q.d(51):
    Error: no identifier for declarator i\n/tmp/tmpsryboi2q.d(51): Error: Declaration
    expected, not \''<\''\n/tmp/tmpsryboi2q.d(51): Error: no identifier for declarator
    i\n/tmp/tmpsryboi2q.d(51): Error: Declaration expected, not \''++\''\n/tmp/tmpsryboi2q.d(54):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsryboi2q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    \n\
    \    for (int i = 0; i < s.length(); i++) {\n        bool flag = false;\n    \
    \    for (int j = 0; j < s.length(); j++) {\n            if (s[i] >= 'a' && s[i]\
    \ <= 'z') \n            {\n                flag = true;\n                break;\n\
    \            }\n        }\n        if (!flag)\n        {\n            sum += s[i];\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=string,algorithm,c++\
    \ |>\n<| c |>\nThe \"solution\" is almost certainly wrong in every possible case.\
    \  The correct solution is a loop that only looks at characters that are in the\
    \ range.\n<|/ c |>\n<| c |>\nYes, it seems to be a mistake. I corrected it. Thanks\n\
    <|/ c |>\n<| a |>\nHere's a solution that is more in line with the spirit of the\
    \ problem.\nThe idea here is that each character in the input string is added\
    \ to a temporary string which is then processed.  When a character is out of range,\
    \ that temporary string is added to a running sum.  Then the temporary string\
    \ is cleared.\nThe code below is valid for C.  It won't compile in C++ because\
    \ of the way the C string is handled, and the fact that C doesn't have a standard\
    \ library for handling strings.\n<code>\n#include <stdio.h>\nunittest\n{\n   \
    \ alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsqktpq0n.d(43): Error: Declaration expected, not \''<\''\n/tmp/tmpsqktpq0n.d(52):
    Error: unterminated character constant\n/tmp/tmpsqktpq0n.d(54): Error: unterminated
    character constant\n/tmp/tmpsqktpq0n.d(54): Error: unterminated character constant\n/tmp/tmpsqktpq0n.d(61):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpsqktpq0n.d(62): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpsqktpq0n.d(63): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpsqktpq0n.d(64): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpsqktpq0n.d(65): Error: Declaration expected, not \''assert\''\n/tmp/tmpsqktpq0n.d(66):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpsqktpq0n.d(67): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpsqktpq0n.d(68): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpsqktpq0n.d(69): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsqktpq0n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++)\n    {\n        if (s[i] >= 'A' && s[i] <=\
    \ 'Z')\n        {\n            sum += s[i] - 'A' + 1;\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=c++,ascii,function,if-statement,for-loop |>\n<|\
    \ c |>\nThis doesn't work. Try `digitSum(\"aAaaaXa\")`.\n<|/ c |>\n<| a tags=c++,ascii,function,if-statement,for-loop\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpng42h32w.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmpng42h32w.d(38):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpng42h32w.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++)\n    {\n        if (s[i] >= 'A' && s[i] <=\
    \ 'Z')\n        {\n            sum += (s[i]-'A'-'a');\n        }\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=c++,recursion,c,string |>\n<| a dscore=0 tags=c++,recursion,c,string\
    \ |>\n<code>\n//C++ Code\n//Time Complexity O(n) \n//Space Complexity O(n)\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4y1j3ucq.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmp4y1j3ucq.d(46):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp4y1j3ucq.d(47): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp4y1j3ucq.d(48): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp4y1j3ucq.d(49): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp4y1j3ucq.d(50): Error: Declaration expected, not \''assert\''\n/tmp/tmp4y1j3ucq.d(51):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp4y1j3ucq.d(52): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp4y1j3ucq.d(53): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp4y1j3ucq.d(54): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4y1j3ucq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return std.math._mathop(add)(\n\
    \                std.string.to_chararray(s, std.string.chartype),\n          \
    \      std.range(0, s.length, char.digit))\n}\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the lower characters only'\n\
    \    ASCII codes.\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_0zltcgo.d(28): Error: found \''}\'' when expecting \'';\''
    following return statement\n/tmp/tmp_0zltcgo.d(29): Error: unterminated /* */
    comment\n/tmp/tmp_0zltcgo.d(46): Error: found \''EOF\'' when expecting \''}\''
    following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0zltcgo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n     long sum = 0;\n     int\
    \ pos = 0;\n     int l = 0;\nunittest\n{\n    alias candidate = digitSum;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcwbdosw6.d(28): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcwbdosw6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c in s)\n    {\n        if(isUpper(c))\n            sum += toUpper(c);\n   \
    \ }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\"the standard library\"\
    \ is something I didn't think of. Although I haven't learned it yet, this seems\
    \ like the perfect solution to my problem. Thanks!\n<|/ c |>\n<| a dscore=0 |>\n\
    Your approach would work, but there's a better way.\nAs you already know, ASCII\
    \ is just the upper-case letters plus the numbers '0', and 'A'.  So you can use\
    \ a \"trick\" like this:  \n<code>\n    static int digitSum (string s) \n    {\n\
    \        int[] asciiMap = new int[(int)'A' + (int)'0'];\n        foreach(char\
    \ c in s)\n        {\n            asciiMap[(int)c] += (int)c;\n        }\n   \
    \     return asciiMap[(int)'A'];\n    }\n</code>\nThe trick above is this line:\n\
    <code>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3_09ubop.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmp3_09ubop.d(33):
    Error: Declaration expected, not \''<\''\n/tmp/tmp3_09ubop.d(36): Error: unterminated
    character constant\n/tmp/tmp3_09ubop.d(36): Error: unterminated character constant\n/tmp/tmp3_09ubop.d(39):
    Error: unterminated character constant\n/tmp/tmp3_09ubop.d(45): Error: Declaration
    expected, not \''foreach\''\n/tmp/tmp3_09ubop.d(48): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_09ubop.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n     long sum=0L;\n     for(int\
    \ i=0; i< s.length(); i++)\n     {\n         if(s[i].isUpper())\n         {\n\
    \             sum+=s[i].codePointAt(0);\n         }\n     }\n     return sum;\n\
    }\n</code>\n<|/ a tags=string,c++,function |>\n<| c |>\nYou might want to add\
    \ an explanation of how this works.\n<|/ c |>\n<| c |>\nThank you for helping\
    \ out a beginner.\n<|/ c |>\n<| c |>\n: You're welcome. Your comment was very\
    \ helpful. :)\n<|/ c |>\n<| a |>\nHere's another solution, with C++ string literals.\
    \ And it makes use of isupper() and isdigit().\n<code>\n#include <string>\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo4d1kaw4.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmpo4d1kaw4.d(44):
    Error: unterminated character constant\n/tmp/tmpo4d1kaw4.d(47): Error: unterminated
    character constant\n/tmp/tmpo4d1kaw4.d(54): Error: Declaration expected, not \''assert\''\n/tmp/tmpo4d1kaw4.d(55):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpo4d1kaw4.d(56): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpo4d1kaw4.d(57): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpo4d1kaw4.d(58): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpo4d1kaw4.d(59): Error: Declaration expected, not \''assert\''\n/tmp/tmpo4d1kaw4.d(60):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpo4d1kaw4.d(61): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpo4d1kaw4.d(62): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo4d1kaw4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int i = 0;\n    long sum\
    \ = 0;\n    while (i < s.length()) \n    {\n        int c = std.string.toUpper(s[i]).digitValue();\n\
    \        sum += c;\n        i++;\n    }\n    return sum;\n}\n/*\nTask\n    Write\
    \ a function that takes a string as input and returns the sum of the numbers only'\n\
    \    ASCII codes.\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp15bh6a2v.d(35): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp15bh6a2v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if (s.length() == 0) \n\
    \        return 0;\n    \n    long sum = 0;\n    for (auto c: s)\n        sum\
    \ += std.ascii[c];\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2djmjzbg.d(29): Error: no identifier for declarator c\n/tmp/tmp2djmjzbg.d(29):
    Error: expression expected, not \'':\''\n/tmp/tmp2djmjzbg.d(29): Error: found
    \''s\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp2djmjzbg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for\
    \ (char c: s)\n    {\n        if (c.isUpper()) sum += std.int.toLong(c.toChar());\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| a tags=string,c++,digits,ascii\
    \ dscore=2 |>\nSince you asked for other ways to solve the problem, here are some\
    \ more:\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7k9bj4so.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmp7k9bj4so.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmp7k9bj4so.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmp7k9bj4so.d(28):
    Error: identifier expected following \''.\'', not \''int\''\n/tmp/tmp7k9bj4so.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmp7k9bj4so.d(40): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp7k9bj4so.d(41): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp7k9bj4so.d(42): Error: Declaration expected, not \''assert\''\n/tmp/tmp7k9bj4so.d(43):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7k9bj4so.d(44): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp7k9bj4so.d(45): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp7k9bj4so.d(46): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp7k9bj4so.d(47): Error: Declaration expected, not \''assert\''\n/tmp/tmp7k9bj4so.d(48):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7k9bj4so.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0L;\n    foreach\
    \ (char c in s) {\n        sum += toAscii(c) - 'A' + 1L;\n    }\n    return sum;\n\
    }\n</code>\n<|/ a |>\n<| a tags=string,c++ |>\nA very easy way to do the same\
    \ thing using recursion is\n<code>\n#include<iostream>\nusing namespace std;\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp02a5d_e8.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmp02a5d_e8.d(31):
    Error: Declaration expected, not \''<\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp02a5d_e8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        char letter = s[i];\n        sum\
    \ += digitValue(letter);\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    Please provide additional details in your answer. As it's currently written, it's\
    \ hard to understand your solution.\n<|/ c |>\n<| c |>\n: I thought this was self-explanatory.\
    \ What do you want me to elaborate on further?\n<|/ c |>\n<| a dscore=0 tags=sum,c#,string\
    \ |>\nYou can do this with two lines of Linq code:\n<code>\nstring input = \"\
    Hello World!\";\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoj_d6719.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmpoj_d6719.d(35):
    Error: unterminated character constant\n/tmp/tmpoj_d6719.d(35): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoj_d6719.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  long sum = 0;\n  for (int\
    \ i = 0; i < s.length(); i++) {\n    long value = toupper(s[i]);\n    if (value\
    \ > '9') {\n      sum += value - '0';\n    }\n  }\n  return sum;\n}\n</code>\n\
    <|/ a tags=c++ |>\n<| c |>\nThank you for your answer! Unfortunately I can't use\
    \ std library to solve the problem, but I'm still learning it so I appreciate\
    \ it!\n<|/ c |>\n<| a tags=c++ |>\nYou can do something like this:\n<code>\nstring\
    \ s=\"hello\";\nlong sum = 0;\nfor (int i = 0; i< s.length(); i++)\n{\n    long\
    \ value = toupper(s[i]);\n    if (value > '9')\n    {\n        sum += value -\
    \ '0';\n    }\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\nHere's a way to do it in\
    \ one line:\n<code>\nlong sum(string s) {\n    return std::accumulate(std::begin(s),\
    \ std::end(s), 0L, [](long s, char c) {\n        return s + toupper(c) - '0';\n\
    \    });\n}\n</code>\nIt uses a lambda (a functor) which sums a value to a character\
    \ value, and then subtracts the ASCII code for '0'.\n<|/ a tags=c++ dscore=0 |>\n\
    <| a tags=c++ dscore=0 |>\nYou can use recursion\n<code>\nlong digitSum(const\
    \ string& s){\n    if(s.length() == 0) return 0;\n    long result = 0;\n    for(char\
    \ c : s){\n        result += (toupper(c) - '0') > 9 ? toupper(c) - '0' : 0;\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\nHere is my\
    \ solution: It uses a char array and recursion but it is a bit verbose.\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;\nlong digitSum(string\
    \ s) {\n    long sum = 0;\n    char tmp[s.length()];\n    for(unsigned int i =\
    \ 0; i < s.length(); i++) {\n        tmp[i] = toupper(s[i]);\n    }\n    if(tmp[0]\
    \ > '9') {\n        tmp = tmp - '0';\n    }\n    digitSum(tmp, sum);\n    return\
    \ sum;\n}\nlong digitSum(char tmp[], long sum) {\n    sum += tmp > '9' ? tmp -\
    \ '0' : 0;\n    if(tmp[0] > '9') {\n        tmp = tmp - '0';\n        digitSum(tmp,\
    \ sum);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmoi_jorz.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmpmoi_jorz.d(37):
    Error: unterminated character constant\n/tmp/tmpmoi_jorz.d(37): Error: unterminated
    character constant\n/tmp/tmpmoi_jorz.d(44): Error: Declaration expected, not \''for\''\n/tmp/tmpmoi_jorz.d(44):
    Error: no identifier for declarator i\n/tmp/tmpmoi_jorz.d(44): Error: Declaration
    expected, not \''<\''\n/tmp/tmpmoi_jorz.d(44): Error: no identifier for declarator
    i\n/tmp/tmpmoi_jorz.d(44): Error: Declaration expected, not \''++\''\n/tmp/tmpmoi_jorz.d(47):
    Error: Declaration expected, not \''if\''\n/tmp/tmpmoi_jorz.d(50): Error: unrecognized
    declaration\n/tmp/tmpmoi_jorz.d(55): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmoi_jorz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n   long sum=0;\n   char ch;\n\
    \   foreach(ch, s)\n      sum+=ord(ch);\n   return sum;\n}\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4sxuhwqq.d(27): Error: no identifier for declarator s\n/tmp/tmp4sxuhwqq.d(27):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmp4sxuhwqq.d(28): Error: found
    \'';\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4sxuhwqq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if ( s.Length == 0 )\n\
    \    {\n        return 0L;\n    }\n    int sum = 0L;\n    int startIndex = 0;\n\
    \    char currentChar = s[0];\n    \n    for (int i = 0; i < s.Length; ++i)\n\
    \    {\n        if ( currentChar >= 'A' &&  currentChar <= 'Z')\n        {\n \
    \           sum += (currentChar - 'A') * pow(26L,i);\n            startIndex =\
    \ i+1;\n        }\n        currentChar = s[i];\n    }\n    return sum + digitSum(s.Substring(startIndex));\n\
    }\n</code>\n<|/ a tags=c#,string,ascii,character |>\n<| a dscore=2 tags=c#,string,ascii,character\
    \ |>\nAn improved version of's answer. Using LINQ and extension methods.\n<code>\n\
    public static string DigitSum(this string input)\n{\n    if (input == null) return\
    \ null;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoeelphxv.d(44): Error: Declaration expected, not \''<\''\n/tmp/tmpoeelphxv.d(47):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpoeelphxv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong sum = 0;\n\tint n =\
    \ s.length();\n\tfor(int i = 0; i < n; i++) \n\t{\n\t\tsum += toUpper(s[i]);\n\
    \t}\n\treturn sum;\n}\n'''\nunittest\n{\n    alias candidate = digitSum;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbic4jqfw.d(33): Error: unterminated character constant\n/tmp/tmpbic4jqfw.d(33):
    Error: Declaration expected, not \''19853152U\''\n/tmp/tmpbic4jqfw.d(33): Error:
    unterminated character constant\n/tmp/tmpbic4jqfw.d(38): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpbic4jqfw.d(39): Error: Declaration expected, not \''assert\''\n/tmp/tmpbic4jqfw.d(40):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpbic4jqfw.d(41): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpbic4jqfw.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpbic4jqfw.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpbic4jqfw.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmpbic4jqfw.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpbic4jqfw.d(46): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbic4jqfw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    \n\
    \    foreach ( char c in s )\n    {\n        bool isDigit = (c >= '0') && (c <=\
    \ '9');\n        \n        if ( (isDigit) == false )\n        {\n            continue;\n\
    \        }\n        \n        sum += toChar(std.ascii.toUpper(c));\n    }\n  \
    \  \n    return sum;\n}\n</code>\n<|/ a tags=function,string,loops,c# dscore=2\
    \ |>\n<| a dscore=1 |>\nYou can use char.IsDigit for this task:\n<code>\npublic\
    \ long digitSum(string s)\n{\n    long sum = 0;\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu28kk0fo.d(27): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpu28kk0fo.d(41):
    Error: Declaration expected, not \''<\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpu28kk0fo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for(auto iter = s.rbegin(); iter != s.rend(); iter++)\n    {\n        if(*iter\
    \ >= 'A' && *iter <= 'Z')\n        {\n            result += *iter - 'A' + 1;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp04mvqems.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ \n    for (int i = 0; i < s.length(); i++) {\n        char c = s[i];\n     \
    \   int value = c - 'A';\n        \n        if (value > 0 && (value & 0x4000))\
    \ {\n            value -= 26;\n        }\n        \n        result += (value <<\
    \ i);\n    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5flvsk1u.d(37): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5flvsk1u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    int\
    \ i = 0;\n    for (; i + 1 < s.length(); i++) {\n        if (std.ord(s.subs[i])\
    \ > std.ord(s.subs[i + 1])) {\n            sum += std.ord(s.subs[i + 1]);\n  \
    \          i++;\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=stl,c++,algorithm,string\
    \ |>\n<| c |>\nThanks for the answer! But can you please explain why you are using\
    \ 'int' for storing sum? Why not 'long long'?\n<|/ c |>\n<| c |>\nThe `int` type\
    \ has less chance of overflowing than the `long long` type, and it also has some\
    \ additional advantages such as being able to store larger numbers more easily.\n\
    <|/ c |>\n<| c |>\nAlso, `int` can overflow if the sum is too big (a lot more\
    \ digits than the `long long` can hold).\n<|/ c |>\n<| c |>\nOh! I didn't know\
    \ that. Thanks again! :)\n<|/ c |>\n<| c |>\nYou're not even using the `sum` variable,\
    \ just the `sum` variable you declared in the function...\n<|/ c |>\n<| a tags=stl,c++,algorithm,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0cdjcljs.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmp0cdjcljs.d(38):
    Error: unterminated character constant\n/tmp/tmp0cdjcljs.d(38): Error: unterminated
    character constant\n/tmp/tmp0cdjcljs.d(38): Error: unterminated character constant\n/tmp/tmp0cdjcljs.d(38):
    Error: unterminated character constant\n/tmp/tmp0cdjcljs.d(47): Error: unterminated
    character constant\n/tmp/tmp0cdjcljs.d(50): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0cdjcljs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  long sum = 0;\n  int len\
    \ = s.length();\n  for (int i = 0; i < len; ++i)\n  {\n    if(s[i] >= 'A' && s[i]\
    \ <= 'Z')\n    {\n      int num = s - 'A' + 10;\n      sum += num;\n    }\n  \
    \  else\n    {\n      sum += s[i];\n    }\n  }\n  return sum;\n}\nunittest\n{\n\
    \    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_kvxt5tx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return s.chars().filter(\
    \ (int i) -> isUpper(i) ).map( i -> i*64 ).sum();\n}\n</code>\n<|/ a tags=java,algorithm\
    \ dscore=0 |>\n<| c |>\nThank you very much for your answer i will try this out\n\
    <|/ c |>\n<| c |>\nYeah, this is basically the same as the solution I suggested,\
    \ only written with a stream instead of a loop. Also with streams you can avoid\
    \ creating intermediate collections. Also, you could replace the lambda with something\
    \ that does `if (isUpper(i)) return i*64;` but then you have the unnecessary conversion\
    \ to `Long`.\n<|/ c |>\n<| c |>\nBut this code is only working if the string is\
    \ small can you explain more about streams\n<|/ c |>\n<| c |>\nYes, it's only\
    \ working if the string is small because streams can handle a lot more data. Streams\
    \ are just collections of data. If you think about them as a stream of data you\
    \ can filter and map on it just like a sequence of data, just with different functions\
    \ to process each element. That's what the stream does for you.\n<|/ c |>\n<|\
    \ c |>\nWhat is `s.chars().filter( (int i) -> isUpper(i) ).map( i -> i*64 ).sum();`\
    \ doing? I understand it returns a long but why is `sum` used and why do we use\
    \ `filter`? I understand that the sum of chars is 64, but how does `sum` do this?\
    \ Thanks\n<|/ c |>\n<| a tags=java,algorithm |>\nA straight forward solution using\
    \ Java-8 and streams:\n<code>\nlong upperSum = Arrays.stream(\"The quick brown\
    \ fox jumps over the lazy dog\")\n            .map(String::toCharArray)\n    \
    \        .map(ch -> ch)\n            .filter(Character::isUpper)\n           \
    \ .mapToInt(Character::getNumericValue)\n            .sum();\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis is just the same as my solution, just written as a stream\
    \ instead of a loop. This code will also work with a huge amount of data.\n<|/\
    \ c |>\n<| c |>\nI agree with you. The OP did not mention whether he has to support\
    \ huge data.\n<|/ c |>\n<| a |>\n<code>\npublic class JavaUpperCase {\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3npfv4jc.d(25): Error: found \''i\'' when expecting \''.\''
    following int\n/tmp/tmp3npfv4jc.d(25): Error: found \'')\'' when expecting identifier
    following \''int.\''\n/tmp/tmp3npfv4jc.d(25): Error: expression expected, not
    \''>\''\n/tmp/tmp3npfv4jc.d(25): Error: found \''isUpper\'' when expecting \'')\''\n/tmp/tmp3npfv4jc.d(25):
    Error: expression expected, not \''>\''\n/tmp/tmp3npfv4jc.d(25): Error: found
    \''i\'' when expecting \'',\''\n/tmp/tmp3npfv4jc.d(27): Error: Declaration expected,
    not \''<\''\n/tmp/tmp3npfv4jc.d(39): Error: unterminated character constant\n/tmp/tmp3npfv4jc.d(39):
    Error: unterminated character constant\n/tmp/tmp3npfv4jc.d(53): Error: Declaration
    expected, not \''<\''\n/tmp/tmp3npfv4jc.d(68): Error: Declaration expected, not
    \''assert\''\n/tmp/tmp3npfv4jc.d(69): Error: Declaration expected, not \''assert\''\n/tmp/tmp3npfv4jc.d(70):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp3npfv4jc.d(71): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp3npfv4jc.d(72): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp3npfv4jc.d(73): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp3npfv4jc.d(74): Error: Declaration expected, not \''assert\''\n/tmp/tmp3npfv4jc.d(75):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp3npfv4jc.d(76): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3npfv4jc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    map<int, long> sum;\n\
    \    for (auto i : s) {\n        sum[i.to<long>()] += i.upper();\n    }\n    return\
    \ std.max(sum.values());\n}\n</code>\nIt took me a second to write this (I'm fairly\
    \ new to coding), but I really thought about this and decided that it was a good\
    \ way to solve your problem.\nI also made a little helper function that converts\
    \ strings to numbers and back.\nIt was a bit long-winded but it was actually a\
    \ pretty simple function to write.\nI hope that makes sense.\n<|/ a tags=c++11,c++\
    \ |>\n<| c |>\nI think you meant `map<char, long>` instead of `map<int, long>`,\
    \ so you get to see the whole alphabet.\n<|/ c |>\n<| c |>\nI meant `map<char,\
    \ long>`, but I'll edit my post to make it more clear. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| c |>\nThanks for your help, your answer was helpful. Your\
    \ method also worked fine and i decided to use the one you provided. But i decided\
    \ to go with an algorithm that i thought would be more efficient and came up with.\
    \ Thanks for your help\n<|/ c |>\n<| a tags=c++11,c++ |>\nI think you should store\
    \ all the ASCII codes in an array and use it to find each individual character's\
    \ ASCII code\n<|/ a dscore=0 |>\n<| c |>\nThis was my first thought, but i couldn't\
    \ think of how to do it since i wanted to store all the numbers in a string\n\
    <|/ c |>\n<| a tags=c++11,c++ |>\n<code>\nlong GetSum(std::string input) {\n \
    \  std::string num;\n   long sum = 0;\n   int i = 0, sum = 0; //counters\n   int\
    \ length = input.length();\n   while ((i = input.find(' ', i)) != std::string::npos)\
    \ //find first space\n       num = num.substr(i, input.length() - i); //copy the\
    \ string between spaces\n   for (int j = 0; j < num.length(); j++) //for each\
    \ char after space\n       sum += num[j] - '0'; //get ASCII code\n   return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <map>\n#include <vector>\n#include <string>\nusing namespace std;\n//Function\
    \ returns sum of characters present in string \nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2023zbqu.d(25): Error: found \'',\'' when expecting \''.\''
    following int\n/tmp/tmp2023zbqu.d(25): Error: found \''long\'' when expecting
    identifier following \''int.\''\n/tmp/tmp2023zbqu.d(25): Error: found \''>\''
    when expecting \'';\'' following statement\n/tmp/tmp2023zbqu.d(26): Error: no
    identifier for declarator i\n/tmp/tmp2023zbqu.d(26): Error: expression expected,
    not \'':\''\n/tmp/tmp2023zbqu.d(26): Error: found \''s\'' when expecting \'';\''
    following for condition\n/tmp/tmp2023zbqu.d(27): Error: found \''>\'' when expecting
    \''.\'' following long\n/tmp/tmp2023zbqu.d(27): Error: found \''(\'' when expecting
    identifier following \''long.\''\n/tmp/tmp2023zbqu.d(27): Error: found \'')\''
    when expecting \'']\''\n/tmp/tmp2023zbqu.d(27): Error: found \'']\'' when expecting
    \'';\'' following statement\n/tmp/tmp2023zbqu.d(27): Error: found \''+=\'' instead
    of statement\n/tmp/tmp2023zbqu.d(31): Error: Declaration expected, not \''<\''\n/tmp/tmp2023zbqu.d(32):
    Error: unterminated character constant\n/tmp/tmp2023zbqu.d(41): Error: unterminated
    character constant\n/tmp/tmp2023zbqu.d(47): Error: unterminated character constant\n/tmp/tmp2023zbqu.d(50):
    Error: unterminated character constant\n/tmp/tmp2023zbqu.d(59): Error: Declaration
    expected, not \''while\''\n/tmp/tmp2023zbqu.d(61): Error: Declaration expected,
    not \''for\''\n/tmp/tmp2023zbqu.d(61): Error: no identifier for declarator j\n/tmp/tmp2023zbqu.d(61):
    Error: Declaration expected, not \''<\''\n/tmp/tmp2023zbqu.d(61): Error: no identifier
    for declarator j\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2023zbqu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for (int i = 0; i < s.length; ++i)\n    {\n        result += s.codeAt(i) - 64;\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis works\
    \ nicely as long as you don't have non-letters before the start of the string.\n\
    <|/ c |>\n<| a tags=c++,string,algorithm |>\n<code>\nstring s = \"ABCd\";\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpguef0wq7.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmpguef0wq7.d(35):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpguef0wq7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) \n    {\n        int c = s.codePointAt(i);\n\
    \        // println(c+\": \" + std.typecons.char(c));\n        if (c>= 'A' &&\
    \ c <= 'Z') \n        {\n            sum += c - 'A' + 1;\n        }\n    }\n \
    \   return sum;\n}\n</code>\n<|/ a tags=char,c++,string |>\n<| a tags=char,c++,string\
    \ |>\nOne option is to find the indexes of the non digits, and then sum those\
    \ indexes:\n<code>\n#include <algorithm>\n#include <iostream>\n#include <string>\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_jdclwmy.d(37): Error: Declaration expected, not \''<\''\n/tmp/tmp_jdclwmy.d(49):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp_jdclwmy.d(50): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp_jdclwmy.d(51): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp_jdclwmy.d(52): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp_jdclwmy.d(53): Error: Declaration expected, not \''assert\''\n/tmp/tmp_jdclwmy.d(54):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp_jdclwmy.d(55): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp_jdclwmy.d(56): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp_jdclwmy.d(57): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_jdclwmy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return std.math.toInt(s.chars()).sum();\n\
    }\n</code>\n<|/ a tags=char,ascii,string,python,type-conversion |>\n<| a dscore=1\
    \ |>\nThis should work:\n<code>\n>>> sum(map(ord, 'AB'))\n65\n</code>\nOr:\n<code>\n\
    >>> sum(c in 'ABC' for c in 'AB')\n65\n</code>\n<|/ a tags=char,ascii,string,python,type-conversion\
    \ |>\n<| c |>\n+1 for `ord` - but you should note that `ord` is an alias for `chr`\
    \ on Python 2.\n<|/ c |>\n<| a tags=char,ascii,string,python,type-conversion dscore=0\
    \ |>\n<code>\ndef sumChars(s):\n    return sum([ord(c) for c in s])\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdz0lor36.d(27): Error: Declaration expected, not \''<\''\n/tmp/tmpdz0lor36.d(32):
    Error: unterminated character constant\n/tmp/tmpdz0lor36.d(32): Error: unterminated
    character constant\n/tmp/tmpdz0lor36.d(37): Error: unterminated character constant\n/tmp/tmpdz0lor36.d(37):
    Error: unterminated character constant\n/tmp/tmpdz0lor36.d(37): Error: unterminated
    character constant\n/tmp/tmpdz0lor36.d(37): Error: unterminated character constant\n/tmp/tmpdz0lor36.d(52):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpdz0lor36.d(53): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpdz0lor36.d(54): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpdz0lor36.d(55): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpdz0lor36.d(56): Error: Declaration expected, not \''assert\''\n/tmp/tmpdz0lor36.d(57):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpdz0lor36.d(58): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpdz0lor36.d(59): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpdz0lor36.d(60): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdz0lor36.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tint sum = 0;\n\tforeach(char\
    \ c in s) {\n\t\tif( (int)c <= 127 ) {\n\t\t\tsum += (int)c;\n\t\t}\n\t}\n\treturn\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplt25ow2p.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmplt25ow2p.d(27):
    Error: C style cast illegal, use cast(int)c\n/tmp/tmplt25ow2p.d(28): Error: C
    style cast illegal, use cast(int)c\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmplt25ow2p.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach\
    \ (int d in s.chars()) \n    {\n        if(d >= 'A' && d <= 'Z')\n        {\n\
    \            sum += (d - 'A');\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nA very nice solution, but I think you mean `d >= 'A'\
    \ && d <= 'Z'` -- it shouldn't be `d >= 'a' && d <= 'z'`.\n<|/ c |>\n<| a dscore=0\
    \ |>\nThe answer you accepted is not correct - the original code was summing all\
    \ digits. In other words, it counts the number of uppercase letters in the string,\
    \ but does not sum them.\nTo sum all digits in the string, you can replace all\
    \ non-digit characters with 0, then sum the string:\n<code>\nunittest\n{\n   \
    \ alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5k_rq99e.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmp5k_rq99e.d(35):
    Error: Declaration expected, not \''<\''\n/tmp/tmp5k_rq99e.d(38): Error: unterminated
    character constant\n/tmp/tmp5k_rq99e.d(48): Error: Declaration expected, not \''assert\''\n/tmp/tmp5k_rq99e.d(49):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp5k_rq99e.d(50): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp5k_rq99e.d(51): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp5k_rq99e.d(52): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp5k_rq99e.d(53): Error: Declaration expected, not \''assert\''\n/tmp/tmp5k_rq99e.d(54):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp5k_rq99e.d(55): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp5k_rq99e.d(56): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5k_rq99e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    map<char, int> m;\n  \
    \  for(int i=0; i<s.length(); i++) {\n        if(s[i].isupper()) {\n         \
    \   m[s[i]]++;\n        }\n    }\n    long ret = 0;\n    for(map<char, int>::iterator\
    \ it=m.begin(); it!=m.end(); it++) {\n        ret = ret + it->second;\n    }\n\
    \    return ret;\n}\n</code>\n<|/ a tags=string,algorithm,c++ |>\n<| a dscore=0\
    \ tags=string,algorithm,c++ |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <sstream>\n#include <algorithm>\nusing namespace std;\nunittest\n{\n\
    \    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbk_wwy_w.d(25): Error: found \'',\'' when expecting \''.\''
    following char\n/tmp/tmpbk_wwy_w.d(25): Error: found \''int\'' when expecting
    identifier following \''char.\''\n/tmp/tmpbk_wwy_w.d(25): Error: found \''>\''
    when expecting \'';\'' following statement\n/tmp/tmpbk_wwy_w.d(32): Error: found
    \'',\'' when expecting \''.\'' following char\n/tmp/tmpbk_wwy_w.d(32): Error:
    found \''int\'' when expecting identifier following \''char.\''\n/tmp/tmpbk_wwy_w.d(32):
    Error: found \''>\'' when expecting \'';\'' following statement\n/tmp/tmpbk_wwy_w.d(32):
    Error: expression expected, not \'':\''\n/tmp/tmpbk_wwy_w.d(32): Error: found
    \'':\'' when expecting \'';\'' following for condition\n/tmp/tmpbk_wwy_w.d(32):
    Error: found \''it\'' when expecting \'')\''\n/tmp/tmpbk_wwy_w.d(32): Error: found
    \''=\'' instead of statement\n/tmp/tmpbk_wwy_w.d(32): Error: found \'')\'' when
    expecting \'';\'' following statement\n/tmp/tmpbk_wwy_w.d(33): Error: expression
    expected, not \''>\''\n/tmp/tmpbk_wwy_w.d(33): Error: found \''second\'' when
    expecting \'';\'' following statement\n/tmp/tmpbk_wwy_w.d(37): Error: Declaration
    expected, not \''<\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbk_wwy_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ int i;\n    for(i = 0; i<s.length(); i++){\n        result += (s[i]-'A');\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nYes, this looks more\
    \ \"functional\" and less \"imperative\". Good thing is there are tools like Haskell\
    \ and F# which help you avoid this.\n<|/ c |>\n<| c |>\n\"*the sum of ASCII characters\
    \ only.*\" doesn't sound like that at all...\n<|/ c |>\n<| c |>\n: yes, it was\
    \ a typo. Thanks for pointing it out. Fixed now.\n<|/ c |>\n<| a tags=c++,ascii,char\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ogrju68.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmp6ogrju68.d(38):
    Error: unterminated character constant\n/tmp/tmp6ogrju68.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp6ogrju68.d(53): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp6ogrju68.d(54): Error: Declaration expected, not \''assert\''\n/tmp/tmp6ogrju68.d(55):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp6ogrju68.d(56): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp6ogrju68.d(57): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp6ogrju68.d(58): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp6ogrju68.d(59): Error: Declaration expected, not \''assert\''\n/tmp/tmp6ogrju68.d(60):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ogrju68.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (auto i : s) \n    {\n        sum += (int)std.char.digit(i);\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptz_he8h8.d(26): Error: no identifier for declarator i\n/tmp/tmptz_he8h8.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmptz_he8h8.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmptz_he8h8.d(28):
    Error: identifier expected following \''.\'', not \''char\''\n/tmp/tmptz_he8h8.d(28):
    Error: C style cast illegal, use cast(int)std.digit(i)\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmptz_he8h8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong sum = 0;\n\tfor(int\
    \ i = 0; i < s.length(); ++i)\n\t{\n\t\tint codePoint = s.codePointAt(i);\n\t\t\
    if (codePoint < 64)\n\t\t{\n\t\t\tsum += codePoint;\n\t\t}\n\t}\n\treturn sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp87frwl11.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++)\n    {\n        string tmp = s.substr(i, 1);\n\
    \        sum += std.toChar(tmp).asChar().toUpperCase() - 'A' + 10;\n    }\n  \
    \  return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n/*\n\
    Task\nWrite a function that takes a string as input and returns the sum of the\
    \ upper characters only'\nASCII codes.\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg5tyxx1z.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmpg5tyxx1z.d(37):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg5tyxx1z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (auto c : s) {\n        sum += toInt(c);\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpygq_ia5r.d(26): Error: no identifier for declarator c\n/tmp/tmpygq_ia5r.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpygq_ia5r.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpygq_ia5r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  long ans = 0;\n  for(int\
    \ i = 0; i < s.length(); i++)\n  {\n    if(char.IsDigit(s[i])) ans += (int)s[i];\n\
    \  }\n  return ans;\n}\n/*\nTask\n    Write a function that takes a string as\
    \ input and returns the number of digits in it.\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkro690fu.d(28): Error: C style cast illegal, use cast(int)s[i]\n/tmp/tmpkro690fu.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkro690fu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(auto\
    \ i : s)\n    {\n        long value = std.typecons.chartot(i) - 'A' + 1;\n   \
    \     sum += value;\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<|\
    \ a |>\nThis isn't the best solution, but I hope it helps you learn something.\
    \ I think this is called Haskell as it is purely functional.\n<code>\nimport Data.List\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpifqqze4g.d(26): Error: no identifier for declarator i\n/tmp/tmpifqqze4g.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpifqqze4g.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpifqqze4g.d(33):
    Error: Declaration expected, not \''<\''\n/tmp/tmpifqqze4g.d(36): Error: unterminated
    character constant\n/tmp/tmpifqqze4g.d(43): Error: Declaration expected, not \''assert\''\n/tmp/tmpifqqze4g.d(44):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpifqqze4g.d(45): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpifqqze4g.d(46): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpifqqze4g.d(47): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpifqqze4g.d(48): Error: Declaration expected, not \''assert\''\n/tmp/tmpifqqze4g.d(49):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpifqqze4g.d(50): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpifqqze4g.d(51): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpifqqze4g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum=0;\n    for(int\
    \ i=0;i<s.length();i++){\n        if(s[i]>=65 && s[i]<=90){\n            sum+=s[i]-65;\n\
    \        }\n        else{\n            sum+=s[i] - 97;\n        }\n    }\n   \
    \ return sum;\n}\n</code>\n<|/ a tags=string,ascii,char,c# |>\n<| c |>\nYou could\
    \ use `char.IsUpper` instead of `char.IsLetter` which is probably faster.\n<|/\
    \ c |>\n<| c |>\nThanks for this - it definitely got me on the right track. However,\
    \ this returns incorrect answers for some strings. For example, for \"aAbA\" it\
    \ returns 131, when it should be 153 (the sum of the two A's). Any suggestions?\n\
    <|/ c |>\n<| a tags=string,ascii,char,c# dscore=2 |>\n<code>\nstring str = \"\
    aAbA\";\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp12kwmvjq.d(36): Error: Declaration expected, not \''<\''\n/tmp/tmp12kwmvjq.d(42):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp12kwmvjq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        if (char.isUpper(s[i]))\n      \
    \      sum += char.digit(s[i]);\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0\
    \ tags=string,c++,arrays |>\n<| c |>\nAwesome! Thank you!\n<|/ c |>\n<| c |>\n\
    This only works for ASCII characters. If you pass it a character that does not\
    \ belong to ASCII it will fail. For example, `digitSum(\"\u3042\")` will return\
    \ `25` because the character `'\u3042'` is not part of the ASCII character set.\
    \ This won't work for other languages because they use Unicode codepoints instead\
    \ of ASCII codepoints.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string.h>\nusing namespace std;\nunittest\n{\n    alias candidate =\
    \ digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqez2gz43.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmpqez2gz43.d(38):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpqez2gz43.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  long res = 0;\n  for(int\
    \ i = 0;i < s.length();i++) {\n    char c = s[i];\n    if(isUpper(c)) {\n    \
    \  res+=tolower(c);\n    }\n  }\n  return res;\n}\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes using the ASCII table and std.typecons.\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj8ky1k0r.d(34): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpj8ky1k0r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    foreach(char\
    \ c, s) {\n        sum += std.math.toUpper(c) - std.math.toUpper('a');\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1r887g2e.d(26): Error: no identifier for declarator s\n/tmp/tmp1r887g2e.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmp1r887g2e.d(29): Error: found
    \''return\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1r887g2e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (auto c : s)\n    {\n        // check if character is uppercase and add its\
    \ ASCII code\n        bool upper = isupper(c);\n        if (upper)\n         \
    \   sum += c;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr5_jhvj2.d(26): Error: no identifier for declarator c\n/tmp/tmpr5_jhvj2.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpr5_jhvj2.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpr5_jhvj2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if(s.length()==0) return\
    \ 0L;\n    long sum=0;\n    foreach(char ch: s)\n    {\n        if(isUpper(ch))\
    \ \n            sum+=ch-'A'; \n    }\n    return sum;\n}\n</code>\n<|/ a |>\n\
    <| a dscore=0 tags=c++,stl |>\n<code>\nlong digitSum(string s) {\n    long sum\
    \ = 0;\n    long temp = 1;\n    long counter = 0;\n    for(int i = 0; i < s.length();\
    \ i++) {\n        counter = 0;\n        while(s[i] == s[i] && i != 0) {\n    \
    \        counter++;\n            i--;\n        }\n        temp = (temp * counter)\
    \ + s[i] - '0';\n        sum += temp;\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a |>\n<| a |>\n<code>\nlong digitSum(string s){\n    long ans = 0;\n    for(int\
    \ i = 0; i < s.length(); i++){\n        ans += (s[i]>='a' && s[i]<='z') ? toupper(s[i])\
    \ - 'A' : s[i]-'0';\n    }\n    return ans;\n}\n</code>\n<|/ a tags=c++,stl dscore=0\
    \ |>\n<| c |>\nThis solution will work only for lowercase alphabets.\n<|/ c |>\n\
    <| c |>\nThat's not true. `toupper(s[i]) - 'A'` will return 0 for any character\
    \ `'Z'` - `'A'`.\n<|/ c |>\n<| a tags=c++,stl |>\n<code>\n#include <iostream>\n\
    #include <bits/stdc++.h>\nunittest\n{\n    alias candidate = digitSum;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n \
    \   assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyjw4z3_a.d(27): Error: found \'':\'' when expecting \'';\''\n/tmp/tmpyjw4z3_a.d(34):
    Error: Declaration expected, not \''<\''\n/tmp/tmpyjw4z3_a.d(42): Error: Declaration
    expected, not \''for\''\n/tmp/tmpyjw4z3_a.d(42): Error: no identifier for declarator
    i\n/tmp/tmpyjw4z3_a.d(42): Error: Declaration expected, not \''<\''\n/tmp/tmpyjw4z3_a.d(42):
    Error: no identifier for declarator i\n/tmp/tmpyjw4z3_a.d(42): Error: Declaration
    expected, not \''++\''\n/tmp/tmpyjw4z3_a.d(44): Error: Declaration expected, not
    \''while\''\n/tmp/tmpyjw4z3_a.d(46): Error: no identifier for declarator i\n/tmp/tmpyjw4z3_a.d(46):
    Error: Declaration expected, not \''--\''\n/tmp/tmpyjw4z3_a.d(47): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyjw4z3_a.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    foreach(i,\
    \ s) {\n        char c = tolower(s[i]);\n        sum += std.tointeger(c);\n  \
    \  }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n \
    \   assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyti0lkb2.d(26): Error: no identifier for declarator s\n/tmp/tmpyti0lkb2.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpyti0lkb2.d(30): Error: found
    \''return\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpyti0lkb2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if (s.length() == 0)\n\
    \        return 0L;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6qt4aryd.d(27): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6qt4aryd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tint sum = 0L;\n\tfor(auto\
    \ i : s)\n\t{\n\t\tsum += std.ascii.to.uint(i);\n\t}\n\treturn sum;\n}\n</code>\n\
    And a version that does the summing in place:\n<code>\nimport std.algorithm;\n\
    import std.array;\nimport std.algorithm;\nimport std.algorithm;\nimport std.math;\n\
    import std.string;\nimport std.conv;\nimport std.typecons;\nimport std.math;\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6q8ukz02.d(26): Error: no identifier for declarator i\n/tmp/tmp6q8ukz02.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmp6q8ukz02.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmp6q8ukz02.d(28):
    Error: identifier expected following \''.\'', not \''uint\''\n/tmp/tmp6q8ukz02.d(32):
    Error: Declaration expected, not \''<\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp6q8ukz02.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length; i++) \n    {\n        sum = (sum + int(s[i]) - int(s[i])\
    \ * int(s[i])) % 10;\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,string\
    \ |>\n<| c |>\nThis solution doesn't work with numbers that begin with a 0 like\
    \ `0x23` - it returns negative values.\n<|/ c |>\n<| c |>\nThis solution seems\
    \ to work for all your examples.\n<|/ c |>\n<| c |>\n: You're right. My bad. I've\
    \ added a fix for that.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing System;\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptdzdavj1.d(28): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmptdzdavj1.d(28): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmptdzdavj1.d(28): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmptdzdavj1.d(28): Error: found \''(\'' when expecting
    \''.\'' following int\n/tmp/tmptdzdavj1.d(28): Error: found \'')\'' when expecting
    \'';\'' following statement\n/tmp/tmptdzdavj1.d(28): Error: found \'')\'' instead
    of statement\n/tmp/tmptdzdavj1.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmptdzdavj1.d(35):
    Error: unterminated character constant\n/tmp/tmptdzdavj1.d(41): Error: unterminated
    character constant\n/tmp/tmptdzdavj1.d(41): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptdzdavj1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for(int i = 0; i < s.length; i++)\n    {\n        if(char.IsLetter(s[i]))\n\
    \            result += char.GetNumericValue(s[i]);\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| a tags=c#,ascii,math,c++,python |>\nThe code I wrote\
    \ in c# would look like this:\n<code>\nusing System;\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp994rz0c5.d(33): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp994rz0c5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0L;\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(char2int(s[i]) > 65 && char2int(s[i])\
    \ < 91) {\n            sum += char2int(s[i]);\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=char,c++,int,string |>\n<| a dscore=2 |>\n<code>\n#include\
    \ <iostream>\n#include <string.h>\nusing namespace std;\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgnc5bgdu.d(33): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgnc5bgdu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    \n\
    \    for (auto c : s)\n    {\n        if (c.isUpper()) sum += c.codePointAt(0);\n\
    \    }\n    \n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc8q0bgez.d(27): Error: no identifier for declarator c\n/tmp/tmpc8q0bgez.d(27):
    Error: expression expected, not \'':\''\n/tmp/tmpc8q0bgez.d(27): Error: found
    \''s\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpc8q0bgez.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return std.string.digitSum(s);\n\
    }\n/*\nTask\n    Write a function that takes a string as input and returns the\
    \ sum of the lower characters only'\n    ASCII codes.\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphjlf8q56.d(27): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmphjlf8q56.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    string upperStr = s.to_lowercase();\n\
    \    long sum = 0;\n    for (auto c : upperStr)\n        sum += std.math.remainder(std.unicode.ord_value(c),\
    \ 10);\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxis0ifee.d(27): Error: no identifier for declarator c\n/tmp/tmpxis0ifee.d(27):
    Error: expression expected, not \'':\''\n/tmp/tmpxis0ifee.d(27): Error: found
    \''upperStr\'' when expecting \'';\'' following for condition\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpxis0ifee.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(int\
    \ i=0;i<s.length();i++){\n        if(s[i]>='a' && s[i]<='z')\n        {\n    \
    \        sum+=s[i]-'a'+1;\n        }\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=string,c#,linq |>\n<| a tags=string,c#,linq dscore=0 |>\nI love LINQ,\
    \ but this isn't the place for it. \n<code>\nlong result = s.Sum(c => (c >= 'a'\
    \ && c <= 'z') ? c - 'a' + 1 : 0);\n</code>\nThe above is actually a lot more\
    \ readable than most of the other solutions.\n<|/ a |>\n<| c |>\n\"I love LINQ\"\
    \ - I don't like it so much either, but sometimes we really do have to do things\
    \ with LINQ :)\n<|/ c |>\n<| a |>\n<code>\nstring str = \"abcABCD\";\nvar result\
    \ = str.Where(a => a >= 'a' && a <= 'z').Sum(a => (a >= 'a') ? a - 'a' : 0);\n\
    </code>\n<|/ a dscore=0 tags=string,c#,linq |>\n<| a |>\nHere's a solution using\
    \ Linq only:\n<code>\nstring s = \"abcABCD\";\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3650v0f9.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmp3650v0f9.d(37):
    Error: unterminated character constant\n/tmp/tmp3650v0f9.d(40): Error: Declaration
    expected, not \''<\''\n/tmp/tmp3650v0f9.d(44): Error: unterminated character constant\n/tmp/tmp3650v0f9.d(50):
    Error: Declaration expected, not \''<\''\n/tmp/tmp3650v0f9.d(53): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3650v0f9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for(auto i : s)\n    {\n        result += char_to_int(i);\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=c++,type-conversion,char dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\n// returns sum of ascii values of all chars within a string\nlong\
    \ sum(const char* p){\n  long result = 0;\n  while(*p) result += (unsigned char)*p++;\n\
    \  return result;\n}\n</code>\n<|/ a tags=c++,type-conversion,char |>\n<| c |>\n\
    Welcome to Stack Overflow! While this code snippet may solve the question, [including\
    \ an explanation](//meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers)\
    \ really helps to improve the quality of your post. Remember that you are answering\
    \ the question for readers in the future, and those people might not know the\
    \ reasons for your code suggestion. Please also try not to crowd your code with\
    \ explanatory comments, as this reduces the readability of both the code and the\
    \ explanations!\n<|/ c |>\n<| a tags=c++,type-conversion,char |>\nIn case you\
    \ don't want to write any loops to compute the sum, you can use std::string and\
    \ std::accumulate :\n<code>\nstd::string s = \"hello\";\nstd::cout << std::accumulate(s.begin(),\
    \ s.end(), 0L);\n</code>\nBut if your function requires to convert string to int,\
    \ you can use a lambda expression :\n<code>\nstd::accumulate(s.begin(), s.end(),\
    \ 0L, [&s] (int a, char c){ return a + char_to_int(c); });\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 tags=c++,type-conversion,char |>\n<code>\n#include <iostream>\n\
    #include <string>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx4h6bdtj.d(26): Error: no identifier for declarator i\n/tmp/tmpx4h6bdtj.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpx4h6bdtj.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpx4h6bdtj.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmpx4h6bdtj.d(39): Error: Declaration
    expected, not \''while\''\n/tmp/tmpx4h6bdtj.d(40): Error: Declaration expected,
    not \''return\''\n/tmp/tmpx4h6bdtj.d(41): Error: unrecognized declaration\n/tmp/tmpx4h6bdtj.d(48):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpx4h6bdtj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if (s.empty()) return\
    \ 0;\n    \n    long sum=0;\n    for (auto c : s) {\n        if (c.isUpper())\
    \ {\n            sum+=c.digit;\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nWhile this may answer the question, it would be preferable\
    \ if you could provide a description for what the code is doing, rather than just\
    \ posting the code.\n<|/ c |>\n<| c |>\nThanks, I hope I did this correctly.\n\
    <|/ c |>\n<| c |>\nIt's not that difficult, I just added an explanation and some\
    \ comments to explain the code. Not a big deal to understand.\n<|/ c |>\n<| a\
    \ tags=algorithm,sum,string,c++ |>\nFor a more functional approach, here is a\
    \ recursive version. \n<code>\n#include <iostream>\n#include <vector>\n#include\
    \ <string>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps286jlx9.d(28): Error: no identifier for declarator c\n/tmp/tmps286jlx9.d(28):
    Error: expression expected, not \'':\''\n/tmp/tmps286jlx9.d(28): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmps286jlx9.d(35):
    Error: Declaration expected, not \''<\''\n/tmp/tmps286jlx9.d(44): Error: unterminated
    character constant\n/tmp/tmps286jlx9.d(56): Error: Declaration expected, not \''assert\''\n/tmp/tmps286jlx9.d(57):
    Error: Declaration expected, not \''assert\''\n/tmp/tmps286jlx9.d(58): Error:
    Declaration expected, not \''assert\''\n/tmp/tmps286jlx9.d(59): Error: Declaration
    expected, not \''assert\''\n/tmp/tmps286jlx9.d(60): Error: Declaration expected,
    not \''assert\''\n/tmp/tmps286jlx9.d(61): Error: Declaration expected, not \''assert\''\n/tmp/tmps286jlx9.d(62):
    Error: Declaration expected, not \''assert\''\n/tmp/tmps286jlx9.d(63): Error:
    Declaration expected, not \''assert\''\n/tmp/tmps286jlx9.d(64): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps286jlx9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    \n    long ans = 0;\n\
    \    \n    for(int i = 0; i < s.length; i++)\n    {\n        int ch = s[i] -'A'\
    \ ;\n        if(ch>='Z'&&ch <='Z')\n        {\n            ans += ch-'A'+10;\n\
    \        }\n    }\n    return ans;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwgr1lf22.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    /*\n    Write your code\
    \ here!\n    */\n    long result = 0;\n    for (int i = 0; i < s.length; i++)\n\
    \    {\n        if (s[i] >= 'A' && s[i] <= 'Z')\n            result += s[i] -\
    \ 'A' + 1;\n        else\n            result += s[i];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,char,string,int,type-conversion dscore=0 |>\n<| a |>\n\
    Use string function find() to find the first character in the string that's not\
    \ an uppercase letter.\nThen convert the string from 0 to length() - 1 to a number.\n\
    Add the number to the answer variable that you've already created.\n<|/ a dscore=0\
    \ tags=c++,char,string,int,type-conversion |>\n<| a dscore=0 tags=c++,char,string,int,type-conversion\
    \ |>\nSince C++ is statically typed, you cannot convert a string to a number.\
    \ One possible solution would be to iterate through the string, checking the character\
    \ and converting it to a number. Something like this:\n<code>\n#include <iostream>\n\
    #include <string>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjo3ps07u.d(38): Error: Declaration expected, not \''<\''\n/tmp/tmpjo3ps07u.d(41):
    Error: unterminated character constant\n/tmp/tmpjo3ps07u.d(43): Error: unterminated
    character constant\n/tmp/tmpjo3ps07u.d(54): Error: Declaration expected, not \''assert\''\n/tmp/tmpjo3ps07u.d(55):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjo3ps07u.d(56): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpjo3ps07u.d(57): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpjo3ps07u.d(58): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpjo3ps07u.d(59): Error: Declaration expected, not \''assert\''\n/tmp/tmpjo3ps07u.d(60):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpjo3ps07u.d(61): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpjo3ps07u.d(62): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjo3ps07u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (auto c : s)\n        sum += (long)std.char.upper(c);\n    return sum;\n}\n\
    </code>\n<|/ a |>\n<| a dscore=0 |>\nHere's a short one-line solution using stringstream\
    \ (which is part of C++11):\n<code>\nlong sum = (stringstream() << s).str().size();\n\
    </code>\n<|/ a tags=c++,string |>\n<| a dscore=0 tags=c++,string |>\nUse the following\
    \ code (just include string.h):\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2snobda_.d(26): Error: no identifier for declarator c\n/tmp/tmp2snobda_.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmp2snobda_.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmp2snobda_.d(27):
    Error: identifier expected following \''.\'', not \''char\''\n/tmp/tmp2snobda_.d(27):
    Error: C style cast illegal, use cast(long)std.upper(c)\n/tmp/tmp2snobda_.d(30):
    Error: Declaration expected, not \''<\''\n/tmp/tmp2snobda_.d(33): Error: unterminated
    character constant\n/tmp/tmp2snobda_.d(36): Error: Declaration expected, not \''<\''\n/tmp/tmp2snobda_.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp2snobda_.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp2snobda_.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp2snobda_.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp2snobda_.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmp2snobda_.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp2snobda_.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp2snobda_.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp2snobda_.d(53): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2snobda_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong result = 0L;\n\tint\
    \ sum = 0;\n\tfor (int i = 0; i < s.length(); i++)\n\t{\n\t\tsum += getUpperDigit(s[i]);\n\
    \t}\n\treturn sum + result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ca_tu5u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(s.at(i) > 'A' && s.at(i) <= 'Z')\n\
    \        {\n            sum += s.at(i) - 'A' + 1;\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_y0_4lrb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(auto\
    \ c: s)\n        sum += (int)std.toupper(c);\n    return sum;\n}\n</code>\nNote\
    \ that std.toupper and std.tolower are both case-sensitive (returns 'A' -> 65).\n\
    <|/ a tags=c++ |>\n<| c |>\nThanks for the advice. I am still struggling to understand\
    \ the logic behind this code. I understand the string loop and string manipulation\
    \ but I don't understand how you go from char -> int -> int -> int. I understand\
    \ that you are casting from char to int but I don't understand how the int ->\
    \ int part works. And finally I do not understand why you do the addition in the\
    \ loop. I would appreciate it if you could explain it a little bit. Thanks again!\n\
    <|/ c |>\n<| c |>\nThanks for your answer it really helped me!\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <iomanip>\n\
    using namespace std;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsghj1fhf.d(26): Error: no identifier for declarator c\n/tmp/tmpsghj1fhf.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpsghj1fhf.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpsghj1fhf.d(27):
    Error: C style cast illegal, use cast(int)std.toupper(c)\n/tmp/tmpsghj1fhf.d(30):
    Error: Declaration expected, not \''<\''\n/tmp/tmpsghj1fhf.d(34): Error: unterminated
    character constant\n/tmp/tmpsghj1fhf.d(34): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsghj1fhf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for (auto c : s) {\n        result += c.digit;\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\nAnother possible solution:\n<code>\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpujawryaw.d(26): Error: no identifier for declarator c\n/tmp/tmpujawryaw.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpujawryaw.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpujawryaw.d(31):
    Error: Declaration expected, not \''<\''\n/tmp/tmpujawryaw.d(40): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpujawryaw.d(41): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpujawryaw.d(42): Error: Declaration expected, not \''assert\''\n/tmp/tmpujawryaw.d(43):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpujawryaw.d(44): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpujawryaw.d(45): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpujawryaw.d(46): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpujawryaw.d(47): Error: Declaration expected, not \''assert\''\n/tmp/tmpujawryaw.d(48):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujawryaw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    \n \
    \   for (int i = 0; i < s.length(); i++)\n    {\n        if (ispunct(s[i])) continue;\n\
    \        sum += toupper(s[i]);\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n\
    <| c |>\nThanks. I really appreciate all the answers, it helped a lot!\n<|/ c\
    \ |>\n<| a |>\nI'm not a fan of recursion, and I'd love to see a non-recursive\
    \ solution, though this would work and it's quite easy to understand.\n<code>\n\
    // Assuming you have a string\nString input = \"hello123\";\nunittest\n{\n   \
    \ alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy8hrut8q.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmpy8hrut8q.d(40):
    Error: unterminated character constant\n/tmp/tmpy8hrut8q.d(40): Error: unterminated
    character constant\n/tmp/tmpy8hrut8q.d(40): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy8hrut8q.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++ )\n    {\n        char c = s[i];\n        if\
    \ (c >= 'A' && c <= 'Z')\n            sum += (c - 'A' + 10);\n        else if\
    \ (c >= 'a' && c <= 'z')\n            sum += (c - 'a' + 10);\n        else\n \
    \           sum += 0;\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=3 |>\n\
    <| a dscore=2 |>\nIn Swift, you can use the following solution:\n<code>\nextension\
    \ Character {\n    var upper: String {\n        return String(unicodeScalars.filter({\
    \ $0.value > 65 && $0.value < 90 }))\n    }\n}\n</code>\n<|/ a tags=swift,character\
    \ |>\n<| c |>\nThis only works for ascii characters. If you have unicode characters\
    \ like \"\u0105\" it only returns \"a\"\n<|/ c |>\n<| c |>\nYes, it's true that\
    \ this method works for ASCII characters. But I guess it is easier to extend `Character`\
    \ to include Unicode characters as well.\n<|/ c |>\n<| c |>\nI guess that's the\
    \ easiest way. Thanks for sharing!\n<|/ c |>\n<| c |>\nThis is wrong, it returns\
    \ \"\xE1\"\n<|/ c |>\n<| a |>\nYou can use the method unicodeScalars from String\n\
    <code>\nlet str = \"Hello\"\nlet sum = str.unicodeScalars.filter{$0.value > 'A'\
    \ && $0.value < 'Z'}.map{$0.value - 'A'}.reduce(0, +)\nprint(sum)\n</code>\n<|/\
    \ a tags=swift,character dscore=2 |>\n<| a tags=swift,character |>\nYou can also\
    \ use NSCharacterSet.letters which is an array of UInt8's which represent letters\
    \ from an ASCII characterset.  \n<code>\nlet string = \"This is a string\"\nlet\
    \ lettersOnly = string.unicodeScalars.filter({ $0.value > 'A' && $0.value < 'Z'\
    \ }).map({ String($0) }) + [string]\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis\
    \ is wrong, it returns \"\xE1\"\n<|/ c |>\n<| a |>\n<code>\nextension Character\
    \ {\n    var upper: String {\n        return String(unicodeScalars.filter({ $0.value\
    \ > 'A' && $0.value < 'Z' }))\n    }\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgbzuc3il.d(38): Error: Declaration expected, not \''<\''\n/tmp/tmpgbzuc3il.d(54):
    Error: unterminated character constant\n/tmp/tmpgbzuc3il.d(57): Error: unterminated
    character constant\n/tmp/tmpgbzuc3il.d(71): Error: unterminated character constant\n/tmp/tmpgbzuc3il.d(91):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpgbzuc3il.d(92): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpgbzuc3il.d(93): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpgbzuc3il.d(94): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpgbzuc3il.d(95): Error: Declaration expected, not \''assert\''\n/tmp/tmpgbzuc3il.d(96):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpgbzuc3il.d(97): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpgbzuc3il.d(98): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpgbzuc3il.d(99): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgbzuc3il.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result=0;\n    for\
    \ (int i=0;i<s.size();i++)\n    {\n       if (i==0)\n       {\n           result=s.charAt(i);\n\
    \           continue;\n       }\n       if (s.charAt(i)>s.charAt(i-1))\n     \
    \  {\n           result+=s.charAt(i);\n       }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=string,c#,char,ascii |>\n<| a tags=string,c#,char,ascii |>\n\
    The string class has a function ToCharArray() which will convert a string to a\
    \ character array.  Then you can loop through each character in the character\
    \ array and check if the current character is the same as the previous character\
    \ in the array, and if it is, add it to a running total.  \nThis would give you\
    \ the following algorithm:\n<code>\nlong digitSum(string s) \n{\n    long result\
    \ = 0;\n    char[] chars = s.ToCharArray();\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8i2jrpe6.d(40): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8i2jrpe6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  long sum = 0L;\n  foreach(char,s)\
    \ {\n    sum += char.digitValue - '0';\n  }\n  return sum;\n}\n</code>\n<|/ a\
    \ tags=string,digits,char,c++,algorithm |>\n<| c |>\nWhy `char.digitValue`? Wouldn't\
    \ that be `char.digit`? Also, you do not need an `if` statement, you can just\
    \ use the `+` operator on `char`, which returns `'0'` if the `char` is `'\\0'`.\
    \ Also it seems that `char.digitValue` is also more efficient than `(int)char`.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <stdio.h>\n#include <ctype.h>\n#define\
    \ TRUE 1\n#define FALSE 0\nunittest\n{\n    alias candidate = digitSum;\n\n  \
    \  assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqtbbxd68.d(26): Error: no identifier for declarator char\n/tmp/tmpqtbbxd68.d(26):
    Error: no identifier for declarator s\n/tmp/tmpqtbbxd68.d(26): Error: found \'')\''
    when expecting \'';\''\n/tmp/tmpqtbbxd68.d(29): Error: found \''return\'' when
    expecting \'')\''\n/tmp/tmpqtbbxd68.d(31): Error: Declaration expected, not \''<\''\n/tmp/tmpqtbbxd68.d(34):
    Error: unterminated character constant\n/tmp/tmpqtbbxd68.d(46): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpqtbbxd68.d(47): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpqtbbxd68.d(48): Error: Declaration expected, not \''assert\''\n/tmp/tmpqtbbxd68.d(49):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpqtbbxd68.d(50): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpqtbbxd68.d(51): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpqtbbxd68.d(52): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpqtbbxd68.d(53): Error: Declaration expected, not \''assert\''\n/tmp/tmpqtbbxd68.d(54):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqtbbxd68.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += (s[i].toInt()\
    \ & 128);\n    }\n    return result;\n}\n</code>\n<|/ a dscore=2 tags=dart,flutter\
    \ |>\n<| a tags=dart,flutter |>\nYou can create a string extension method like\
    \ so:\n<code>\nextension StringExtension on String {\n    static int countUpperCaseLetters(String\
    \ text) {\n      int uppercaseLetters = 0;\n      for (var c in text) {\n    \
    \    if (c == c.toUpperCase()) {\n          uppercaseLetters++;\n        }\n \
    \     }\n      return uppercaseLetters;\n    }\n}\n</code>\nThen you just call:\n\
    <code>\nString foo = \"Hello World\";\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5q1oyst6.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmp5q1oyst6.d(40):
    Error: Declaration expected, not \''for\''\n/tmp/tmp5q1oyst6.d(43): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5q1oyst6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    for (int\
    \ i=0;i<s.length();i++)\n    {\n        sum+=std.int.from_float(std.char.from_int(s[i]));\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=stl,c++ |>\n<| c |>\nThis solution\
    \ has a lot of memory allocations and deconstructions. As you said, this isn't\
    \ the way to go in C++.\n<|/ c |>\n<| c |>\nYou are right about memory allocations,\
    \ but in this solution only 3 allocations (and deconstructions) are made. One\
    \ for each letter. And the algorithm is O(n).\n<|/ c |>\n<| c |>\nYeah, and this\
    \ solution is very inefficient. O(N) memory allocation for each character. O(N)\
    \ copy construction for each letter. O(N) concatenation. O(N) addition.\n<|/ c\
    \ |>\n<| c |>\nYou're right. As said, the solution is not the best way for C++.\
    \ In C# it would be, for example, something like `return s.Aggregate((l, r) =>\
    \ l + (int)r);`\n<|/ c |>\n<| c |>\nYes yes. It's much better and more efficient\
    \ (just tested it) than mine. And I agree that it's not the best way for C++.\n\
    <|/ c |>\n<| a dscore=2 |>\nYou can use the std::accumulate algorithm.\n<code>\n\
    #include <iostream>\n#include <numeric>\n#include <string>\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8gwchvlw.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp8gwchvlw.d(28): Error: identifier expected following \''.\'',
    not \''char\''\n/tmp/tmp8gwchvlw.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmp8gwchvlw.d(35):
    Error: unterminated character constant\n/tmp/tmp8gwchvlw.d(44): Error: unterminated
    character constant\n/tmp/tmp8gwchvlw.d(47): Error: unterminated character constant\n/tmp/tmp8gwchvlw.d(47):
    Error: unterminated character constant\n/tmp/tmp8gwchvlw.d(59): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp8gwchvlw.d(60): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp8gwchvlw.d(61): Error: Declaration expected, not \''assert\''\n/tmp/tmp8gwchvlw.d(62):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp8gwchvlw.d(63): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp8gwchvlw.d(64): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp8gwchvlw.d(65): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp8gwchvlw.d(66): Error: Declaration expected, not \''assert\''\n/tmp/tmp8gwchvlw.d(67):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8gwchvlw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return digitSum(s.length,\
    \ s.data());\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptsa10ek5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c in s) {\n        sum += (int)std.char.digit(c);\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphl7aya76.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmphl7aya76.d(27):
    Error: identifier expected following \''.\'', not \''char\''\n/tmp/tmphl7aya76.d(27):
    Error: C style cast illegal, use cast(int)std.digit(c)\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmphl7aya76.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    // TODO: implement me!\n\
    \    long sum = 0;\n    foreach (char c in s) {\n        sum = sum + charToInt(c);\n\
    \    }\n    return sum;\n}\n</code>\nThe solution is more efficient (O(n)) and\
    \ cleaner than the previous answer. However, the foreach loop is still not very\
    \ elegant and might not be as efficient as the answer suggested by.\n<|/ a |>\n\
    <| c |>\nYour solution is not efficient because it has quadratic complexity, whereas\
    \ `reduce` is linear.\n<|/ c |>\n<| c |>\nYou're right and I updated my solution\
    \ to reflect the improvement. Thank you for the suggestion!\n<|/ c |>\n<| a dscore=2\
    \ tags=functional-programming,recursion,ocaml,string |>\n<code>\nlet sum_digits\
    \ x =\n  let rec sum_digits x =\n    match x with\n    | [] -> 0\n    | x::xs\
    \ -> let sum = sum + (char_to_int x) in\n    if xs <> [] then (sum_digits xs)\
    \ + (sum_digits xs)\n    else sum\n  in\n  sum_digits x\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv_20xs69.d(27): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpv_20xs69.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmpv_20xs69.d(39): Error: unterminated
    character constant\n/tmp/tmpv_20xs69.d(56): Error: Declaration expected, not \''assert\''\n/tmp/tmpv_20xs69.d(57):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpv_20xs69.d(58): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpv_20xs69.d(59): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpv_20xs69.d(60): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpv_20xs69.d(61): Error: Declaration expected, not \''assert\''\n/tmp/tmpv_20xs69.d(62):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpv_20xs69.d(63): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpv_20xs69.d(64): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv_20xs69.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long ans = 0, ch;\n  \
    \  for (auto i = s.begin(), e = s.end(); i != e; ++i) {\n        ch = i[0];\n\
    \        ans += (long)ch;\n    }\n    return ans;\n}\n</code>\n<|/ a |>\n<| c\
    \ |>\n\"the easiest way is to use the `std::accumulate` function from algorithm\
    \ library\"\n<|/ c |>\n<| a dscore=0 |>\nI would write it like this:\n<code>\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptc92fpd7.d(28): Error: C style cast illegal, use cast(long)ch\n/tmp/tmptc92fpd7.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmptc92fpd7.d(44): Error: Declaration
    expected, not \''assert\''\n/tmp/tmptc92fpd7.d(45): Error: Declaration expected,
    not \''assert\''\n/tmp/tmptc92fpd7.d(46): Error: Declaration expected, not \''assert\''\n/tmp/tmptc92fpd7.d(47):
    Error: Declaration expected, not \''assert\''\n/tmp/tmptc92fpd7.d(48): Error:
    Declaration expected, not \''assert\''\n/tmp/tmptc92fpd7.d(49): Error: Declaration
    expected, not \''assert\''\n/tmp/tmptc92fpd7.d(50): Error: Declaration expected,
    not \''assert\''\n/tmp/tmptc92fpd7.d(51): Error: Declaration expected, not \''assert\''\n/tmp/tmptc92fpd7.d(52):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptc92fpd7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for(int\
    \ i = 0; i < s.length(); i++) \n    {\n        if (s.at(s[i]) > 'z') \n      \
    \  {\n            sum += (s.at(s[i]) - 'a' + 10);\n        }\n        else\n \
    \       {\n            sum += s.at(s[i]);\n        }\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nYeah, I already did that and ended up\
    \ with this, which is far from perfect. I tried doing it without using the string's\
    \ charAt function and I ended up with about the same result as the code above.\
    \ I need to do it without using the charAt function and without importing any\
    \ additional functions. Anyway, thanks for your answer!\n<|/ c |>\n<| c |>\nThen\
    \ you should post your code with the original problem. Why do you not want to\
    \ use the charAt function?\n<|/ c |>\n<| c |>\nWell it might seem a bit strange,\
    \ but it is because I am required to do it without any additional functions or\
    \ importing any additional functions. I really have no idea how to do this, because\
    \ this is my first time seeing how to convert a character to the corresponding\
    \ number. I've used charAt in the past and it has worked well, but I am not sure\
    \ how to implement it here. This is my first time seeing how to do this. I feel\
    \ like there's a simple solution to this.\n<|/ c |>\n<| c |>\nI'm sorry about\
    \ that haha I'll make sure to remember that!\n<|/ c |>\n<| c |>\nI've added an\
    \ answer using your code.\n<|/ c |>\n<| a dscore=0 |>\nA version that uses charAt():\n\
    <code>\n#include <iostream>\n#include <string>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplk5o2scd.d(39): Error: Declaration expected, not \''<\''\n/tmp/tmplk5o2scd.d(42):
    Error: unterminated character constant\n/tmp/tmplk5o2scd.d(48): Error: unterminated
    character constant\n/tmp/tmplk5o2scd.d(48): Error: unterminated character constant\n/tmp/tmplk5o2scd.d(51):
    Error: unterminated character constant\n/tmp/tmplk5o2scd.d(51): Error: unterminated
    character constant\n/tmp/tmplk5o2scd.d(54): Error: unterminated character constant\n/tmp/tmplk5o2scd.d(65):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplk5o2scd.d(66): Error:
    Declaration expected, not \''assert\''\n/tmp/tmplk5o2scd.d(67): Error: Declaration
    expected, not \''assert\''\n/tmp/tmplk5o2scd.d(68): Error: Declaration expected,
    not \''assert\''\n/tmp/tmplk5o2scd.d(69): Error: Declaration expected, not \''assert\''\n/tmp/tmplk5o2scd.d(70):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplk5o2scd.d(71): Error:
    Declaration expected, not \''assert\''\n/tmp/tmplk5o2scd.d(72): Error: Declaration
    expected, not \''assert\''\n/tmp/tmplk5o2scd.d(73): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplk5o2scd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    int\
    \ len = s.length();\n    for (int i = 0; i < len; i++)\n    {\n        char ch\
    \ = s[i];\n        sum += std.math.toUpper(ch) - std.math.toLower(ch);\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nWhat about \"AbcDe\"? I think\
    \ that should return 91.\n<|/ c |>\n<| c |>\nYes you are right. Sorry for that.\n\
    <|/ c |>\n<| c |>\nJust a small correction: you forgot toUpper() in the first\
    \ line of digitSum()\n<|/ c |>\n<| c |>\nBut it would be better to return the\
    \ ASCII sum of each letter (upper and lower case) together and subtract them all\
    \ from the sum to get the total digit sum.\n<|/ c |>\n<| c |>\nI updated my solution\
    \ to do that. :)\n<|/ c |>\n<| a tags=function,c++,string |>\nI wrote this function\
    \ to get the sum of the ASCII of every letter of the string but I don't know how\
    \ to return the sum of the ASCII of each letter of the string. \n<code>\nstring\
    \ digitSum(string s)\n{\n  long sum = 0;\n  long digitSum = 0;\n  int len = s.length();\n\
    \  int index = 0;\n  for (int i = 0; i < len; i++)\n  {\n    char ch = s[i];\n\
    \    sum += ch;\n  }\n  digitSum = sum;\n  return digitSum;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\n`sum += ch;` should be `digitSum += ch;`\n<|/ c |>\n<|\
    \ c |>\nNo, that would only work for the first letter, since sum is always zero\
    \ when i==0.\n<|/ c |>\n<| c |>\nSo he should have `digitSum` start at `0` and\
    \ not `sum`.\n<|/ c |>\n<| c |>\nI fixed this but I don't know how to return the\
    \ sum of the ASCII of each letter of the string. Can you help me?\n<|/ c |>\n\
    <| c |>\nI updated my solution to do that. :)\n<|/ c |>\n<| a |>\nFor completeness\
    \ sake, here is another possibility using std::accumulate, which is more efficient\
    \ for large strings:\n<code>\nlong digitSum(std::string s)\n{\n    return std::accumulate(s.begin(),\
    \ s.end(), 0L,\n         [](long sum, char ch)\n         {\n             return\
    \ sum + std::toupper(ch) - std::\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppclquhtk.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmppclquhtk.d(52):
    Error: unterminated character constant\n/tmp/tmppclquhtk.d(60): Error: Declaration
    expected, not \''for\''\n/tmp/tmppclquhtk.d(60): Error: no identifier for declarator
    i\n/tmp/tmppclquhtk.d(60): Error: Declaration expected, not \''<\''\n/tmp/tmppclquhtk.d(60):
    Error: no identifier for declarator i\n/tmp/tmppclquhtk.d(60): Error: Declaration
    expected, not \''++\''\n/tmp/tmppclquhtk.d(63): Error: no identifier for declarator
    sum\n/tmp/tmppclquhtk.d(63): Error: Declaration expected, not \''+=\''\n/tmp/tmppclquhtk.d(64):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppclquhtk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong result = 0;\n\tfor(int\
    \ i = 0; i < s.length(); i++) {\n\t\tif(char.ToLower(s[i]) == 'a') result += 64;\n\
    \t\telse if(char.ToLower(s[i]) == 'b') result += 97;\n\t\telse if(char.ToLower(s[i])\
    \ == 'c') result += 100;\n\t\telse if(char.ToLower(s[i]) == 'd') result += 102;\n\
    \t\telse if(char.ToLower(s[i]) == 'e') result += 103;\n\t\telse if(char.ToLower(s[i])\
    \ == 'f') result += 104;\n\t\telse if(char.ToLower(s[i]) == 'g') result += 105;\n\
    \t\telse if(char.ToLower(s[i]) == 'h') result += 110;\n\t\telse if(char.ToLower(s[i])\
    \ == 'i') result += 111;\n\t\telse if(char.ToLower(s[i]) == 'j') result += 112;\n\
    \t\telse if(char.ToLower(s[i]) == 'k') result += 113;\n\t\telse if(char.ToLower(s[i])\
    \ == 'l') result += 114;\n\t\telse if(char.ToLower(s[i]) == 'm') result += 115;\n\
    \t\telse if(char.ToLower(s[i]) == 'n') result += 116;\n\t\telse if(char.ToLower(s[i])\
    \ == 'o') result += 117;\n\t\telse if(char.ToLower(s[i]) == 'p') result += 118;\n\
    \t\telse if(char.ToLower(s[i]) == 'q') result += 119;\n\t\telse if(char.ToLower(s[i])\
    \ == 'r') result += 120;\n\t\telse if(char.ToLower(s[i]) == 's') result += 121;\n\
    \t\telse if(char.ToLower(s[i]) == 't') result += 122;\n\t\telse if(char.ToLower(s[i])\
    \ == 'u') result += 123;\n\t\telse if(char.ToLower(s[i]) == 'v') result += 124;\n\
    \t\telse if(char.ToLower(s[i]) == 'w') result += 125;\n\t\telse if(char.ToLower(s[i])\
    \ == 'x') result += 126;\n\t\telse if(char.ToLower(s[i]) == 'y') result += 127;\n\
    \t\telse if(char.ToLower(s[i]) == 'z') result += 128;\n\t}\n\treturn result;\n\
    }\n/*\nTask\n    Write a function that takes a string as input and returns the\
    \ number of vowels\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf8whgrs0.d(56): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpf8whgrs0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tint sum = 0;\n\tfor (auto\
    \ c : s) sum += toupper(c);\n\treturn sum;\n}\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7z33pcd.d(26): Error: no identifier for declarator c\n/tmp/tmpb7z33pcd.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpb7z33pcd.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpb7z33pcd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if (s.length() == 0) {\n\
    \        return 0;\n    }\n    long total = 0;\n    for (int i = s.length() -\
    \ 1; i >= 0; i--)\n    {\n        int c = s.charAt(i);\n        if ((int)c < 'A'\
    \ || (int)c > 'Z') {\n            total += (long)(c - 'A');\n        }\n    }\n\
    \    return total;\n}\n/*\nTask\n    Write a function that takes a string as input\
    \ and returns the product of the digits only'\n    ASCII codes.\nunittest\n{\n\
    \    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpra4crksq.d(32): Error: C style cast illegal, use cast(int)c\n/tmp/tmpra4crksq.d(32):
    Error: C style cast illegal, use cast(int)c\n/tmp/tmpra4crksq.d(33): Error: C
    style cast illegal, use cast(long)(c - \''A\'')\n/tmp/tmpra4crksq.d(38): Error:
    unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpra4crksq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    //code here\n    long\
    \ sum = 0;\n    int i = 0;\n    for(i =0; i < s.length(); i++)\n    {\n      \
    \  if(s.charAt(i) >= 65 && s.charAt(i) <= 90)\n            sum = sum + s.charAt(i);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=string,ascii,java,string |>\n\
    <| a |>\nIn java 8 you can do this, here you go:\n<code>\nString str1 = \"hello\"\
    ;\nString str2 = \"world\";\nstr1.chars().reduce((a,b)->a+b) - str2.chars().reduce((a,b)->a+b);\n\
    </code>\n<|/ a dscore=0 tags=string,ascii,java,string |>\n<| c |>\nthis doesn't\
    \ return the sum of the characters. it just return the sum of the ASCII codes.\n\
    <|/ c |>\n<| a dscore=0 |>\nThis should work for any character:\n<code>\npublic\
    \ static Long getSum(String input) {\n    long sum = 0;\n    for (char c : input.toCharArray())\
    \ {\n        sum += c < 0x20 ? c : (int)(c - (int)'a' + 1);\n    }\n    return\
    \ sum;\n}\n</code>\n<|/ a tags=string,ascii,java,string |>\n<| a tags=string,ascii,java,string\
    \ |>\n<code>\nString s=\"Hello\";\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5pstts8f.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmp5pstts8f.d(42):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmp5pstts8f.d(42): Error: no identifier for declarator
    str1.chars()\n/tmp/tmp5pstts8f.d(42): Error: semicolon expected following function
    declaration\n/tmp/tmp5pstts8f.d(42): Deprecation: C-style function pointer and
    pointer to array syntax is deprecated. Use \''function\'' to declare function
    pointers\n/tmp/tmp5pstts8f.d(42): Error: function declaration without return type.
    (Note that constructors are always named \''this\'')\n/tmp/tmp5pstts8f.d(42):
    Error: found \''-\'' when expecting \'')\''\n/tmp/tmp5pstts8f.d(42): Error: no
    identifier for declarator .reduce(a, b)\n/tmp/tmp5pstts8f.d(42): Error: semicolon
    expected following function declaration\n/tmp/tmp5pstts8f.d(42): Error: Declaration
    expected, not \''>\''\n/tmp/tmp5pstts8f.d(43): Error: Declaration expected, not
    \''<\''\n/tmp/tmp5pstts8f.d(46): Error: unterminated character constant\n/tmp/tmp5pstts8f.d(53):
    Error: Declaration expected, not \''for\''\n/tmp/tmp5pstts8f.d(55): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5pstts8f.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    /*\n    Write code here\n\
    \    */\n    int uppers = 0;\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(s.charAt(i) >= 'a' && s.charAt(i) <= 'z')\n        {\n           \
    \ uppers += (s.charAt(i) - 'a' + 10);\n        }\n    }\n    return uppers;\n\
    }\n</code>\n<|/ a tags=algorithm,function,java |>\n<| c |>\nYes, that would be\
    \ my answer. Since this appears to be a homework question, I'd be curious to know\
    \ which answer you chose.\n<|/ c |>\n<| c |>\nThis solution fails on `\"abAa\"\
    ` It should be `66`.\n<|/ c |>\n<| c |>\nThank you, I didn't even notice that.\
    \ Fixed.\n<|/ c |>\n<| c |>\nI made a small modification to my solution to fix\
    \ the issue of adding an extra 10. It should work now.\n<|/ c |>\n<| a tags=algorithm,function,java\
    \ dscore=0 |>\nFor a non-Java solution, check out the ASCII table.  You don't\
    \ need to convert a number to an ASCII character to use its ASCII value. All you\
    \ need is its decimal equivalent. \nFor example, if you wanted to get the ASCII\
    \ code for the letter \"a\", you would do this: \n65\n<|/ a |>\n<| c |>\nThis\
    \ doesn't work in the context of Java, and also seems overly complicated.\n<|/\
    \ c |>\n<| c |>\nI agree.  I just thought it might be helpful to share some ASCII\
    \ table references as people were asking about how to get the ASCII character\
    \ value in Java.  Hopefully my explanation is clearer.\n<|/ c |>\n<| c |>\nSure,\
    \ but you're not helping people with your answer, as you mention \"Ascii table\"\
    , which doesn't help. The Java equivalent would be `int aCode = 65;` The actual\
    \ problem here is that you're not helping people to find the \"A\" character,\
    \ not \"65\". The actual problem here is that you should be able to work out a\
    \ solution in Java in a couple of minutes.\n<|/ c |>\n<| c |>\nFair enough.  I\
    \ was just trying to answer the question that was asked, which was \"Write a function\
    \ that takes a string as input and returns the sum of the upper characters only's\
    \ ASCII codes.\" The solution I gave was an easy way of getting the ASCII value\
    \ of a character without having to use a library or having to convert to an ASCII\
    \ value.  I wanted to leave the OP a couple options on how they could accomplish\
    \ the same thing.\n<|/ c |>\n\nunittest\n{\n    alias candidate = digitSum;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp54sp0lu7.d(38): Error: Declaration expected, not \''<\''\n/tmp/tmp54sp0lu7.d(41):
    Error: unterminated character constant\n/tmp/tmp54sp0lu7.d(47): Error: unterminated
    character constant\n/tmp/tmp54sp0lu7.d(53): Error: unterminated character constant\n/tmp/tmp54sp0lu7.d(58):
    Error: unterminated character constant\n/tmp/tmp54sp0lu7.d(64): Error: unterminated
    character constant\n/tmp/tmp54sp0lu7.d(64): Error: unterminated character constant\n/tmp/tmp54sp0lu7.d(64):
    Error: unterminated character constant\n/tmp/tmp54sp0lu7.d(74): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp54sp0lu7.d(75): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp54sp0lu7.d(76): Error: Declaration expected, not \''assert\''\n/tmp/tmp54sp0lu7.d(77):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp54sp0lu7.d(78): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp54sp0lu7.d(79): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp54sp0lu7.d(80): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp54sp0lu7.d(81): Error: Declaration expected, not \''assert\''\n/tmp/tmp54sp0lu7.d(82):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp54sp0lu7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    for (int\
    \ i=0;i<s.size();i++)\n    {\n        sum+=ord2long(s[i]);\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5vtxpxjx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (auto it= s.rbegin(); it!= s.rend(); it++)\n    {\n        if (*it >= '0' &&\
    \ *it <='9')\n        {\n            sum += *it - '0';\n        }\n    }\n   \
    \ return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5lkmq5v4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for(int i = 0; i < s.length(); i++) {\n        result += toAscii(s[i]) - 'a'\
    \ + 1;\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string,char,arrays,type-conversion\
    \ dscore=0 |>\n<| a |>\n<code>\nstring myString = \"hello\";\nvector<int> numbers;\n\
    for(int i = 0; i < myString.length(); i++)\n{\n    int number = (int)myString[i]\
    \ - 'a';\n    numbers.push_back(number);\n}\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3vhna29y.d(31): Error: Declaration expected, not \''<\''\n/tmp/tmp3vhna29y.d(36):
    Error: no identifier for declarator vector\n/tmp/tmp3vhna29y.d(36): Error: Declaration
    expected, not \''<\''\n/tmp/tmp3vhna29y.d(37): Error: Declaration expected, not
    \''for\''\n/tmp/tmp3vhna29y.d(37): Error: no identifier for declarator i\n/tmp/tmp3vhna29y.d(37):
    Error: Declaration expected, not \''<\''\n/tmp/tmp3vhna29y.d(37): Error: no identifier
    for declarator i\n/tmp/tmp3vhna29y.d(37): Error: Declaration expected, not \''++\''\n/tmp/tmp3vhna29y.d(40):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmp3vhna29y.d(40): Error: no identifier for declarator
    numbers.push_back(number)\n/tmp/tmp3vhna29y.d(41): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3vhna29y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return s.toLong()-s.toLong().reduce((a,b)=>a+b,0L);\n\
    }\n/*\nTask\n    Write a function that takes a string as input and returns the\
    \ sum of the numbers in it only'\n    ASCII codes.\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf7_z8610.d(27): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpf7_z8610.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(int\
    \ n, s){\n        int c = toAscii(n);\n        if ((c >= 65) && (c <= 90)){\n\
    \            sum += (c - 65);\n        }\n    }\n    return sum;\n}\n</code>\n\
    <|/ a tags=c++,string,ascii,uppercase |>\n<| c |>\nYour \"digitSum\" function\
    \ only works for capital letters.\n<|/ c |>\n<| c |>\n, Yes, I just wrote this\
    \ in notepad and haven't compiled it yet so I just wrote it here to give you an\
    \ idea of what I'm thinking.  However, I've already tested my code and it's working\
    \ perfectly fine.  Also, the OP stated that they were only trying to convert capital\
    \ letters so I took that into account too.\n<|/ c |>\n<| c |>\nYes, and your code\
    \ also works fine. But you missed this from OP: \"Write a function that takes\
    \ a string as input and returns the sum of the upper characters only'\" Your code\
    \ also works for any string. Your function returns 0 for an empty string.\n<|/\
    \ c |>\n<| c |>\nYes, I noticed that.  I actually noticed that before I realized\
    \ I wasn't working on my code because I was using notepad.  I fixed it though.\
    \  Thanks.\n<|/ c |>\n<| a tags=c++,string,ascii,uppercase |>\nYou can write something\
    \ like:\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9z123mg1.d(26): Error: no identifier for declarator s\n/tmp/tmp9z123mg1.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmp9z123mg1.d(32): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmp9z123mg1.d(34): Error: Declaration
    expected, not \''<\''\n/tmp/tmp9z123mg1.d(40): Error: unterminated character constant\n/tmp/tmp9z123mg1.d(40):
    Error: unterminated character constant\n/tmp/tmp9z123mg1.d(40): Error: unterminated
    character constant\n/tmp/tmp9z123mg1.d(40): Error: unterminated character constant\n/tmp/tmp9z123mg1.d(46):
    Error: unterminated character constant\n/tmp/tmp9z123mg1.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9z123mg1.d(56): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9z123mg1.d(57): Error: Declaration expected, not \''assert\''\n/tmp/tmp9z123mg1.d(58):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp9z123mg1.d(59): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp9z123mg1.d(60): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9z123mg1.d(61): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9z123mg1.d(62): Error: Declaration expected, not \''assert\''\n/tmp/tmp9z123mg1.d(63):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9z123mg1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for\
    \ (int i = 0; i < s.length; ++i)\n    {\n        sum += (s[i]-'A'+'a');\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a |>\n<| a tags=c++,recursion,string,sum |>\n\
    <code>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpma2d0x56.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmpma2d0x56.d(40):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpma2d0x56.d(41): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpma2d0x56.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpma2d0x56.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpma2d0x56.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmpma2d0x56.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpma2d0x56.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpma2d0x56.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpma2d0x56.d(48): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpma2d0x56.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result=0;\n    foreach(char\
    \ c in s) {\n        result+=(int) c;\n    }\n    return result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\n`foreach` is generally considered slow. It's preferred to use\
    \ `for` with a range-based for loop\n<|/ c |>\n<| a dscore=2 |>\nI suggest you\
    \ use foreach instead of a for loop. foreach is a bit more efficient. Here is\
    \ how I did it:\n<code>\nfunction int SumUpperChar(string inputString) {\n   \
    \ foreach (char c in inputString) {\n        if (('A' <= c) && (c <= 'Z'))\n \
    \           c -= ('A' - 'a');\n    }\n    return c;\n}\n</code>\n<|/ a tags=c#,.net,c#-6.0\
    \ |>\n<| a tags=c#,.net,c#-6.0 |>\n<code>\nstring upperCaseLetters = \"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"\
    ;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpafzocw0l.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpafzocw0l.d(27):
    Error: C style cast illegal, use cast(int)c\n/tmp/tmpafzocw0l.d(31): Error: Declaration
    expected, not \''<\''\n/tmp/tmpafzocw0l.d(34): Error: unterminated character constant\n/tmp/tmpafzocw0l.d(43):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpafzocw0l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c in s)\n        sum += (int) c;\n    return sum;\n}\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2a6dhe6n.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmp2a6dhe6n.d(27):
    Error: C style cast illegal, use cast(int)c\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp2a6dhe6n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    foreach(char\
    \ c in s)\n    {\n        sum+=c;\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a dscore=1 tags=string,c++,arrays |>\nIn response to the comment by Amadan:\n\
    <code>\n#include <algorithm>\n#include <iterator>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp10dl6uwn.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmp10dl6uwn.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmp10dl6uwn.d(43): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp10dl6uwn.d(44): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp10dl6uwn.d(45): Error: Declaration expected, not \''assert\''\n/tmp/tmp10dl6uwn.d(46):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp10dl6uwn.d(47): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp10dl6uwn.d(48): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp10dl6uwn.d(49): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp10dl6uwn.d(50): Error: Declaration expected, not \''assert\''\n/tmp/tmp10dl6uwn.d(51):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp10dl6uwn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  int sum=0;\n  for (int i=0;i<s.length();i++)\
    \ \n  {\n    sum = sum + char(tolower(s[i]))-'a';\n  }\n  return sum;\n}\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp601nycp6.d(28): Error: found \''(\'' when expecting \''.\''
    following char\n/tmp/tmp601nycp6.d(28): Error: found \'')\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp601nycp6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong sum = 0;\n\tforeach\
    \ (char c in s) sum += toUpper(c) - 'A' + 1;\n\treturn sum;\n}\n</code>\n<|/ a\
    \ dscore=2 tags=c++,function,string |>\n<| a |>\nI see people use std functions\
    \ for string manipulation. \nI prefer my own string functions but if you're forced\
    \ to use std functions, I guess it is better to use the STL strings as much as\
    \ possible as they have been around for a long time.\n<|/ a dscore=1 tags=c++,function,string\
    \ |>\n<| a |>\nI like the STL functions, too.\nBut for just simple string manipulation\
    \ like that, you could just use the string::find and string::substr functions.\
    \ \n<code>\nstring s;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzaw4qlq5.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpzaw4qlq5.d(29):
    Error: Declaration expected, not \''<\''\n/tmp/tmpzaw4qlq5.d(33): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzaw4qlq5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979824
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    var sum = 0;\n    foreach(i,\
    \ s) \n    {\n        if (char.IsDigit(s[i]) || s[i] == '.') \n        {\n   \
    \         sum += i;\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n\
    <| a tags=c# dscore=1 |>\nTry this:\n<code>\nusing System;\nusing System.Collections.Generic;\n\
    using System.Linq;\nusing System.Text;\nusing System.Text.RegularExpressions;\n\
    using System.Threading.Tasks;\nunittest\n{\n    alias candidate = digitSum;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpognaa251.d(26): Error: no identifier for declarator s\n/tmp/tmpognaa251.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpognaa251.d(33): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmpognaa251.d(35): Error: Declaration
    expected, not \''<\''\n/tmp/tmpognaa251.d(41): Error: semicolon expected, not
    \''.\''\n/tmp/tmpognaa251.d(41): Error: no identifier for declarator .Collections.Generic\n/tmp/tmpognaa251.d(42):
    Error: semicolon expected, not \''.\''\n/tmp/tmpognaa251.d(42): Error: no identifier
    for declarator .Linq\n/tmp/tmpognaa251.d(43): Error: semicolon expected, not \''.\''\n/tmp/tmpognaa251.d(43):
    Error: no identifier for declarator .Text\n/tmp/tmpognaa251.d(44): Error: semicolon
    expected, not \''.\''\n/tmp/tmpognaa251.d(44): Error: no identifier for declarator
    .Text.RegularExpressions\n/tmp/tmpognaa251.d(45): Error: semicolon expected, not
    \''.\''\n/tmp/tmpognaa251.d(45): Error: no identifier for declarator .Threading.Tasks\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpognaa251.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    var sum:Long = 0;\n  \
    \  for (var i = 0; i < s.length; ++i)\n    {\n        var c = s.codePointAt(i);\n\
    \        if (c == 0)\n        {\n            break;\n        }\n        if ((c\
    \ >= 'a') && (c <= 'z'))\n        {\n            sum += c - 'a' + 1;\n       \
    \ }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=java,string |>\n<| a dscore=2\
    \ |>\nIn addition to the good answers so far, here is an optimized version:\n\
    <code>\nprivate long digitSum(String s) {\n    long sum = 0;\n    int i = 0;\n\
    \    while (i < s.length()) {\n        int c = s.codePointAt(i);\n        if (c\
    \ < 'a' || c > 'z') {\n            break;\n        }\n        sum += c - 'a' +\
    \ 1;\n        i++;\n    }\n    return sum;\n}\n</code>\n<|/ a tags=java,string\
    \ |>\n<| a dscore=1 |>\nYou can use the following:\n<code>\npublic static int\
    \ digitSum(String s) {\n   int sum = 0;\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdxf772u4.d(25): Error: found \''sum\'' when expecting \'';\''
    following statement\n/tmp/tmpdxf772u4.d(25): Error: found \'':\'' instead of statement\n/tmp/tmpdxf772u4.d(40):
    Error: Declaration expected, not \''<\''\n/tmp/tmpdxf772u4.d(48): Error: Declaration
    expected, not \''while\''\n/tmp/tmpdxf772u4.d(50): Error: Declaration expected,
    not \''if\''\n/tmp/tmpdxf772u4.d(52): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdxf772u4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if (s.length()==0)\n \
    \       return 0L;\n    long sum = 0;\n    for (int i = 0; i < s.length(); i++)\n\
    \    {\n        if (isUpperCase(s[i]))\n            sum += s[i]-'A' + 1L;\n  \
    \  }\n    return sum;\n}\n</code>\n<|/ a dscore=1 tags=string,python,ascii,python-3.x\
    \ |>\n<| c |>\nThis fails on \"aAaaaXa\"\n<|/ c |>\n<| c |>\nThanks for noticing.\
    \ I've made an edit to the answer.\n<|/ c |>\n<| a dscore=1 |>\nYou can iterate\
    \ over string using enumerate function and sum ASCII values of every character\
    \ using ord() function:\n<code>\ndef digitSum(s):\n    sum = 0\n    for i,c in\
    \ enumerate(s):\n        sum += ord(c)-ord('0')\n    return sum\n</code>\n<|/\
    \ a tags=string,python,ascii,python-3.x |>\n<| a tags=string,python,ascii,python-3.x\
    \ dscore=0 |>\nIf you're looking for an answer that uses only ASCII characters,\
    \ you can try something like\n<code>\ndef digitSum(s):\n  result = 0\n  for letter\
    \ in s:\n    result += ord(letter) - ord('0')\n  return result\n</code>\nI believe\
    \ this could work regardless of the string you give it, but I haven't tested it\
    \ yet.\n<|/ a |>\n<| a tags=string,python,ascii,python-3.x |>\n<code>\ndef digitSum(string):\n\
    \    if string==\"\":\n        return 0\n    sum = 0\n    for letter in string:\n\
    \        sum+=ord(letter)-ord('0')\n    return sum\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nPlease add some explanation to your answer.\n<|/ c |>\n<| c |>\nThis\
    \ does not seem to answer the question.\n<|/ c |>\n<| a |>\nYou can use the map\
    \ function and a lambda function for this:\n<code>\ndef digitSum(s):\n    return\
    \ sum(map(lambda c: ord(c) - ord('0'), s))\n</code>\n<|/ a tags=string,python,ascii,python-3.x\
    \ dscore=0 |>\n<| a dscore=0 tags=string,python,ascii,python-3.x |>\n<code>\n\
    def digitSum(s):\n  result = 0\n  for letter in s:\n    result += ord(letter)\
    \ - ord('0')\n  return result\nunittest\n{\n    alias candidate = digitSum;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx76gksfk.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmpx76gksfk.d(41):
    Error: unterminated character constant\n/tmp/tmpx76gksfk.d(54): Error: unterminated
    character constant\n/tmp/tmpx76gksfk.d(62): Error: unterminated character constant\n/tmp/tmpx76gksfk.d(99):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpx76gksfk.d(100): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpx76gksfk.d(101): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpx76gksfk.d(102): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpx76gksfk.d(103): Error: Declaration expected, not \''assert\''\n/tmp/tmpx76gksfk.d(104):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpx76gksfk.d(105): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpx76gksfk.d(106): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpx76gksfk.d(107): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx76gksfk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return s.toLong() - (s.toLong()\
    \ % (9*26));\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 tags=c |>\nI made a\
    \ short program to find ASCII sum of a string:\n<code>\n#include<stdio.h>\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp61wzfv__.d(27): Error: Declaration expected, not \''<\''\n/tmp/tmp61wzfv__.d(37):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp61wzfv__.d(38): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp61wzfv__.d(39): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp61wzfv__.d(40): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp61wzfv__.d(41): Error: Declaration expected, not \''assert\''\n/tmp/tmp61wzfv__.d(42):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp61wzfv__.d(43): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp61wzfv__.d(44): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp61wzfv__.d(45): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp61wzfv__.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for (int i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n      \
    \  int code = std.typecons.charcode(c);\n        if (std.math.isprime(code))\n\
    \        {\n            int digit = code - '0';\n            result += digit *\
    \ digit;\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph5erak99.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for\
    \ (auto c : s)\n    {\n        sum = sum + c.toAscii();\n    }\n    return sum;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nWhy do you suggest to use a `long`\
    \ type? Just out of curiosity\n<|/ c |>\n<| c |>\nIt was just out of habit...\
    \ :) No harm in using long when you are calculating with more than 2147483647\
    \ anyway\n<|/ c |>\n<| c |>\nThe long data type is a 64-bit signed integer. On\
    \ most systems it will give you a 64-bit unsigned integer.\n<|/ c |>\n<| c |>\n\
    Just a friendly reminder that `long` has a different meaning in a different context\
    \ (language) than it has in C++.\n<|/ c |>\n<| a tags=c++,string |>\nI think using\
    \ stringstream is the way to go, but this would also work:\n<code>\n#include <iostream>\n\
    #include <string>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzv2j62k8.d(26): Error: no identifier for declarator c\n/tmp/tmpzv2j62k8.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpzv2j62k8.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpzv2j62k8.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmpzv2j62k8.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpzv2j62k8.d(56): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpzv2j62k8.d(57): Error: Declaration expected, not \''assert\''\n/tmp/tmpzv2j62k8.d(58):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpzv2j62k8.d(59): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpzv2j62k8.d(60): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpzv2j62k8.d(61): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpzv2j62k8.d(62): Error: Declaration expected, not \''assert\''\n/tmp/tmpzv2j62k8.d(63):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzv2j62k8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int n = s.length();\n\
    \    long sum = 0;\n    for(int i = 0; i < n; ++i)\n    {\n        char ch = s[i];\n\
    \        if(ch >= 'a' && ch <= 'z')\n        {\n            sum += (ch - 'a' +\
    \ 1);\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 tags=sum,c++,char,integer\
    \ |>\n<| a dscore=0 |>\n<code>\n#include<iostream>\nusing namespace std;\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpefmr5iky.d(37): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpefmr5iky.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(s[i] == 'A' || s[i] == 'a')\n\
    \        {\n            sum += 10;\n        }\n        else\n        {\n     \
    \       sum += s[i];\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n\
    <| c |>\nWhat is `digitSum`? Where is it defined?\n<|/ c |>\n<| c |>\nThis is\
    \ pretty cool :) I guess I thought that there would be an easier way to do it,\
    \ but I guess that is just not true. Thanks for your help!\n<|/ c |>\n<| c |>\n\
    I added the definition for digitSum.\n<|/ c |>\n<| a tags=c,string,ascii |>\n\
    <code>\nchar str[] = \"abc\";\nunittest\n{\n    alias candidate = digitSum;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsp42t2ic.d(39): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsp42t2ic.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum=0;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        char c=s[i];\n        if(c>='A' && c<='Z')\n\
    \        {\n            sum+=(c-32);\n        }\n    }\n    return sum;\n}\n/*\n\
    Task\n    Write a function that takes an integer as input and returns the sum\
    \ of all digits that form an integer.\n    For example: if the input is 123, then\
    \ the output is 6.\n*/\nlong digitSum2(int num) \n{\n    int sum=0;\n    while(num!=0)\n\
    \    {\n        sum+=num%10;\n        num/=10;\n    }\n    return sum;\n}\n/*\n\
    Task\n    Write a function that takes a string of lowercase letters as input and\
    \ returns the number of characters in the string that are not in the alphabet.\n\
    \    For example:\n    >>> letterCount(\"Hello\")\n    3\n    >>> letterCount(\"\
    abacd\")\n    2\n    >>> letterCount(\"HelloWOrld\")\n    5\n*/\nlong letterCount(string\
    \ s)\n{\n    int count=0;\n    for(int i=0;i<s.length();i++)\n    {\n        char\
    \ c=s[i];\n        if(c>='A' && c<='Z')\n        {\n            count++;\n   \
    \     }\n    }\n    return count;\n}\n/*\nTask\n    Write a function that takes\
    \ a string as input and returns a substring with all the letters occurring more\
    \ than once in the input string'\n    For example:\n    >>> letterRepeat(\"Hello\"\
    )\n    \"ello\"\n    >>> letterRepeat(\"abca\")\n    \"abca\"\n*/\nstring letterRepeat(string\
    \ s)\n{\n    for(int i=0;i<s.length();i++)\n    {\n        char c=s[i];\n    \
    \    if(s.find(c)!=s.length())\n        {\n            return s.substr(0,i) +\
    \ c + s.substr(i+1);\n        }\n    }\n    return \"\";\n}\n/*\nTask\n    Write\
    \ a function that takes a string and returns the number of occurrences of each\
    \ letter in the input string'\n    For example:\n    >>> letterCount(\"abca\"\
    )\n    { 'a': 2, 'b': 1, 'c': 1 }\n*/\nmap<char,int> letterCount(string s)\n{\n\
    \    map<char,int> m;\n    for(int i=0;i<s.length();i++)\n    {\n        char\
    \ c=s[i];\n        if(!m.contains(c))\n        {\n            m[c]++;\n      \
    \  }\n    }\n    return m;\n}\n/*\nTask\n    Write a function that takes a string\
    \ as input and returns a map that maps each character to a list of indices at\
    \ which the character occurs in that string.\n    For example:\n    >>> stringIndexMap(\"\
    abca\")\n    { 'a': [0, \nunittest\n{\n    alias candidate = digitSum;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n \
    \   assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1s7swjza.d(103): Error: no identifier for declarator map\n/tmp/tmp1s7swjza.d(103):
    Error: Declaration expected, not \''<\''\n/tmp/tmp1s7swjza.d(106): Error: Declaration
    expected, not \''for\''\n/tmp/tmp1s7swjza.d(106): Error: no identifier for declarator
    i\n/tmp/tmp1s7swjza.d(106): Error: Declaration expected, not \''<\''\n/tmp/tmp1s7swjza.d(106):
    Error: no identifier for declarator i\n/tmp/tmp1s7swjza.d(106): Error: Declaration
    expected, not \''++\''\n/tmp/tmp1s7swjza.d(109): Error: Declaration expected,
    not \''if\''\n/tmp/tmp1s7swjza.d(112): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1s7swjza.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0L;\n    int\
    \ sum = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == 'a')\
    \ sum += 26;\n        if (s[i] == 'b') sum += 26;\n        if (s[i] == 'c') sum\
    \ += 26;\n        if (s[i] == 'd') sum += 26;\n        if (s[i] == 'e') sum +=\
    \ 26;\n        if (s[i] == 'f') sum += 26;\n        if (s[i] == 'g') sum += 26;\n\
    \        if (s[i] == 'h') sum += 26;\n        if (s[i] == 'i') sum += 26;\n  \
    \      if (s[i] == 'j') sum += 26;\n        if (s[i] == 'k') sum += 26;\n    \
    \    if (s[i] == 'l') sum += 26;\n        if (s[i] == 'm') sum += 26;\n      \
    \  if (s[i] == 'n') sum += 26;\n        if (s[i] == 'o') sum += 26;\n        if\
    \ (s[i] == 'p') sum += 26;\n        if (s[i] == 'q') sum += 26;\n        if (s[i]\
    \ == 'r') sum += 26;\n        if (s[i] == 's') sum += 26;\n        if (s[i] ==\
    \ 't') sum += 26;\n        if (s[i] == 'u') sum += 26;\n        if (s[i] == 'v')\
    \ sum += 26;\n        if (s[i] == 'w') sum += 26;\n        if (s[i] == 'x') sum\
    \ += 26;\n        if (s[i] == 'y') sum += 26;\n        if (s[i] == 'z') sum +=\
    \ 26;\n    }\n    sum += sum;\n    return sum;\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThis is nice, but it's way too slow for my tastes. :)\n<|/ c |>\n<| c\
    \ |>\nI agree that it's way too slow for my tastes, but it is the only answer\
    \ I can think of that doesn't use a hash table. The \"unbounded stream\" solution\
    \ is very elegant, though.\n<|/ c |>\n<| c |>\nThanks for your answer.  I'm pretty\
    \ sure I've seen this before, but I never bothered searching because I thought\
    \ my method wasn't clever.  I guess it's time to go grab a big beer or two.  :-)\n\
    <|/ c |>\n<| c |>\nI wonder how many answers would this get... (the one that uses\
    \ `toCharArray`).  If you look at my answer you will see that my method does not\
    \ use that method!\n<|/ c |>\n<| c |>\n: I believe your answer is the most comprehensive\
    \ and I upvoted it. I also believe that using an explicit hash table for this\
    \ is overkill - your answer is fine. However I wonder if there was a better algorithm\
    \ for it. Maybe the idea of using a [\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpipk3mdg6.d(58): Error: Declaration expected, not \''<\''\n/tmp/tmpipk3mdg6.d(61):
    Error: unterminated character constant\n/tmp/tmpipk3mdg6.d(64): Error: unterminated
    character constant\n/tmp/tmpipk3mdg6.d(64): Error: unterminated character constant\n/tmp/tmpipk3mdg6.d(67):
    Error: unterminated character constant\n/tmp/tmpipk3mdg6.d(67): Error: unterminated
    character constant\n/tmp/tmpipk3mdg6.d(67): Error: unterminated character constant\n/tmp/tmpipk3mdg6.d(67):
    Error: unterminated character constant\n/tmp/tmpipk3mdg6.d(78): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpipk3mdg6.d(79): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpipk3mdg6.d(80): Error: Declaration expected, not \''assert\''\n/tmp/tmpipk3mdg6.d(81):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpipk3mdg6.d(82): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpipk3mdg6.d(83): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpipk3mdg6.d(84): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpipk3mdg6.d(85): Error: Declaration expected, not \''assert\''\n/tmp/tmpipk3mdg6.d(86):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpipk3mdg6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(string::iterator\
    \ it = s.begin(); it!=s.end(); ++it)\n    {\n        sum += tolower(*it) - '0';\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,string,algorithm\
    \ dscore=0 |>\n<code>\n#include<iostream>\n#include<string>\nunittest\n{\n   \
    \ alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsq3hare7.d(26): Error: found \'':\'' instead of statement\n/tmp/tmpsq3hare7.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmpsq3hare7.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpsq3hare7.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpsq3hare7.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmpsq3hare7.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpsq3hare7.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpsq3hare7.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpsq3hare7.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpsq3hare7.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmpsq3hare7.d(50):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsq3hare7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    for(char c: s)\n    {\n\
    \        if(c>='A' && c<='Z') return c + digitSum(s.erase(s.begin()+c));\n   \
    \ }\n    return 0L;\n}\n</code>\n<|/ a dscore=0 tags=string,recursion,c++ |>\n\
    <| a dscore=0 |>\nHere is my version:\n<code>\n// A function that takes a string\
    \ and returns the sum of the upper characters only' ASCII codes.\nunittest\n{\n\
    \    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp86ym60rz.d(25): Error: semicolon expected, not \'':\''\n/tmp/tmp86ym60rz.d(25):
    Error: expression expected, not \'':\''\n/tmp/tmp86ym60rz.d(25): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmp86ym60rz.d(31):
    Error: Declaration expected, not \''<\''\n/tmp/tmp86ym60rz.d(41): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp86ym60rz.d(42): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp86ym60rz.d(43): Error: Declaration expected, not \''assert\''\n/tmp/tmp86ym60rz.d(44):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp86ym60rz.d(45): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp86ym60rz.d(46): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp86ym60rz.d(47): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp86ym60rz.d(48): Error: Declaration expected, not \''assert\''\n/tmp/tmp86ym60rz.d(49):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp86ym60rz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int i;\n    long num =\
    \ 0;\n    for(i=0;i<s.length();i++)\n    {\n        if(s.chars[i] > 'A')\n   \
    \     {\n            num = num + s.chars[i] - 'A' + 10;\n        }\n    }\n  \
    \  return num;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 tags=string,c++,c,char\
    \ |>\nHere is another solution that uses only standard library\n<code>\n#include\
    \ <iostream>\n#include <cctype>\n#include <cstring>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmputo2yo6k.d(36): Error: Declaration expected, not \''<\''\n/tmp/tmputo2yo6k.d(48):
    Error: Declaration expected, not \''assert\''\n/tmp/tmputo2yo6k.d(49): Error:
    Declaration expected, not \''assert\''\n/tmp/tmputo2yo6k.d(50): Error: Declaration
    expected, not \''assert\''\n/tmp/tmputo2yo6k.d(51): Error: Declaration expected,
    not \''assert\''\n/tmp/tmputo2yo6k.d(52): Error: Declaration expected, not \''assert\''\n/tmp/tmputo2yo6k.d(53):
    Error: Declaration expected, not \''assert\''\n/tmp/tmputo2yo6k.d(54): Error:
    Declaration expected, not \''assert\''\n/tmp/tmputo2yo6k.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmputo2yo6k.d(56): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmputo2yo6k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    foreach(char\
    \ a : s) \n    {\n        if(isUpper(a)) \n            sum += toLower(a) - 'A';\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=java,string |>\n<| a tags=java,string\
    \ |>\n<code>\npublic long getSumUpper(String s) {\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); ++i) {\n        char c = s.charAt(i);\n        if\
    \ (isUpper(c))\n            sum += toUpper(c) - 'A';\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=3 |>\n<| a dscore=2 |>\n<code>\npublic class Sum {\n\
    \    public static void main(String[] args) {\n        System.out.println(sum(\"\
    \"));\n    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdhlaui8m.d(26): Error: found \'':\'' when expecting \'';\''\n/tmp/tmpdhlaui8m.d(33):
    Error: Declaration expected, not \''<\''\n/tmp/tmpdhlaui8m.d(39): Error: Declaration
    expected, not \''for\''\n/tmp/tmpdhlaui8m.d(39): Error: no identifier for declarator
    i\n/tmp/tmpdhlaui8m.d(39): Error: Declaration expected, not \''<\''\n/tmp/tmpdhlaui8m.d(39):
    Error: Declaration expected, not \''++\''\n/tmp/tmpdhlaui8m.d(41): Error: Declaration
    expected, not \''if\''\n/tmp/tmpdhlaui8m.d(43): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhlaui8m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(int\
    \ i=0; i<s.length(); i++)\n    {\n        if(isUpper(s.charAt(i)))\n         \
    \   sum += toUpper(s.charAt(i));\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,ascii\
    \ dscore=0 |>\n<| c |>\nPlease don't use backticks for your code, especially not\
    \ when it's already in `code block` format. Thanks.\n<|/ c |>\n<| c |>\nAh ok\
    \ thanks. Did not know it was. Just used it because it was in the backticks section\
    \ of markdown.\n<|/ c |>\n<| c |>\nYou don't need backticks to format a code block.\
    \ Just indent your code with four spaces. [This post](https://stackoverflow.com/editing-help)\
    \ explains the formatting rules for Markdown.\n<|/ c |>\n<| c |>\nI have edited\
    \ the code with the code block and removed the backticks section. But as you can\
    \ see it did not work as I hoped. I am still getting some weird numbers like \"\
    \xDB\xC5\xCC\xC2\xD2\xC0\xDB\xC9\xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\
    \xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\
    \xCC\xC0\xDB\xC9\xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\xC2\xCE\xE2\xDD\
    \xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\
    \xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\
    \xCC\xC0\xDB\xC9\xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\xC2\xCE\xE2\xDD\
    \xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\xCC\xC0\xDB\xC9\
    \xC2\xCE\xE2\xDD\xD4\xCC\xC2\xCD\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph15u904j.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmph15u904j.d(36):
    Error: unterminated character constant\n/tmp/tmph15u904j.d(36): Error: unterminated
    character constant\n/tmp/tmph15u904j.d(42): Error: unterminated character constant\n/tmp/tmph15u904j.d(57):
    Error: unterminated string constant starting at /tmp/tmph15u904j.d(57)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph15u904j.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for (int i = 0; i < s.length(); i++)\n    {\n        result += (char)s.codePointAt(i)\
    \ + 48;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc5j_qro7.d(28): Error: C style cast illegal, use cast(char)s.codePointAt(i)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5j_qro7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(char\
    \ c, s)\n    {\n        sum += std.math.toUpper(c);\n    }\n    return sum;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=2 |>\nA little less verbose but with using of\
    \ std.range:\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp05llh9l4.d(26): Error: no identifier for declarator s\n/tmp/tmp05llh9l4.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmp05llh9l4.d(30): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmp05llh9l4.d(32): Error: Declaration
    expected, not \''<\''\n/tmp/tmp05llh9l4.d(41): Error: Declaration expected, not
    \''assert\''\n/tmp/tmp05llh9l4.d(42): Error: Declaration expected, not \''assert\''\n/tmp/tmp05llh9l4.d(43):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp05llh9l4.d(44): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp05llh9l4.d(45): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp05llh9l4.d(46): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp05llh9l4.d(47): Error: Declaration expected, not \''assert\''\n/tmp/tmp05llh9l4.d(48):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp05llh9l4.d(49): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp05llh9l4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(i,\
    \ s)\n    {\n        if (i == 'a' || i == 'A') sum += 1;\n    }\n    return sum;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\nI think this would be much easier\
    \ using charAt, like this:\n<code>\nString s = \"abAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaAaA\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt1pube2u.d(26): Error: no identifier for declarator s\n/tmp/tmpt1pube2u.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpt1pube2u.d(30): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmpt1pube2u.d(32): Error: Declaration
    expected, not \''<\''\n/tmp/tmpt1pube2u.d(49): Error: unterminated string constant
    starting at /tmp/tmpt1pube2u.d(49)\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpt1pube2u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        if(s[i]>='A' && s[i]<='Z')\n         \
    \   sum+=(int)s[i]-(int)'A';\n        else\n            sum+=(int)s[i]-(int)'a';\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\n`char` should be `char`,\
    \ not `char&`\n<|/ c |>\n<| c |>\nAlso, `std::stoi` takes a string, and `std::string`\
    \ has an `operator[]` overload that takes a `size_t`, so `i` should not be a `size_t`.\n\
    <|/ c |>\n<| c |>\nI think this answer could be improved upon, because I believe\
    \ it can be done more efficiently and less lines of code as well.\n<|/ c |>\n\
    <| c |>\nThe answer from is really good but is very hard to understand.\n<|/ c\
    \ |>\n<| a tags=c++,algorithm |>\n<code>\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7zn7__th.d(29): Error: C style cast illegal, use cast(int)s[i]\n/tmp/tmp7zn7__th.d(29):
    Error: C style cast illegal, use cast(int)\''A\''\n/tmp/tmp7zn7__th.d(31): Error:
    C style cast illegal, use cast(int)s[i]\n/tmp/tmp7zn7__th.d(31): Error: C style
    cast illegal, use cast(int)\''a\''\n/tmp/tmp7zn7__th.d(35): Error: Declaration
    expected, not \''<\''\n/tmp/tmp7zn7__th.d(55): Error: Declaration expected, not
    \''assert\''\n/tmp/tmp7zn7__th.d(56): Error: Declaration expected, not \''assert\''\n/tmp/tmp7zn7__th.d(57):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7zn7__th.d(58): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp7zn7__th.d(59): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp7zn7__th.d(60): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp7zn7__th.d(61): Error: Declaration expected, not \''assert\''\n/tmp/tmp7zn7__th.d(62):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7zn7__th.d(63): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7zn7__th.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for(int\
    \ i=0;i<s.size();++i)\n    {\n        char c = s[i];\n        sum += toint(c);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,string,arrays |>\n<| c |>\n\
    Your solution is much more elegant, thanks for sharing!\n<|/ c |>\n<| c |>\nThis\
    \ fails to take case into account.\n<|/ c |>\n<| a tags=c++,string,arrays |>\n\
    <code>\n#include<iostream>\n#include<string>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplvm4u9ws.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmplvm4u9ws.d(49):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplvm4u9ws.d(50): Error:
    Declaration expected, not \''assert\''\n/tmp/tmplvm4u9ws.d(51): Error: Declaration
    expected, not \''assert\''\n/tmp/tmplvm4u9ws.d(52): Error: Declaration expected,
    not \''assert\''\n/tmp/tmplvm4u9ws.d(53): Error: Declaration expected, not \''assert\''\n/tmp/tmplvm4u9ws.d(54):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplvm4u9ws.d(55): Error:
    Declaration expected, not \''assert\''\n/tmp/tmplvm4u9ws.d(56): Error: Declaration
    expected, not \''assert\''\n/tmp/tmplvm4u9ws.d(57): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplvm4u9ws.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  int sum = 0;\n  for (int\
    \ i=0; i<s.length(); i++)\n  {\n    if (s[i]>='A' && s[i]<='Z')\n      sum +=\
    \ s[i] - 'A' + 1;\n  }\n  return sum;\n}\n</code>\n<|/ a tags=java,string,arrays\
    \ |>\n<| c |>\nThis does not give an answer to the question.\n<|/ c |>\n<| a |>\n\
    Here's another approach:\n<code>\n    String s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ;\n    long sum = 0;\n    for (int i = 0; i < s.length(); i++) {\n        char\
    \ c = s.charAt(i);\n        if (c >= 'A' && c <= 'Z') {\n            sum += c\
    \ - 'A' + 1;\n        }\n    }\n    System.out.println(sum);\n</code>\n<|/ a dscore=2\
    \ tags=java,string,arrays |>\n<| c |>\nThat's what `charAt(i)` is for.\n<|/ c\
    \ |>\n<| a |>\nAnother approach:\n<code>\npublic static void main(String[] args)\
    \ {\n    String s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length(); i++) {\n        char c = s.charAt(i);\n        if\
    \ (c >= 'A' && c <= 'Z') {\n            sum += c - 'A' + 1;\n        }\n    }\n\
    \    System.out.println(sum);\n}\n</code>\n<|/ a dscore=2 tags=java,string,arrays\
    \ |>\n<| a tags=java,string,arrays |>\n<code>\nprivate static final int[] UPPER\
    \ = {\n  0x0041,0x0042,0x0043,0x0044,0x0045,0x0046,0x0047,\n  0x0048,0x0049,0x004A,0x004B,0x004C,0x004D,0x004E,\n\
    \  0x004F,0x0050,0x0051,0x0052,0x0053,0x0054,0x0055,\n  0x0056,0x0057,0x0058,0x0059,0x005A,0x005B,0x005C,\n\
    \  0x005D,0x005E,0x005F,0x0060,0x0061,0x0062,0x0063,\n  0x0064,0x0065,0x0066,0x0067,0x0068,0x0069,0x006A,\n\
    \  0x006B,0x006C,0x006D,0x006E,0x006F,0x0070,0x0071,\n  0x0072,0x0073,0x0074,0x0075,0x0076,0x0077,0x0078,\n\
    \  0x0079,0x007A,0x0041,0x0042,0x0043,0x0044,0x0045,\n  0x0046,0x0047\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg5lx7msm.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmpg5lx7msm.d(39):
    Error: unterminated character constant\n/tmp/tmpg5lx7msm.d(43): Error: Declaration
    expected, not \''for\''\n/tmp/tmpg5lx7msm.d(43): Error: no identifier for declarator
    i\n/tmp/tmpg5lx7msm.d(43): Error: Declaration expected, not \''<\''\n/tmp/tmpg5lx7msm.d(43):
    Error: no identifier for declarator i\n/tmp/tmpg5lx7msm.d(43): Error: Declaration
    expected, not \''++\''\n/tmp/tmpg5lx7msm.d(45): Error: Declaration expected, not
    \''if\''\n/tmp/tmpg5lx7msm.d(47): Error: unrecognized declaration\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpg5lx7msm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  long sum;\n  for(int i=0;i<s.length();i++)\n\
    \  {\n    if(s[i]<='Z' && s[i]>='a')\n    {\n      sum = sum + (s[i]-'A');\n \
    \   }\n    else\n    {\n      sum = sum;\n    }\n  }\n  return sum;\n}\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9tvo1_yy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong sum = 0;\n\tfor(int\
    \ i = 0; i < s.length(); i++)\n\t{\n\t\tif(s.substring (i, i+1) != \"A\" && s.substring\
    \ (i, i+1) != \"a\")\n\t\t{\n\t\t\tsum += (s.substring (i, i+1) - '0');\n\t\t\
    }\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n \
    \   assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4z9s3twi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(int\
    \ i = 0; i<s.length();i++){\n        sum += std.math.digitValue(s.at(i));\n  \
    \  }\n    return sum;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\nYou could also\
    \ do it in one line like that:\n<code>\nlong sum = new string(s.Select(x => char.IsUpper(x)\
    \ ? char.ToUpper(x) : x));\n</code>\n<|/ a dscore=0 tags=c# |>\n<| a dscore=0\
    \ tags=c# |>\nA simple solution with O(n) time complexity would be:\n<code>\n\
    static long SumUpperASCII(string str)\n{\n    long sum = 0;\n    foreach(var ch\
    \ in str)\n    {\n        if(char.IsUpper(ch))\n        {\n            sum +=\
    \ (long)ch;\n        }\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| a dscore=0\
    \ |>\n<code>\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\
    using System.Text;\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbkb8b0gm.d(31): Error: Declaration expected, not \''<\''\n/tmp/tmpbkb8b0gm.d(37):
    Error: Declaration expected, not \''<\''\n/tmp/tmpbkb8b0gm.d(45): Error: Declaration
    expected, not \''foreach\''\n/tmp/tmpbkb8b0gm.d(50): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbkb8b0gm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for\
    \ (auto c: s) {\n        if (c.isUpper()) {\n            sum += c.digitValue();\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| c |>\nThis is an\
    \ interesting approach, but I don't think it is quite right, because of the requirement\
    \ for the input to be a string. Further, this does something quite different from\
    \ what the OP asked for, which is the summation of the ASCII codes of the individual\
    \ characters of the input string.\n<|/ c |>\n<| c |>\nThis is just a way to convert\
    \ the input to lowercase, so that we don't have to do that every time.\n<|/ c\
    \ |>\n<| c |>\nI don't think this is correct. `digitSum(\"A\")` returns `65`,\
    \ not `65L`. And why are you using `foreach` instead of `for`?\n<|/ c |>\n<| c\
    \ |>\n, you're right, I updated the answer. I'm not sure why I used `foreach`\
    \ instead of `for`, but I had to convert a foreach loop into `for` loop to make\
    \ it work. Hopefully that doesn't matter. Anyway, that's how I did it.\n<|/ c\
    \ |>\n<| c |>\nIf you use `foreach`, you also need to `import std.array;` before\
    \ you can use `toLower` from it.\n<|/ c |>\n<| a dscore=2 tags=string,sum,char,d\
    \ |>\n<code>\nstring toUpper(string s) {\n    auto len = s.length, sb = cast(ubyte[])(new\
    \ char[len]);\n    foreach (i, ch; s) sb[sb.size - i - 1] = toUpper(ch);\n   \
    \ return string(sb);\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfkzlf555.d(26): Error: no identifier for declarator c\n/tmp/tmpfkzlf555.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpfkzlf555.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpfkzlf555.d(33):
    Error: Declaration expected, not \''<\''\n/tmp/tmpfkzlf555.d(36): Error: unterminated
    character constant\n/tmp/tmpfkzlf555.d(39): Error: unterminated character constant\n/tmp/tmpfkzlf555.d(42):
    Error: unterminated character constant\n/tmp/tmpfkzlf555.d(45): Error: unterminated
    character constant\n/tmp/tmpfkzlf555.d(45): Error: unterminated character constant\n/tmp/tmpfkzlf555.d(45):
    Error: unterminated character constant\n/tmp/tmpfkzlf555.d(45): Error: unterminated
    character constant\n/tmp/tmpfkzlf555.d(54): Error: Declaration expected, not \''foreach\''\n/tmp/tmpfkzlf555.d(54):
    Error: no identifier for declarator s\n/tmp/tmpfkzlf555.d(54): Error: Declaration
    expected, not \'')\''\n/tmp/tmpfkzlf555.d(55): Error: Declaration expected, not
    \''return\''\n/tmp/tmpfkzlf555.d(56): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfkzlf555.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if(s.length() == 0)\n\
    \        return 0L;\n    long sum = 0;\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        sum += s[i] - 'A' + 1;\n    }\n    return sum;\n}\n</code>\n<|/\
    \ a tags=c#,string |>\n<| a |>\n<code>\npublic static int digitSum(String str)\
    \ {\n    int sum = 0;\n    for (int i = 0; i < str.length(); i++) {\n        if\
    \ ('A' <= str.charAt(i) && str.charAt(i) <= 'Z')\n            sum += str.charAt(i)\
    \ - 'A' + 1;\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=1 tags=c#,string\
    \ |>\n<| a |>\nHere's a solution in Python:\n<code>\n# Function to find the sum\
    \ of upper-case letters in a string\ndef sum_upper_case_letters(strng):\n    #\
    \ Empty string will result in zero\n    if len(strng) == 0:\n        return 0\n\
    \    sum = 0\n    # Iterate over each character in the string and check if it\
    \ is upper case\n    for c in strng:\n        if c.isupper():\n            sum\
    \ += ord(c) - 65 + 1 # 65 = 'A'\n    return sum\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5b72956e.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmp5b72956e.d(40):
    Error: Declaration expected, not \''for\''\n/tmp/tmp5b72956e.d(40): Error: no
    identifier for declarator i\n/tmp/tmp5b72956e.d(40): Error: Declaration expected,
    not \''<\''\n/tmp/tmp5b72956e.d(40): Error: no identifier for declarator i\n/tmp/tmp5b72956e.d(40):
    Error: Declaration expected, not \''++\''\n/tmp/tmp5b72956e.d(43): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5b72956e.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    if(s.length == 0) return\
    \ 0L;\n    long sum = 0L;\n    for(int i=0; i<s.length; ++i)\n    {\n        long\
    \ l = to!int(s[i]);\n        sum += l < 65 ? l+9 : l;\n    }\n    return sum;\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphi1gm6wq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i=0; i<s.length; ++i)\n    {\n        if (isprint(s[i]))\n            sum\
    \ += s[i];\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprg1y5p2k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach(int\
    \ i,s) {\n        if (i<32)\n            sum += i;\n    }\n    return sum;\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=c#,c++ |>\nThis one works for me:\n<code>\n\
    using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\
    using System.Threading.Tasks;\nunittest\n{\n    alias candidate = digitSum;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekjb30_o.d(26): Error: no identifier for declarator s\n/tmp/tmpekjb30_o.d(26):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpekjb30_o.d(30): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmpekjb30_o.d(32): Error: Declaration
    expected, not \''<\''\n/tmp/tmpekjb30_o.d(38): Error: semicolon expected, not
    \''.\''\n/tmp/tmpekjb30_o.d(38): Error: no identifier for declarator .Collections.Generic\n/tmp/tmpekjb30_o.d(39):
    Error: semicolon expected, not \''.\''\n/tmp/tmpekjb30_o.d(39): Error: no identifier
    for declarator .Linq\n/tmp/tmpekjb30_o.d(40): Error: semicolon expected, not \''.\''\n/tmp/tmpekjb30_o.d(40):
    Error: no identifier for declarator .Text\n/tmp/tmpekjb30_o.d(41): Error: semicolon
    expected, not \''.\''\n/tmp/tmpekjb30_o.d(41): Error: no identifier for declarator
    .Threading.Tasks\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekjb30_o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n   long sum = 0L;\n   foreach\
    \ (char c in s) \n   {\n      if (c >= 'a' && c <= 'z') sum += (c - 'a');\n  \
    \ }\n   return sum;\n}\n</code>\n<|/ a tags=c++,std |>\n<| c |>\nThis would actually\
    \ be my preferred approach to this problem. Good job!\n<|/ c |>\n<| a dscore=1\
    \ |>\nI think this is what you need\n<code>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9jx7zvye.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmp9jx7zvye.d(32):
    Error: Declaration expected, not \''<\''\n/tmp/tmp9jx7zvye.d(44): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9jx7zvye.d(45): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9jx7zvye.d(46): Error: Declaration expected, not \''assert\''\n/tmp/tmp9jx7zvye.d(47):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp9jx7zvye.d(48): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp9jx7zvye.d(49): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9jx7zvye.d(50): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9jx7zvye.d(51): Error: Declaration expected, not \''assert\''\n/tmp/tmp9jx7zvye.d(52):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9jx7zvye.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum=0;\n    foreach(char\
    \ c in s) {\n        if(c.isupper()) {\n            sum+=(int)c;\n        }\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a |>\n<| a tags=string,c++,arrays,sum\
    \ |>\nHere's another way:\n<code>\nstring s = \"Hello, world!\";\nunittest\n{\n\
    \    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvb56v8_z.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmpvb56v8_z.d(28):
    Error: C style cast illegal, use cast(int)c\n/tmp/tmpvb56v8_z.d(33): Error: Declaration
    expected, not \''<\''\n/tmp/tmpvb56v8_z.d(36): Error: unterminated character constant\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvb56v8_z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    return digitSum(s.toCharArray());\n\
    }\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\")\
    \ == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg44ue_f_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        char c=s[i];\n        sum+=c;\n    }\n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgb84r7lt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    for (int\
    \ i=0; i<s.length(); i++) {\n        sum+=tointeger(s[i],isupper());\n    }\n\
    \    return sum;\n}\n/*\nTask\n    Write a function that takes a string as input\
    \ and returns the product of the upper characters only'\n    ASCII codes.\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkj3_ouyg.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpkj3_ouyg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        sum += std.algorithm.toUpperCase(s.codePointAt(i));\n\
    \    }\n    return sum;\n}\n'''\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd2a4wynv.d(32): Error: unterminated character constant\n/tmp/tmpd2a4wynv.d(32):
    Error: Declaration expected, not \''23809136U\''\n/tmp/tmpd2a4wynv.d(32): Error:
    unterminated character constant\n/tmp/tmpd2a4wynv.d(37): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpd2a4wynv.d(38): Error: Declaration expected, not \''assert\''\n/tmp/tmpd2a4wynv.d(39):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpd2a4wynv.d(40): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpd2a4wynv.d(41): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpd2a4wynv.d(42): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpd2a4wynv.d(43): Error: Declaration expected, not \''assert\''\n/tmp/tmpd2a4wynv.d(44):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpd2a4wynv.d(45): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd2a4wynv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n   long result = 0;\n   for(int\
    \ i =0; i < s.length; i++){\n      if(s[i] >= 'A' && s[i] <= 'Z')\n         result\
    \ += s[i] - 'A' + 10;\n   }\n   return result;\n}\n</code>\n<|/ a dscore=3 |>\n\
    <| a tags=c++,c++11 |>\nHere is another solution to the problem:\n<code>\n#include\
    \ <iostream>\n#include <iomanip>\n#include <string>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeit0ew_r.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmpeit0ew_r.d(44):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpeit0ew_r.d(45): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpeit0ew_r.d(46): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpeit0ew_r.d(47): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpeit0ew_r.d(48): Error: Declaration expected, not \''assert\''\n/tmp/tmpeit0ew_r.d(49):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpeit0ew_r.d(50): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpeit0ew_r.d(51): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpeit0ew_r.d(52): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeit0ew_r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tlong result = 0L;\n\tint\
    \ n = s.length();\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tresult += std.char.digit(s.at(i),\
    \ 0); \n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2_owrpm9.d(29): Error: identifier expected following \''.\'',
    not \''char\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2_owrpm9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0; \n    foreach\
    \ (char c; s) { \n        if (char.IsUpper(c)) { \n            sum += (int)c;\
    \ \n        } \n    }\n    return sum; \n}\n</code>\n<|/ a tags=c# |>\n<| c |>\n\
    Thank you! But as I'm a complete newbie in programming, I would like to ask, how\
    \ can you test the code? I mean what do I need to put in the main method so that\
    \ it compiles and runs? And what do I write in the code editor to run the program?\n\
    <|/ c |>\n<| c |>\nI added a test method that you can use\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n    using System;\nunittest\n{\n    alias candidate = digitSum;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdz9988uf.d(28): Error: C style cast illegal, use cast(int)c\n/tmp/tmpdz9988uf.d(33):
    Error: Declaration expected, not \''<\''\n/tmp/tmpdz9988uf.d(36): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdz9988uf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    for\
    \ (unsigned i = 0; i < s.length(); i++) {\n        char ch = s[i];\n        sum\
    \ += (ch-65) * (ch-65);\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=2 |>\n\
    <| a tags=c++,algorithm |>\nThis is my attempt at a pure C++ solution. I did not\
    \ test it, but I believe it should work:\n<code>\n#include <cctype>\n#include\
    \ <string>\n#include <sstream>\n#include <numeric>\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsxp7woca.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmpsxp7woca.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpsxp7woca.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpsxp7woca.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpsxp7woca.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpsxp7woca.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmpsxp7woca.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpsxp7woca.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpsxp7woca.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpsxp7woca.d(53): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsxp7woca.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    for\
    \ (int i = 0; i < s.length; ++i)\n    {\n        sum += toUpper(s[i]) - 'A' +\
    \ 1L;\n    }\n    return sum;\n}\n</code>\n<|/ a tags=c++,string,uppercase dscore=0\
    \ |>\n<| a dscore=0 |>\nThis simple solution works with any character sets, not\
    \ just ASCII. Also it uses a std::vector\n<code>\nlong upperCaseSum(string s)\n\
    {\n    vector<int> counts;\nunittest\n{\n    alias candidate = digitSum;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpreqy0d69.d(32): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpreqy0d69.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    foreach\
    \ (char c in s)\n    {\n        if((int)c < 65)\n            sum += (int)c;\n\
    \    }\n    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n\
    \    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") ==\
    \ 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4y907mcn.d(26): Error: found \''in\'' when expecting \'';\''\n/tmp/tmp4y907mcn.d(28):
    Error: C style cast illegal, use cast(int)c\n/tmp/tmp4y907mcn.d(29): Error: C
    style cast illegal, use cast(int)c\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp4y907mcn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int total = 0;\n    for\
    \ (char c : s) \n    {\n        total += int(c);\n    }\n    return total;\n}\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq5dzsmku.d(26): Error: semicolon expected, not \'':\''\n/tmp/tmpq5dzsmku.d(26):
    Error: expression expected, not \'':\''\n/tmp/tmpq5dzsmku.d(26): Error: found
    \''s\'' when expecting \'';\'' following for condition\n/tmp/tmpq5dzsmku.d(28):
    Error: found \''(\'' when expecting \''.\'' following int\n/tmp/tmpq5dzsmku.d(28):
    Error: found \'')\'' when expecting \'';\'' following statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpq5dzsmku.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    \n\tlong sum = 0;\n  \
    \  \n\tfor (int i = 0; i < s.length(); i++)\n\t{\n\t\t\n\t\tint d = (int)s.at(i);\n\
    \t\t\n\t\tsum += (d >= 'A' && d <= 'Z') ? d - 'A' : d;\n\t\t\n\t}\n\t\n\treturn\
    \ sum;\n    \n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplr8dkv4d.d(31): Error: C style cast illegal, use cast(int)s.at(i)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplr8dkv4d.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ for (int i=0; i<s.length(); i++)\n    {\n        int code = s.codePointAt(i);\n\
    \        result += (code >= 65 && code <= 90) ? code - 65 : code - 97;\n    }\n\
    \    return result;\n}\n'''\n'''\nSolution\n'''\ndigitSum = '''\nimport std.array;\n\
    import std.random;\nimport std.random;\nimport std.string;\nimport std.random;\n\
    import std.array;\nimport std.algorithm: map;\nimport std.stdio;\nimport std.math;\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9ametsn1.d(33): Error: unterminated character constant\n/tmp/tmp9ametsn1.d(33):
    Error: Declaration expected, not \''0U\''\n/tmp/tmp9ametsn1.d(33): Error: unterminated
    character constant\n/tmp/tmp9ametsn1.d(34): Error: unterminated character constant\n/tmp/tmp9ametsn1.d(34):
    Error: unterminated character constant\n/tmp/tmp9ametsn1.d(36): Error: unterminated
    character constant\n/tmp/tmp9ametsn1.d(36): Error: unterminated character constant\n/tmp/tmp9ametsn1.d(37):
    Error: unterminated character constant\n/tmp/tmp9ametsn1.d(37): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9ametsn1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum = 0;\n    \n\
    \    foreach(char c in s) \n    {\n        if(c >= 'A' && c <= 'Z') \n       \
    \     sum += c - 'A' + 1;\n        else\n            sum += c;\n    }\n    \n\
    \    return sum;\n}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6j9_5b3b.d(27): Error: found \''in\'' when expecting \'';\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6j9_5b3b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long result = 0;\n   \
    \ int i = 0;\n    for(i =0; i<s.length(); i++){\n        if (s[i] == 'A'){\n \
    \           result += 96;\n        }else if (s[i] == 'a'){\n            result\
    \ += 97;\n        }else if (s[i] == 'B'){\n            result += 98;\n       \
    \ }else if (s[i] == 'b'){\n            result += 99;\n        }else if (s[i] ==\
    \ 'C'){\n            result += 100;\n        }else if (s[i] == 'c'){\n       \
    \     result += 101;\n        }else if (s[i] == 'D'){\n            result += 102;\n\
    \        }else if (s[i] == 'd'){\n            result += 103;\n        }else if\
    \ (s[i] == 'E'){\n            result += 104;\n        }else if (s[i] == 'e'){\n\
    \            result += 105;\n        }else if (s[i] == 'F'){\n            result\
    \ += 106;\n        }else if (s[i] == 'f'){\n            result += 107;\n     \
    \   }else if (s[i] == 'G'){\n            result += 108;\n        }else if (s[i]\
    \ == 'g'){\n            result += 109;\n        }else if (s[i] == 'H'){\n    \
    \        result += 110;\n        }else if (s[i] == 'h'){\n            result +=\
    \ 111;\n        }else if (s[i] == 'I'){\n            result += 112;\n        }else\
    \ if (s[i] == 'i'){\n            result += 113;\n        }else if (s[i] == 'J'){\n\
    \            result += 114;\n        }else if (s[i] == 'j'){\n            result\
    \ += 115;\n        }else if (s[i] == 'K'){\n            result += 116;\n     \
    \   }else if (s[i] == 'k'){\n            result += 117;\n        }else if (s[i]\
    \ == 'L'){\n            result += 118;\n        }else if (s[i] == 'l'){\n    \
    \        result += 119;\n        }else if (s[i] == 'M'){\n            result +=\
    \ 120;\n        }else if (s[i] == 'm'){\n            result += 121;\n        }else\
    \ if (s[i] == 'N'){\n            result += 122;\n        }else if (s[i] == 'n'){\n\
    \            result += 123;\n        }else if (s[i] == 'O'){\n            result\
    \ += 124;\n        }else if (s[i] == 'o'){\n            result += 125;\n     \
    \   }else if (s[i] == 'P'){\n            result += 126;\n        }else if (s[i]\
    \ == 'p'){\n            result += 127;\n        }else if (s[i] == 'Q'){\n    \
    \        result += 128;\n        }else if (s[i] == 'q'){\n            result +=\
    \ 129;\n        }else if (s[i] == 'R'){\n            result += 130;\n        }else\
    \ if (s[i] == 'r'){\n            result += 131;\n        }else if (s[i] == 'S'){\n\
    \            result += 132;\n        }else if (s[i] == 's'){\n            result\
    \ += 133;\n        }else if (s[i] == 'T'){\nunittest\n{\n    alias candidate =\
    \ digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgzhf183h.d(105): Error: found \''unittest\'' instead of statement\n/tmp/tmpgzhf183h.d(118):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpgzhf183h.d(118):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzhf183h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long res = 0;\n    foreach(char,s)\
    \ {\n        res = res + toupper(s.charAt(0));\n    }\n    return res;\n}\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzsxp66gc.d(26): Error: no identifier for declarator char\n/tmp/tmpzsxp66gc.d(26):
    Error: no identifier for declarator s\n/tmp/tmpzsxp66gc.d(26): Error: found \'')\''
    when expecting \'';\''\n/tmp/tmpzsxp66gc.d(29): Error: found \''return\'' when
    expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzsxp66gc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n\tmap<string,long> hash;\n\
    \tfor (int i = 0; i < s.length(); i++)\n\t{\n\t\tstring temp = \"a\" + s.substr(i,1);\n\
    \t\thash[temp] = hash[temp]+1;\n\t}\n\tlong ans = hash[\"a\"]+hash[\"A\"];\n\t\
    for (auto itr = hash.begin(); itr != hash.end(); ++itr)\n\t{\n\t\tif (itr->second\
    \ != 0)\n\t\t\tans += itr->second;\n\t}\n\treturn ans;\n}\n/*\nTask\n    Write\
    \ a function that takes a string as input and returns the sum of the digits in\
    \ the string.\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp50_pzjgj.d(25): Error: found \''>\'' when expecting \''.\''
    following long\n/tmp/tmp50_pzjgj.d(34): Error: expression expected, not \''>\''\n/tmp/tmp50_pzjgj.d(34):
    Error: found \''second\'' when expecting \'')\''\n/tmp/tmp50_pzjgj.d(34): Error:
    found \''!=\'' instead of statement\n/tmp/tmp50_pzjgj.d(39): Error: unterminated
    /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp50_pzjgj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    foreach(const auto c :\
    \ s)\n    {\n        if(isUpper(c))\n        {\n            auto pos = find(s,\
    \ c);\n            auto temp = c - 'A' + 1;\n            return temp;\n      \
    \  }\n    }\n    return 0L;\n}\n</code>\n<|/ a dscore=0 tags=c++ |>\n<| c |>\n\
    `std::upper` isn't a standard C++ function on all compilers. On my compiler (MSVC\
    \ 2017) it gives the error: `error C2039: 'upper': is not a member of 'std'`\n\
    <|/ c |>\n<| c |>\nWell, I guess it's an issue of compiler and platform then.\
    \ According to the standard, it should behave as I expected. Anyway, I found a\
    \ workaround.\n<|/ c |>\n<| a dscore=0 tags=c++ |>\n<code>\n#include<iostream>\n\
    #include<cctype>\nusing namespace std;\nstring str;\nunittest\n{\n    alias candidate\
    \ = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\"\
    ) == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0gx3ptr7.d(25): Error: basic type expected, not auto\n/tmp/tmp0gx3ptr7.d(25):
    Error: no identifier for declarator int\n/tmp/tmp0gx3ptr7.d(25): Error: found
    \''auto\'' when expecting \'';\''\n/tmp/tmp0gx3ptr7.d(25): Error: found \'':\''
    when expecting \'')\''\n/tmp/tmp0gx3ptr7.d(25): Error: found \'')\'' when expecting
    \'';\'' following statement\n/tmp/tmp0gx3ptr7.d(36): Error: Declaration expected,
    not \''<\''\n/tmp/tmp0gx3ptr7.d(39): Error: unterminated character constant\n/tmp/tmp0gx3ptr7.d(42):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0gx3ptr7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int sum = 0;\n    int\
    \ len = s.length();\n    for(int i = 0; i < len; i++)\n    {\n        if(s[i]\
    \ == 'A' || s[i] == 'a')\n        {\n            sum += 32;\n        }\n    }\n\
    \    return sum;\n}\n</code>\n<|/ a tags=c++,string,integer,arrays |>\n<| a dscore=2\
    \ tags=c++,string,integer,arrays |>\n<code>\nstd::string toupper(std::string s)\n\
    {\n    for(size_t i = 0; i < s.length(); i++)\n    {\n        s[i] = (s[i] - 'A')\
    \ % 26 + 'A';\n    }\n    return s;\n}\n</code>\nThis can easily be made more\
    \ robust by checking for 'A' before subtraction.\n<|/ a |>\n<| c |>\nNote that\
    \ this does no bounds checking - it will break if the character is less than 'A'\
    \ or greater than 'Z'.\n<|/ c |>\n<| a dscore=1 |>\n<code>\nunittest\n{\n    alias\
    \ candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnye23b3y.d(36): Error: Declaration expected, not \''<\''\n/tmp/tmpnye23b3y.d(42):
    Error: no identifier for declarator i\n/tmp/tmpnye23b3y.d(42): Error: Declaration
    expected, not \''<\''\n/tmp/tmpnye23b3y.d(42): Error: no identifier for declarator
    i\n/tmp/tmpnye23b3y.d(42): Error: Declaration expected, not \''++\''\n/tmp/tmpnye23b3y.d(45):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnye23b3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n  int c=0;\n  for(int i=0;\
    \ i<s.length(); i++)\n  {\n    c = c + s.codePointAt(i);\n  }\n  return c;\n}\n\
    unittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\"\
    ) == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6qu8kq6v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    int i, sum;\n    long\
    \ sumOfDigits = 0, sumOfUpperChars = 0;\n    for(i=s.length-1; i>=0; i--)\n  \
    \  {\n        sum = s[i] - 'A' + 1;\n        sumOfDigits += sum;\n        sumOfUpperChars\
    \ += sumOfDigits * (long) sum;\n    }\n    return sumOfUpperChars;\n}\nunittest\n\
    {\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n   \
    \ assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n\
    \    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\")\
    \ == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcs26w67m.d(31): Error: C style cast illegal, use cast(long)sum\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcs26w67m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    long sum=0;\n    for(int\
    \ i=0;i<s.length();i++){\n        if(s[i]>=97 && s[i]<=122)\n            sum+=(int)(s[i]-97);\n\
    \    }\n    return sum;\n}\n</code>\n<|/ a tags=c++ |>\n<| c |>\nThank you so\
    \ much for the answer! It worked well and was extremely helpful!\n<|/ c |>\n<|\
    \ c |>\nGlad I was able to help. I guess you were trying to do something with\
    \ that code that you were not able to do yourself? If so, what was the problem?\n\
    <|/ c |>\n<| a |>\nWhat is this thing doing \"if((s[i]-97)<=32)\" ?\nThat is basically\
    \ saying \n<code>\nif( (s[i]-97) <=32) \n</code>\nif s[i] is less than 97 it is\
    \ less than 32 so it will always be true and it will always be false. \nSo it\
    \ looks like this: \n<code>\nif( (s[0] - 97) <=32)\n</code>\nIf s[0] is less than\
    \ 97 it returns false because 97 - 97 is always less than 32 which is false.\n\
    <|/ a dscore=0 tags=c++ |>\n<| c |>\nThat was a mistake I made while trying to\
    \ figure out why it wasn't working. Sorry about that.\n<|/ c |>\n<| a tags=c++\
    \ |>\nThe program below is a solution using recursion.\n<code>\n#include<bits/stdc++.h>\n\
    using namespace std;\n#define ll long long int\nll digitSum(string s){\n  if(s.length()==1)\n\
    \    return s[0]-'0';\n  return digitSum(substring(s,0,s.length()-1))+s[0]-'0';\n\
    }\n</code>\nThe above program first checks for an empty string and then performs\
    \ a recursive call.\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <sstream>\nusing namespace std;\nunittest\n{\n   \
    \ alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"\
    helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"\
    aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"\
    You arE Very Smart\") == 327L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps2dnlhiz.d(28): Error: C style cast illegal, use cast(int)(s[i]
    - 97)\n/tmp/tmps2dnlhiz.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmps2dnlhiz.d(54):
    Error: unterminated character constant\n/tmp/tmps2dnlhiz.d(61): Error: Declaration
    expected, not \''#\''\n/tmp/tmps2dnlhiz.d(65): Error: Declaration expected, not
    \''return\''\n/tmp/tmps2dnlhiz.d(66): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps2dnlhiz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nTask\n    Write a function\
    \ that takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum(\"\")\n    0L\n    >>> digitSum(\"\
    abAB\")\n    131L\n    >>> digitSum(\"abcCd\")\n    67L\n    >>> digitSum(\"helloE\"\
    )\n    69L\n    >>> digitSum(\"woArBld\")\n    131L\n    >>> digitSum(\"aAaaaXa\"\
    )\n    153L\n    \n*/\nlong digitSum(string s) \n{\n    auto result = std.math.add();\n\
    \    for (size_t i = 0; i < s.length(); i++)\n    {\n        auto c = s[i][0]\
    \ - 'A';\n        std.assert(c >= 0);\n        result += std.math.pow(2, c) *\
    \ std.math.abs(s[i]);\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,algorithm\
    \ dscore=0 |>\n<| a dscore=0 |>\nIf you would like to keep your solution using\
    \ for loop:\n<code>\nlong digitSum(string s) \n{\n    long result = 0;\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(s[i] >= '0' && s[i] <= '9'){\n    \
    \        result += (s[i]-'0') * (long)pow(10, s.length()-i-1);\n        }\n  \
    \  }\n    return result;\n}\n</code>\n<|/ a tags=string,algorithm |>\n<| a |>\n\
    <code>\nvar digitSum = function (str) {\n  var sum = 0;\n  for (let i = 0; i <\
    \ str.length; i++) {\n    if (str[i] >= '0' && str[i] <= '9') {\n      sum +=\
    \ parseInt(str[i]) - '0';\n    }\n  }\n  return sum;\n};\nconsole.log(digitSum('1001'));\n\
    console.log(digitSum('1002'));\nconsole.log(digitSum('1003'));\nconsole.log(digitSum('1004'));\n\
    console.log(digitSum('1005'));\nconsole.log(digitSum('1006'));\nconsole.log(digitSum('1007'));\n\
    console.log(digitSum('1008'));\nconsole.log(digitSum('1009'));\nconsole.log(digitSum('1010'));\n\
    console.log(digitSum('1011'));\nconsole.log(digitSum('1012'));\nconsole.log(digitSum('1013'));\n\
    console.log(digitSum('1014'));\nconsole.log(digitSum('1015'));\nconsole.log(digitSum('1016'));\n\
    console.log(digitSum('1017'));\nconsole.log(digitSum('1018'));\nconsole.log(digitSum('1019'));\n\
    console.log(digitSum('1020'));\nconsole.log(digitSum('1021'));\nconsole.log(digitSum('1022'));\n\
    console.log(digitSum('1023'));\nconsole.log(digitSum('1024'));\nconsole.log(digitSum('1025'));\n\
    console.log(digitSum('1026'));\nconsole.log(digitSum('1027'));\nconsole.log(digitSum('1028'));\n\
    console.log(digitSum('1029'));\nconsole.log(digitSum('1030'));\nconsole.log(digitSum('1031'));\n\
    console.log(digitSum('1032'));\nconsole.log(digitSum('1033'));\nconsole.log(digitSum('1034'));\n\
    console.log(digitSum('1035'));\nconsole.log(digitSum('1036'));\nconsole.log(digitSum('1037'));\n\
    console.log(digitSum\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"\
    abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"\
    woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\"\
    \ How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_9m1eyik.d(29): Error: identifier expected following \''.\'',
    not \''assert\''\n/tmp/tmp_9m1eyik.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmp_9m1eyik.d(42):
    Error: Declaration expected, not \''for\''\n/tmp/tmp_9m1eyik.d(42): Error: no
    identifier for declarator i\n/tmp/tmp_9m1eyik.d(42): Error: Declaration expected,
    not \''<\''\n/tmp/tmp_9m1eyik.d(42): Error: no identifier for declarator i\n/tmp/tmp_9m1eyik.d(42):
    Error: Declaration expected, not \''++\''\n/tmp/tmp_9m1eyik.d(45): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_9m1eyik.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659979825

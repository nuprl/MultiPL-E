language: d
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int result\
    \ = 0;\n    long x = 0;\n    long y = 0;\n    \n    for (int i = 0; i < l.length;\
    \ i++){\n        x = l[i];\n        if (result == 0){\n            y = x;\n  \
    \          result = 1;\n        }\n        else if (x == y){\n            result++;\n\
    \        }\n    }\n    \n    long[] tmp = new long[result];\n    int k = 0;\n\
    \    \n    for (int i = 0; i < l.length; i++){\n        x = l[i];\n        if\
    \ (result == 0){\n            y = x;\n        }\n        else if (x == y){\n \
    \           tmp[k] = x;\n            k++;\n            result++;\n        }\n\
    \    }\n    \n    return tmp;\n}\n</code>\n<|/ a |>\n<| c |>\nIt would be great\
    \ if you can add comments to explain the code snippet you gave.\n<|/ c |>\n<|\
    \ a dscore=2 |>\n<code>\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp366tlmj9.d(43): Error: declaration expected, not `<`

    /tmp/tmp366tlmj9.d(54): Error: declaration expected, not `assert`

    /tmp/tmp366tlmj9.d(55): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp366tlmj9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ unique(l,0,l.length-1);\n    return r;\n}\n/*\n Return sorted unique elements\
    \ in an array, between start and stop\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L], 0, 3)\n    [0L, 2L, 3L, 5L, 9L, 123L]\n*/\nlong[] unique(long[]\
    \ l, int start, int stop)\n{\n    int i,j,m,n = stop-start;\n    long[] r  = new\
    \ long[(n>0 ? n : 1)];\n    long[] h = new long[10000];\n    \n    m=findIndex(h,l);\n\
    \    \n    for(i=0;i<m;i++) {\n        h[l.charCodeAt(i)-'a']++;\n    }\n    \n\
    \    for(i=m+1;i<n;i++) {\n        h[l.charCodeAt(i)-'a']--;\n    }\n    \n  \
    \  for(i=start,j=0;j<n;i++,j++) {\n        r[j]=h[l.charCodeAt(i)-'a'];\n    }\n\
    \    \n    return r;\n}\n/*\n Return unique elements in an array\n \n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [5L, 3L, 2L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l) \n{\n    return unique(l, 0, l.length-1);\n}\n/*\n Return unique\
    \ elements in an array, between start and stop\n    >>> unique([5L, 3L, 5L, 2L,\
    \ 3L, 3L, 9L, 0L, 123L], 0, 3)\n    [5L, 2L, 9L, 123L]\n*/\nlong[] unique(long[]\
    \ l, int start, int stop)\n{\n    int i,j,m,n = stop-start;\n    long[] r  = new\
    \ long[(n>0 ? n : 1)];\n    long[] h = new long[10000];\n    \n    m=findIndex(h,l);\n\
    \    \n    for(i=0;i<m;i++) {\n        h[l.charCodeAt(i)-'a']++;\n    }\n    \n\
    \    for(i=m+1;i<n;i++) {\n        h[l.charCodeAt(i)-'a']--;\n    }\n    \n  \
    \  for(i=start,j=0;j<n;i++,j++) {\n        r[j]=h[l.charCodeAt(i)-'a'];\n    }\n\
    \    \n    return r;\n}\n/*\n Return unique elements in an array\n \n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4vxqxnp0.d(79): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4vxqxnp0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] unique\
    \ = new long[l.length];\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplrqzwwz_.d(12): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplrqzwwz_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ {0L};\n    int c = 1;\n    for(int i=1; i<l.length; i++) {\n        if(l[i]\
    \ != l[i-1]) {\n            r[c] = l[i];\n            c++;\n        }\n    }\n\
    \    return r;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpshis9p3e.d(11): Error: a struct is not a valid initializer for
    a `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpshis9p3e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int u;\n \
    \   bool found = false;\n    int[] id = new int[l.length];\n    long last = l[0];\n\
    \    id[0] = l[0];\n    for (u = 1; u < l.length; ++u) \n    {\n        if (l[u]\
    \ == last) \n        {\n            found = true;\n            while (id[u] !=\
    \ l[u]) \n            {\n                id[u] = id[id[u - 1]];\n            }\n\
    \        } \n        else \n        {\n            id[u] = l[u];\n        }\n\
    \        last = l[u];\n    }\n    if (!found) \n    {\n        // remove unique\
    \ element at front of array\n        id[id.length - 1] = l[0];\n    }\n    else\
    \ \n    {\n        // remove unique element at end of array\n        for (u =\
    \ 1; u < id.length - 1; ++u) \n        {\n            id[u] = id[id[u + 1]];\n\
    \        }\n    }\n    // return sorted array\n    return id.toLongArray();\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\n+1 for the link to Jon Skeet's article\
    \ about the sort of things that you can do with the library I linked to above.\n\
    <|/ c |>\n<| c |>\nWhat is the point of `id.length` and the `id[u + 1]` when you're\
    \ doing a binary search on `id`? And how about `id.length - 1` and `id[u]`?\n\
    <|/ c |>\n<| c |>\nIt is a binary search on the sorted id array.\n<|/ c |>\n<|\
    \ c |>\n, what about `id[u]` and `id[u + 1]`? They are both accessing the last\
    \ element in the array. Can you explain why you did these operations?\n<|/ c |>\n\
    <| c |>\nWhy would you do this? To keep track of the index. And to use in the\
    \ search loop.\n<|/ c |>\n<| a dscore=5 tags=java,sorting,unique,arrays |>\nJust\
    \ a little enhancement to what Jon Skeet had posted:\n<code>\npublic static int[]\
    \ unique(int[] unq) {\n    Arrays.sort(unq);\n    int size = unq.length;\n   \
    \ int[] ret = new int[size];\n    int j = 0;\n    for (int i = 0; i < size; i++)\
    \ {\n        if (i == 0 || unq[i] != unq[i - 1]) {\n            ret[j] = unq[i];\n\
    \            j++;\n        }\n    }\n    return ret;\n}\n</code>\n<|/ a |>\n<|\
    \ a |>\n<code>\nimport java.util.ArrayList;\nimport java.util.Arrays;\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc6xvw4o1.d(48): Error: declaration expected, not `<`

    /tmp/tmpc6xvw4o1.d(51): Error: unterminated character constant

    /tmp/tmpc6xvw4o1.d(54): Error: unterminated character constant

    /tmp/tmpc6xvw4o1.d(73): Error: declaration expected, not `for`

    /tmp/tmpc6xvw4o1.d(73): Error: no identifier for declarator `i`

    /tmp/tmpc6xvw4o1.d(73): Error: declaration expected, not `<`

    /tmp/tmpc6xvw4o1.d(73): Error: no identifier for declarator `i`

    /tmp/tmpc6xvw4o1.d(73): Error: declaration expected, not `++`

    /tmp/tmpc6xvw4o1.d(76): Error: no identifier for declarator `j`

    /tmp/tmpc6xvw4o1.d(76): Error: declaration expected, not `++`

    /tmp/tmpc6xvw4o1.d(77): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc6xvw4o1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    Arrays.sort(l);\n\
    \    int n = l.length;\n    long[] ret = new long[n];\n    for (int i = 0; i <\
    \ n; ++i) {\n        ret[i] = l[i];\n    }\n    return ret;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppwjvd1m4.d(11): Error: undefined identifier `Arrays`

    /tmp/tmppwjvd1m4.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppwjvd1m4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tvar results\
    \ = new long[l.length];\n\tArrays.sort(l);\n\tfor (int i = 1; i < l.length; i++)\
    \ \n\t{\n\t\tif (l[i] == l[i - 1]) \n\t\t\tresults[i] = results[i - 1];\n\t\t\
    else\n\t\t\tresults[i] = l[i];\n\t}\n\treturn results;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp9an3kz4.d(11): Error: undefined identifier `var`

    /tmp/tmpp9an3kz4.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp9an3kz4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tvar f = new\
    \ long[l.length];\n\tvar g = new long[l.length];\n\tvar h = new long[l.length];\n\
    \t\n\tlong[] ret = new long[l.length];\n\tlong[] l1 = new long[l.length];\n\t\n\
    \tvar i = 0; var j = 0; var k = 0; var l1 = new long[l.length];\n\tvar len = 0;\n\
    \t\n\t\n\twhile (i < l.length && l[i] != null)\n\t{\n\t\tif (f[(int)l[i]] == null)\n\
    \t\t{\n\t\t\tf[(int)l[i]] = true;\n\t\t\tl1[j++] = l[i];\n\t\t\tlen++;\n\t\t}\n\
    \t\ti++;\n\t}\n\t\n\ti = j;\n\t\n\twhile (i < l.length && l1[j] != null)\n\t{\n\
    \t\tif (l[i] == l1[(int)l1[j]])\n\t\t{\n\t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\
    \t\tret[k++] = l1[j++];\n\t\t\tf[l1[j]] = false;\n\t\t\tl1[j++] = l[i];\n\t\t\t\
    len++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\ti = j;\n\t\n\twhile (i < l.length)\n\t{\n\t\
    \tret[k++] = l[i];\n\t\ti++;\n\t}\n\t\n\twhile (h.length > 0)\n\t{\n\t\tk = 0;\n\
    \t\t\n\t\twhile (k < ret.length)\n\t\t{\n\t\t\tk = ret[k];\n\t\t}\n\t\t\n\t\t\
    ret[k++] = h.pop();\n\t}\n\t\n\treturn ret;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n\t\n\t\n*/\nlong[] unique(long[] l, int l1) \n{\n\tvar f = new\
    \ long[l1];\n\tvar g = new long[l1];\n\tvar h = new long[l1];\n\t\n\tlong[] ret\
    \ = new long[l1];\n\tlong[] l1 = new long[l1];\n\t\n\tvar i = 0; var j = 0; var\
    \ k = 0; var l1 = new long[l1];\n\tvar len = 0;\n\t\n\t\n\twhile (i < l1 && l[i]\
    \ != null)\n\t{\n\t\tif (f[(int)l[i]] == null)\n\t\t{\n\t\t\tf[(int)l[i]] = true;\n\
    \t\t\tl1[j++] = l[i];\n\t\t\tlen++;\n\t\t}\n\t\ti++;\n\t}\n\t\n\ti = j;\n\t\n\t\
    while (i < l1 && l1[j] != null)\n\t{\n\t\tif (l[i] == l1[(int)l1[j]])\n\t\t{\n\
    \t\t\tk++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret[k++] = l1[j++];\n\t\t\tf[l1[j]]\
    \ = false;\n\t\t\tl1[j++] = l[i];\n\t\t\tlen++;\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_09nuvjf.d(24): Error: C style cast illegal, use `cast(int)l[i]`

    /tmp/tmp_09nuvjf.d(26): Error: C style cast illegal, use `cast(int)l[i]`

    /tmp/tmp_09nuvjf.d(37): Error: C style cast illegal, use `cast(int)l1[j]`

    /tmp/tmp_09nuvjf.d(93): Error: C style cast illegal, use `cast(int)l[i]`

    /tmp/tmp_09nuvjf.d(95): Error: C style cast illegal, use `cast(int)l[i]`

    /tmp/tmp_09nuvjf.d(106): Error: C style cast illegal, use `cast(int)l1[j]`

    /tmp/tmp_09nuvjf.d(116): Error: found `unittest` instead of statement

    /tmp/tmp_09nuvjf.d(122): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmp_09nuvjf.d(122): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_09nuvjf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] r = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; ++i) {\n\t\tfor (int j = i\
    \ + 1; j < l.length; ++j) {\n\t\t\tif (l[i] < l[j]) break;\n\t\t}\n\t\tr[i] =\
    \ l[i];\n\t}\n\tfor (int i = l.length - 1; i >= 0; --i) {\n\t\tfor (int j = i\
    \ + 1; j < l.length; ++j) {\n\t\t\tif (r[i] < r[j]) break;\n\t\t}\n\t\tswap(r,i,j);\n\
    \t}\n\treturn r;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy861q29p.d(18): Error: cannot implicitly convert expression `l.length
    - 1LU` of type `ulong` to `int`

    /tmp/tmpy861q29p.d(22): Error: undefined identifier `swap`, did you mean template
    `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy861q29p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  var l2 = l.copy();\n\
    \  std.sort(l2, l.length());\n  long[] u = new long[std.min(l.length(), 10)];\n\
    \  std.unique(l2, u, 0, u.length, l.length());\n  return u;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2plo5r0r.d(11): Error: undefined identifier `var`

    /tmp/tmp2plo5r0r.d(11): Error: no property `copy` for type `long[]`

    /tmp/tmp2plo5r0r.d(12): Error: undefined identifier `sort` in package `std`

    /tmp/tmp2plo5r0r.d(13): Error: undefined identifier `min` in package `std`

    /tmp/tmp2plo5r0r.d(14): Error: undefined identifier `unique` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2plo5r0r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t// Your code\
    \ here\n\t\n\tlong[] a = new long[l.getLength()+1];\n\tfor(int i = 0; i < l.getLength();\
    \ i++)\n\t\ta[i+1] = l[i];\n\tfor(int i = 0; i < a.getLength(); i++)\n\t{\n\t\t\
    for(int j = i+1; j < a.getLength(); j++)\n\t\t{\n\t\t\tlong l = a[i];\n\t\t\t\
    long r = a[j];\n\t\t\tif(r != l && l != 0)\n\t\t\t\tbreak;\n\t\t}\n\t\tif(j <\
    \ a.getLength())\n\t\t\tbreak;\n\t}\n\t\n\treturn a;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb9mj40x5.d(13): Error: no property `getLength` for type `long[]`

    /tmp/tmpb9mj40x5.d(14): Error: no property `getLength` for type `long[]`

    /tmp/tmpb9mj40x5.d(16): Error: no property `getLength` for type `long[]`

    /tmp/tmpb9mj40x5.d(18): Error: no property `getLength` for type `long[]`

    /tmp/tmpb9mj40x5.d(20): Error: variable `l` is shadowing variable `tmpb9mj40x5.unique.l`

    /tmp/tmpb9mj40x5.d(25): Error: undefined identifier `j`

    /tmp/tmpb9mj40x5.d(25): Error: no property `getLength` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb9mj40x5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  var ans = new\
    \ long[l.length];\n  var l1 = l.length;\n  var i = -1, j;\n  while(++i < l1)\n\
    \    for(j = i + 1; i < l1 && l[i] < l[j]; ++i)\n      ans[j] = l[i];\n  return\
    \ ans;\n}\n/*\nCompare two arrays and return the number of different elements\n\
    \    >>> compare([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], [0L, 2L, 3L, 5L, 9L,\
    \ 123L])\n    1\n    \n    \n*/\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5oj6j_uc.d(11): Error: undefined identifier `var`

    /tmp/tmp5oj6j_uc.d(12): Error: undefined identifier `var`

    /tmp/tmp5oj6j_uc.d(13): Error: undefined identifier `var`

    /tmp/tmp5oj6j_uc.d(13): Error: undefined identifier `var`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5oj6j_uc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong count =\
    \ 1;\n\tlong maxCount = 1;\n\tlong[] u = new long[l.length];\n\tfor(int i = 0;\
    \ i < l.length; i++) {\n\t\tif(l[i] != l[maxCount]) {\n\t\t\tu[count++] = l[i];\n\
    \t\t}\n\t\telse {\n\t\t\tmaxCount++;\n\t\t}\n\t}\n\treturn u;\n}\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgxqz3lji.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x42834d]

    ??:? void tmpgxqz3lji.__unittest_L24_C1() [0x42801c]

    ??:? void tmpgxqz3lji.__modtest() [0x4280cc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c42b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2be]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430549]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309f8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304d5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b295]

    ??:? runModuleUnitTests [0x42c201]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428810]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length,\
    \ i;\n    long[] l1;\n    l1 = new long[n];\n    i = 0;\n    foreach(int j : l)\n\
    \        l1[i++] = j;\n    l1.sort(std.ascending);\n    return l1;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr6ngig1k.d(15): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr6ngig1k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] n = new\
    \ long[l.length];\n\tint i = 0;\n\tfor (; i < n.length; i++)\n\t{\n\t\tif (l[i]\
    \ > l[i + 1])\n\t\t\tbreak;\n\t\tn[i] = l[i];\n\t}\n\tfor (; i < n.length; i++)\n\
    \t\tn[i] = l[--l.length];\n\treturn n;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpuuhauh9o.d(20): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42846e]

    ??:? long[] tmpuuhauh9o.unique(long[]) [0x427f78]

    ??:? void tmpuuhauh9o.__unittest_L23_C1() [0x428019]

    ??:? void tmpuuhauh9o.__modtest() [0x428140]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42d56b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42c3fe]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x431935]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x431de4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4318c1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c3d5]

    ??:? runModuleUnitTests [0x42d341]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if(l.length==0)\n\
    \        return l;\n    \n    long[] a = sort(l);\n    long[] aux = new long[a.length];\n\
    \    \n    int i=0;\n    for(int j=0; j<a.length; j++)\n    {\n        while(a[i]==a[j])\n\
    \        {\n            i++;\n        }\n        aux[j]=a[i];\n        \n    \
    \    if(i<a.length-1)\n            i++;\n        else\n            break;\n  \
    \  }\n    \n    return aux;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1k8t87g9.d(14): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1k8t87g9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result\
    \ = std.Array.toArray(std.Array.toSet(l));\n\treturn result;\n}\n/*\nReturn sorted\
    \ unique elements in a vector\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(std.vector<\
    \ long >& l) \n{\n\tlong[] result = std.Array.toArray(std.Array.toSet(l));\n\t\
    return result;\n}\n/*\nReturn the number of unique elements in a vector\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    4\n    \n*/\nsize_t uniqueSize(std.vector<\
    \ long >& l) \n{\n\treturn std.Array.getSize(unique(l)); \n}\n/*\nReturn number\
    \ of unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L])\n    4\n    \n*/\nsize_t uniqueSize(long[] l) \n{\n\treturn std.Array.getSize(unique(l));\
    \ \n}\n/*\nCompare two elements for sorting\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaxm_tjag.d(20): Error: found `<` when expecting `)`

    /tmp/tmpaxm_tjag.d(20): Error: semicolon expected following function declaration

    /tmp/tmpaxm_tjag.d(20): Error: no identifier for declarator `long`

    /tmp/tmpaxm_tjag.d(20): Error: declaration expected, not `>`

    /tmp/tmpaxm_tjag.d(23): Error: declaration expected, not `return`

    /tmp/tmpaxm_tjag.d(24): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxm_tjag.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if(l == null\
    \ || l.length < 1) return l;\n    \n    // sort\n    Arrays.sort(l);\n    \n \
    \   // find starts\n    int[] starts = new int[l.length];\n    for(int i = 1;\
    \ i < l.length; i++) {\n        starts[l[i] - l[i - 1]] = i;\n    }\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3ddxnz5x.d(21): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ddxnz5x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    long tmp = 0;\n    for (int i = 0; i < l.length;\
    \ ++i)\n    {\n        int j = 0;\n        for (; j < i; ++j)\n            if\
    \ (l[j] == l[i])\n                break;\n        if (j < i)\n            result[i]\
    \ = l[j];\n        else\n            ++result[i];\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| a tags=arrays,java |>\nThis can be done in O(n log n)\
    \ time using an auxiliary sorted list containing all the unique elements. I chose\
    \ to use a linked list for the auxiliary list, since the original list size can\
    \ be assumed to be less than 32K (32K being the default array size).\n<code>\n\
    public static int[] removeDuplicates(int[] nums) {\n    int[] aux = new LinkedList<Integer>();\n\
    \    boolean isAlreadyInAux = false;\n    for (int num : nums) {\n        if (isAlreadyInAux)\
    \ {\n            aux.addLast(num);\n        } else {\n            isAlreadyInAux\
    \ = true;\n            aux.addFirst(num);\n        }\n    }\n    // Copy to output\
    \ array\n    int[] result = new int[aux.size()];\n    for (int i = 0; i < aux.size();\
    \ i++)\n        result[i] = aux.pollLast();\n    return result;\n}\n</code>\n\
    Time complexity: O(n log n)\n<|/ a dscore=1 |>\n<| c |>\nYou probably meant `O(n*logn)`,\
    \ otherwise it will take O(n^2) time. Also, your code can not be O(1) without\
    \ additional memory (which would be very expensive).\n<|/ c |>\n<| c |>\nIt would\
    \ be O(n log n) if the sorted list were sorted, which is not possible in general.\n\
    <|/ c |>\n<| a dscore=0 |>\nThe best way that I know is to copy the array to a\
    \ new array and then use a simple loop to compare the new array to the original,\
    \ removing duplicates.  This will take O(n^2) time.\n<code>\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvssrgqyd.d(26): Error: declaration expected, not `<`

    /tmp/tmpvssrgqyd.d(34): Error: declaration expected, not `for`

    /tmp/tmpvssrgqyd.d(37): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvssrgqyd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int N = l.length;\n\
    \    long[] u = new long[N];\n    for (int i = 0; i < N; i++) \n    {\n      \
    \  u[i] = l[i];\n    }\n    for (int i = 0; i < N; i++)\n    {\n        for (int\
    \ j = i + 1; j < N; j++)\n        {\n            if (u[j] < u[i]) \n         \
    \   {\n                long temp = u[i];\n                u[i] = u[j];\n     \
    \           u[j] = temp;\n            }\n        }\n    }\n    return u;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5ag2qe_k.d(11): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ag2qe_k.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong key = l[0];\n\
    \tlong[] result = new long[l.length];\n\tfor (int i=1; i < l.length; ++i)\n\t\
    {\n\t\tif (key < l[i]) \n\t\t\tkey = l[i];\n\t}\n\tfor (int i=1; i < l.length;\
    \ ++i)\n\t{\n\t\tif (key < l[i])\n\t\t{\n\t\t\tresult[i-1] = l[i];\n\t\t\tkey\
    \ = l[i];\n\t\t}\n\t}\n\tfor (int i=1; i < l.length; ++i)\n\t\tresult[i] = l[i-1];\n\
    \treturn result;\n}\n/*\nReturn a sorted array from elements in another array\n\
    \t>>> sort([5, 4, 5, 3])\n\t[3, 4, 5, 5]\n\t\n*/\nlong[] sort(long[] l) \n{\n\t\
    long[] result = new long[l.length];\n\tfor (int i=0; i < l.length; ++i)\n\t{\n\
    \t\tresult[i] = l[i];\n\t}\n\tArrays.sort(result);\n\treturn result;\n}\n/*\n\
    Return sum of elements in an array\n    >>> sum([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    55L\n    \n*/\nlong sum(long[] l)\n{\n\tlong s = 0;\n\tfor (int\
    \ i=0; i < l.length; ++i)\n\t{\n\t\ts += l[i];\n\t}\n\treturn s;\n}\n/*\nReturn\
    \ average of elements in an array\n    >>> average([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L])\n    5.0\n    \n*/\ndouble average(long[] l)\n{\n\treturn sum(l)\
    \ / l.length;\n}\n/*\nReturn median of elements in an array\n    >>> median([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    5.0\n    \n*/\ndouble median(long[]\
    \ l)\n{\n\tif (l.length%2 != 0)\n\t\treturn median(l);\n\tArrays.sort(l);\n\t\
    int center = l.length/2;\n\treturn (double)l[center-1] + (double)l[center];\n\
    }\n/*\nReturn mode(s) of elements in an array\n    >>> mode([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [3, 5]\n    \n*/\nlong[] mode(long[] l)\n{\n\tlong max_count\
    \ = 0L;\n\tlong[] count = new long[l.length];\n\tlong[] mode = new long[l.length];\n\
    \tint pos = 0;\n\tfor (int i=0; i < l.length; ++i)\n\t{\n\t\tcount[i] = l[i];\n\
    \t\tif (count[i] > max_count)\n\t\t{\n\t\t\tmax_count = count[i];\n\t\t\tmode\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd01s06pi.d(83): Error: C style cast illegal, use `cast(double)l[center
    - 1]`

    /tmp/tmpd01s06pi.d(83): Error: C style cast illegal, use `cast(double)l[center]`

    /tmp/tmpd01s06pi.d(104): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpd01s06pi.d(110): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpd01s06pi.d(110): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpd01s06pi.d(110): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd01s06pi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int pos = 0;\n    bool hasDuplicate = false;\n  \
    \  for (int i=0; i<l.length; i++)\n    {\n        if (hasDuplicate)\n        {\n\
    \            if (l[i] == result[pos])\n            {\n                hasDuplicate\
    \ = false;\n            }\n        }\n        else\n        {\n            if\
    \ (l[i] == 0)\n            {\n                hasDuplicate = true;\n         \
    \       result[pos] = l[i];\n            }\n        }\n        if (pos == result.length-1)\n\
    \        {\n            result[pos] = l[i];\n        }\n        else\n       \
    \ {\n            if (hasDuplicate)\n            {\n                result[pos]\
    \ = l[i];\n            }\n            else\n            {\n                pos++;\n\
    \            }\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=c#,linq\
    \ |>\n<| c |>\nThat's a lot of code. Is there a shorter way?\n<|/ c |>\n<| c |>\n\
    No, I think it's OK, there isn't a shorter way. Although you can reduce some of\
    \ it by using `Select` instead of `Where` and use `Contains` instead of `==`.\n\
    <|/ c |>\n<| c |>\nOk I reduced it, it still needs some optimizing though :).\
    \ Still not a lot of code. Do you think the `distinct` function can be faster?\n\
    <|/ c |>\n<| c |>\nThanks, I've changed it to use Select instead of Where, Contains\
    \ and ==\n<|/ c |>\n<| c |>\nThis code will remove duplicates from the list while\
    \ keeping the order of the list intact. In the question, only the non-duplicate\
    \ elements are kept in the final list.\n<|/ c |>\n<| a tags=c#,linq |>\nThis can\
    \ be done with one line of LINQ code...\n<code>\nvar nonDupsOnly = from item in\
    \ myList\n                   group item by item into g\n                   select\
    \ g.First();\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis will keep original order\
    \ of the elements.\n<|/ c |>\n<| c |>\nIt was a question asked to me in an interview.\
    \ I was thinking how could I do it in one line. Thats why I posted this question\
    \ here\n<|/ c |>\n<| c |>\nI guess the interviewer was probably expecting something\
    \ else.\n<|/ c |>\n<| a tags=c#,linq dscore=0 |>\n<code>\npublic static void Main(string[]\
    \ args)\n{\n    int[] myList = new int[] { 0, 5, 3, 4, 2, 7, 1, 9, 2, 5, 3, 6,\
    \ \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppij6zszk.d(49): Error: declaration expected, not `<`

    /tmp/tmppij6zszk.d(52): Error: unterminated character constant

    /tmp/tmppij6zszk.d(55): Error: unterminated character constant

    /tmp/tmppij6zszk.d(55): Error: unterminated character constant

    /tmp/tmppij6zszk.d(61): Error: unterminated character constant

    /tmp/tmppij6zszk.d(72): Error: declaration expected, not `<`

    /tmp/tmppij6zszk.d(92): Error: declaration expected, not `assert`

    /tmp/tmppij6zszk.d(93): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppij6zszk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  int n = l.length;\n\
    \  long[] result = new long[n];\n  int j = 0;\n  for(int i = 0; i < n; ++i) {\n\
    \    if(j == 0 || l[i] == result[n - 1]) \n      result[j++] = l[i]; \n    else\n\
    \      while(j < n && l[i] < result[j]) \n        result[j++] = result[j - 1];\n\
    \  }\n  return result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1_j9inca.d(11): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_j9inca.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n        List<long>\
    \ u = new List<long>()\n        for (long element : l) {\n            if (!u.contains(element))\
    \ {\n                u.add(element);\n            }\n        }\n        return\
    \ u.toArray();\n}\n/*\nReturn sorted unique elements in a vector\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(vector<long> v) \n{\n        List<long> u = new List<long>()\n \
    \       for (long element : v) {\n            if (!u.contains(element)) {\n  \
    \              u.add(element);\n            }\n        }\n        return u.toArray();\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long* l) \n{\n        List<long> u = new List<long>()\n        for (long\
    \ element : l) {\n            if (!u.contains(element)) {\n                u.add(element);\n\
    \            }\n        }\n        return u.toArray();\n}\n/*\nReturn sorted unique\
    \ elements in a vector\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(vector<long> v) \n{\n\
    \        List<long> u = new List<long>()\n        for (long element : v) {\n \
    \           if (!u.contains(element)) {\n                u.add(element);\n   \
    \         }\n        }\n        return u.toArray();\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long** l) \n{\n     \
    \   List<long> u = new List<long>()\n        for (long element : *l) {\n     \
    \       if (!u.contains(element)) {\n                u.add(element);\n       \
    \     }\n        }\n        return u.toArray();\n}\n/*\nReturn sorted unique elements\
    \ in a vector\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(vector<long>* v) \n{\n\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl9mgebui.d(11): Error: found `>` when expecting `.` following long

    /tmp/tmpl9mgebui.d(11): Error: found `>` when expecting `.` following long

    /tmp/tmpl9mgebui.d(11): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpl9mgebui.d(11): Error: found `)` when expecting `;` following statement

    /tmp/tmpl9mgebui.d(12): Error: semicolon expected, not `:`

    /tmp/tmpl9mgebui.d(12): Error: expression expected, not `:`

    /tmp/tmpl9mgebui.d(12): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpl9mgebui.d(25): Error: found `<` when expecting `)`

    /tmp/tmpl9mgebui.d(25): Error: semicolon expected following function declaration

    /tmp/tmpl9mgebui.d(25): Error: no identifier for declarator `long`

    /tmp/tmpl9mgebui.d(25): Error: declaration expected, not `>`

    /tmp/tmpl9mgebui.d(31): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl9mgebui.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tvar x = new\
    \ HashSet[long]();\n\tforeach(i, l) \n\t\tif(!x.add(i))\n\t\t\tyield i;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy_17qmuo.d(11): Error: need size of rightmost array, not type `long`

    /tmp/tmpy_17qmuo.d(12): Error: no identifier for declarator `l`

    /tmp/tmpy_17qmuo.d(12): Error: found `)` when expecting `;`

    /tmp/tmpy_17qmuo.d(13): Error: expression expected, not `if`

    /tmp/tmpy_17qmuo.d(14): Error: found `yield` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy_17qmuo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] r; \n\
    \tsort(l);\n\tr= new long[l.length];\n\tint i;\n\tint j;\n\tfor (i=0,j=0; i< l.length;\
    \ i++,j++) \n\t{\n\t\tif(i==j)\n\t\t{\n\t\t\tr[j]=l[i];\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\tif((l[i]!=l[j])&(l[i]!=long.MAX_VALUE))\n\t\t\t{\n\t\t\t\tr[j]=l[i];\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn r;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4hs84jd2.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmp4hs84jd2.d(24): Error: no property `MAX_VALUE` for type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4hs84jd2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    for(int i = 0; i < l.length; i++) \n    {\n       \
    \ long v = l[i];\n        u[v] = i;\n    }\n    Arrays.sort(u);\n    return u;\n\
    }\n</code>\n<|/ a dscore=1 tags=algorithm,unique,arrays,java,sorting |>\n<| c\
    \ |>\nThis was very helpful.\n<|/ c |>\n<| c |>\nWhat is the complexity of this\
    \ algorithm?\n<|/ c |>\n<| a dscore=1 |>\nThe best answer is using HashSet. \n\
    <code>\npublic static void main(String[] args) {\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppc4w5wqu.d(20): Error: declaration expected, not `<`

    /tmp/tmppc4w5wqu.d(36): Error: declaration expected, not `assert`

    /tmp/tmppc4w5wqu.d(37): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppc4w5wqu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tif (l == null)\
    \ return null;\n\tlong[] a = new long[l.length];\n\tfor (int i = 0; i < l.length;\
    \ i++) {\n\t\tlong val = l[i];\n\t\tfor (int j = i + 1; j < l.length; j++) {\n\
    \t\t\tif (l[j] == val)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (j - i > 1) {\n\t\t\tArrays.sort(a);\n\
    \t\t\tfor (int k = i; k < j; k++) {\n\t\t\t\ta[i - k - 1] = a[k];\n\t\t\t}\n\t\
    \t}\n\t\ta[i] = val;\n\t}\n\treturn a;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiktyyups.d(19): Error: undefined identifier `j`

    /tmp/tmpiktyyups.d(20): Error: undefined identifier `Arrays`

    /tmp/tmpiktyyups.d(21): Error: undefined identifier `j`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiktyyups.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    bool isDuplicated\
    \ = false;\n    long current = 0;\n    long next = 1;\n    long[] result = new\
    \ long[l.length];\n    for(int i = 0; i < l.length; i++) \n    {\n        current\
    \ = l[i];\n        isDuplicated = false;\n        for(int j = 0; j < result.length;\
    \ j++) \n        {\n            if(current == result[j]) \n            {\n   \
    \             isDuplicated = true;\n                break;\n            }\n  \
    \      }\n        if(!isDuplicated)\n            result[result.length] = current;\n\
    \    }\n    return result;\n}\n/*\nReturn sorted unique elements in an array\n\
    \    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L,\
    \ 9L, 123L]\n    \n*/\nlong[] unique(long[] l, long value)\n{\n    bool isDuplicated\
    \ = false;\n    long current = 0;\n    long next = 1;\n    long[] result = new\
    \ long[l.length];\n    for(int i = 0; i < l.length; i++) \n    {\n        current\
    \ = l[i];\n        isDuplicated = false;\n        for(int j = 0; j < result.length;\
    \ j++) \n        {\n            if(current == result[j])\n            {\n    \
    \            isDuplicated = true;\n                break;\n            }\n   \
    \     }\n        if(!isDuplicated)\n            result[result.length] = current;\n\
    \    }\n    for(int j = 0; j < result.length; j++) \n    {\n        if(result[j]\
    \ == value)\n            result[j] = value;\n    }\n    return result;\n}\n/*\n\
    Return sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l, long value, int length)\n{\n    bool isDuplicated = false;\n    long current\
    \ = 0;\n    long next = 1;\n    long[] result = new long[length];\n    for(int\
    \ i = 0; i < l.length; i++) \n    {\n        current = l[i];\n        isDuplicated\
    \ = false;\n        for(int j = 0; j < result.length; j++) \n        {\n     \
    \       if(current == result[j])\n            {\n                isDuplicated\
    \ = true;\n                break;\n            }\n        }\n        if(!isDuplicated)\n\
    \            result[result.length] = current;\n    }\n    for(int j = 0; j < result.length;\
    \ j++) \n    {\n        if(result[j] == value)\n            result[j] = value;\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nWhy are you\
    \ making `length` an optional parameter?\n<|/ c |>\n<| c |>\nI did not think it\
    \ was necessary, it seemed redundant. `\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt4ai1411.d(100): Error: declaration expected, not `<`

    /tmp/tmpt4ai1411.d(106): Error: unterminated string constant starting at /tmp/tmpt4ai1411.d(106)

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt4ai1411.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tif (l.length\
    \ == 0) return l;\n\tlong[] u = new long[l.length];\n\tu[0] = l[0];\n\tfor (long\
    \ i = 1, j = 1; i < l.length; i++, j++) {\n\t\tif (l[j] != l[i]) {\n\t\t\tu[i]\
    \ = l[i];\n\t\t}\n\t}\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpn5bb8vxk.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x42839d]

    ??:? void tmpn5bb8vxk.__unittest_L21_C1() [0x42806c]

    ??:? void tmpn5bb8vxk.__modtest() [0x42811c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c47b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b30e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430599]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a48]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430525]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2e5]

    ??:? runModuleUnitTests [0x42c251]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428860]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] n =\
    \ new long[l.length];\n    for (int i=0; i<n.length; i++) n[i] = l[i];\n    Arrays.sort(n);\n\
    \    return n;\n}\n</code>\n<|/ a tags=java,arrays |>\n<| c |>\nThank you for\
    \ this code snippet, which might provide some limited, immediate help.  A proper\
    \ explanation [would greatly improve](//meta.stackexchange.com/q/114762) its long-term\
    \ value by showing *why* this is a good solution to the problem, and would make\
    \ it more useful to future readers with other, similar questions.  Please [edit]\
    \ your answer to add some explanation, including the assumptions you've made.\n\
    <|/ c |>\n<| a tags=java,arrays |>\n<code>\npublic static int[] uniqueSort(int[]\
    \ arr) {\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp709if_08.d(16): Error: declaration expected, not `<`

    /tmp/tmp709if_08.d(28): Error: declaration expected, not `assert`

    /tmp/tmp709if_08.d(29): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp709if_08.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long l = l[0];\n\
    \    long x = l;\n    int pos = 1;\n    int i = 0;\n    long[] arr = new long[1000];\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnzworzfb.d(16): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnzworzfb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    var sorted\
    \ = std.array.sortRange(l, l, std.ascending);\n    return std.array.sortRange(sorted,\
    \ sorted, std.ascending)\n}\nunittest\n{\n    alias candidate = unique;\n\n  \
    \  assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz3cb4l55.d(13): Error: found `}` when expecting `;` following `return`
    statement

    /tmp/tmpz3cb4l55.d(14): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3cb4l55.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long n = 0;\n\
    \    long uniqueCount = 0;\n    long[] u = new long[l.length];\n    for(int i\
    \ = 0; i < (int)l.length; i++)\n    {\n        if(l[i] != 0L) \n        {\n  \
    \          n++;\n            u[i] = l[i];\n            uniqueCount++;\n      \
    \  }\n    }\n    uniqueCount = getUniqueCount(l, uniqueCount);\n    \n    //if\
    \ n is even and uniqueCount is even then array is empty\n    if (n % 2 == 0 &&\
    \ uniqueCount % 2 == 0) return l;\n    \n    //if n is odd and uniqueCount is\
    \ odd, then just cons null to end of array\n    if (n % 2 == 1 && uniqueCount\
    \ % 2 == 1)\n        return cons(null, (long[])u);\n    \n    //create new array\
    \ to hold the sorted unique values\n    long[] r = new long[uniqueCount];\n  \
    \  \n    //copy unique values into new array\n    for(int i = 0; i < (int)l.length;\
    \ i++)\n    {\n        if(l[i] != 0L)\n            r[i - (int)uniqueCount] = l[i];\n\
    \    }\n    \n    return r;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp94e0q31q.d(14): Error: C style cast illegal, use `cast(int)l.length`

    /tmp/tmp94e0q31q.d(30): Error: C style cast illegal, use `cast(long[])u`

    /tmp/tmp94e0q31q.d(36): Error: C style cast illegal, use `cast(int)l.length`

    /tmp/tmp94e0q31q.d(39): Error: C style cast illegal, use `cast(int)uniqueCount`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp94e0q31q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int result[]\
    \ = new int[256];\n    int i;\n    for(int j = 0; j < l.length; ++j)\n    {\n\
    \        result[l[j]] = 1;\n    }\n    for(int j = 0; j < 256; ++j)\n    {\n \
    \       if(result[j] == 0)\n        {\n            result[j] = j;\n        }\n\
    \    }\n    long final[] = new long[256];\n    for(int i = 0; i < 256; ++i)\n\
    \    {\n        if(result[i] == 0)\n        {\n            final[i] = i;\n   \
    \     }\n    }\n    int count = 0;\n    for(int i = 0; i < l.length; ++i)\n  \
    \  {\n        if(result[l[i]] != 0)\n        {\n            final[l[i]] = result[count];\n\
    \            ++count;\n        }\n    }\n    long[] l2 = new long[count];\n  \
    \  System.arraycopy(final, 0, l2, 0, count);\n    return l2;\n}\n</code>\n<|/\
    \ a dscore=3 |>\n<| c |>\nThe above method returns the same array as the original\
    \ one. If we use the first method then we could get the unique elements from the\
    \ returned array but we wouldn't be able to get the original array. \nFor example,\
    \ \n    >>> a = [1, 3, 2, 2, 3, 1]\n    >>> unique(a)\n    >>> [1, 3, 2]\n   \
    \ >>> a\n    >>> [1, 3, 2, 2, 3, 1]\n<|/ c |>\n<| c |>\n, i was working on some\
    \ kind of solution, now its updated. Thanks!\n<|/ c |>\n<| c |>\n, sorry, forgot\
    \ to remove the original array... now its working... Thanks\n<|/ c |>\n<| c |>\n\
    Thanks for posting your solution.\n<|/ c |>\n<| a |>\nI got some help from here,\
    \ I came up with a more concise and efficient solution to remove duplicates from\
    \ an array. \n<code>\nprivate <T> void removeDuplicates(T[] array){\n    Set<T>\
    \ uniqueSet = new LinkedHashSet<T>();\n    uniqueSet.addAll(Arrays.asList(array));\n\
    \    uniqueSet.stream().forEach((element) -> {\n        array.indexOf(element)\
    \ == -1 ? array.remove(element) : null;\n    });\n}\n</code>\n<|/ a dscore=3 tags=java,arrays\
    \ |>\n<| c |>\nIt is a very good answer. But, there is a small issue. `indexOf`\
    \ returns `-1` if the value is not found. So, `uniqueSet.remove` may throw an\
    \ `ArrayIndexOutOfBoundsException`. To fix that, I have added a check `if(uniqueSet.contains(element))`\
    \ before removing it.\n<|/ c |>\n<| a dscore=3 |>\nHere is a quick solution that\
    \ uses Java 8 streams:\n\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvufe25qs.d(11): Deprecation: instead of C-style syntax, use D-style
    syntax `int[] result`

    /tmp/tmpvufe25qs.d(24): Error: no identifier for declarator `long`

    /tmp/tmpvufe25qs.d(24): Error: basic type expected, not `[`

    /tmp/tmpvufe25qs.d(24): Error: no identifier for declarator `_error_[]`

    /tmp/tmpvufe25qs.d(24): Error: found `=` instead of statement

    /tmp/tmpvufe25qs.d(29): Error: basic type expected, not `[`

    /tmp/tmpvufe25qs.d(29): Error: no identifier for declarator `_error_[i]`

    /tmp/tmpvufe25qs.d(29): Error: found `=` instead of statement

    /tmp/tmpvufe25qs.d(37): Error: basic type expected, not `[`

    /tmp/tmpvufe25qs.d(37): Error: no identifier for declarator `_error_[l[i]]`

    /tmp/tmpvufe25qs.d(37): Error: found `=` instead of statement

    /tmp/tmpvufe25qs.d(42): Error: expression expected, not `final`

    /tmp/tmpvufe25qs.d(45): Error: declaration expected, not `<`

    /tmp/tmpvufe25qs.d(48): Error: unterminated character constant

    /tmp/tmpvufe25qs.d(70): Error: unexpected `(` in declarator

    /tmp/tmpvufe25qs.d(70): '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int n = 0;\n    for (int i = 0; i < l.length; i++)\
    \ {\n        if (l[i] != l) {\n            result[n++] = l[i];\n        }\n  \
    \  }\n    sort(result, 0, n);\n    \n    return l;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpit17utg3.d(14): Error: incompatible types for `(l[cast(ulong)i])
    != (l)`: `long` and `long[]`

    /tmp/tmpit17utg3.d(18): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpit17utg3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong temp;\n\
    \tint[] ix = new int[l.length];\n\tfor (int i=0; i < l.length; i++)\n\t\tix[i]\
    \ = i;\n\tArrays.sort(ix);\n\tlong[] ret = new long[ix.length];\n\tfor (int i=0;\
    \ i < ix.length; i++)\n\t\tret[i] = l[ix[i]];\n\treturn ret;\n}\n/*\nReturn sorted\
    \ unique elements in an array\n\t>>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \t[123L, 0L, 2L, 3L, 5L, 9L]\n\t\n*/\nlong[] unique(long l[])\n{\n\tlong temp;\n\
    \tint[] ix = new int[l.length];\n\tfor (int i=0; i < l.length; i++)\n\t\tix[i]\
    \ = i;\n\tArrays.sort(ix);\n\tlong[] ret = new long[ix.length];\n\tfor (int i=0;\
    \ i < ix.length; i++)\n\t\tret[i] = l[ix[i]];\n\treturn ret;\n}\n/*\nReturn sorted\
    \ unique elements in an array\n\t>>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \t[123L, 0L, 2L, 3L, 5L, 9L]\n\t\n*/\nlong[] unique(long l[], long x)\n{\n\tlong\
    \ temp;\n\tint[] ix = new int[l.length];\n\tfor (int i=0; i < l.length; i++)\n\
    \t\tix[i] = i;\n\tArrays.sort(ix);\n\tlong[] ret = new long[ix.length];\n\tfor\
    \ (int i=0; i < ix.length; i++)\n\t{\n\t\tif (ix[i]==x) return ret;\n\t\tret[i]\
    \ = l[ix[i]];\n\t}\n\treturn ret;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpctrkcv5t.d(27): Deprecation: instead of C-style syntax, use D-style
    syntax `long[] l`

    /tmp/tmpctrkcv5t.d(45): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] l`

    /tmp/tmpctrkcv5t.d(15): Error: undefined identifier `Arrays`

    /tmp/tmpctrkcv5t.d(33): Error: undefined identifier `Arrays`

    /tmp/tmpctrkcv5t.d(51): Error: undefined identifier `Arrays`

    /tmp/tmpctrkcv5t.d(64): Error: `tmpctrkcv5t.unique` called with argument types
    `(long[])` matches both:

    /tmp/tmpctrkcv5t.d(9):     `tmpctrkcv5t.unique(long[] l)`

    and:

    /tmp/tmpctrkcv5t.d(27):     `tmpctrkcv5t.unique(long[] l)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpctrkcv5t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  int j = 0;\n\
    \  int k;\n  int len = l.length;\n  int n = l.length/2;\n  int *a = new int[n];\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk9d854xm.d(16): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk9d854xm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length;\n\
    \    if (n < 1) \n        return l;\n    long[] ns = new long[n]; \n    int i\
    \ = 0;\n    for(long e : l)\n    {\n        if (ns[i++] == e)\n            continue;\n\
    \        ns[i] = e;\n    }\n    return ns;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length;\n\
    \    if (n < 1) \n        return l;\n    long[] ns = new long[n]; \n    int i\
    \ = 0;\n    for(long e : l)\n    {\n        if (ns[i++] == e)\n            continue;\n\
    \        ns[i] = e;\n    }\n    return ns;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length;\n\
    \    if (n < 1) \n        return l;\n    long[] ns = new long[n]; \n    int i\
    \ = 0;\n    for(long e : l)\n    {\n        if (ns[i++] == e)\n            continue;\n\
    \        ns[i] = e;\n    }\n    return ns;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length;\n\
    \    if (n < 1) \n        return l;\n    long[] ns = new long[n]; \n    int i\
    \ = 0;\n    for(long e : l)\n    {\n        if (ns[i++] == e)\n            continue;\n\
    \        ns[i] = e;\n    }\n    return ns;\n}\n/*\nReturn sorted unique elements\
    \ in a list\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length;\n\
    \    if (n < 1) \n        return l;\n    long[] ns = new long[n]; \n    int i\
    \ = 0;\n    for(long e : l)\n    {\n        if (ns[i++] == e)\n            continue\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcu5zqqt3.d(16): Error: semicolon expected, not `:`

    /tmp/tmpcu5zqqt3.d(16): Error: expression expected, not `:`

    /tmp/tmpcu5zqqt3.d(16): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpcu5zqqt3.d(37): Error: semicolon expected, not `:`

    /tmp/tmpcu5zqqt3.d(37): Error: expression expected, not `:`

    /tmp/tmpcu5zqqt3.d(37): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpcu5zqqt3.d(58): Error: semicolon expected, not `:`

    /tmp/tmpcu5zqqt3.d(58): Error: expression expected, not `:`

    /tmp/tmpcu5zqqt3.d(58): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpcu5zqqt3.d(79): Error: semicolon expected, not `:`

    /tmp/tmpcu5zqqt3.d(79): Error: expression expected, not `:`

    /tmp/tmpcu5zqqt3.d(79): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpcu5zqqt3.d(100): Error: semicolon expected, not `:`

    /tmp/tmpcu5zqqt3.d(100): Error: expression expected, not `:`

    /tmp/tmpcu5zqqt3.d(100): Error: found `l` when expecting `;` following `for` condit'
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long[] res =\
    \ new long[l.length];\n  int j = 0;\n  long k = 0;\n  for(int i = 0; i < l.length;\
    \ i++)\n  {\n    while(j < l.length && k > l[j] && l[j] != k)\n      j++;\n  \
    \  res[i] = l[j];\n    j++;\n    k = res[i];\n  }\n  return res;\n}\n/* Sort an\
    \ array\n */\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmptcyw4zdi.d(18): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42842e]

    ??:? long[] tmptcyw4zdi.unique(long[]) [0x427f13]

    ??:? void tmptcyw4zdi.__unittest_L26_C1() [0x427fd5]

    ??:? void tmptcyw4zdi.__modtest() [0x4280fc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c45b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2ee]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430579]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a28]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430505]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2c5]

    ??:? runModuleUnitTests [0x42c231]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] l2\
    \ = new long[l.length];\n    for(int i = 0; i < l.length; i++) \n        l2[i]\
    \ = l[i];\n    l2.sort();\n    return l2;\n}\n/*\nReturn sorted unique elements\
    \ in a vector \n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(std.vector.i32 l) \n{\n    long[]\
    \ l2 = new long[l.length];\n    for(int i = 0; i < l.length; i++) \n        l2[i]\
    \ = l[i];\n    l2.sort();\n    return l2;\n}\n/*\nReturn sorted unique elements\
    \ in a array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(std.array.i32 l) \n{\n    long[]\
    \ l2 = new long[l.length];\n    for(int i = 0; i < l.length; i++) \n        l2[i]\
    \ = l[i];\n    l2.sort();\n    return l2;\n}\n/*\nReturn sorted unique elements\
    \ in a map\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L,\
    \ 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(std.map<std.pair<long, long>, long>\
    \ m) \n{\n    long[] l2 = new long[m.size()];\n    foreach(std.pair<long, long>\
    \ p, m) \n        l2[p.first] = p.second;\n    l2.sort();\n    return l2;\n}\n\
    /*\nReturn sorted unique elements in a map \n    >>> unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(std.pair<std.pair<long,\
    \ long>, long> m) \n{\n    long[] l2 = new long[m.first];\n    foreach(long l,\
    \ m.second) \n        l2[l] = l;\n    l2.sort();\n    return l2;\n}\n/*\nReturn\
    \ sorted unique elements in a vector\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr2syi1yq.d(51): Error: found `<` when expecting `)`

    /tmp/tmpr2syi1yq.d(51): Error: semicolon expected following function declaration

    /tmp/tmpr2syi1yq.d(51): Error: no identifier for declarator `std.pair`

    /tmp/tmpr2syi1yq.d(51): Error: declaration expected, not `<`

    /tmp/tmpr2syi1yq.d(54): Error: declaration expected, not `foreach`

    /tmp/tmpr2syi1yq.d(56): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpr2syi1yq.d(56): Error: no identifier for declarator `l2.sort()`

    /tmp/tmpr2syi1yq.d(57): Error: declaration expected, not `return`

    /tmp/tmpr2syi1yq.d(58): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr2syi1yq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long temp;\n\
    \  long[] u = new long[l.length];\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7_fsy48d.d(13): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7_fsy48d.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int i = 0;\n\
    \    long[] r = new long[l.length];\n    while (i<l.length)\n    {\n        while\
    \ (i<l.length && l[i]==l[++i]){}\n        r[--i] = l[i];\n    }\n    Arrays.sort(r);\n\
    \    return r;\n}\n</code>\n<|/ a tags=arrays,c#,sorting,unique |>\n<| c |>\n\
    Your `unique` function doesn't preserve the order of the original array, it just\
    \ returns a new array of the unique elements.\n<|/ c |>\n<| c |>\nYou are right,\
    \ but I thought the asker wanted it sorted. Edited my answer\n<|/ c |>\n<| a dscore=2\
    \ |>\nAs of C# 7 you can use the unique method from System.Linq to do the same\
    \ thing:\n<code>\nvar unique = new int[] {5, 3, 2, 2, 3, 3};\nvar sorted = unique.OrderBy(i\
    \ => i); // {2,2,3,5,3,5}\n</code>\nThe unique method also preserves the order\
    \ of the original array.\n<|/ a tags=arrays,c#,sorting,unique |>\n<| a tags=arrays,c#,sorting,unique\
    \ dscore=2 |>\nThis should do it:\n<code>\nprivate static int[] GetUnique(int[]\
    \ input)\n{\n    Array.Sort(input);\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6naboich.d(21): Error: declaration expected, not `<`

    /tmp/tmp6naboich.d(24): Error: unterminated character constant

    /tmp/tmp6naboich.d(34): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6naboich.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] d =\
    \ new long[l[0].hashCode()+1];\n    int j = 0;\n    for (int i = 1; i < l.length;\
    \ i++)\n    {\n        if (l[i] == l[i - 1])\n            continue;\n        d[l.hashCode(l[i])\
    \ % d.length] = l[i];\n    }\n    return d.reverse();\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn4yy0mei.d(11): Error: no property `hashCode` for type `long`

    /tmp/tmpn4yy0mei.d(17): Error: no property `hashCode` for type `long[]`

    /tmp/tmpn4yy0mei.d(19): Error: template `std.typecons.reverse` cannot deduce function
    from argument types `!()(long[])`, candidates are:

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn4yy0mei.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    for (int i = 0; i < l.length; i++) \n    {\n      \
    \  u[i] = l[i];\n        for (int j = i+1; j < l.length; j++)\n            if\
    \ (l[i] == l[j]) \n            {\n                long v = u[j];\n           \
    \     u[j] = u[i];\n                u[i] = v;\n            }\n    }\n    return\
    \ u;\n}\n</code>\n<|/ a dscore=1 |>\n<| a |>\nHere is another option:\n<code>\n\
    public static long[] unique(long[] values) {\n    // Get a list of all unique\
    \ elements\n    List<Long> uniqueValues = Arrays.stream(values)\n            .distinct()\n\
    \            .boxed()\n            .collect(Collectors.toList());\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzv7va_d3.d(25): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzv7va_d3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long count=0;\n\
    \  for (long element : l) {\n    if (!contains(count, element)) {\n      ++count;\n\
    \      yield element;\n    }\n  }\n}\n/*\nReturn a list of the unique elements\
    \ in an array\n    \n>>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n[0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n*/\nList<int> unique(int[] l) \n{\n  List<int> res =\
    \ new List<int>();\n  for (int element : l) {\n    if (!contains(res, element))\
    \ {\n      res.Add(element);\n    }\n  }\n  return res;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc79tizyd.d(12): Error: semicolon expected, not `:`

    /tmp/tmpc79tizyd.d(12): Error: expression expected, not `:`

    /tmp/tmpc79tizyd.d(12): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpc79tizyd.d(25): Error: no identifier for declarator `List`

    /tmp/tmpc79tizyd.d(25): Error: declaration expected, not `<`

    /tmp/tmpc79tizyd.d(28): Error: declaration expected, not `for`

    /tmp/tmpc79tizyd.d(31): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc79tizyd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  int u;\n  long[]\
    \ uarr = l.clone();\n  Arrays.sort(uarr);\n  for(long i=0; i<uarr.length; i++)\n\
    \  {\n    u = i+1;\n    while(u < uarr.length)\n    {\n      if(uarr[i] == uarr[u])\n\
    \      {\n        u++;\n      }\n      else\n      {\n        break;\n      }\n\
    \    }\n    uarr[u] = i;\n  }\n  return uarr;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaa27u79c.d(12): Error: no property `clone` for type `long[]`

    /tmp/tmpaa27u79c.d(13): Error: undefined identifier `Arrays`

    /tmp/tmpaa27u79c.d(16): Error: cannot implicitly convert expression `i + 1L` of
    type `long` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaa27u79c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\treturn unique(l,\
    \ false);\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw8ldyc1f.d(11): Error: function `tmpw8ldyc1f.unique(long[] l)`
    is not callable using argument types `(long[], bool)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw8ldyc1f.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tvar set = new\
    \ HashSet<long>();\n\t\n\tforeach (var x in l) \n\t{\n\t\tif (!set.contains(x))\n\
    \t\t\tset.add(x);\n\t}\n\t\n\treturn set.sortedArray();\n}\n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, long[]\
    \ u) \n{\n\tvar set = new HashSet<long>();\n\t\n\tforeach (var x in l) \n\t{\n\
    \t\tif (!set.contains(x)) \n\t\t\tset.add(x, u);\n\t}\n\t\n\treturn set.sortedArray();\n\
    }\n/*\nReturn unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l, long[] u, long[] a) \n{\n\tvar set = new HashSet<long>();\n\t\n\tforeach\
    \ (var x in l) \n\t{\n\t\tif (!set.contains(x, a)) \n\t\t\tset.add(x, u, a);\n\
    \t}\n\t\n\treturn set.sortedArray();\n}\n/*\nReturn unique elements in an array\n\
    \    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L,\
    \ 9L, 123L]\n    \n*/\nlong[] unique(long[] l, long[] u, long[] a, long[] b) \n\
    {\n\tvar set = new HashSet<long>();\n\t\n\tforeach (var x in l) \n\t{\n\t\tif\
    \ (!set.contains(x, a, b)) \n\t\t\tset.add(x, u, a, b);\n\t}\n\t\n\treturn set.sortedArray();\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l, long[] u, long[] a, long[] b, long[] c) \n{\n\tvar set = new\
    \ HashSet<long>();\n\t\n\tforeach (var x in l) \n\t{\n\t\tif (!set.contains(x,\
    \ a, b, c)) \n\t\t\tset.add(x, u, a, b, c);\n\t}\n\t\n\treturn set.sortedArray();\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> \nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyktvtljn.d(11): Error: found `>` when expecting `.` following long

    /tmp/tmpyktvtljn.d(11): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpyktvtljn.d(11): Error: semicolon expected, not `)`

    /tmp/tmpyktvtljn.d(11): Error: found `)` instead of statement

    /tmp/tmpyktvtljn.d(13): Error: found `in` when expecting `;`

    /tmp/tmpyktvtljn.d(29): Error: found `>` when expecting `.` following long

    /tmp/tmpyktvtljn.d(29): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpyktvtljn.d(29): Error: semicolon expected, not `)`

    /tmp/tmpyktvtljn.d(29): Error: found `)` instead of statement

    /tmp/tmpyktvtljn.d(31): Error: found `in` when expecting `;`

    /tmp/tmpyktvtljn.d(47): Error: found `>` when expecting `.` following long

    /tmp/tmpyktvtljn.d(47): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpyktvtljn.d(47): Error: semicolon expected, not `)`

    /tmp/tmpyktvtljn.d(47): Error: found `)` instead of statement

    /tmp/tmpyktvtljn.d(49): Error: found `in` when expecting `;'
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long[] res =\
    \ new long[l.length];\n  for(int i=0;i<l.length;i++) {\n    if(res[l[i]] == null)\
    \ { res[l[i]]=l[i]; }\n  }\n  return res;\n}\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nThis would be better if you could provide some explanation for what the\
    \ OP was doing and why your solution would work.\n<|/ c |>\n<| c |>\n`unique`\
    \ is O(n), so you might get better performance from something like: `long[] unique\
    \ = new long[l.length];\n  for(int i=0;i<l.length;i++) {\n    if(unique[l[i]]\
    \ == null) { unique[l[i]]=l[i]; }\n  }\n  return unique;`\n<|/ c |>\n<| c |>\n\
    : Yes, you're right. I've edited my answer with some comments.\n<|/ c |>\n<| c\
    \ |>\nThanks, this answer is much more comprehensive than mine -- I upvoted it\
    \ and was going to add my own version as an alternative.\n<|/ c |>\n<| a tags=arrays,c#\
    \ |>\nHere is a quick way to do this with LINQ:\n<code>\nvar sortedList = new[]\
    \ {1,2,3,4,5,1,2,3}.OrderBy(x => x).Distinct().ToList();\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nIt's actually O(n), so this might be a bad idea.\n<|/ c |>\n<|\
    \ c |>\n, The performance is O(n), because the Distinct method iterates over the\
    \ entire list to collect distinct elements. A simple foreach loop will give you\
    \ O(n) performance.\n<|/ c |>\n<| c |>\n: It's O(n), but not in the best case.\
    \ Distinct has O(n) performance, foreach has O(n^2). Sorting the list will have\
    \ O(n*log n) performance, Distinct will have O(n).\n<|/ c |>\n<| c |>\n, It doesn't\
    \ have to be `O(n*log n)` when implemented as a hashset, which is typically implemented\
    \ as an array or hashtable.  O(n) can still be achieved with a sorted array or\
    \ a hashtable.  In the best case it can be achieved in O(n), in the worst case\
    \ it's O(n^2).  However, if n << m, n <= log m, then O(n) performance will almost\
    \ always be better than O(n^2)\n<|/ c |>\n<| a |>\nA generic way of doing this\
    \ would be\n<code>\npublic static class \nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg0cac31i.d(17): Error: declaration expected, not `<`

    /tmp/tmpg0cac31i.d(30): Error: unterminated character constant

    /tmp/tmpg0cac31i.d(30): Error: unterminated character constant

    /tmp/tmpg0cac31i.d(39): Error: declaration expected, not `<`

    /tmp/tmpg0cac31i.d(42): Error: unterminated character constant

    /tmp/tmpg0cac31i.d(48): Error: unterminated character constant

    /tmp/tmpg0cac31i.d(51): Error: unterminated character constant

    /tmp/tmpg0cac31i.d(51): Error: unterminated character constant

    /tmp/tmpg0cac31i.d(61): Error: declaration expected, not `assert`

    /tmp/tmpg0cac31i.d(62): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg0cac31i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  var res = new\
    \ long[l.length];\n  for(int i = 0; i < l.length; i++) \n  {\n    for(int j =\
    \ 0; j < i; j++) \n    {\n      if(l[i] < l[j]) \n      {\n        long a = l[i];\n\
    \        l[i] = l[j];\n        l[j] = a;\n      }\n    }\n  }\n  return l;\n}\n\
    </code>\n<|/ a tags=arrays,c#,unique dscore=1 |>\n<| c |>\nIt also removes duplicate\
    \ numbers. That's not what the OP is after. This code doesn't work.\n<|/ c |>\n\
    <| c |>\nIt's true, but if the task is to find unique values it is more elegant\
    \ than the code I provided.\n<|/ c |>\n<| c |>\nThat code has worst performance\
    \ than the one I provided for the same problem in terms of execution time !\n\
    <|/ c |>\n<| c |>\nYes, you are right. Sorry for my mistake. I edited my post\
    \ and fixed it. My first answer had wrong code, my second is more efficient.\n\
    <|/ c |>\n<| a dscore=1 |>\nI've had luck with this in C#:\n<code>\nvar numbers\
    \ = new List<int>(new int[] { 1, 5, 3, 1, 5, 3 });\nnumbers.RemoveAll(x => numbers.Where(y\
    \ => y == x).Count() == 1);\nConsole.WriteLine(string.Join(\", \", numbers.ToArray()));\n\
    </code>\n<|/ a tags=arrays,c#,unique |>\n<| a tags=arrays,c#,unique dscore=1 |>\n\
    <code>\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzhjk2zpp.d(26): Error: declaration expected, not `<`

    /tmp/tmpzhjk2zpp.d(29): Error: unterminated character constant

    /tmp/tmpzhjk2zpp.d(29): Error: unterminated character constant

    /tmp/tmpzhjk2zpp.d(32): Error: unterminated character constant

    /tmp/tmpzhjk2zpp.d(41): Error: unterminated character constant

    /tmp/tmpzhjk2zpp.d(44): Error: unexpected `(` in declarator

    /tmp/tmpzhjk2zpp.d(44): Error: found `=>` when expecting `)`

    /tmp/tmpzhjk2zpp.d(44): Error: no identifier for declarator `numbers.RemoveAll(x)`

    /tmp/tmpzhjk2zpp.d(44): Error: semicolon expected following function declaration

    /tmp/tmpzhjk2zpp.d(44): Error: unexpected `(` in declarator

    /tmp/tmpzhjk2zpp.d(44): Error: found `=>` when expecting `)`

    /tmp/tmpzhjk2zpp.d(44): Error: no identifier for declarator `numbers.Where(y)`

    /tmp/tmpzhjk2zpp.d(44): Error: semicolon expected following function declaration

    /tmp/tmpzhjk2zpp.d(44): Error: no identifier for declarator `y`

    /tmp/tmpzhjk2zpp.d(44): Error: declaration expected, not `==`

    /tmp/tmpzhjk2zpp.d('
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n   long[] sorted\
    \ = sort(l);\n   int size = sorted.length-1;\n   long[] res = new long[size];\n\
    \   int j = 0;\n   for(int i=0; i<size; i++) {\n       if(sorted[i] == sorted[i+1])\
    \ {\n           res[j] = sorted[i];\n           j++;\n       }\n   }\n   return\
    \ res;\n}\n</code>\n<|/ a tags=java |>\n<| a tags=java |>\n<code>\npublic class\
    \ UniqueLongArray\n{\n    public static long[] unique(long[] arr)\n    {\n   \
    \     long[] a = new long[arr.length];\n        long lastVal = arr[0];\n     \
    \   for(int i = 0; i < arr.length; i++)\n        {\n            if((arr[i] !=\
    \ lastVal) && (arr[i] != arr[i+1]))\n            {\n                a[i] = arr[i];\n\
    \                lastVal = arr[i];\n            }\n        }\n        return a;\n\
    \    }\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nI believe this is an\
    \ old question but this might be helpful for other people finding this page.\n\
    <code>\nimport java.util.Arrays;\npublic class UniqueArray {\n    public static\
    \ long[] unique(long[] arr) {\n        // TODO Auto-generated method stub\n  \
    \      long[] sorted = Arrays.sort(arr);\n        int size = sorted.length-1;\n\
    \        long[] res = new long[size];\n        int j = 0;\n        for(int i=0;\
    \ i<size; i++) {\n            if(sorted[i] == sorted[i+1]) {\n               \
    \ res[j] = sorted[i];\n                j++;\n            }\n        }\n      \
    \  return res;\n    }\n    public static void main(String[] args) {\n        long[]\
    \ longArr = new long[]{9, 4, 2, 3, 10, 10, 4, 3};\n        System.out.println(Arrays.toString(unique(longArr)));\n\
    \    }\n}\n</code>\n<|/ a tags=java |>\n<| a |>\nI took answer from Sakharov and\
    \ modified it to make it more efficient. Here is my code:\n<code>\npublic static\
    \ long[] unique(long[] arr) {\n        long[] sorted = new long[arr.length];\n\
    \        int j = 0;\n        long lastVal = arr[0];\n        for (int i = 0; i\
    \ < arr.length; i++) {\n            if (arr[i] != lastVal) {\n               \
    \ sorted[j] = arr[i];\n                lastVal = arr[i];\n                j++;\n\
    \            }\n        }\n        long[] res = new long[j];\n        for (int\
    \ i = 0; i < j; i++) {\n            res[i] = sorted[i];\n        }\n        return\
    \ res;\n    }\n</code>\n<|/ a dscore=2 tags=java |>\n<| a |>\nThe easiest way\
    \ is to use HashSet:\n<code>\npublic static long[] unique(long[] a){\n    HashSet\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpen1gqdcu.d(23): Error: declaration expected, not `<`

    /tmp/tmpen1gqdcu.d(33): Error: declaration expected, not `for`

    /tmp/tmpen1gqdcu.d(33): Error: no identifier for declarator `i`

    /tmp/tmpen1gqdcu.d(33): Error: declaration expected, not `<`

    /tmp/tmpen1gqdcu.d(33): Error: no identifier for declarator `i`

    /tmp/tmpen1gqdcu.d(33): Error: declaration expected, not `++`

    /tmp/tmpen1gqdcu.d(38): Error: no identifier for declarator `lastVal`

    /tmp/tmpen1gqdcu.d(38): Error: declaration expected, not `=`

    /tmp/tmpen1gqdcu.d(39): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpen1gqdcu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return std.algorithm.sortDetailed(l,\
    \ std.typecons.Comparer.toComparable);\n}\n/*\nReturn sorted unique elements in\
    \ an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L,\
    \ 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, Comparator c)\n{\n    return\
    \ std.algorithm.sortDetailed(l, c);\n}\n/*\nReturn unique elements in a range\
    \ [start, end[\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], 0, 10)\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, int start,\
    \ int end)\n{\n    return std.algorithm.sortDetailed(l, std.typecons.Comparer.toComparable(start,\
    \ end));\n}\n/*\nReturn unique elements in a range [start, end[\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], 0, 10)\n    [0L, 2L, 3L, 5L, 9L, 123L]\n\
    \    \n*/\nlong[] unique(long[] l, int start, int end, Comparator c)\n{\n    return\
    \ std.algorithm.sortDetailed(l, std.typecons.Comparer.toComparable(start, end),\
    \ c);\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L], 0, 10)\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n\
    */\nlong[] uniqueDetailed(long[] l, Comparator c)\n{\n    return std.algorithm.sortDetailed(l,\
    \ c);\n}\n/*\nReturn unique elements in a range [start, end[\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L], 0, 10)\n    [0L, 2L, 3L, 5L, 9L, 123L]\n\
    \    \n*/\nlong[] uniqueDetailed(long[] l, int start, int end)\n{\n    return\
    \ std.algorithm.sortDetailed(l, std.typecons.Comparer.toComparable(start, end));\n\
    }\n/*\nReturn unique elements in a range [start, end[\n    >>> unique([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L], 0, 10)\n    [0L, 2L, 3L, 5L, 9L, \nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpivjizsw3.d(63): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpivjizsw3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tstd.sort(l);\n\
    \tlong[] u = new long[l[l.length-1]];\n\tfor(int i=1; i<l[l.length-1]; i++)\n\t\
    {\n\t\tif(i!=l[l.length-1])\n\t\t{\n\t\t\tif(l[i]==l[l[i]-1])\n\t\t\t\tu[l[i]]\
    \ = l[i]+1;\n\t\t\telse\n\t\t\t\tu[l[i]] = l[l[i]-1]+1;\n\t\t}\n\t\telse\n\t\t\
    \tu[l[i]] = l[i];\n\t}\n\treturn u;\n}\n/*\nReturn sorted unique elements in an\
    \ array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L,\
    \ 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, long h) \n{\n\tstd.sort(l);\n\
    \tlong[] u = new long[l[l.length-1]];\n\tfor(int i=1; i<l[l.length-1]; i++)\n\t\
    {\n\t\tif(i!=l[l.length-1])\n\t\t{\n\t\t\tif(l[i]==h && l[i]==l[l[i]-1])\n\t\t\
    \t\tu[l[i]] = l[i]+1;\n\t\t\telse\n\t\t\t\tu[l[i]] = l[l[i]-1]+1;\n\t\t}\n\t\t\
    else\n\t\t\tu[l[i]] = l[i];\n\t}\n\treturn u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0m5p4bu9.d(11): Error: undefined identifier `sort` in package `std`

    /tmp/tmp0m5p4bu9.d(35): Error: undefined identifier `sort` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0m5p4bu9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    for(int i = 0; i < l.length; i++) {\n        u[i] =\
    \ l[i];\n        for(int j = i+1; j < l.length; j++) {\n            if (u[j] ==\
    \ l[i]) {\n                l[i] = l[j];\n                u[i] = l[i];\n      \
    \      }\n        }\n    }\n    return u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxl8z8kwo.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x428405]

    ??:? void tmpxl8z8kwo.__unittest_L23_C1() [0x4280d8]

    ??:? void tmpxl8z8kwo.__modtest() [0x428188]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c4e3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b376]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430601]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ab0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x43058d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b34d]

    ??:? runModuleUnitTests [0x42c2b9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4288c8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] r = new\
    \ long[l.length];\n\tfor (int i = 0; i < l.length; i++) {\n\t\tif (!isUnique(l,\
    \ r, i)) {\n\t\t\treturn r;\n\t\t}\n\t}\n\treturn r;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph7ms2btp.d(13): Error: undefined identifier `isUnique`, did you
    mean struct `Unique(T)`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph7ms2btp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t// Write your\
    \ code here\n\tlong[] u = new long[l.length];\n\tfor (int i = 0; i < l.length;\
    \ ++i)\n\t{\n\t\tfor (int j = i + 1; j < l.length; ++j)\n\t\t{\n\t\t\tif (l[i]\
    \ == l[j])\n\t\t\t{\n\t\t\t\tu[i] = l[i];\n\t\t\t\tj = i;\n\t\t\t}\n\t\t}\n\t\
    }\n\tfor (int i = 0; i < u.length; ++i)\n\t{\n\t\tfor (int j = i + 1; j < u.length;\
    \ ++j)\n\t\t{\n\t\t\tif (u[i] > u[j])\n\t\t\t{\n\t\t\t\tlong tmp = u[i];\n\t\t\
    \t\tu[i] = u[j];\n\t\t\t\tu[j] = tmp;\n\t\t\t}\n\t\t}\n\t}\n\treturn u;\n}\n</code>\n\
    <|/ a tags=java,algorithm,sorting,arrays |>\n<| a dscore=0 tags=java,algorithm,sorting,arrays\
    \ |>\nThis is not a solution in any language, but you might like to take a look\
    \ at this\n<|/ a |>\n<| a dscore=0 |>\nI wrote a solution in python which works\
    \ correctly for any type of data without creating a new array.\n<code>\narr =\
    \ [2,3,5,1,4,2,6,7,3,5,3,8,9]\narr.sort()\narr_copy=arr[:]\nfor num in arr:\n\
    \    if arr.count(num)>1:\n        arr.remove(num)\n        arr_copy.append(num)\n\
    print arr\nprint arr_copy\n</code>\n<|/ a tags=java,algorithm,sorting,arrays |>\n\
    <| a dscore=0 |>\nI guess this could be a possible solution:\n<code>\npublic class\
    \ Sorting {\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3ekx7iqt.d(38): Error: declaration expected, not `<`

    /tmp/tmp3ekx7iqt.d(65): Error: declaration expected, not `assert`

    /tmp/tmp3ekx7iqt.d(66): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ekx7iqt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong tmp;\n\t\
    long[] u = new long[l.length];\n\tfor (int i = 0; i < u.length; i++) {\n\t\ttmp\
    \ = l[i];\n\t\tfor (int j = i + 1; j < u.length; j++) {\n\t\t\tif (tmp == l[j])\
    \ {\n\t\t\t\tl[j] = tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tu[i] = tmp;\n\t\
    }\n\treturn u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx5sc14ch.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x42836d]

    ??:? void tmpx5sc14ch.__unittest_L25_C1() [0x42803c]

    ??:? void tmpx5sc14ch.__modtest() [0x4280ec]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c44b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2de]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430569]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a18]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304f5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2b5]

    ??:? runModuleUnitTests [0x42c221]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428830]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long result[]\
    \ = new long[l[l.length-1]]; \n  \n  for(int i = 1; i < l.length; i++) {\n   \
    \ if(l[i] == l[i-1]) \n      continue;\n    result[i-1] = l[i]; \n  }\n  \n  return\
    \ result; \n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: '/tmp/tmpvw1zaiar.d(11): Deprecation: instead of C-style syntax, use D-style
    syntax `long[] result`

    /tmp/tmpvw1zaiar.d(11): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] result`

    core.exception.AssertError@/tmp/tmpvw1zaiar.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x428365]

    ??:? void tmpvw1zaiar.__unittest_L21_C1() [0x428038]

    ??:? void tmpvw1zaiar.__modtest() [0x4280e8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c443]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430561]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a10]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304ed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2ad]

    ??:? runModuleUnitTests [0x42c219]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428828]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    for(int i = 1; i < l.length; i++) \n    { \n    \
    \    boolean swap = true;\n        int j = 0;\n        for(; j < i; j++)\n   \
    \     {\n            if(l[j] > l[j+1]) \n            {\n                swap =\
    \ false;\n                break;\n            }\n        }\n        if(swap) \n\
    \        { \n            for(int k = i; k < l.length; k++) \n            { \n\
    \                result[k] = l[k]; \n            } \n        }\n    } \n    return\
    \ result; \n}\n</code>\n<|/ a |>\n<| a dscore=2 |>\n<code>\n  import java.util.Arrays;\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpanacymrf.d(34): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpanacymrf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    for(int i=0; i<u.length; i++) \n        u[i] = l[i];\n\
    \    sort(u, l.length, long.class, true);\n    return u;\n}\n</code>\nI took these\
    \ algorithms from: http://www.algolist.net/Algorithms/Sorting/Unique\n<|/ a tags=unique,sorting,c#\
    \ |>\n<| c |>\nThe \"return u\" line is a bit misleading, as it is really the\
    \ unique part of the algorithm. Really, you just need to \"return l;\".\n<|/ c\
    \ |>\n<| c |>\n\"return l\" does not work; it just removes duplicates from the\
    \ original array.  I needed to do this after a sorting operation.\n<|/ c |>\n\
    <| a tags=unique,sorting,c# |>\nHere is my solution that removes duplicates from\
    \ an array and sorts it without using any loops, recursions or arrays.\n<code>\n\
    public static int[] SortAndRemoveDuplicates(int[] input)\n{\n    int[] result\
    \ = new int[input.Length];\n    int i = 0, k = 0;\n    while (i < input.Length)\n\
    \    {\n        while (i + 1 < input.Length && input[i] == input[i + 1])\n   \
    \     {\n            i++;\n        }\n        if (i == input.Length)\n       \
    \     break;\n        result[k] = input[i];\n        i++;\n        k++;\n    }\n\
    \    if (result.Length > 1)\n    {\n        for (int j = 0; j < result.Length\
    \ - 1; j++)\n        {\n            if (result[j + 1] > result[j])\n         \
    \   {\n                Array temp = result[j];\n                result[j] = result[j\
    \ + 1];\n                result[j + 1] = temp;\n            }\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a dscore=4 |>\n<| c |>\nThis fails to\
    \ sort a list of strings by length. Strings get sorted by their ordinal value,\
    \ not their string length.\n<|/ c |>\n<| a dscore=4 |>\n<code>\nvar uniqueList\
    \ = new List<int>();\nvar uniqueList2 = new List<int>();\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppxy3ulg1.d(14): Error: found `class` when expecting identifier
    following `long`.

    /tmp/tmppxy3ulg1.d(17): Error: declaration expected, not `<`

    /tmp/tmppxy3ulg1.d(24): Error: semicolon expected, not `removes`

    /tmp/tmppxy3ulg1.d(24): Error: semicolon expected, not `from`

    /tmp/tmppxy3ulg1.d(24): Error: semicolon expected, not `original`

    /tmp/tmppxy3ulg1.d(24): Error: semicolon expected, not `.`

    /tmp/tmppxy3ulg1.d(24): Error: semicolon expected, not `to`

    /tmp/tmppxy3ulg1.d(24): Error: no identifier for declarator `to`

    /tmp/tmppxy3ulg1.d(24): Error: declaration expected, not `do`

    /tmp/tmppxy3ulg1.d(33): Error: declaration expected, not `while`

    /tmp/tmppxy3ulg1.d(38): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppxy3ulg1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    \n    int[]\
    \ f = new int[l.length];\n    long[] res = new long[l.length];\n    int j = 0;\n\
    \    for (int i = 0; i < l.length; ++i)\n    {\n        if (f[i] != 0)\n     \
    \   {\n            res[j] = l[i];\n            j++;\n        }\n        f[l[i]]++;\n\
    \    }\n    return res;\n}\nunittest\n{\n    alias candidate = unique;\n\n   \
    \ assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmph1twd0sp.d(22): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4286e6]

    ??:? long[] tmph1twd0sp.unique(long[]) [0x4281ef]

    ??:? void tmph1twd0sp.__unittest_L26_C1() [0x42828d]

    ??:? void tmph1twd0sp.__modtest() [0x4283b4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c8f7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b78a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430a15]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430ec4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4309a1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b761]

    ??:? runModuleUnitTests [0x42c6cd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t// O(N log N)\
    \ approach\n\t\n\t// Build sorted set for original array\n\tlong [] ls = new long[l.length];\n\
    \tls = sort(l);\n\t\n\t// Create array to hold unique elements\n\tlong [] u =\
    \ new long[ls.length];\n\t\n\t// Keep track of unique element\n\tlong uniqueCount\
    \ = 0;\n\t\n\t// Loop over original array to find unique elements and store them\n\
    \tfor (int i=0; i < ls.length; i++)\n\t{\n\t\tfor (int j=i+1 ; j < ls.length;\
    \ j++)\n\t\t{\n\t\t\tif (ls[i] == ls[j])\n\t\t\t{\n\t\t\t\tls[j] = -1; // To mark\
    \ duplicate elements\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If all elements\
    \ are marked as duplicates, increment unique counter\n\t\tif (ls[i] == -1)\n\t\
    \t{\n\t\t\tuniqueCount++;\n\t\t\t\n\t\t\t// Push unique element into array for\
    \ return purpose\n\t\t\tu[uniqueCount-1] = ls[i];\n\t\t}\n\t}\n\t\n\t// Return\
    \ unique elements from array\n\treturn u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpghd6sj1a.d(15): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpghd6sj1a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] n =\
    \ new long[l.length];\n    for (int i=0; i < n.length; i++) \n\tn[i] = l[i];\n\
    \    Arrays.sort(n);\n    return n;\n}\n</code>\n<|/ a dscore=5 |>\n<| c |>\n\
    I agree that this is a better approach than using Lists. However, it would be\
    \ nice to know how to do this with Lists.\n<|/ c |>\n<| c |>\n: How about using\
    \ Arrays.sort() with the compare() function?\n<|/ c |>\n<| c |>\nYou mean like\
    \ this: `Arrays.sort(l, new Comparator<Long>() { public int compare(Long o1, Long\
    \ o2) { ... } });` ?\n<|/ c |>\n<| c |>\n: Yes, it would be cleaner with `Arrays.sort()`.\
    \ I wasn't sure if `compare()` is overloaded or something because I haven't seen\
    \ it used much anywhere (I usually use my own Comparators).\n<|/ c |>\n<| a tags=java,list,arrays\
    \ |>\nI came here because I was looking for the shortest possible solution to\
    \ sort a List and I didn't want to use Guava's Ordering or Comparator. Here is\
    \ my solution:\n<code>\nList<Integer> list = Arrays.asList(12, 3, 6, 1, 15, 94,\
    \ 8);\nInteger[] array = list.toArray(new Integer[list.size()]);\nArrays.sort(array);\n\
    list = Arrays.asList(array);\nSystem.out.println(list);\n</code>\n<|/ a dscore=5\
    \ |>\n<| c |>\nArrays.asList() returns a fixed-size list so it's no better than\
    \ any other solution\n<|/ c |>\n<| c |>\nWhy do you convert a list to a fixed-size\
    \ array? That is useless.\n<|/ c |>\n<| c |>\n.kowshik  It's not useless, it's\
    \ just one more line of code\n<|/ c |>\n<| a |>\nYou can use the method sort.\n\
    <code>\nArrays.sort(a);\n</code>\n<|/ a dscore=5 tags=java,list,arrays |>\n<|\
    \ a |>\nI came across a similar problem and ended up writing a custom method to\
    \ solve it (see below). The method can take any type of List including arrays\
    \ and Lists of custom objects.\nThe custom sort method will always return a sorted\
    \ List of the same type as the passed List but can be used for any list type with\
    \ any number of elements. \nThe return type of the custom method is a List< T\
    \ > so that it can contain any type of List< T >.\n<code>\npublic static <T> List<\
    \ T > customSort(List< T > list\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy4w1yrhk.d(17): Error: declaration expected, not `<`

    /tmp/tmpy4w1yrhk.d(29): Error: unterminated character constant

    /tmp/tmpy4w1yrhk.d(29): Error: unterminated character constant

    /tmp/tmpy4w1yrhk.d(32): Error: unterminated character constant

    /tmp/tmpy4w1yrhk.d(32): Error: unterminated character constant

    /tmp/tmpy4w1yrhk.d(36): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpy4w1yrhk.d(36): Error: no identifier for declarator `Arrays.sort(array)`

    /tmp/tmpy4w1yrhk.d(37): Error: no identifier for declarator `list`

    /tmp/tmpy4w1yrhk.d(37): Error: declaration expected, not `=`

    /tmp/tmpy4w1yrhk.d(38): Error: identifier expected following `.` instead of `out`

    /tmp/tmpy4w1yrhk.d(38): Error: no identifier for declarator `System`

    /tmp/tmpy4w1yrhk.d(38): Error: declaration expected, not `out`

    /tmp/tmpy4w1yrhk.d(39): Error: declaration expected, not `<`

    /tmp/tmpy4w1yrhk.d(42): Error: unterminated character constant

    /tmp/tmpy4w1yrhk.d(48): Error: unterminate'
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int j = 0;\n    for (int i = 0; i < l.length; i++)\
    \ {\n        while (j < l.length && l[i] == l[j]) {\n            j++;\n      \
    \  }\n        result[i] = l[j];\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpa5euldl6.d(17): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x4283ee]

    ??:? long[] tmpa5euldl6.unique(long[]) [0x427ef8]

    ??:? void tmpa5euldl6.__unittest_L22_C1() [0x427f99]

    ??:? void tmpa5euldl6.__modtest() [0x4280c0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c41b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2ae]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430539]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309e8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304c5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b285]

    ??:? runModuleUnitTests [0x42c1f1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new\
    \ long[l.length];\n\tbool first = true;\n\tfor (int i = 0; i < l.length; ++i)\n\
    \t\tif (l[i] != 0L)\n\t\t{\n\t\t\tif (!first)\n\t\t\t{\n\t\t\t\tu[i - 1] = l[i];\n\
    \t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu[i] = l[i];\n\t\t\t}\n\t\t\tfirst = false;\n\
    \t\t}\n\treturn u;\n}\n/*\nReturn sorted unique elements in an array\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n\
    \    \n*/\ndouble[] unique(double[] l) \n{\n\tdouble[] u = new double[l.length];\n\
    \tbool first = true;\n\tfor (int i = 0; i < l.length; ++i)\n\t\tif (l[i] != 0)\n\
    \t\t{\n\t\t\tif (!first)\n\t\t\t{\n\t\t\t\tu[i - 1] = l[i];\n\t\t\t}\n\t\t\telse\n\
    \t\t\t{\n\t\t\t\tu[i] = l[i];\n\t\t\t}\n\t\t\tfirst = false;\n\t\t}\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nfloat[]\
    \ unique(float[] l) \n{\n\tfloat[] u = new float[l.length];\n\tbool first = true;\n\
    \tfor (int i = 0; i < l.length; ++i)\n\t\tif (l[i] != 0.0f)\n\t\t{\n\t\t\tif (!first)\n\
    \t\t\t{\n\t\t\t\tu[i - 1] = l[i];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu[i]\
    \ = l[i];\n\t\t\t}\n\t\t\tfirst = false;\n\t\t}\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz2fkuptd.d(88): unittest failure

    ----------------

    ??:? _d_unittestp [0x4292b5]

    ??:? void tmpz2fkuptd.__unittest_L84_C1() [0x428f84]

    ??:? void tmpz2fkuptd.__modtest() [0x429034]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42d943]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42c7d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x431a61]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x431f10]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4319ed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42c7ad]

    ??:? runModuleUnitTests [0x42d719]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x429778]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res =\
    \ new long[l.length];\n\tfor (int i = 0; i < l.length; ++i) \n\t\tres[i] = l[i];\n\
    \tint i = res.length, j = 0;\n\twhile (i > 0 && j > 0) {\n\t\tif (res[j] == res[--i])\
    \ {\n\t\t\tres[j] = l[i];\n\t\t\t++j;\n\t\t}\n\t}\n\treturn res;\n}\n/*\nReturn\
    \ unique items in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, int d) { \n\tlong[]\
    \ res = new long[d.length];\n\tfor (int i = 0; i < l.length; ++i) \n\t\tres[i]\
    \ = l[i];\n\tint i = res.length, j = 0;\n\twhile (i > 0 && j > 0) {\n\t\tif (res[j]\
    \ == res[--i]) {\n\t\t\tres[j] = l[i];\n\t\t\t++j;\n\t\t}\n\t}\n\treturn res;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkhuij3m0.d(14): Error: cannot implicitly convert expression `res.length`
    of type `ulong` to `int`

    /tmp/tmpkhuij3m0.d(30): Error: no property `length` for type `int`

    /tmp/tmpkhuij3m0.d(33): Error: cannot implicitly convert expression `res.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkhuij3m0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\t\
    bool found = false;\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tlong lh =\
    \ l[i];\n\t\tfor (int j = i + 1; j < l.length; j++)\n\t\t{\n\t\t\tif (lh == l[j])\n\
    \t\t\t{\n\t\t\t\tfound = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (found)\n\
    \t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tu = new long[l.length + 1];\n\
    \t\t\tint index = 0;\n\t\t\tfor (int j = 0; j < l.length; j++)\n\t\t\t{\n\t\t\t\
    \tu[index++] = l[j];\n\t\t\t}\n\t\t\tl = new long[index];\n\t\t\tSystem.arraycopy(l,\
    \ 0, u, 0, l.length);\n\t\t\tl = u;\n\t\t\tfound = false;\n\t\t}\n\t}\n\treturn\
    \ l;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp76kojtnf.d(37): Error: undefined identifier `System`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp76kojtnf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new\
    \ long[l[l.length-1]];\n\tint j = 0;\n\tint i;\n\tfor(i = 0; i < l[l.length-1];\
    \ i++)\n\t{\n\t\twhile(j<l[i]) u[j++] = l[i];\n\t\tu[j-1]--;\n\t}\n\treturn u;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpjubwj48o.d(16): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x42844e]

    ??:? long[] tmpjubwj48o.unique(long[]) [0x427ed4]

    ??:? void tmpjubwj48o.__unittest_L21_C1() [0x427ff9]

    ??:? void tmpjubwj48o.__modtest() [0x428120]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c47b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b30e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430599]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a48]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430525]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2e5]

    ??:? runModuleUnitTests [0x42c251]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t// TODO: Optimize\
    \ this by storing the result in an\n\t// array and using linear search to find\
    \ unique elements\n\tint n = l.length;\n\tlong[] a = new long[n];\n\tlong temp;\n\
    \tfor (int i = 0; i < n; i++) {\n\t\ttemp = l[i];\n\t\tfor (int j = i + 1; j <\
    \ n; j++) {\n\t\t\tif (temp > l[j]) {\n\t\t\t\ta[i] = l[j];\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn a;\n}\n/*\nReturn sorted unique elements in an array\n\
    \    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L,\
    \ 9L, 123L]\n    \n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp3e41wat.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp3e41wat.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long[] out =\
    \ new long[l.length];\n  long[] prev = new long[l.length];\n  \n  prev[0] = 0;\n\
    \  for (int i = 1; i < l.length; i++)\n  {\n    long x = l[i];\n    int j = -1;\n\
    \    for (j=0; j < i; j++)\n    {\n      long y = l[j];\n      if (prev[j] ==\
    \ x)\n        continue;\n      else if (prev[j] > x)\n      {\n        prev[j]\
    \ = x;\n        out[j] = y;\n        break;\n      }\n    }\n    if (j == i)\n\
    \      out[i] = x;\n  }\n  return out;\n}\n\"\"\"\n</cell>\n<cell>\n!cd ~/facs-seq_test/;\
    \ python -m SimpleHTTPServer 9191\n</cell>\n<cell>\nimport ipywidgets as widgets\n\
    widgets.interact(lambda col : unique(l=col), col=lnames[:4])\n</cell>\n<text>\n\
    Ejemplo: Sacar una lista de valores \xEDmpares en un rango dado.\nPara esto podemos\
    \ usar la funci\xF3n range(), y usar un for, para que el c\xF3digo de la funci\xF3\
    n se ejecute una sola vez para cada valor del rango. \nSi no convierte la funci\xF3\
    n range en una funci\xF3n que se ejecute una sola vez por cada valor del rango\
    \ entonces podemos utilizar el c\xF3digo a continuaci\xF3n para hacer una sola\
    \ vez de la lista de valores \xEDmpares.\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmhvhjzx4.d(11): Error: no identifier for declarator `long[]`

    /tmp/tmpmhvhjzx4.d(11): Error: found `out` instead of statement

    /tmp/tmpmhvhjzx4.d(27): Error: found `out` instead of statement

    /tmp/tmpmhvhjzx4.d(32): Error: found `out` instead of statement

    /tmp/tmpmhvhjzx4.d(34): Error: expression expected, not `out`

    /tmp/tmpmhvhjzx4.d(36): Error: declaration expected, not `""`

    /tmp/tmpmhvhjzx4.d(36): Error: unterminated string constant starting at /tmp/tmpmhvhjzx4.d(36)

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhvhjzx4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res;\n\
    \    \n    res = l;\n    long last = res[0];\n    int index = 0;\n    for(int\
    \ i = 1; i < l.length; i++)\n    {\n        if(l[i] == last)\n        {\n    \
    \        res[index++] = l[i];\n        }\n        else\n        {\n          \
    \  last = l[i];\n        }\n    }\n    \n    return res;\n}\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpp7ldg4ic.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x428375]

    ??:? void tmpp7ldg4ic.__unittest_L30_C1() [0x428044]

    ??:? void tmpp7ldg4ic.__modtest() [0x4280f4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3f7]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b28a]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x43041d]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308cc]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4303a9]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b261]

    ??:? runModuleUnitTests [0x42c1cd]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428838]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    for(int i = 1; i < l.length; ++i)\n    {\n        if(l[i]\
    \ < l[i-1])\n            u[i] = l[i];\n        else\n            for(int j = 0;\
    \ j < i; ++j)\n                if(l[j] < l[i])\n                    u[i] = l[j];\n\
    \    }\n    return u;\n}\n/*\nReturn sorted unique elements in an array\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n\
    \    \n*/\nlong[] unique(long[] l, long tol) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 1; i < l.length; ++i)\n    {\n        if(l[i] < l[i-1])\n   \
    \         u[i] = l[i];\n        else\n            for(int j = 0; j < i; ++j)\n\
    \                if(l[j] < l[i])\n                    u[i] = l[j];\n    }\n  \
    \  return u;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l, long tol, long equal) \n{\n    long[] u = new long[l.length];\n\
    \    for(int i = 1; i < l.length; ++i)\n    {\n        if(l[i] < l[i-1])\n   \
    \         u[i] = l[i];\n        else\n            for(int j = 0; j < i; ++j)\n\
    \                if(l[j] < l[i])\n                    u[i] = l[j];\n    }\n  \
    \  return u;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l, long tol, long equal, long strict) \n{\n    long[] u =\
    \ new long[l.length];\n    for(int i = 1; i < l.length; ++i)\n    {\n        if(l[i]\
    \ < l[i-1])\n            u[i] = l[i];\n        else\n            for(int j = 0;\
    \ j < i; ++j)\n                if(l[j] < l[i])\n                    u[i] = l[j];\n\
    \    }\n    return u;\n}\n/*\nReturn sorted unique elements in an array\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp__xa584w.d(83): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp__xa584w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new\
    \ long[l.length];\n\tfor(int i = 0; i < u.length; i++)\n\t\tu[i] = i;\n\tArrays.sort(u);\n\
    \tArrays.parallelSort(u);\n\treturn u;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpczpa_6aa.d(14): Error: undefined identifier `Arrays`

    /tmp/tmpczpa_6aa.d(15): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpczpa_6aa.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t// Return sorted\
    \ unique elements in an array\n\tlong temp = 0;\n\tint i=0;\n\twhile (i<l.length){\n\
    \t\tif (l[i] != temp){\n\t\t\ttemp=l[i];\n\t\t\ti++;\n\t\t}\n\t\telse{\n\t\t\t\
    i++;\n\t\t}\n\t}\n\treturn new long[i+1];\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpr58qnqgz.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x4282ed]

    ??:? void tmpr58qnqgz.__unittest_L25_C1() [0x427fbc]

    ??:? void tmpr58qnqgz.__modtest() [0x42806c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3cb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b25e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x4304e9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430998]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430475]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b235]

    ??:? runModuleUnitTests [0x42c1a1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287b0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long u = 0;\n\
    \    for (int i = 0; i < l.length; i++)\n        if (l[i] == u)\n            continue;\n\
    \        else if (l[i] < u)\n            l[i], u = u;\n        else\n        \
    \    u++;\n    return l;\n}\n/*\nReturn sorted unique elements in an array\n \
    \   >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 9L, 123L]\n\
    \    \n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpad7o3moy.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x4282ed]

    ??:? void tmpad7o3moy.__unittest_L27_C1() [0x427fc0]

    ??:? void tmpad7o3moy.__modtest() [0x428070]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c36f]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b202]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430395]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430844]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430321]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b1d9]

    ??:? runModuleUnitTests [0x42c145]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287b0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] a =\
    \ new long[l.length];\n    for (int i = 0; i < l.length; i++) \n        a[i] =\
    \ l[i];\n    Arrays.sort(a);\n    long[] b = new long[l.length];\n    for (int\
    \ i = 0; i < l.length; i++) \n        b[l.length-1-i] = a[i];\n    return b;\n\
    }\n</code>\n<|/ a tags=arrays,c# dscore=0 |>\n<| a tags=arrays,c# |>\n<code>\n\
    var input = new int[] { 2, -1, 4, 3, -1, -3 };\nvar output = input.OrderByDescending(x\
    \ => x).Skip(1).Take(3).ToArray();\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,c#\
    \ |>\n<code>\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp6l6qiqh.d(20): Error: declaration expected, not `<`

    /tmp/tmpp6l6qiqh.d(26): Error: declaration expected, not `<`

    /tmp/tmpp6l6qiqh.d(34): Error: declaration expected, not `assert`

    /tmp/tmpp6l6qiqh.d(35): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp6l6qiqh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new\
    \ long[l.length];\n\tArrays.sort(l);\n\tfor (int i = 0; i < l.length; i++) \n\t\
    \tu[l.length - 1 - i] = l[i];\n\treturn u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5fnnocpc.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5fnnocpc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    var result\
    \ = new long[l.length];\n    var j = 0;\n    for (var i=0; i< l.length; i++)\n\
    \    {\n        while (j<result.length && l[i]==result[j])\n        {\n      \
    \      j++;\n        }\n        if (j<result.length)\n        {\n            result[j]\
    \ = l[i];\n        }\n    }\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(float[] l) \n{\n    var result\
    \ = new long[l.length];\n    var j = 0;\n    for (var i=0; i< l.length; i++)\n\
    \    {\n        while (j<result.length && l[i]==result[j])\n        {\n      \
    \      j++;\n        }\n        if (j<result.length)\n        {\n            result[j]\
    \ = l[i];\n        }\n    }\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(double[] l) \n{\n    var result\
    \ = new long[l.length];\n    var j = 0;\n    for (var i=0; i< l.length; i++)\n\
    \    {\n        while (j<result.length && l[i]==result[j])\n        {\n      \
    \      j++;\n        }\n        if (j<result.length)\n        {\n            result[j]\
    \ = l[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4ygk2ww1.d(11): Error: undefined identifier `var`

    /tmp/tmp4ygk2ww1.d(12): Error: undefined identifier `var`

    /tmp/tmp4ygk2ww1.d(13): Error: undefined identifier `var`

    /tmp/tmp4ygk2ww1.d(34): Error: undefined identifier `var`

    /tmp/tmp4ygk2ww1.d(35): Error: undefined identifier `var`

    /tmp/tmp4ygk2ww1.d(36): Error: undefined identifier `var`

    /tmp/tmp4ygk2ww1.d(57): Error: undefined identifier `var`

    /tmp/tmp4ygk2ww1.d(58): Error: undefined identifier `var`

    /tmp/tmp4ygk2ww1.d(59): Error: undefined identifier `var`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ygk2ww1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long h=0;\n\
    \    long t = 0;\n    long[] u = new long[l.length];\n    for (int i=0; i<l.length;\
    \ i++)\n    {\n        if (l[i]>t)\n        {\n            u = swap(u, i, h);\n\
    \            h = t;\n            t += l[i];\n        }\n    }\n    u = swap(u,\
    \ l.length, h);\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphectt0n7.d(18): Error: undefined identifier `swap`, did you mean
    template `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?

    /tmp/tmphectt0n7.d(23): Error: undefined identifier `swap`, did you mean template
    `wrap(Targets...) if (Targets.length >= 1 && allSatisfy!(isMutable, Targets))`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphectt0n7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if (l.length\
    \ == 0)\n        return l;\n    long[] res = new long[l.length];\n    boolean[]\
    \ used = new boolean[l.length];\n    int j = 0;\n    for (int i = 0; i < l.length;\
    \ ++i)\n    {\n        if (!used[i])\n        {\n            res[j] = l[i];\n\
    \            used[i] = true;\n            j++;\n        }\n    }\n    return res;\n\
    }\n/*\nGiven a sorted integer array and an element, find the index of a given\
    \ element\n    ex: [1,2,3] and 3 returns 0\n    ex: [1,2,3] and 4 returns 3\n\
    \    ex: [1,2,3] and 0 returns -1\n    ex: [1,2,3] and -1 returns -1\n    ex:\
    \ [] and 0 returns -1\n    ex: [] and -1 returns -1\n    ex: [] and 10 returns\
    \ -1\n*/\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2vbgaops.d(14): Error: undefined identifier `boolean`

    /tmp/tmp2vbgaops.d(14): Error: undefined identifier `boolean`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2vbgaops.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\nlong[] n = new\
    \ long[l.length];\nfor (int i = 0; i < n.length; i++)\n{\n    bool contains =\
    \ false;\n    for (int j = 0; j < l.length; j++)\n    {\n        if (l[j] == n[i])\n\
    \        {\n            contains = true;\n        }\n    }\n    if (!contains)\n\
    \    {\n        n[i] = l[i];\n    }\n}\nreturn n;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpokqt4gy8.d(39): unittest failure

    ----------------

    ??:? _d_unittestp [0x428365]

    ??:? void tmpokqt4gy8.__unittest_L35_C1() [0x428038]

    ??:? void tmpokqt4gy8.__modtest() [0x4280e8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c443]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430561]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a10]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304ed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2ad]

    ??:? runModuleUnitTests [0x42c219]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428828]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  int len = l.length;\n\
    \  long[] u = new long[len];\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuydag70p.d(13): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuydag70p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164446
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong temp;\n\
    \tlong[] ret = new long[l.length];\n\tsort(l,0,l.length-1,true);\n\ttemp = l[0];\n\
    \tret[0] = temp;\n\tfor (int i = 1; i < l.length; i++) \n\t{\n\t\tif (l[i] !=\
    \ temp) {\n\t\t\ttemp = l[i];\n\t\t\tret[i] = temp;\n\t\t}\n\t}\n\treturn ret;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnfku733p.d(13): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnfku733p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    Arrays.sort(l);\n\
    \    int i = 0;\n    long[] ret = new long[l.length];\n    while (i < l.length)\n\
    \    {\n        if (l[i] != l[i-1])\n        {\n            ret[i++] = l[i++];\n\
    \        }\n    }\n    return ret;\n}\n/*\nReturn sorted unique elements in an\
    \ array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L,\
    \ 3L, 5L, 9L, 123L]\n    \n*/\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptfrwmbpb.d(11): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptfrwmbpb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long[] res =\
    \ new long[l.length];\n  long temp;\n  int j = 0;\n  int j2 = 0;\n  int i;\n \
    \ for(i = 0; i < l.length; i++) \n  {\n    temp = l[i];\n    if(res[j] != temp)\
    \ \n    {\n      res[j2] = temp;\n      j2++;\n    }\n    j++;\n  }\n  return\
    \ res;\n}\n</code>\n<|/ a dscore=3 tags=java,sorting,arrays |>\n<| c |>\nThe array\
    \ is sorted in the question\n<|/ c |>\n<| c |>\nThis code is O(n^2), which is\
    \ terrible in most scenarios. It can be improved to O(n*log n), but it can't be\
    \ done in Java without using an external library.\n<|/ c |>\n<| c |>\nIf you do\
    \ want to do it yourself in Java, you could just use a simple `HashSet` for the\
    \ job, then reverse the resulting array. It is a bit less efficient, but you get\
    \ the sorted output without having to use external libraries.\n<|/ c |>\n<| c\
    \ |>\nI totally agree! :) Just pointed out a better way to sort it in O(nlogn)\
    \ time.\n<|/ c |>\n<| c |>\n: Yeah, this works but still complexity is n^2. Why\
    \ do people like to implement a complicated algorithm when it is simple to achieve\
    \ the required output in just 2 lines of code!\n<|/ c |>\n<| a |>\nI wanted to\
    \ see if I could do this in Java without using a library and came up with this:\n\
    <code>\nlong[] foo(long[] arr) {\n    List<Long> longList = new ArrayList<Long>(Arrays.asList(arr));\n\
    \    Collections.sort(longList);\n    long[] result = new long[arr.length];\n\
    \    int i = 0;\n    while (i < arr.length) {\n        result[arr.length - 1 -\
    \ i] = longList.remove(i);\n        i++;\n    }\n    return result;\n}\n</code>\n\
    It's basically a one-liner that uses Collections.sort to sort the list, and then\
    \ removes each element from the list, using Arrays.copyOfRange to create a new\
    \ array.\nI tested it against the example from the question, and it seems to work\
    \ fine.\n<|/ a dscore=2 tags=java,sorting,arrays |>\n<| c |>\nI like this solution,\
    \ although it doesn't work if the array contains duplicated values.\n<|/ c |>\n\
    <| a tags=java,sorting,arrays |>\nThe question explicitly says that one cannot\
    \ use libraries, and that the solution should preferably be one line with no external\
    \ libraries.  However, this solution \nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnjcv823y.d(28): Error: declaration expected, not `<`

    /tmp/tmpnjcv823y.d(34): Error: unterminated character constant

    /tmp/tmpnjcv823y.d(50): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpnjcv823y.d(50): Error: no identifier for declarator `Collections.sort(longList)`

    /tmp/tmpnjcv823y.d(53): Error: declaration expected, not `while`

    /tmp/tmpnjcv823y.d(55): Error: no identifier for declarator `i`

    /tmp/tmpnjcv823y.d(55): Error: declaration expected, not `++`

    /tmp/tmpnjcv823y.d(56): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnjcv823y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    sort(l);\n\
    \    return unique(l);\n}\n/*\nReturn sorted unique elements in an array\n   \
    \ >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L,\
    \ 123L]\n    \n*/\nlong[] unique(TArrayI l) \n{\n    long[] res = new long[l.length];\n\
    \    for(int i = 0; i < l.length; i++) \n    {\n        long u = l[i];\n     \
    \   for(int j = 0; j < i; j++) \n        {\n            if(u < l[j])\n       \
    \     {\n                res = union(res, l[j]);\n            }\n        }\n \
    \       if(!contains(res, u)) \n        {\n            res[i] = u;\n        }\n\
    \    }\n    return res;\n}\n/*\nReturn sorted unique elements in an array\n  \
    \  >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L,\
    \ 123L]\n    \n*/\nlong[] unique(int[] l) \n{\n    sort(l);\n    return unique(l);\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(TArrayI l) \n{\n    long[] res = new long[l.length];\n    for(int i =\
    \ 0; i < l.length; i++) \n    {\n        int u = l[i];\n        for(int j = 0;\
    \ j < i; j++) \n        {\n            if(u < l[j])\n            {\n         \
    \       res = union(res, l[j]);\n            }\n        }\n        if(!contains(res,\
    \ u)) \n        {\n            res[i] = u;\n        }\n    }\n    return res;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(float[] l) \n{\n    sort(l);\n    return unique(l);\n}\n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(TArrayF l) \n\
    {\n    long[] res = new long[l.\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpu5jdg91t.d(30): Error: expression expected, not `union`

    /tmp/tmpu5jdg91t.d(67): Error: expression expected, not `union`

    /tmp/tmpu5jdg91t.d(97): Error: identifier expected following `.`, not `unittest`

    /tmp/tmpu5jdg91t.d(98): Error: found `{` when expecting `]`

    /tmp/tmpu5jdg91t.d(99): Error: semicolon expected, not `alias`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu5jdg91t.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  // create an\
    \ empty hashmap\n  hashmap <long,long> hmap = new hashmap();\n  // for each element\n\
    \  for (int i=0; i<l.length; i++) {\n    // if the hashmap does not contain this\
    \ element\n    if (!hmap.containsKey(l[i])) {\n      // add the element to the\
    \ hashmap\n      hmap.put(l[i], l[i]);\n    }\n  }\n  // return a list of unique\
    \ elements in the hashmap\n  return hmap.getKeys();\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThat is what I thought too, but I don't have enough memory on machine\
    \ where I will be running it, so I decided to use TreeSet to find unique elements.\
    \ And since TreeSet is using hashtable internally to store its elements, it seems\
    \ good idea to me as long as it works.\n<|/ c |>\n<| a tags=stl,set,c++,unique\
    \ |>\nYou could use a std::unordered_set to store unique elements. \nBut since\
    \ you're looking for unique elements in sorted array or any other ordered container,\
    \ you could use a hash table that stores unique elements indexed by their first\
    \ element. \nThen you could use std::set or std::multiset or std::map to find\
    \ the unique elements in the set or multiset.\n<|/ a dscore=1 |>\n<| c |>\nI implemented\
    \ this idea, and it is working fine, but it is using more memory than my solution.\
    \ I will post my implementation as soon as I get home.\n<|/ c |>\n<| c |>\nCould\
    \ you share your solution? It would help to test it.\n<|/ c |>\n<| c |>\nYeah,\
    \ sure, I will post it soon.\n<|/ c |>\n<| c |>\nCould you share your solution?\
    \ It would be helpful to test it.\n<|/ c |>\n<| c |>\nUnfortunatelly I can't,\
    \ as I don't have enough memory to test it. And I cannot post the code. I will\
    \ post the solution as soon as I can.\n<|/ c |>\n<| a |>\n<code>\n// C++ program\
    \ to remove duplicates in an array\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr_ir10rp.d(12): Error: found `,` when expecting `.` following long

    /tmp/tmpr_ir10rp.d(12): Error: found `long` when expecting identifier following
    `long`.

    /tmp/tmpr_ir10rp.d(12): Error: found `>` when expecting `;` following statement

    /tmp/tmpr_ir10rp.d(24): Error: declaration expected, not `<`

    /tmp/tmpr_ir10rp.d(27): Error: unterminated character constant

    /tmp/tmpr_ir10rp.d(31): Error: unterminated character constant

    /tmp/tmpr_ir10rp.d(47): Error: unterminated character constant

    /tmp/tmpr_ir10rp.d(47): Error: unterminated character constant

    /tmp/tmpr_ir10rp.d(56): Error: declaration expected, not `assert`

    /tmp/tmpr_ir10rp.d(57): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr_ir10rp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long temp;\n\
    \    long[] unique = new long[l.length];\n    for(int i = 0; i < l.length; i++)\
    \ \n    {\n        for(int j = i+1; j < l.length; j++) \n        {\n         \
    \   if (l[i] == l[j]) \n            {\n                temp = l[i];\n        \
    \        l[i] = l[j];\n                l[j] = temp;\n            }\n        }\n\
    \        unique[i] = l[i];\n    }\n    for(int i = 0; i < l.length; i++) \n  \
    \      unique[l.length - 1 - i] = l[i];\n    return unique;\n}\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nA single pass through the data might be faster, but a\
    \ linked list with sorting should be faster.\n<|/ c |>\n<| c |>\nThat depends\
    \ on the number of elements. I didn't bother with the extra loop, but you're right\
    \ it might help with bigger inputs.\n<|/ c |>\n<| a |>\nI prefer an O(n) solution\
    \ which I described in this article:\nhttp://blog.stephencleary.com/2009/08/sorting-algorithms.html\n\
    This is my O(n) solution. It runs in O(n) time, which is better for bigger inputs.\n\
    <code>\npublic class OddEvenSorter<T>\n{\nprivate class AvlTreeNode<T>\n{\n  \
    \  public int key; // the element to sort on\n    public AvlTreeNode<T> left;\
    \ //left subtree\n    public AvlTreeNode<T> right; //right subtree\n    public\
    \ AvlTreeNode(int key) {\n        this.key = key;\n    }\n}\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqo2iubs8.d(30): Error: declaration expected, not `<`

    /tmp/tmpqo2iubs8.d(36): Error: unterminated character constant

    /tmp/tmpqo2iubs8.d(36): Error: unterminated character constant

    /tmp/tmpqo2iubs8.d(48): Error: no identifier for declarator `AvlTreeNode`

    /tmp/tmpqo2iubs8.d(48): Error: declaration expected, not `<`

    /tmp/tmpqo2iubs8.d(49): Error: no identifier for declarator `AvlTreeNode`

    /tmp/tmpqo2iubs8.d(49): Error: declaration expected, not `<`

    /tmp/tmpqo2iubs8.d(50): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpqo2iubs8.d(50): Error: no identifier for declarator `AvlTreeNode(int key)`

    /tmp/tmpqo2iubs8.d(53): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo2iubs8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tif (l == null)\n\
    \t\treturn null;\n\tif (l.length == 0)\n\t\treturn l;\n\tif (l.length == 1)\n\t\
    \treturn l;\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq_ka7wf8.d(17): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq_ka7wf8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n        long[]\
    \ u = new long[l.length];\n        long seen;\n        \n        for (int i =\
    \ 0; i < (int)u.length; ++i) {\n                seen = l[i];\n               \
    \ for (int j = i; j < u.length; ++j) {\n                        if (l[j] == seen)\
    \ {\n                                u[j + 1] = seen;\n                      \
    \          break;\n                        }\n                }\n        }\n \
    \       return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyrk7439p.d(14): Error: C style cast illegal, use `cast(int)u.length`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyrk7439p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  int n = l.length;\n\
    \  long[] rt = new long[n];\n  int i;\n  for(i=0; i < n; ++i) {\n    int r = std.math.compare(l[i],\
    \ l[i+1]);\n    if(r == 0) {\n      rt[i] = l[i];\n    } else if(r < 0) {\n  \
    \    rt[i] = l[i+1];\n    } else {\n      rt[i+1] = l[i];\n    }\n  }\n  return\
    \ rt;\n}\n</code>\n<|/ a dscore=1 tags=sorting,algorithm,java,arrays |>\n<| a\
    \ |>\n<code>\nclass ArraySort\n{\n    public static int[] sort(int[] arr){\n \
    \       if(arr == null || arr.length == 0)\n            return arr;\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1jsmajx8.d(26): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1jsmajx8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tint n = l.length;\n\
    \tlong[] result = new long[n];\n\t\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int\
    \ j = 0; j < i; j++) {\n\t\t\tif (l[i] == l[j]) {\n\t\t\t\tfor (int k = 0; k <\
    \ i; k++)\n\t\t\t\t\tresult[k] = l[k];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\
    \n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0b6mol_z.d(11): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0b6mol_z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  int i, j, count\
    \ = 0;\n  for (i = 0; i < l.length; i++)\n    for (j = i + 1; j < l.length; j++)\n\
    \      if (l[i] == l[j])\n        count++;\n  if (count > 0)\n    l.sort(std.typecons.Less.F_LT_G);\n\
    \  l.length = count;\n  return l;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6tjgreg7.d(17): Error: no property `sort` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6tjgreg7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    var d = new\
    \ SortedSet[dv.type];\n    foreach (var x in l) \n        { \n            if (!dv.contains(x,\
    \ d))\n                d.add(x);\n        }\n    return d.data;\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp797361gk.d(12): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp797361gk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int N=0;\n\
    \    long[] tmp = new long[l[l].__len__()];\n    for(int i=0; i<l[l].__len__();\
    \ i++) {\n        tmp[++N] = l[l][i];\n    }\n    Arrays.sort(tmp, new Comparator<long>(){\n\
    \        public int compare(long[] o1, long[] o2) {\n            return Long.compare(o1[1],\
    \ o2[1]);\n        }\n    });\n    for(int i=0; i<l[l].__len__(); i++) {\n   \
    \     l[l][i] = tmp[--N];\n    }\n    return l;\n}\n</code>\n<|/ a dscore=2 tags=c#,arrays,linq,sorting\
    \ |>\n<| c |>\nThis is a correct answer to the question, but it's probably not\
    \ a good approach to the problem in general.  The sorting algorithm is O(nlogn)\
    \ but your code is O(n^2).  A better approach would be to sort the array in O(n)\
    \ time and then use a HashSet to find all unique elements.  It's also O(n) time\
    \ if there are many duplicate elements, and O(n) space if there are not.  See\
    \ my answer below for details.\n<|/ c |>\n<| a |>\n<code>\npublic static class\
    \ ArrayHelper\n{\n    /// <summary>\n    /// Returns a unique set of elements\n\
    \    /// </summary>\n    /// <typeparam name=\"T\"></typeparam>\n    /// <param\
    \ name=\"a\">Input array of elements to find the unique elements of</param>\n\
    \    /// <returns></returns>\n    public static IEnumerable<T> Unique<T>(this\
    \ T[] a)\n    {\n        return a.Distinct<T>();\n    }\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkwf93c4z.d(16): Error: found `>` when expecting `.` following long

    /tmp/tmpkwf93c4z.d(16): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpkwf93c4z.d(16): Error: found `{` when expecting `;` following statement

    /tmp/tmpkwf93c4z.d(17): Error: found `public` instead of statement

    /tmp/tmpkwf93c4z.d(20): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkwf93c4z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    var result\
    \ = new long[l.length];\n    var set = new HashSet<long>();\n    foreach (var\
    \ i in l)\n    {\n        if (!set.contains(i))\n        {\n            result[set.size]\
    \ = i;\n            set.add(i);\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpi3e8cbh3.d(12): Error: found `>` when expecting `.` following long

    /tmp/tmpi3e8cbh3.d(12): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpi3e8cbh3.d(12): Error: semicolon expected, not `)`

    /tmp/tmpi3e8cbh3.d(12): Error: found `)` instead of statement

    /tmp/tmpi3e8cbh3.d(13): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi3e8cbh3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    var result\
    \ = new long[l.Length];\n    long u = 0;\n    var i = 0;\n    int j = 0;\n   \
    \ for(int n = l.Length - 1; n >= 0; n--)\n    {\n        if(u == l[n])\n     \
    \   {\n            for(; j < i; ++j)\n                result[j] = l[j];\n    \
    \        i = j + 1;\n        }\n        else\n        {\n            u=l[n];\n\
    \            for(; j < i; ++j)\n            {\n                if(u == l[j])\n\
    \                {\n                    for(; j < i; ++j)\n                  \
    \      result[j+1] = result[j];\n                    result[j] = u;\n        \
    \            i = j + 1;\n                    break;\n                }\n     \
    \       }\n        }\n    }\n    for(; j < i; ++j)\n        result[j] = l[i];\n\
    \    return result;\n}\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks, I got\
    \ this far myself and am aware of how to do it, but I wanted to know if there\
    \ was a more performant way that I had overlooked, as I thought it would be a\
    \ lot faster to use a hashmap or something.\n<|/ c |>\n<| c |>\nYou can write\
    \ your own hashmap data structure, or use HashSet.\n<|/ c |>\n<| c |>\nI assume\
    \ you mean the code I have posted here? I looked through the source for HashSet\
    \ and it just seemed like an overkill for my situation. I just wanted to make\
    \ sure I wasn't missing anything that would make this approach faster than the\
    \ alternatives.\n<|/ c |>\n<| a |>\nI like how I read your problem, but I think\
    \ your solution is not optimized. Here is my solution:\n<code>\npublic static\
    \ long[] Unique(long[] nums)\n    {\n        long[] temp = new long[nums.Length];\n\
    \        long tempArray[] = new long[nums.Length];\n        int i = 0;\n     \
    \   foreach (long num in nums)\n        {\n            bool isUnique = true;\n\
    \            for (int j = 0; j < i; j++)\n            {\n                if (num\
    \ == temp[j])\n                {\n                    isUnique = false;\n    \
    \                break;\n                }\n            }\n            if (isUnique)\n\
    \            {\n                tempArray[i] = num;\n                i++;\n  \
    \          }\n        }\n        temp = new long[i];\n        for (int j = 0;\
    \ j < i; j++)\n        {\n            temp[j] = tempArray[j];\n        }\n   \
    \     return temp;\n    }\n</code>\n<|/ a dscore=0 tags=arrays,c#,sorting |>\n\
    <| c |>\nThank you for your solution. I tried it and your solution works. However\
    \ I was thinking about it and I wonder how you would do this without creating\
    \ a new array. I was \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf2jfhqbo.d(43): Error: unrecognized declaration

    /tmp/tmpf2jfhqbo.d(53): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf2jfhqbo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if (l.length\
    \ == 0) \n        throw new UnsupportedOperationException();\n    int n = l.length;\n\
    \    if (n == 1) \n        return l;\n    long[] res = new long[n];\n    std.sort(l);\n\
    \    int i = 0;\n    for (int j = 0; j < n; ++j) {\n        while (i < n && l[i]\
    \ == l[j]) {\n            ++i;\n        }\n        if (i < n) {\n            res[j]\
    \ = l[i];\n            ++i;\n        }\n    }\n    return res;\n}\n</code>\n<|/\
    \ a dscore=2 |>\n<| a tags=arrays,c++,algorithm dscore=2 |>\nThe algorithm would\
    \ be:\n<code>\nsort(input_array,input_array+array_length);\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_buzeda0.d(30): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_buzeda0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int i, j,\
    \ cnt = 0;\n    long[] out = new long[l.length];\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbyyi8uqp.d(12): Error: no identifier for declarator `long[]`

    /tmp/tmpbyyi8uqp.d(12): Error: found `out` instead of statement

    /tmp/tmpbyyi8uqp.d(13): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbyyi8uqp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    sort(l);\n    for (int i = 0; i < u.length; i++)\n\
    \        u[i] = l[i];\n    \n    for (int i = 1; i < u.length; i++)\n        if\
    \ (u[i-1] != u[i])\n            l[l.length-1] = u[i];\n    \n    return l;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxxwuudv5.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxxwuudv5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u;\n\
    \    u = l.clone();\n    long[] u2 = new long[u.length];\n    Arrays.sort(u2);\n\
    \    for(int i=0; i<u.length; i++) \n        if(u[i]!=u2[i]) \n        {\n   \
    \         u2[i] = u2[i];\n        }\n    return u2;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpbt62ce91.d(12): Error: no property `clone` for type `long[]`

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: -1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tint i = 0, j\
    \ = 0;\n\tlong[] t = new long[l.length];\n\twhile(j < l.length){\n\t\twhile(i\
    \ < l.length && l[i] == l[j]){\n\t\t\tt[j++] = l[i++];\n\t\t}\n\t\twhile(i < l.length\
    \ && l[i] < l[j]){\n\t\t\tt[j++] = l[i++];\n\t\t}\n\t}\n\tt = unique(t);\n\treturn\
    \ t;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660164463
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] ans =\
    \ new long[l.length];\n\tfor(int i = 0; i < l.length; i++) \n\t{\n\t\tint index\
    \ = 0;\n\t\twhile(index == 0 && index < ans.length)\n\t\t{\n\t\t\t//printf(\"\
    i: %d, index: %d, ans[%d]: %d, l[%d]: %d\\n\", i, index, ans[index], ans[index],\
    \ l[i], l[i]);\n\t\t\tif(ans[index] == l[i]) \n\t\t\t{\n\t\t\t\tindex++;\n\t\t\
    \t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tans[index] = l[i];\n\t\t\t\tindex++;\n\t\t\t\
    }\n\t\t}\n\t}\n\tfor(int i = 0; i < ans.length; i++) \n\t{\n\t\tprintf(\"ans[%d]:\
    \ %d\\n\", i, ans[i]);\n\t}\n\treturn ans;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx09yytyk.d(31): Error: `printf` is not defined, perhaps `import
    core.stdc.stdio;` is needed?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx09yytyk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ans\
    \ = new long[l.length];\n    \n    // O(log N), sort, then remove duplicates\n\
    \    Arrays.sort(l);\n    \n    for (int i = 0; i < l.length; i++)\n    {\n  \
    \      long l = l[i];\n        for (int j = i + 1; j < l.length; j++)\n      \
    \  {\n            if (l[j] == l)\n            {\n                ans[j] = l;\n\
    \                j--;\n            }\n        }\n    }\n    return ans;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz3g6fkes.d(14): Error: undefined identifier `Arrays`

    /tmp/tmpz3g6fkes.d(18): Error: variable `l` is shadowing variable `tmpz3g6fkes.unique.l`

    /tmp/tmpz3g6fkes.d(19): Error: no property `length` for type `long`

    /tmp/tmpz3g6fkes.d(21): Error: only one index allowed to index `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz3g6fkes.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] a =\
    \ new long[l[l.length -1] + 1];\n    for(int i = 0; i < a.length; i++) a[i]=l[i];\n\
    \    for(int i = 1; i < a.length; i++) \n    {\n        long cur = a[i];\n   \
    \     for(int j = i; j < a.length; j++) \n        {\n            if(a[j] < cur)\
    \ \n            {\n                long temp = a[j];\n                a[j] = cur;\n\
    \                cur = temp;\n            }\n        }\n    }\n    return a;\n\
    }\n</code>\n<|/ a tags=sorting,algorithm,c#,.net |>\n<| c |>\nThis algorithm is\
    \ unstable. The following input will produce different outputs depending on how\
    \ you use it: \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqv__uzq8.d(28): Error: declaration expected, not `<`

    /tmp/tmpqv__uzq8.d(36): Error: declaration expected, not `assert`

    /tmp/tmpqv__uzq8.d(37): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqv__uzq8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l.length];\n    for (int i = 0; i < l.length; i++) \n    {\n    \
    \    for (int j = i+1; j < l.length; j++) \n        {\n            if (l[i] ==\
    \ l[j]) \n            {\n                long aux = l[i];\n                l[i]\
    \ = l[j];\n                l[j] = aux;\n            }\n        }\n    }\n    return\
    \ res;\n}\n</code>\n<|/ a dscore=5 |>\n<| a |>\nI wrote a method called unique\
    \ that does this:\n<code>\npublic static <T> List<T> unique(final List<T> list)\
    \ {\n    Set<T> set = new HashSet<T>(list);\n    return new ArrayList<T>(set);\n\
    }\n</code>\nTest:\n<code>\nList<Integer> list = new ArrayList<Integer>();\nlist.addAll(Arrays.asList(new\
    \ Integer[]{1, 2, 1, 3, 3, 4, 4}));\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpy7ungl2o.d(26): Error: declaration expected, not `<`

    /tmp/tmpy7ungl2o.d(33): Error: declaration expected, not `return`

    /tmp/tmpy7ungl2o.d(34): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy7ungl2o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    Map<long,\
    \ int> res = new HashMap<long, int>();\n    for (int i = 0; i < l.length; i++)\
    \ {\n        long c = l[i];\n        res.put(c, i == 0 ? 1 : res.get(c) + 1);\n\
    \    }\n    long[] r = new long[res.size()];\n    int j = 0;\n    for (long c\
    \ : res.keySet()) {\n        r[j++] = c;\n    }\n    return r;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphd0qe1d3.d(11): Error: found `,` when expecting `.` following long

    /tmp/tmphd0qe1d3.d(11): Error: found `int` when expecting identifier following
    `long`.

    /tmp/tmphd0qe1d3.d(11): Error: found `>` when expecting `;` following statement

    /tmp/tmphd0qe1d3.d(11): Error: found `,` when expecting `.` following long

    /tmp/tmphd0qe1d3.d(11): Error: found `int` when expecting identifier following
    `long`.

    /tmp/tmphd0qe1d3.d(11): Error: found `>` when expecting `;` following statement

    /tmp/tmphd0qe1d3.d(11): Error: expression expected, not `)`

    /tmp/tmphd0qe1d3.d(11): Error: found `;` when expecting `)`

    /tmp/tmphd0qe1d3.d(12): Error: found `for` when expecting `;` following statement

    /tmp/tmphd0qe1d3.d(12): Error: found `i` when expecting `.` following int

    /tmp/tmphd0qe1d3.d(12): Error: found `=` when expecting identifier following `int`.

    /tmp/tmphd0qe1d3.d(12): Error: found `0` when expecting `)`

    /tmp/tmphd0qe1d3.d(12): Error: found `)` when expecting `;` following statement

    /tmp/tmphd0qe1d3.d(18): Error: semicolon expected, not `:`

    /tmp/tmphd0qe1d3.d(18): Error: expression expected, not `:`

    /tmp/tmphd0qe1d3.d(18): Error: found `res` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphd0qe1d3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ long.dup(l);\n    var hash = new std.array<long,2>();\n    std.sort(r);\n  \
    \  \n    foreach (long v in r) {\n        if (hash.contains(v))\n            continue;\n\
    \        hash.add(v,0);\n    }\n    return hash;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphwazcme_.d(12): Error: found `,` when expecting `.` following long

    /tmp/tmphwazcme_.d(12): Error: found `2` when expecting identifier following `long`.

    /tmp/tmphwazcme_.d(12): Error: semicolon expected, not `>`

    /tmp/tmphwazcme_.d(12): Error: found `>` instead of statement

    /tmp/tmphwazcme_.d(15): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphwazcme_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    for (int i = 0; i < u.length; i++)\n    {\n       \
    \ for (int j = i + 1; j < u.length; j++)\n        {\n            if (l[i] == l[j])\n\
    \            {\n                u[i] = l[i];\n                break;\n       \
    \     }\n        }\n    }\n    return u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpu89xk5d1.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x42835d]

    ??:? void tmpu89xk5d1.__unittest_L25_C1() [0x42802c]

    ??:? void tmpu89xk5d1.__modtest() [0x4280dc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c43b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2ce]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430559]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a08]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304e5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2a5]

    ??:? runModuleUnitTests [0x42c211]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428820]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int j = 0;\n\
    \    long current = l[0];\n    long[] u = new long[l.length];\n    int index =\
    \ 0;\n    for(long e : l)\n    {\n        if(e != current)\n        {\n      \
    \      u[index] = current;\n            j++;\n            current = e;\n     \
    \       index++;\n        }\n    }\n    u[index] = current;\n    return u;\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdwmggg6g.d(15): Error: semicolon expected, not `:`

    /tmp/tmpdwmggg6g.d(15): Error: expression expected, not `:`

    /tmp/tmpdwmggg6g.d(15): Error: found `l` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwmggg6g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result\
    \ = new long[l.length];\n\tArrays.sort(l);\n\tfor (int i = 0; i < l.length; i++)\n\
    \t\tresult[i] = l[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6y3gdjwm.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6y3gdjwm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    var ans =\
    \ new long[l.Length];\n    var n = 0;\n    for(var i=0,j=0;i<l.Length;++i)\n \
    \   {\n        bool found = false;\n        for(var k=0; k<n; ++k)\n        {\n\
    \            if(l[i] == ans[k])\n            {\n                found = true;\n\
    \                break;\n            }\n        }\n        if(!found)\n      \
    \  {\n            ans[n] = l[i];\n            ++n;\n        }\n    }\n    return\
    \ ans;\n}\n</code>\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nHere is my solution:\n\
    <code>\npublic class Unique\n{\n    public static IEnumerable<T> Uniq<T>(IEnumerable<T>\
    \ source)\n    {\n        var seen = new HashSet<T>();\n        return source.Where(item\
    \ => seen.Add(item));\n    }\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7muoqi8b.d(32): Error: declaration expected, not `<`

    /tmp/tmp7muoqi8b.d(42): Error: declaration expected, not `return`

    /tmp/tmp7muoqi8b.d(43): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7muoqi8b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if(l==null\
    \ || l.length==0)\n        return l;\n    long[] a=l.clone();\n    sort(a,0,a.length-1);\n\
    \    long[] a=null;\n    for(long i: l)\n        if(a.indexOf(i)<0)\n        \
    \    a.add(i);\n    return a;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9861a45p.d(16): Error: semicolon expected, not `:`

    /tmp/tmp9861a45p.d(16): Error: expression expected, not `:`

    /tmp/tmp9861a45p.d(16): Error: found `l` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9861a45p.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ans\
    \ = null;\n    sort(l);\n    int i = 0;\n    foreach(long x in l)\n    {\n   \
    \     if(ans[i] == x)\n            i++;\n        else\n            ans[i] = x;\n\
    \    }\n    return ans;\n}\n/*\nReturn sorted unique elements in a vector\n  \
    \  >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L,\
    \ 123L]\n    \n*/\nlong[] unique(std::vector<long> v)\n{\n    return unique(v.begin(),\
    \ v.end());\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5b2fwzox.d(14): Error: found `in` when expecting `;`

    /tmp/tmp5b2fwzox.d(29): Error: found `:` when expecting `)`

    /tmp/tmp5b2fwzox.d(29): Error: semicolon expected following function declaration

    /tmp/tmp5b2fwzox.d(29): Error: declaration expected, not `:`

    /tmp/tmp5b2fwzox.d(32): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5b2fwzox.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    var u = new\
    \ long[l.length];\n    var hash = new std.typecons.HashedSet[long]();\n    for\
    \ (int i = 0; i < l.length; i++) {\n        if (!hash.contains(l[i]))\n      \
    \  {\n            hash.add(l[i]);\n            u[i] = l[i];\n        }\n    }\n\
    \    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpse9wdsu_.d(12): Error: need size of rightmost array, not type `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpse9wdsu_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    if (l == null)\
    \ throw new IllegalArgumentException();\n    long[] lc = new long[l.length];\n\
    \    for (int i = 0; i < l.length; i++)\n        lc[i] = l[i];\n    Arrays.sort(lc);\n\
    \    return lc;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l, Comparator<long> cmp) \n{\n    if (l == null) throw new\
    \ IllegalArgumentException();\n    if (cmp == null) cmp = (Comparator<long>)Long.compare;\n\
    \    long[] lc = new long[l.length];\n    for (int i = 0; i < l.length; i++)\n\
    \        lc[i] = l[i];\n    Arrays.sort(lc, cmp);\n    return lc;\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l, IComparator<long> cmp) \n{\n    if (l == null) throw new IllegalArgumentException();\n\
    \    if (cmp == null) cmp = (IComparator<long>)Long.compare;\n    long[] lc =\
    \ new long[l.length];\n    for (int i = 0; i < l.length; i++)\n        lc[i] =\
    \ l[i];\n    Arrays.sort(lc, cmp);\n    return lc;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, ISorted<long>\
    \ cmp) \n{\n    if (l == null) throw new IllegalArgumentException();\n    if (cmp\
    \ == null) cmp = (ISorted<long>)Long.compare;\n    long[] lc = new long[l.length];\n\
    \    for (int i = 0; i < l.length; i++)\n        lc[i] = l[i];\n    Arrays.sort(lc,\
    \ cmp);\n    return lc;\n}\n/*\nReturn sorted unique elements in an array\n  \
    \  >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L,\
    \ 123L]\n    \n*/\nlong[] unique(long[] l, Comparator<\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg9kstkm1.d(24): Error: found `<` when expecting `)`

    /tmp/tmpg9kstkm1.d(24): Error: semicolon expected following function declaration

    /tmp/tmpg9kstkm1.d(24): Error: no identifier for declarator `long`

    /tmp/tmpg9kstkm1.d(24): Error: declaration expected, not `>`

    /tmp/tmpg9kstkm1.d(27): Error: declaration expected, not `if`

    /tmp/tmpg9kstkm1.d(29): Error: declaration expected, not `for`

    /tmp/tmpg9kstkm1.d(29): Error: no identifier for declarator `i`

    /tmp/tmpg9kstkm1.d(29): Error: declaration expected, not `<`

    /tmp/tmpg9kstkm1.d(29): Error: no identifier for declarator `i`

    /tmp/tmpg9kstkm1.d(29): Error: declaration expected, not `++`

    /tmp/tmpg9kstkm1.d(31): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpg9kstkm1.d(31): Error: no identifier for declarator `Arrays.sort(lc, cmp)`

    /tmp/tmpg9kstkm1.d(32): Error: declaration expected, not `return`

    /tmp/tmpg9kstkm1.d(33): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int i = 0; \n    while (i < l.length) \n    {\n \
    \      long v = l[i];\n       for (++i; i < l.length && v == l[i]; ++i) \n   \
    \    {\n           v = l[i];\n       }\n       result[i] = v;\n    }\n    \n \
    \   int j = 0;\n    while (j < result.length) \n    {\n        if (result[j] ==\
    \ 0) \n            continue;\n        for (int k = j+1; k < result.length && result[k]\
    \ == 0; ++k) \n        {\n           result[k] = result[k-1];\n        }\n   \
    \     --result[j];\n    }\n    return result;\n}\n/*\n  Return sorted unique elements\
    \ in an array\n  Remove duplicates\n    \n*/\nlong[] unique(long[] l, Comparator<long[]>\
    \ comparator) \n{\n    long[] result = new long[l.length];\n    int i = 0; \n\
    \    while (i < l.length) \n    {\n       long v = l[i];\n       for (++i; i <\
    \ l.length && v == l[i]; ++i) \n       {\n           v = l[i];\n       }\n   \
    \    result[i] = v;\n    }\n    \n    int j = 0;\n    while (j < result.length)\
    \ \n    {\n        if (result[j] == 0) \n            continue;\n        for (int\
    \ k = j+1; k < result.length && result[k] == 0; ++k) \n        {\n           result[k]\
    \ = result[k-1];\n        }\n        --result[j];\n    }\n    Arrays.sort(result,\
    \ new Comparator<long[]>() {\n        @Override \n        public int compare(long[]\
    \ o1, long[] o2) \n        {\n            return comparator.compare(o1, o2);\n\
    \        }\n    });\n    return result;\n}\n/*\n  Return sorted unique elements\
    \ in an array\n  Sort by comparator function\n    \n*/\nlong[] unique(long[] l,\
    \ Comparator<long[]> comparator) \n{\n    long[] result = new long[l.length];\n\
    \    int i = 0; \n    while (i < l.length) \n    {\n       long v = l[i];\n  \
    \     for (++i; i < l.length && v == l[i]; ++i) \n       {\n           v = l[i];\n\
    \       }\n       result[i] = v;\n    }\n    \n    int j = 0;\n    while (j <\
    \ result.length) \n    {\n        if (result[j] == 0) \n            continue;\n\
    \        for (int k = j+1; k < result.length && result[k] == 0; ++k) \n      \
    \  {\n           result[k] = result[k-1];\n        }\n        --result[j];\n \
    \   }\n    Arrays.sort(result, new Comparator<long[]>() {\n        @Override \n\
    \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzqf394tu.d(41): Error: found `<` when expecting `)`

    /tmp/tmpzqf394tu.d(41): Error: semicolon expected following function declaration

    /tmp/tmpzqf394tu.d(41): Error: no identifier for declarator `long[]`

    /tmp/tmpzqf394tu.d(41): Error: declaration expected, not `>`

    /tmp/tmpzqf394tu.d(45): Error: declaration expected, not `while`

    /tmp/tmpzqf394tu.d(48): Error: declaration expected, not `for`

    /tmp/tmpzqf394tu.d(48): Error: no identifier for declarator `i`

    /tmp/tmpzqf394tu.d(48): Error: declaration expected, not `<`

    /tmp/tmpzqf394tu.d(48): Error: declaration expected, not `++`

    /tmp/tmpzqf394tu.d(51): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzqf394tu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long[] x = l;\n\
    \  long[] y = new long[x.length];\n  for(int i = 0; i < x.length; i++)\n    for(int\
    \ j = 0; j < x.length; j++)\n      if (x[j] == x[i])\n        y[j++] = x[j];\n\
    \  return y;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    long[] unique(long[] l, int min, int max) \n{\n  long[] x = l;\n  long[] y = new\
    \ long[x.length];\n  for(int i = 0; i < x.length; i++)\n    for(int j = min +\
    \ (i - min) % x.length; j < min + ((max - i) + x.length) % x.length; j++)\n  \
    \    if (x[j] == x[i])\n        y[j++] = x[j];\n  return y;\n}\n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, int\
    \ min, int max, int sort) {\n  int cmp;\n  long[] x = l;\n  long[] y = new long[x.length];\n\
    \  for(int i = 0; i < x.length; i++)\n    for(int j = min + (i - min) % x.length;\
    \ j < min + ((max - i) + x.length) % x.length; j++)\n      if (x[j] == x[i])\n\
    \        y[j++] = x[j];\n  if (sort == 0)\n    return y;\n  cmp = sort;\n  if(sort\
    \ < 0)\n    cmp = -cmp;\n  Arrays.sort(y, new LongComparator(cmp));\n  return\
    \ y;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpuvw5xm4s.d(30): Error: cannot implicitly convert expression `cast(ulong)min
    + cast(ulong)(i - min) % x.length` of type `ulong` to `int`

    /tmp/tmpuvw5xm4s.d(46): Error: cannot implicitly convert expression `cast(ulong)min
    + cast(ulong)(i - min) % x.length` of type `ulong` to `int`

    /tmp/tmpuvw5xm4s.d(54): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuvw5xm4s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u;\n\
    \    long k;\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqm5rwyn0.d(13): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqm5rwyn0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    int j = 0;\n    for (int i = 0; i < l.length; i++)\
    \ {\n        if (u[j] == l[i]) {\n            j++;\n        }\n        u[j] =\
    \ l[i];\n    }\n    return u;\n}\n</code>\n<|/ a |>\n<| a tags=c#,.net,arrays\
    \ dscore=1 |>\nI came up with a simple solution in C#. It is a variation of the\
    \ answer by Mike D. but in C# and using LINQ.\nThe code below uses this method\
    \ to create a hashset (as required by the question) and uses Linq to remove duplicates\
    \ from the hashset (as required by the question).\n<code>\n    private static\
    \ HashSet<string> GetUniqueStrings(string[] input)\n    {\n        var uniques\
    \ = input.Select(str => new { str = str }).Distinct().Select(x => x.str).ToArray();\n\
    \        return new HashSet<string>(uniques);\n    }\n</code>\n<|/ a |>\n<| a\
    \ |>\nHere is a simple way to do it: \n<code>\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4bgzykg3.d(21): Error: declaration expected, not `<`

    /tmp/tmp4bgzykg3.d(30): Error: declaration expected, not `return`

    /tmp/tmp4bgzykg3.d(31): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4bgzykg3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u = new\
    \ long[l[l]];\n\tint[] pos = new int[l[l]];\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwrstmq94.d(13): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwrstmq94.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] a =\
    \ new long[l[l.length-1]];\n    int a_index = 0;\n    for(int i = 1; i < l.length;\
    \ i++)\n    {\n        if(a[a_index] == l[i])\n            continue;\n       \
    \ a[a_index] = l[i];\n        a_index++;\n    }\n    return a;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptdbk31mg.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x428365]

    ??:? void tmptdbk31mg.__unittest_L22_C1() [0x428034]

    ??:? void tmptdbk31mg.__modtest() [0x4280e4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c443]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2d6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430561]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a10]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304ed]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2ad]

    ??:? runModuleUnitTests [0x42c219]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428828]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u=l.clone();\n\
    \    Arrays.sort(u);\n    return u;\n}\n/* \n Given a list of strings, return\
    \ them in alphabetical order\n \n >>> alphaOrder([\"alpha\", \"beta\", \"gamma\"\
    ])\n [\"alpha\", \"beta\", \"gamma\"]\n \n */\nString[] alphaOrder(String[] l)\
    \ \n{\n    Arrays.sort(l);\n    return l;\n}\n/*\n Given a list of strings, return\
    \ them in numerical order\n \n >>> numOrder([\"12\", \"2\", \"10\"])\n [10, 2,\
    \ 12]\n \n */\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxkwpqz2v.d(22): Error: undefined identifier `String`, did you mean
    alias `string`?

    /tmp/tmpxkwpqz2v.d(22): Error: undefined identifier `String`, did you mean alias
    `string`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxkwpqz2v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    Set<long>\
    \ set = new HashSet<long>(l);\n    return set.toArray(new long[set.size()]);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp27p4kb85.d(11): Error: found `>` when expecting `.` following long

    /tmp/tmp27p4kb85.d(11): Error: found `>` when expecting `.` following long

    /tmp/tmp27p4kb85.d(11): Error: found `(` when expecting identifier following `long`.

    /tmp/tmp27p4kb85.d(11): Error: found `l` when expecting `;` following statement

    /tmp/tmp27p4kb85.d(11): Error: found `)` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp27p4kb85.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  Arrays.sort(l);\n\
    \  long[] u = new long[l.length];\n  for (int i = 0; i < l.length; ++i)\n    u[l[i]]\
    \ = true;\n  Arrays.sort(u);\n  return u;\n}\n</code>\n<|/ a |>\n<| c |>\nI didn't\
    \ know you were allowed to write code inside `std.algorithm` - that's a really\
    \ neat idea!\n<|/ c |>\n<| a dscore=1 |>\n<code>\nimport std.algorithm;\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpunk3n2zj.d(18): Error: declaration expected, not `<`

    /tmp/tmpunk3n2zj.d(21): Error: unterminated character constant

    /tmp/tmpunk3n2zj.d(21): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpunk3n2zj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tint k = 0;\n\
    \tint i, j;\n\tlong[] ans = new long[l.length];\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_erem6hi.d(14): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_erem6hi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    Arrays.sort(l);\n\
    \    long[] u = new long[l.length];\n    long h;\n    for(int i=0; i<l.length;\
    \ ++i)\n    {\n        h = l[i];\n        while(i != u.length-1 && h == u[i++])\n\
    \            ;\n        u[i] = h;\n    }\n    return u;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp_bv9kxm.d(18): Error: use `{ }` for an empty statement, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp_bv9kxm.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tvar sorted =\
    \ l;\n\tstd.sort(sorted);\n\tlong last = sorted[0];\n\tlong[] result = new long[std.partition(sorted,\
    \ \"==\", last)];\n\tfor(int i=1; i < result.length; ++i)\n\t{\n\t\tif(sorted[i]==last)\n\
    \t\t\tcontinue;\n\t\t\n\t\tresult[--i-1] = sorted[i];\n\t}\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm4hhxw17.d(11): Error: undefined identifier `var`

    /tmp/tmpm4hhxw17.d(12): Error: undefined identifier `sort` in package `std`

    /tmp/tmpm4hhxw17.d(14): Error: undefined identifier `partition` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm4hhxw17.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\t\
    int i, j;\n\tint N=l.length;\n\tlong[] s=new long[N];\n\tu=new long[N];\n\tfor(i=0;i<N;++i)\
    \ \n\t{\n\t\tfor(j=0;j<N;++j) \n\t\t{\n\t\t\tif (l[i]==l[j]) \n\t\t\t\ts[l[j]]++;\n\
    \t\t\telse \n\t\t\t{\n\t\t\t\ts[l[i]]=1;\n\t\t\t\tu[i]=l[i];\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<N;++i) \n\t\tif (u[i]==i) \n\t\t\tu[i]=-1;\n\t\
    return u;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\n\
    double[] unique(double[] d)\n{\n\tdouble[] u;\n\tint i, j;\n\tint N=d.length;\n\
    \tdouble[] s=new double[N];\n\tu=new double[N];\n\tfor(i=0;i<N;++i) \n\t{\n\t\t\
    for(j=0;j<N;++j) \n\t\t{\n\t\t\tif (d[i]==d[j]) \n\t\t\t\ts[d[j]]++;\n\t\t\telse\
    \ \n\t\t\t{\n\t\t\t\ts[d[i]]=1;\n\t\t\t\tu[i]=d[i];\n\t\t\t\tbreak;\n\t\t\t}\n\
    \t\t}\n\t}\n\tfor(i=0;i<N;++i) \n\t\tif (u[i]==i) \n\t\t\tu[i]=-1;\n\treturn u;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp79r90n_v.d(13): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    /tmp/tmp79r90n_v.d(45): Error: cannot implicitly convert expression `d.length`
    of type `ulong` to `int`

    /tmp/tmp79r90n_v.d(53): Error: cannot implicitly convert expression `d[cast(ulong)j]`
    of type `double` to `ulong`

    /tmp/tmp79r90n_v.d(56): Error: cannot implicitly convert expression `d[cast(ulong)i]`
    of type `double` to `ulong`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp79r90n_v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong a1 = l[0],\
    \ a2 = l[1], a3 = l[2];\n\tlong b1 = l[3], b2 = l[4], b3 = l[5];\n\tlong c1 =\
    \ l[6], c2 = l[7], c3 = l[8];\n\tlong d1 = l[9], d2 = l[10], d3 = l[11];\n\tlong\
    \ e1 = l[12], e2 = l[13], e3 = l[14];\n\tlong f1 = l[15], f2 = l[16], f3 = l[17];\n\
    \tlong g1 = l[18], g2 = l[19], g3 = l[20];\n\tlong h1 = l[21], h2 = l[22], h3\
    \ = l[23];\n\tlong i1 = l[24], i2 = l[25], i3 = l[26];\n\tlong j1 = l[27], j2\
    \ = l[28], j3 = l[29];\n\tlong k1 = l[30], k2 = l[31], k3 = l[32];\n\tlong l1\
    \ = l[33], l2 = l[34], l3 = l[35];\n\t\n\tlong[] x = new long[35];\n\tx[0] = a1;\
    \ x[1] = a1; x[2] = a1; x[3] = a1; x[4] = a1; x[5] = a1;\n\tx[6] = a1; x[7] =\
    \ a2; x[8] = a2; x[9] = a2; x[10] = a2; x[11] = a2;\n\tx[12] = a2; x[13] = a3;\
    \ x[14] = a3; x[15] = a3; x[16] = a3; x[17] = a3;\n\tx[18] = a3; x[19] = a4; x[20]\
    \ = a4; x[21] = a4; x[22] = a4; x[23] = a4;\n\tx[24] = a4; x[25] = a5; x[26] =\
    \ a5; x[27] = a5; x[28] = a5; x[29] = a5;\n\tx[30] = a5; x[31] = a6; x[32] = a6;\
    \ x[33] = a6; x[34] = a6; x[35] = a6;\n\t\n\tlong[] p = new long[35];\n\tp[0]\
    \ = b1; p[1] = b1; p[2] = b1; p[3] = b1; p[4] = b1; p[5] = b1;\n\tp[6] = b1; p[7]\
    \ = b2; p[8] = b2; p[9] = b2; p[10] = b2; p[11] = b2;\n\tp[12] = b2\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpv3f82d_v.d(36): Error: found `unittest` when expecting `;` following
    statement

    /tmp/tmpv3f82d_v.d(42): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv3f82d_v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int i, n,\
    \ found = 0;\n    long[] res;\n    res = new (nothrow) long[l.length];\n    if\
    \ (res == null) return null;\n    n = l[0];\n    res[0] = n;\n    for(i = 1; i\
    \ < l; i++) {\n        if (l[i] == n) continue;\n        res[i] = n;\n       \
    \ n = l[i];\n        found = 1;\n    }\n    if (found == 0) return null;\n   \
    \ return res;\n}\n/*\n>>> std.sort(longs)\n[5, 2, 3, 4, 9, 5, 3, 123]\n*/\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe596lzel.d(13): Error: expression expected, not `nothrow`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe596lzel.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] x = sort(l);\n\
    \tlong[] y = x;\n\tlong xc = 1, yc = 0;\n\tfor(int i = 0; i < x.length; ++i) {\n\
    \t\twhile(xc > x[i]) \n\t\t{\n\t\t\tint xi = i;\n\t\t\twhile(xc > x[xi]) \n\t\t\
    \t\txi = xi;\n\t\t\t\n\t\t\twhile(yc > y[xi]) \n\t\t\t\tyc = yc;\n\t\t\t\n\t\t\
    \tif(xi == yi) \n\t\t\t\tbreak;\n\t\t\t\n\t\t\tyi = xi;\n\t\t\twhile(yc > y[yi])\
    \ \n\t\t\t\tyc = yc;\n\t\t}\n\t\t\n\t\tif(yc > y[i]) {\n\t\t\tlong[] temp = new\
    \ long[x.length];\n\t\t\tSystem.arraycopy(x, 0, temp, 0, i);\n\t\t\tSystem.arraycopy(x,\
    \ i, temp, i, x.length - i);\n\t\t\tSystem.arraycopy(y, 0, temp, i, x.length -\
    \ i);\n\t\t\tx = temp;\n\t\t\ty = temp;\n\t\t\txc = 1;\n\t\t\tyc = 0;\n\t\t}\n\
    \t\telse \n\t\t\tyc++;\n\t}\n\t\n\treturn x;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmptg6atcch.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmptg6atcch.d(24): Error: undefined identifier `yi`, did you mean variable
    `xi`?

    /tmp/tmptg6atcch.d(27): Error: undefined identifier `yi`, did you mean variable
    `xi`?

    /tmp/tmptg6atcch.d(28): Error: undefined identifier `yi`, did you mean variable
    `xi`?

    /tmp/tmptg6atcch.d(34): Error: undefined identifier `System`

    /tmp/tmptg6atcch.d(35): Error: undefined identifier `System`

    /tmp/tmptg6atcch.d(36): Error: undefined identifier `System`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptg6atcch.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tHashSet<long>\
    \ hs;\n\ths.addAll(l);\n\treturn hs.toArray();\n}\n/*\n    Return indices of unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [1, 4, 0, 2, 6, 3, 8, 5, 9, 12]\n    \n*/\nlong[] uniqueIndices(long[] l)\n\
    {\n\tHashSet<long> hs;\n\ths.addAll(l);\n\tlong[] res = new long[hs.size()];\n\
    \tIterator<long> it = hs.iterator();\n\tint i = 0;\n\twhile(it.hasNext()) {\n\t\
    \tres[i++] = it.next();\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt_fd3a4b.d(11): Error: found `>` when expecting `.` following long

    /tmp/tmpt_fd3a4b.d(23): Error: found `>` when expecting `.` following long

    /tmp/tmpt_fd3a4b.d(26): Error: found `>` when expecting `.` following long

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt_fd3a4b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] h=new\
    \ long[l.length];\n    for(int i=0; i<l.length; i++)\n        h[l[i]]++;\n   \
    \ long[] u=new long[l.length];\n    for(int i=0; i<l.length; i++)\n        u[(h[l[i]]-1)]++;\n\
    \    \n    Arrays.sort(u);\n    for(int i=0; i<l.length; i++)\n        l[i]=u[l[i]-1];\n\
    \    return l;\n}\n</code>\n<|/ a tags=algorithm,sorting,arrays |>\n<| c |>\n\
    I think your solution is better. Thanks.\n<|/ c |>\n<| c |>\nIt seems good, but\
    \ when I tried with your input \"[5, 3, 3, 5, 2, 3]\", the result was \"[3, 3,\
    \ 5, 2, 5, 3]\"\n<|/ c |>\n<| c |>\nI'm sorry but I don't understand your comment.\
    \ Are you using my code? Or your own implementation? And how did you try the code?\
    \ Just by copy&paste it in your IDE and run it? Or did you modify the code? And\
    \ what IDE did you use?\n<|/ c |>\n<| c |>\nNope, your solution doesn't work if\
    \ you run it on arrays like [4, 1, 2, 4, 1], it returns [4, 1, 2, 4].\n<|/ c |>\n\
    <| c |>\nIt returns [4, 1, 2, 4]. Are you sure that you copied my code and run\
    \ it? I have not changed any code! It works correctly for me on any input array.\
    \ How did you try it? Using a code editor (such as Eclipse) or by running the\
    \ code directly from the console?\n<|/ c |>\n<| a tags=algorithm,sorting,arrays\
    \ |>\nYou can use hashmap to remove duplicate elements.\n<code>\n    int[] arr\
    \ = {1, 4, 4, 3, 2, 2, 1};\n    List<Integer> list = new ArrayList<Integer>();\n\
    \    for(int i=0;i<arr.length;i++)\n    {\n        if(!list.contains(arr[i]))\n\
    \            list.add(arr[i]);\n    }\n    list.stream().distinct().forEach(i->{\n\
    \        System.out.println(arr[i]);\n    });\n</code>\n<|/ a dscore=1 |>\n<|\
    \ c |>\nI hope this answer help you.\n<|/ c |>\n<| c |>\n`List<Integer> list =\
    \ new ArrayList<>();` won't compile, you should use generics.\n<|/ c |>\n<| c\
    \ |>\nYeah I missed to add generics while writing the answer\n<|/ c |>\n<| a tags=algorithm,sorting,arrays\
    \ |>\nThis is one way to implement it. Time complexity is O\nunittest\n{\n   \
    \ alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L,\
    \ 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxj3_zdfi.d(23): Error: declaration expected, not `<`

    /tmp/tmpxj3_zdfi.d(32): Error: unterminated character constant

    /tmp/tmpxj3_zdfi.d(32): Error: unterminated character constant

    /tmp/tmpxj3_zdfi.d(35): Error: unterminated character constant

    /tmp/tmpxj3_zdfi.d(44): Error: no identifier for declarator `List`

    /tmp/tmpxj3_zdfi.d(44): Error: declaration expected, not `<`

    /tmp/tmpxj3_zdfi.d(45): Error: declaration expected, not `for`

    /tmp/tmpxj3_zdfi.d(45): Error: no identifier for declarator `i`

    /tmp/tmpxj3_zdfi.d(45): Error: declaration expected, not `<`

    /tmp/tmpxj3_zdfi.d(45): Error: no identifier for declarator `i`

    /tmp/tmpxj3_zdfi.d(45): Error: declaration expected, not `++`

    /tmp/tmpxj3_zdfi.d(49): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxj3_zdfi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  // Sort and\
    \ remove duplicates\n  long[] res = new long[uniqueCount(l)];\n  sort(l);\n  uniqueSort(l,\
    \ res, 0, res.length-1);\n  return res;\n}\n// Unsorted version\nlong[] unique(long[]\
    \ l, long[] reuse) \n{\n  // Sort and remove duplicates\n  long[] res = new long[uniqueCount(l)];\n\
    \  sort(l);\n  uniqueSort(l, res, 0, res.length-1, reuse);\n  return res;\n}\n\
    // Unsorted version with reuse\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2m9m9zev.d(12): Error: undefined identifier `uniqueCount`

    /tmp/tmp2m9m9zev.d(13): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp2m9m9zev.d(14): Error: undefined identifier `uniqueSort`

    /tmp/tmp2m9m9zev.d(21): Error: undefined identifier `uniqueCount`

    /tmp/tmp2m9m9zev.d(22): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmp2m9m9zev.d(23): Error: undefined identifier `uniqueSort`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2m9m9zev.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long i=0,\
    \ j=0, unique[] = new long[l.length]; \n    for(; i != l.length; i++) \n    {\n\
    \        for(j = 0; j != unique.length - 1; j++) \n        {\n            if(l[i]\
    \ == unique[j]) {\n                j++; \n                if(j == unique.length)\
    \ \n                {\n                    unique[j] = l[i]; \n              \
    \      break; \n                } \n            }\n        }\n    }\n    return\
    \ unique; \n} \n</code>\n<|/ a |>\n<| c |>\nWhat do you mean? The return statement\
    \ returns an array with the unique numbers.\n<|/ c |>\n<| c |>\n`long[] unique(long[]\
    \ l) \n{\n    long i=0, j=0, unique[] = new long[l.length]; \n    for(; i != l.length;\
    \ i++) \n    {\n        for(j = 0; j != unique.length - 1; j++) \n        {\n\
    \            if(l[i] == unique[j]) {\n                j++; \n                if(j\
    \ == unique.length) \n                {\n                    unique[j] = l[i];\
    \ \n                    break; \n                } \n            }\n        }\n\
    \    }\n    return unique; \n}`\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7k4xfk46.d(11): Error: multiple declarations must have the same
    type, not `long` and `long[]`

    /tmp/tmp7k4xfk46.d(11): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] unique`

    /tmp/tmp7k4xfk46.d(28): Error: declaration expected, not `<`

    /tmp/tmp7k4xfk46.d(57): Error: declaration expected, not `assert`

    /tmp/tmp7k4xfk46.d(58): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7k4xfk46.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ new long[l.length];\n    sort(l);\n    for (int i = 0; i < l.length; ++i) r[i]\
    \ = l[i];\n    sort(r);\n    return r;\n}\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6n3l9c9r.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmp6n3l9c9r.d(14): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6n3l9c9r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    // Sort the\
    \ array\n    Arrays.sort(l);\n    \n    // Unique elements\n    long[] ls = new\
    \ long[l[l.length-1]];\n    int i = 0;\n    for (long e: l)\n    {\n        if\
    \ (ls[e] == 0L)\n        {\n            ls[e] = 1;\n            i++;\n       \
    \ }\n        else\n        {\n            ls[e] += 1;\n        }\n    }\n    \n\
    \    // Return unique elements\n    long[] result = new long[i % ls.length];\n\
    \    for(int i = 0; i < ls.length; i++)\n    {\n        result[i%ls.length] =\
    \ ls[i];\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| a dscore=2 tags=arrays,java,sorting\
    \ |>\nI solved it this way:\n<code>\npublic static void main(String[] args) {\n\
    \    long[] array = {1L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L};\n    long[] sortedArray\
    \ = array;\n    Arrays.sort(array);\n    long lastElement = array[0];\n    boolean\
    \ hasRepeated = false;\n    Set<Long> elements = new HashSet<>();\n    for (int\
    \ i = 0; i < array.length; i++)\n    {\n        if (elements.add(array[i]))\n\
    \        {\n            lastElement = array[i];\n        }\n        else\n   \
    \     {\n            hasRepeated = true;\n        }\n    }\n    sortedArray[0]\
    \ = lastElement;\n    sortedArray = new long[array.length];\n    for(int i = 0;\
    \ i < array.length; i++)\n    {\n        sortedArray[i] = array[i];\n    }\n \
    \   if (!hasRepeated)\n    {\n        sortedArray = uniqueSort(sortedArray);\n\
    \    }\n    for(int i = 0; i < sortedArray.length; i++)\n    {\n        System.out.println(sortedArray[i]);\n\
    \    }\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkxwr_ec1.d(17): Error: semicolon expected, not `:`

    /tmp/tmpkxwr_ec1.d(17): Error: expression expected, not `:`

    /tmp/tmpkxwr_ec1.d(17): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpkxwr_ec1.d(38): Error: declaration expected, not `<`

    /tmp/tmpkxwr_ec1.d(46): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmpkxwr_ec1.d(46): Error: no identifier for declarator `Arrays.sort(array)`

    /tmp/tmpkxwr_ec1.d(49): Error: no identifier for declarator `Set`

    /tmp/tmpkxwr_ec1.d(49): Error: declaration expected, not `<`

    /tmp/tmpkxwr_ec1.d(50): Error: declaration expected, not `for`

    /tmp/tmpkxwr_ec1.d(50): Error: no identifier for declarator `i`

    /tmp/tmpkxwr_ec1.d(50): Error: declaration expected, not `<`

    /tmp/tmpkxwr_ec1.d(50): Error: no identifier for declarator `i`

    /tmp/tmpkxwr_ec1.d(50): Error: declaration expected, not `++`

    /tmp/tmpkxwr_ec1.d(55): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkxwr_ec'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int n = l.length;\n\
    \    long[] a = std.arrayRange(0, n);\n    a.sort(std.lessThan);\n    long[] b\
    \ = new long[n];\n    for(int i = 0; i < n; ++i)\n    {\n        b[i] = a[i];\n\
    \    }\n    return b;\n}\n</code>\n<|/ a tags=arrays,c#,unique |>\n<| a dscore=2\
    \ |>\n<code>\npublic static int[] GetUnique(int[] values)\n    {\n        // Find\
    \ the unique values.\n        HashSet<int> uniqueValues = new HashSet<int>();\n\
    \        foreach (int value in values)\n        {\n            if (uniqueValues.Add(value))\n\
    \            {\n                continue;\n            }\n            else\n \
    \           {\n                break;\n            }\n        }\n        // Return\
    \ the unique values.\n        return uniqueValues.ToArray();\n    }\n</code>\n\
    <|/ a tags=arrays,c#,unique |>\n<| c |>\nCan you explain why this answer is correct?\
    \ Please edit your answer by editing it. Code only answers are generally not well\
    \ received.\n<|/ c |>\n<| c |>\nI tested this and it doesn't work. It seems to\
    \ return values which are not unique, for example `int[] values = new int[] {\
    \ 6, 3, 3, 3, 6, 6, 6, 6 }`\n<|/ c |>\n<| c |>\n: It does not work because duplicate\
    \ values aren't allowed in the HashSet. See the second answer on this question:\
    \ http://stackoverflow.com/questions/16162426/c-sharp-unique-numbers-in-array\n\
    <|/ c |>\n<| a dscore=2 |>\nIf your C# version is prior to 4.0 (I didn't think\
    \ it was 4.0 as it was a couple of years since I looked at it) then you can also\
    \ try this:\n<code>\nvar distinctArray = arry\n            .GroupBy(x => x)\n\
    \            .OrderBy(x => x.Key)\n            .SelectMany(x => x.Take(1));\n\
    </code>\n<|/ a tags=arrays,c#,unique |>\n<| c |>\nThis does not work if your array\
    \ has duplicate values. The Take method will remove all duplicates.\n<|/ c |>\n\
    <| a tags=arrays,c#,unique dscore=1 |>\nFor those who prefer LINQ:\n<code>\npublic\
    \ static int[] GetUnique(int[] values)\n{\n    return values.Distinct().ToArray();\n\
    }\n</code>\n<|/ a |>\n<| a tags=arrays,c#,unique |>\n<code>\npublic IEnumerable<int>\
    \ Unique(int[] array)\n    {\n        List<int> list = new List<int>(array);\n\
    \        \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpp3reg4al.d(21): Error: declaration expected, not `<`

    /tmp/tmpp3reg4al.d(29): Error: declaration expected, not `foreach`

    /tmp/tmpp3reg4al.d(34): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp3reg4al.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  if(l.length\
    \ == 0) return l;\n  int n = l.length;\n  int i=1;\n  long[] a = new long[n];\n\
    \  while(i<n) {\n    if(l[i-1] == l[i])\n      i++;\n    else\n      a[i++] =\
    \ l[i];\n  }\n  return a;\n}\n/*\nReturn unique elements from an array\n    >>>\
    \ unique([2L, 5L, 5L, 7L, 9L, 0L])\n    [5L, 7L, 9L]\n    \n*/\nlong[] unique(long[]\
    \ l, int start, int end) \n{\n  if(l.length == 0) return l;\n  if(start == end)\
    \ return l;\n  int n = end - start + 1;\n  long[] a = new long[n];\n  int i=0;\n\
    \  while(i<n) {\n    if(l[start+i] == l[end+i])\n      i++;\n    else\n      a[i++]\
    \ = l[start+i];\n  }\n  return a;\n}\n/*\nReturn unique elements from an array\n\
    \    >>> unique([2L, 5L, 5L, 7L, 9L, 0L, 123L])\n    [5L, 7L, 9L, 123L]\n    \n\
    */\nlong[] unique(long[] l, int start, int end, long val) \n{\n  if(l.length ==\
    \ 0) return l;\n  if(start == end) return l;\n  int n = end - start + 1;\n  long[]\
    \ a = new long[n];\n  int i=0;\n  while(i<n) {\n    if(l[start+i] == val)\n  \
    \    i++;\n    else\n      a[i++] = l[start+i];\n  }\n  return a;\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_m1j1nun.d(12): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_m1j1nun.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    int j = 0;\n    for (int i=0; i < l.length; i++) {\n\
    \        if (j != i && l[j] == l[i]) {\n            u[i] = l[j++];\n        }\
    \ else {\n            u[i] = l[i];\n        }\n    }\n    return u;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvyvk2fkx.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x42839d]

    ??:? void tmpvyvk2fkx.__unittest_L22_C1() [0x428070]

    ??:? void tmpvyvk2fkx.__modtest() [0x428120]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c47b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b30e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430599]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a48]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430525]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b2e5]

    ??:? runModuleUnitTests [0x42c251]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428860]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long result\
    \ = long.MinValue;\n    long last = long.MaxValue;\n    for (long i : l)\n   \
    \ {\n        if (i == last)\n        {\n            continue;\n        }\n   \
    \     else if (i > last)\n        {\n            result = i;\n            last\
    \ = i;\n        }\n    }\n    long[] r = new long[l.length];\n    for (int i =\
    \ 0; i < r.length; i++)\n    {\n        r[i] = (long)i;\n    }\n    return r;\n\
    }\n</code>\n<|/ a tags=sorting,arrays,c# |>\n<| c |>\nJust beware: If the original\
    \ array is sorted, this will sort it *in place*. Depending on the algorithm, this\
    \ may or may not be a problem: it depends on the algorithm!\n<|/ c |>\n<| a tags=sorting,arrays,c#\
    \ dscore=2 |>\nThe simplest way would be to use LINQ:\n<code>\nunittest\n{\n \
    \   alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpm1jkuasi.d(13): Error: semicolon expected, not `:`

    /tmp/tmpm1jkuasi.d(13): Error: expression expected, not `:`

    /tmp/tmpm1jkuasi.d(13): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpm1jkuasi.d(28): Error: C style cast illegal, use `cast(long)i`

    /tmp/tmpm1jkuasi.d(32): Error: declaration expected, not `<`

    /tmp/tmpm1jkuasi.d(44): Error: declaration expected, not `assert`

    /tmp/tmpm1jkuasi.d(45): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1jkuasi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong tmp;\n\t\
    int i, j, count;\n\tlong[] result = new long[l.length];\n\tfor (i = 0; i < l.length;\
    \ i++) \n\t{\n\t\ttmp = l[i];\n\t\tcount = 0;\n\t\tfor (j = i; j < l.length; j++)\n\
    \t\t{\n\t\t\tif (l[j] == tmp) \n\t\t\t{\n\t\t\t\tcount++;\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t}\n\t\tif (count == 1) \n\t\t{\n\t\t\tresult[i] = tmp;\n\t\t}\n\t\telse\
    \ \n\t\t{\n\t\t\tfor (j = i; j < l.length; j++)\n\t\t\t{\n\t\t\t\tresult[j] =\
    \ l[j];\n\t\t\t}\n\t\t}\n\t}\n\tsort(result);\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfo2xj1fv.d(38): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfo2xj1fv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    for (int i = 0; i < u.length; ++i) \n        u[i] =\
    \ l[i];\n    usort(u, l.length, (x, y) => \n        x.compareTo((long) y) == 0\
    \ ? x : ((long) y).compareTo((long) x) == 0 ? y : -1);\n    return u;\n}\n</code>\n\
    <|/ a tags=c++,arrays |>\n<| c |>\nwhy are you casting everything to `long`? `int`\
    \ should be sufficient.\n<|/ c |>\n<| c |>\n`int` is sufficient for arrays of\
    \ length `<2^31-1`. It's less space efficient than `long`. Casting is needed when\
    \ you don't know what type the array holds (because you can't use `sizeof` on\
    \ array variables). So the OP needs a function that can sort any `int[]` of any\
    \ length.\n<|/ c |>\n<| c |>\nYes, the casting is not needed - but why do you\
    \ think it is needed? Casting does not do anything useful when comparing types\
    \ other than between same type and same width.\n<|/ c |>\n<| c |>\nIf you don't\
    \ know what type the array holds then you can't use `sizeof`. Hence the `int[]`.\n\
    <|/ c |>\n<| a tags=c++,arrays dscore=0 |>\nHere's my take on it:\n<code>\n#include\
    \ <iostream>\n#include <algorithm>\nusing namespace std;\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t3_mi67.d(15): Error: C style cast illegal, use `cast(long)y`

    /tmp/tmp5t3_mi67.d(15): Error: C style cast illegal, use `cast(long)y`

    /tmp/tmp5t3_mi67.d(15): Error: C style cast illegal, use `cast(long)x`

    /tmp/tmp5t3_mi67.d(18): Error: declaration expected, not `<`

    /tmp/tmp5t3_mi67.d(24): Error: unterminated character constant

    /tmp/tmp5t3_mi67.d(24): Error: unterminated character constant

    /tmp/tmp5t3_mi67.d(24): Error: unterminated character constant

    /tmp/tmp5t3_mi67.d(30): Error: unterminated character constant

    /tmp/tmp5t3_mi67.d(30): Error: unterminated character constant

    /tmp/tmp5t3_mi67.d(33): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t3_mi67.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] a =\
    \ l; \n    a.sort();\n    long[] b = new long[a.length];\n    int k = 0;\n   \
    \ for (int i = 0; i < a.length; i++)\n    {\n        if (b[k] == a[i])\n     \
    \       continue;\n        b[k++] = a[i];\n    }\n    return b;\n}\n</code>\n\
    For completeness I posted this answer to the following question:\nHow do I sort\
    \ an array in Java?\n<|/ a tags=java,sorting |>\n<| a dscore=1 tags=java,sorting\
    \ |>\nI think this is a simple one. \n<code>\nimport java.util.Arrays;\nimport\
    \ java.util.Collections;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\
    import java.util.stream.Stream;\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe93prjya.d(23): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe93prjya.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    List<long>\
    \ result = new List<long>();\n    long[] sorted = l.ToArray();\n    Arrays.sort(sorted);\n\
    \    for (int i = 0; i < sorted.Length; i++) {\n        if (!result.Contains(sorted[i]))\n\
    \            result.Add(sorted[i]);\n    }\n    return result.ToArray();\n}\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf8tmjmg_.d(11): Error: found `>` when expecting `.` following long

    /tmp/tmpf8tmjmg_.d(11): Error: found `>` when expecting `.` following long

    /tmp/tmpf8tmjmg_.d(11): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpf8tmjmg_.d(11): Error: found `)` when expecting `;` following statement

    /tmp/tmpf8tmjmg_.d(11): Deprecation: use `{ }` for an empty statement, not `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf8tmjmg_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res =\
    \ new long[l.length];\n\tint[] noDupe = new int[l.length];\n\tint[] noDupe2 =\
    \ new int[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tnoDupe[i]\
    \ = 0;\n\t\tnoDupe2[i] = 0;\n\t}\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\
    \tif (noDupe[l[i]] == 0)\n\t\t{\n\t\t\tres[noDupe[l[i]]] = l[i];\n\t\t\tnoDupe[l[i]]++;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tnoDupe2[l[i]]++;\n\t\t}\n\t}\n\tint[] noDupe3 =\
    \ new int[noDupe.length];\n\tfor (int i = 0; i < noDupe.length; i++)\n\t{\n\t\t\
    if (noDupe2[i] == noDupe[i])\n\t\t{\n\t\t\tnoDupe3[i] = 0;\n\t\t}\n\t\telse\n\t\
    \t{\n\t\t\tnoDupe3[i] = noDupe2[i];\n\t\t}\n\t}\n\tfor (int i = 0; i < l.length;\
    \ i++)\n\t{\n\t\tif (noDupe3[l[i]] == noDupe[l[i]])\n\t\t{\n\t\t\tnoDupe3[l[i]]++;\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tres[noDupe[l[i]]] = l[i];\n\t\t\tnoDupe[l[i]]++;\n\
    \t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate = unique;\n\n \
    \   assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L,\
    \ 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpgaoico0z.d(21): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428b06]

    ??:? long[] tmpgaoico0z.unique(long[]) [0x4281fe]

    ??:? void tmpgaoico0z.__unittest_L57_C1() [0x4286b1]

    ??:? void tmpgaoico0z.__modtest() [0x4287d8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42cd17]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42bbaa]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430e35]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4312e4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430dc1]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42bb81]

    ??:? runModuleUnitTests [0x42caed]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int j = 0;\n    int i = 0;\n    for(; i < l.length;\
    \ ++i) \n    {\n        if(result[j] == l[i]) \n            continue;\n      \
    \  result[j] = l[i];\n        ++j;\n    }\n    return result.subarray(0, j);\n\
    }\n</code>\n<|/ a dscore=5 |>\n<| c |>\nThis code is very interesting, and I think\
    \ it is very easy to understand. However, for me it seems to miss some important\
    \ details. For example, in your second loop, you set the `j` variable to `i` and\
    \ then compare with `l[i]`. But if you have an array of size 10, the condition\
    \ would be `l[i] < 10`, where `l` is the array. How can you avoid this? Maybe\
    \ the algorithm can be changed to avoid this?\n<|/ c |>\n<| c |>\nTo be honest,\
    \ I wrote this just before I saw this comment. I'm pretty sure this doesn't work\
    \ as intended, but I don't have time to test it now. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| c |>\nThis is by far the best solution I've seen here so\
    \ far, even for large arrays.\n<|/ c |>\n<| c |>\nI haven't used the std lib for\
    \ years, I've never come across this algorithm before, thank you for sharing!\n\
    <|/ c |>\n<| c |>\nThis was a very helpful answer, and should be the top answer.\
    \ Thanks.\n<|/ c |>\n<| a |>\nHere is an interesting solution, using an additional\
    \ variable:\n<code>\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp37adknjy.d(23): Error: declaration expected, not `<`

    /tmp/tmp37adknjy.d(29): Error: unterminated character constant

    /tmp/tmp37adknjy.d(29): Error: unterminated character constant

    /tmp/tmp37adknjy.d(29): Error: unterminated character constant

    /tmp/tmp37adknjy.d(32): Error: unterminated character constant

    /tmp/tmp37adknjy.d(35): Error: unterminated character constant

    /tmp/tmp37adknjy.d(35): Error: unterminated character constant

    /tmp/tmp37adknjy.d(47): Error: declaration expected, not `assert`

    /tmp/tmp37adknjy.d(48): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp37adknjy.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] res\
    \ = new long[l];\n    long last = 0;\n    int i = 0;\n    foreach(i, l) \n   \
    \ {\n        if(l == i) \n        {\n            res[i - 1] = l;\n        }\n\
    \        else\n        {\n            if(last < l) \n            {\n         \
    \       res[i - 1] = l;\n            }\n            else\n            {\n    \
    \            res[i - 1] = last;\n            }\n            last = l;\n      \
    \  }\n    }\n    return res;\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nI wonder\
    \ whether I really need the std.array. The std.array is actually quite useful\
    \ (it allows me to use the foreach loop). Unfortunately it does require the unsafe\
    \ keyword which I don't really want to use (as far as I understand I shouldn't\
    \ have to use unsafe for something that isn't really unsafe). In fact I am already\
    \ using the std.array (for other purposes). I can easily replace it with the std.array\
    \ of the other solution and get rid of the unsafe keyword.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>\npublic static IEnumerable<T> Unique<T>(this IEnumerable<T> source)\n\
    {\n    var seen = new HashSet<T>();\n    return source.Where(e => seen.Add(e));\n\
    }\n</code>\n<|/ a tags=c#,linq,unique |>\n<| a tags=c#,linq,unique |>\n<code>\n\
    unittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp03hl524q.d(14): Error: no identifier for declarator `l`

    /tmp/tmp03hl524q.d(14): Error: found `)` when expecting `;`

    /tmp/tmp03hl524q.d(33): Error: found `return` when expecting `)`

    /tmp/tmp03hl524q.d(35): Error: declaration expected, not `<`

    /tmp/tmp03hl524q.d(38): Error: unterminated character constant

    /tmp/tmp03hl524q.d(38): Error: unterminated character constant

    /tmp/tmp03hl524q.d(38): Error: unterminated character constant

    /tmp/tmp03hl524q.d(45): Error: declaration expected, not `return`

    /tmp/tmp03hl524q.d(46): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp03hl524q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result\
    \ = new long[l.length];\n\tint j = 0;\n\tfor (int i = 0; i < l.length; ++i)\n\t\
    {\n\t\twhile (j < result.length && l[i] == result[j])\n\t\t{\n\t\t\t++j;\n\t\t\
    }\n\t\tresult[j] = l[i];\n\t}\n\tArrays.sort(result);\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjurmnr3w.d(21): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjurmnr3w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int m = l.length;\n\
    \    long[] u = new long[m];\n    int j = 0;\n    int k = -1;\n    for (int i=0;\
    \ i<m; i++)\n    {\n        if (u[j] == l[i])\n        {\n            k = i;\n\
    \        }\n        else\n        {\n            if (k != -1)\n            {\n\
    \                u[k] = l[i];\n                j++;\n                k = -1;\n\
    \            }\n        }\n    }\n    return u;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxn3gcfao.d(11): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxn3gcfao.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    \n    for (int i = 0; i < l.length; ++i)\n    {\n\
    \        int j = 0;\n        while (j < result.length && l[i] != result[j])\n\
    \            ++j;\n        result[j++] = l[i];\n    }\n    \n    return Arrays.sort(result);\n\
    }\n</code>\n<|/ a tags=sorting,arrays,java,algorithm |>\n<| a dscore=2 tags=sorting,arrays,java,algorithm\
    \ |>\nHere's my implementation:\n<code>\n/**\n * Return sorted unique elements\
    \ in an array\n *\n * <T> data type\n * array data\n * sorted unique elements\
    \ in an array\n */\npublic static <T> T[] unique(T[] array) {\n    Arrays.sort(array);\n\
    \    List<T> list = new ArrayList<>(Arrays.asList(array));\n    Collections.sort(list);\n\
    \    return list.toArray(new T[list.size()]);\n}\n</code>\n<|/ a |>\n<| a tags=sorting,arrays,java,algorithm\
    \ |>\n<code>\npublic static <T> void ArraySort(T[] A) {\nArrays.sort(A);\n}\n\
    </code>\n<|/ a dscore=1 |>\n<| a dscore=1 tags=sorting,arrays,java,algorithm |>\n\
    You can use Arrays.sort method.\n<|/ a |>\n<| c |>\nNote that this would sort\
    \ in the reverse order compared to the OP's requirement. The OP's question states:\
    \ _sort it in a way that each repetition of the same element appears before the\
    \ next repetition_ instead of _sort it in order of the element_.\n<|/ c |>\n<|\
    \ c |>\nYes, you are right, i wrote that before he edited his post to make it\
    \ more clear.\n<|/ c |>\n<| a dscore=1 tags=sorting,arrays,java,algorithm |>\n\
    Use HashSet\n<code>\npublic static void main(String[] args) {\n    int[] array\
    \ = {1,2,1,3,3,4,4,5};\n    int[] unique = new int[array.length];\n    HashSet<Integer>\
    \ set = new HashSet<Integer>();\n    for(int i=0; i<array.length; i++)\n     \
    \   if(!set.contains(array[i]))\n            set.add(i);\n    for(int i=0; i<array.length;\
    \ i++)\n        unique[i] = set.contains(array[i]) ? array[i] : array[i];\n  \
    \  System.out.println(Arrays.toString(unique));\n}\n</code>\n<|/ a |>\n<| a tags=sorting,arrays,java,algorithm\
    \ |>\n<code>\nimport java.util.*;\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmph4lj94_6.d(23): Error: declaration expected, not `<`

    /tmp/tmph4lj94_6.d(26): Error: unterminated character constant

    /tmp/tmph4lj94_6.d(37): Error: no identifier for declarator `List`

    /tmp/tmph4lj94_6.d(37): Error: declaration expected, not `<`

    /tmp/tmph4lj94_6.d(38): Error: function declaration without return type. (Note
    that constructors are always named `this`)

    /tmp/tmph4lj94_6.d(38): Error: no identifier for declarator `Collections.sort(list)`

    /tmp/tmph4lj94_6.d(39): Error: declaration expected, not `return`

    /tmp/tmph4lj94_6.d(40): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4lj94_6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l[0].CompareTo(l[1])]; \n    int i = 0; \n    for(int k=1; k<l.length;\
    \ k++)\n    {\n        while(result.Contains(l[i]))\n        {\n            i++;\
    \ \n        }\n        result[result.length] = l[i]; \n        i++; \n    }\n\
    \    return Arrays.copyOfRange(result,1,result.length); \n}\n</code>\n<|/ a |>\n\
    <| a dscore=0 |>\nUsing a custom comparer (based on ArrayList's compareTo implementation)\
    \ for a sorted ArrayList is probably the most efficient way to do this, but if\
    \ you do want to write your own solution that's also doable.  The key is to first\
    \ convert the input list to a LinkedList, which can have O(1) random access, since\
    \ the entire array is always accessed at once.  Then, use a merge algorithm to\
    \ sort the list by iterating from the beginning to the end.  Here's the code to\
    \ do this:\n<code>\npublic static <T> List<T> mergeSort(List<T> input)\n{\n  \
    \  // First convert the input to a LinkedList, which is fast-access\n    LinkedList<T>\
    \ list = new LinkedList<T>(input);\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsxvec8i3.d(24): Error: declaration expected, not `<`

    /tmp/tmpsxvec8i3.d(27): Error: unterminated character constant

    /tmp/tmpsxvec8i3.d(27): Error: unterminated character constant

    /tmp/tmpsxvec8i3.d(27): Error: unterminated character constant

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsxvec8i3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int j = 0;\n    int i;\n    for(i = 0; i < l.length;\
    \ i++) \n    {\n        while(j > 0 && l[j] == l[j-1]) \n        {\n         \
    \   j--;\n        }\n        result[j] = l[i];\n        j++;\n    }\n    result.length\
    \ = j;\n    return result;\n}\n/*\nReturn sorted unique elements in an array\n\
    \    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L,\
    \ 9L, 123L]\n    \n*/\nlong[] unique(long[] l, int left, int right) \n{\n    long[]\
    \ result = new long[right-left+1];\n    int j = 0;\n    int i;\n    for(i = left;\
    \ i < right; i++) \n    {\n        while(j > 0 && l[j] == l[j-1]) \n        {\n\
    \            j--;\n        }\n        result[j] = l[i];\n        j++;\n    }\n\
    \    result.length = j;\n    return result;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, int left, int right,\
    \ int fromIndex) \n{\n    long[] result = new long[right-left+1];\n    int j =\
    \ 0;\n    int i;\n    for(i = left; i < right; i++) \n    {\n        while(j >\
    \ 0 && l[j] == l[j-1]) \n        {\n            j--;\n        }\n        result[j]\
    \ = l[i];\n        j++;\n    }\n    result.length = j;\n    return result;\n}\n\
    /*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L,\
    \ 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l, int left, int right, int fromIndex, int toIndex) \n{\n    long[] result =\
    \ new long[right-left+1];\n    int j = 0;\n    int i;\n    for(i = left; i < right;\
    \ i++) \n    {\n        while(j > 0 && l[j] == l[j-1]) \n        {\n         \
    \   j--;\n        }\n        result[j] = l[i];\n        j++;\n    }\n    result.length\
    \ = j;\n    return result;\n}\n/*\nReturn sorted unique elements in an array\n\
    \    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpurchfoey.d(95): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpurchfoey.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  Arrays.sort(l);\n\
    \  int n = l.length;\n  long[] result = new long[n];\n  for(int i = 0; i < n;\
    \ ++i) {\n    if(i != l[i]) \n      result[i] = l[i];\n  }\n  return result;\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nIt is not necessary to sort - it is sufficient\
    \ to have a `HashSet` of seen elements.\n<|/ c |>\n<| c |>\nYes you are right\
    \ but as for me it is easier to understand when it is sorted.\n<|/ c |>\n<| c\
    \ |>\nTrue. I was speaking from the point of view of OP's \"this algorithm is\
    \ not very efficient\". HashSet is probably the best implementation for this.\n\
    <|/ c |>\n<| a tags=arrays,sorting,c# |>\nI would use Linq.  Here is an example:\n\
    <code>\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5b0338km.d(20): Error: declaration expected, not `<`

    /tmp/tmp5b0338km.d(29): Error: unterminated character constant

    /tmp/tmp5b0338km.d(38): Error: declaration expected, not `assert`

    /tmp/tmp5b0338km.d(39): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5b0338km.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tstd.sort(l);\n\
    \t\n\tlong u;\n\t\n\tfor (int i = 0; i < l.size(); i++)\n\t{\n\t\tif (l[i] ==\
    \ l[l.size() - 1 - i])\n\t\t{\n\t\t\tl[l.size() - 1 - i] = 0;\n\t\t\tl = l;\n\t\
    \t}\n\t\t\n\t\tu = l[i];\n\t\tfor (int j = i; j < l.size(); j++)\n\t\t\tif (l[j]\
    \ != u)\n\t\t\t\tl[j] = 0;\n\t}\n\t\n\treturn l;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpq8p28rs9.d(11): Error: undefined identifier `sort` in package `std`

    /tmp/tmpq8p28rs9.d(15): Error: no property `size` for type `long[]`

    /tmp/tmpq8p28rs9.d(17): Error: no property `size` for type `long[]`

    /tmp/tmpq8p28rs9.d(19): Error: no property `size` for type `long[]`

    /tmp/tmpq8p28rs9.d(24): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq8p28rs9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long count\
    \ = 0; \n    long[] u = new long[l.length];\n    for (int i = 0; i < l.length;\
    \ i++) \n    {\n        u[count++] = l[i]; \n    }\n    sort(u, count);\n    return\
    \ u;\n}\n// Returns sorted unique elements in an array\nlong[] unique(long[] l,\
    \ int count) \n{\n    long[] u = new long[count];\n    int j = 0;\n    for (int\
    \ i = 0; i < l.length; i++) \n    {\n        u[j++] = l[i]; \n    }\n    sort(u,\
    \ j);\n    return u;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis is not an answer\
    \ to the question. Maybe it should be a comment on the question?\n<|/ c |>\n<|\
    \ c |>\nI agree it should be a comment but its not an answer - it is just the\
    \ code - i think it is useful and may be of help to someone else in the future\
    \ (as I did) so it is an answer\n<|/ c |>\n<| a tags=algorithm,arrays,sorting,java,unique\
    \ |>\nAs someone said the best solution is O(n). But you can optimize the unique\
    \ function so that its O(nlogn). I did it by converting my original array to a\
    \ map, then sort it by the key, then I got rid of duplicate values by checking\
    \ if the value is already in that map or not.\n<|/ a dscore=0 |>\n<| c |>\nPlease\
    \ edit your answer and add your solution as an edit, so you can properly format\
    \ it. Also, please include some code to show how you solved it.\n<|/ c |>\n<|\
    \ c |>\ni wrote it here in comments, but it took too long to write so i posted\
    \ it as answer. you can find it on [my website](http://dalexandermusz.wordpress.com/2011/05/06/java-implementation-of-n-log-log-unique-elements-algorithm/)\n\
    <|/ c |>\n<| c |>\nIt would be better to post the code as part of the answer,\
    \ and then link to the source.\n<|/ c |>\n<| a tags=algorithm,arrays,sorting,java,unique\
    \ dscore=0 |>\nHere is my solution in Python. It uses the fact that Python sets\
    \ preserve their unique members, so we get unique elements automatically by just\
    \ removing duplicates.\n<code>\ndef unique(l):\n    s = set()\n    return list(s)\n\
    </code>\n<|/ a |>\n<| c |>\nYour code is incorrect as it removes duplicates from\
    \ `l`, but the question wants the unique elements *from* `l`.\n<|/ c |>\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4txnbqq3.d(32): Error: declaration expected, not `<`

    /tmp/tmp4txnbqq3.d(67): Error: declaration expected, not `assert`

    /tmp/tmp4txnbqq3.d(68): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4txnbqq3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long[] result\
    \ = new long[l.length];\n  long previous = 0;\n  for (long e : l) \n  {\n    if\
    \ (e == previous)\n    {\n      continue;\n    }\n    previous = e;\n    long\
    \ i = binarySearch(result, e);\n    if (i < 0)\n    {\n      i = 0;\n    }\n \
    \   result[i] = e;\n  }\n  return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwqyl8m9v.d(13): Error: semicolon expected, not `:`

    /tmp/tmpwqyl8m9v.d(13): Error: expression expected, not `:`

    /tmp/tmpwqyl8m9v.d(13): Error: found `l` when expecting `;` following `for` condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqyl8m9v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  return sort(l);\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphz1pvj4q.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphz1pvj4q.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ans\
    \ = l.clone();\n    \n    for(int i = 0; i < ans.length; i++)\n    {\n       \
    \ for(int j = i+1; j < ans.length; j++)\n        {\n            if(ans[i] > ans[j])\n\
    \            {\n                long tmp = ans[i];\n                ans[i] = ans[j];\n\
    \                ans[j] = tmp;\n            }\n        }\n    }\n    return ans;\n\
    }\n</code>\nThe code is tested and works fine.\n<|/ a dscore=1 |>\n<| a |>\n<code>\n\
    #include <iostream>\nusing namespace std;\nunittest\n{\n    alias candidate =\
    \ unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L,\
    \ 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjwhz039m.d(27): Error: declaration expected, not `<`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjwhz039m.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int i = 1;\n\
    \    int j = 0;\n    long[] u = new long[l[l]];\n    while (i < l) {\n       \
    \ while (j == i) {\n            j = i;\n            i += 1;\n        }\n     \
    \   if (l[i] != l[j]) {\n            u[l[i]] = l[j];\n            while (j < l)\
    \ {\n                l[j] = l[j + 1];\n                j += 1;\n            }\n\
    \            j = 1;\n        }\n        i += 1;\n    }\n    return u;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsltlljvf.d(13): Error: cannot implicitly convert expression `l`
    of type `long[]` to `ulong`

    /tmp/tmpsltlljvf.d(14): Error: incompatible types for `(i) < (l)`: `int` and `long[]`

    /tmp/tmpsltlljvf.d(21): Error: incompatible types for `(j) < (l)`: `int` and `long[]`

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ new long[l.length];\n    std.arraycopy(l, 0, r, 0, l.length);\n    std.sort(r);\n\
    \    return r;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdhwkdmt5.d(12): Error: undefined identifier `arraycopy` in package
    `std`

    /tmp/tmpdhwkdmt5.d(13): Error: undefined identifier `sort` in package `std`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhwkdmt5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] a =\
    \ new long[l.length];\n    long counter = 0;\n    int pos = 0;\nunittest\n{\n\
    \    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj18oa9g2.d(14): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj18oa9g2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  long[] u;\n\
    \  int i, j, i2;\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkfli5tf0.d(13): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkfli5tf0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] a =\
    \ l;\n    Arrays.sort(a);\n    return a;\n}\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt2c13jql.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt2c13jql.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    return unique(l,false);\n\
    }\n/*\nReturn sorted unique elements in an array\n>>> unique([5L, 3L, 5L, 2L,\
    \ 3L, 3L, 9L, 0L, 123L])\n[0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l,bool ascending)\n{\n    List<long> ls = new ArrayList<long>();\n    for (long\
    \ i : l)\n    {\n        if (ls.contains(i)) {\n            continue;\n      \
    \  }\n        ls.add(i);\n    }\n    if (ascending)\n        return ls.toArray(new\
    \ long[(int)ls.size()]);\n    else\n        return ls.descendingCopy().toArray(new\
    \ long[(int)ls.size()]);\n}\n/*\nReturn sorted unique elements in an array\n \
    \   >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L,\
    \ 123L]\n    \n*/\nlong[] unique(long[] l,int len)\n{\n    return unique(l,false,len);\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l,bool ascending,int len)\n{\n    List<long> ls = new ArrayList<long>();\n\
    \    for (long i : l)\n    {\n        if (ls.contains(i)) {\n            continue;\n\
    \        }\n        ls.add(i);\n    }\n    if (ascending)\n        return ls.toArray(new\
    \ long[(int)ls.size()]);\n    else\n        return ls.descendingCopy().toArray(new\
    \ long[(int)ls.size()]);\n}\n/*\nReturn sorted unique elements in an array\n \
    \   >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L,\
    \ 123L]\n    \n*/\nlong[] unique(long[] l,int len,int maxlen)\n{\n    return unique(l,false,len,maxlen);\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[]\
    \ unique(long[] l,bool ascending,int len,int maxlen)\n{\n    List<long> ls = new\
    \ ArrayList<\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjt7rpmnd.d(21): Error: found `>` when expecting `.` following long

    /tmp/tmpjt7rpmnd.d(21): Error: found `>` when expecting `.` following long

    /tmp/tmpjt7rpmnd.d(21): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpjt7rpmnd.d(21): Error: found `)` when expecting `;` following statement

    /tmp/tmpjt7rpmnd.d(21): Deprecation: use `{ }` for an empty statement, not `;`

    /tmp/tmpjt7rpmnd.d(22): Error: semicolon expected, not `:`

    /tmp/tmpjt7rpmnd.d(22): Error: expression expected, not `:`

    /tmp/tmpjt7rpmnd.d(22): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmpjt7rpmnd.d(30): Error: C style cast illegal, use `cast(int)ls.size()`

    /tmp/tmpjt7rpmnd.d(32): Error: C style cast illegal, use `cast(int)ls.size()`

    /tmp/tmpjt7rpmnd.d(52): Error: found `>` when expecting `.` following long

    /tmp/tmpjt7rpmnd.d(52): Error: found `>` when expecting `.` following long

    /tmp/tmpjt7rpmnd.d(52): Error: found `(` when expecting identifier following `long`.

    /tmp/tmpjt7rpmnd.d(52): Error: fou'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long x = l[0];\n\
    \    long[] v = new long[l[l].count()+1];\n    for (int i = 0; i < l[l].count();\
    \ i++) \n    {\n        long y = l[i];\n        if (x != y) \n        {\n    \
    \        v[i] = x;\n            x = y;\n        }\n    }\n    v[l[l].count()]\
    \ = x;\n    return v;\n}\n// returns true if all elements of v are in l\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn4d0wck_.d(12): Error: cannot implicitly convert expression `l`
    of type `long[]` to `ulong`

    /tmp/tmpn4d0wck_.d(13): Error: cannot implicitly convert expression `l` of type
    `long[]` to `ulong`

    /tmp/tmpn4d0wck_.d(22): Error: cannot implicitly convert expression `l` of type
    `long[]` to `ulong`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn4d0wck_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l.length];\n    long[] l1 = sort(l);\n    long[] l2 = sort(u);\n  \
    \  sort(l1, l2);\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfjst565c.d(12): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    /tmp/tmpfjst565c.d(13): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    /tmp/tmpfjst565c.d(14): Error: undefined identifier `sort`, did you mean function
    `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfjst565c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  return sort(l,\
    \ (a => a == null), \n            (a1 => a1 == null ? 1 : a1 > a1 ? 1 : -1));\n\
    }\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8u4km64g.d(11): Error: undefined identifier `sort`, did you mean
    function `sqrt`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8u4km64g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    int i = 0;\n    foreach (long x in l)\n    {\n  \
    \      for (int j = i; j < l.length; j++)\n        {\n            if (l[j] ==\
    \ x)\n                break;\n        }\n        if (j < l.length)\n         \
    \   result[i++] = x;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp509ywu6j.d(13): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp509ywu6j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] result\
    \ = new long[l.length];\n\tfor (int i = 0; i < l.length; i++) {\n\t\tlong current\
    \ = l[i];\n\t\tfor (int j = 0; j < i; j++) {\n\t\t\tif (l[j] == current) {\n\t\
    \t\t\ti++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tresult[i] = current;\n\t}\n\t\
    return result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1qll95cu.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x428335]

    ??:? void tmp1qll95cu.__unittest_L24_C1() [0x428008]

    ??:? void tmp1qll95cu.__modtest() [0x4280b8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c413]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2a6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430531]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4309e0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304bd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b27d]

    ??:? runModuleUnitTests [0x42c1e9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4287f8]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong oldval\
    \ = -1L, newval = 0L;\n\tlong lastval = -1L;\n\tbool swap = false;\n\tfor (int\
    \ i = 0; i < l.length; ++i) \n\t{\n\t\tif (l[i] != oldval) \n\t\t{\n\t\t\tswap\
    \ = false;\n\t\t\tnewval = l[i];\n\t\t}\n\t\telse \n\t\t{\n\t\t\tif (l[i] == lastval)\
    \ \n\t\t\t{\n\t\t\t\tswap = true;\n\t\t\t\tnewval = lastval + l[i];\n\t\t\t}\n\
    \t\t\telse\n\t\t\t{\n\t\t\t\tlastval = newval;\n\t\t\t}\n\t\t}\n\t\toldval = newval;\n\
    \t}\n\tif (swap == false) \n\t{\n\t\treturn l;\n\t}\n\tlong[] out = new long[l];\n\
    \tout[0] = oldval;\n\tfor (int i = 1; i < l.length; ++i) \n\t{\n\t\tout[i] = l[i\
    \ - 1];\n\t}\n\treturn out;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1d2hd5d3.d(39): Error: no identifier for declarator `long[]`

    /tmp/tmp1d2hd5d3.d(39): Error: found `out` instead of statement

    /tmp/tmp1d2hd5d3.d(40): Error: found `out` instead of statement

    /tmp/tmp1d2hd5d3.d(43): Error: found `out` instead of statement

    /tmp/tmp1d2hd5d3.d(45): Error: expression expected, not `out`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1d2hd5d3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ new long[l.length];\n    int j = 0;\n    for (int i=0; i<l.length; ++i) {\n\
    \        while (r[j] != l[i])\n            j++;\n        r[j++] = l[i];\n    }\n\
    \    return r;\n}\n/*\nReturn the number of occurrences of x in l\n    \n>>> x\
    \ = [1,2,2,2,3,5,6,7,8,8,9,7,3,5,6,7]\n>>> count(x, 2)\n4\n    \n*/\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.RangeError@/tmp/tmpmisl9ehp.d(14): Range violation

    ----------------

    ??:? _d_arrayboundsp [0x428406]

    ??:? long[] tmpmisl9ehp.unique(long[]) [0x427e7b]

    ??:? void tmpmisl9ehp.__unittest_L28_C1() [0x427fad]

    ??:? void tmpmisl9ehp.__modtest() [0x4280d4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c433]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430551]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a00]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b29d]

    ??:? runModuleUnitTests [0x42c209]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char['
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int last,\
    \ mid, i, j;\n    long count = 1;\n    \n    last = l.length - 1;\n    mid = last/2;\n\
    \    \n    while (count < mid && last >= 0) \n    {\n        i = l[last];\n  \
    \      j = l[mid];\n        \n        if (i != j) \n        {\n            if\
    \ (count < mid) \n            {\n                l[last] = l[mid];\n         \
    \   }\n            else\n            {\n                l[mid] = l[last];\n  \
    \          }\n            last--;\n            \n            mid--;\n        \
    \    \n            if (count < mid) \n            {\n                count++;\n\
    \            }\n            else\n            {\n                count = 1;\n\
    \            }\n        }\n        \n        if (last >= 0) \n        {\n    \
    \        i = l[last];\n            j = l[mid];\n            \n            if (i\
    \ != j) \n            {\n                if (count < mid) \n                {\n\
    \                    l[last] = l[mid];\n                }\n                else\n\
    \                {\n                    l[mid] = l[last];\n                }\n\
    \                last--;\n                \n                mid--;\n         \
    \       \n                if (count < mid) \n                {\n             \
    \       count++;\n                }\n                else\n                {\n\
    \                    count = 1;\n                }\n            }\n        }\n\
    \    }\n    \n    return l;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp77jo63q5.d(14): Error: cannot implicitly convert expression `l.length
    - 1LU` of type `ulong` to `int`

    /tmp/tmp77jo63q5.d(19): Error: cannot implicitly convert expression `l[cast(ulong)last]`
    of type `long` to `int`

    /tmp/tmp77jo63q5.d(20): Error: cannot implicitly convert expression `l[cast(ulong)mid]`
    of type `long` to `int`

    /tmp/tmp77jo63q5.d(48): Error: cannot implicitly convert expression `l[cast(ulong)last]`
    of type `long` to `int`

    /tmp/tmp77jo63q5.d(49): Error: cannot implicitly convert expression `l[cast(ulong)mid]`
    of type `long` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77jo63q5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long result\
    \ = 0;\n    foreach(int item, l)\n    {\n        if(item != result)\n        {\n\
    \            result = item;\n        }\n    }\n    return newArrayWith(result,\
    \ l);\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmprvoy1pu8.d(12): Error: no identifier for declarator `l`

    /tmp/tmprvoy1pu8.d(12): Error: found `)` when expecting `;`

    /tmp/tmprvoy1pu8.d(19): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprvoy1pu8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] r =\
    \ new long[l.length];\n    long[] a = new long[l[l.length-1]];\n    long u = 0;\n\
    \    bool flag = false;\n    for(int i = 0; i < l.length; i++){\n        if(u\
    \ < l[i]){\n            u=l[i];\n            flag = false;\n        }\n      \
    \  else{\n            for(int j = 0; j < a.length; j++){\n                if(a[j]\
    \ < u){\n                    flag = true;\n                    break;\n      \
    \          }\n            }\n            if(flag == false){\n                r[i]\
    \ = l[i];\n            }\n        }\n    }\n    return r;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nNice idea, but if one has a long list of unique numbers, sorting\
    \ them will take O(n log n) instead of O(n).\n<|/ c |>\n<| c |>\nThe unique method\
    \ has two nested for loops, both of which will require O(n log n), therefore the\
    \ total is O(n log n), however it also runs in O(n) time.\n<|/ c |>\n<| c |>\n\
    the unique method does in fact have a nested for loop, it does it three times.\
    \ However I see now that it is unecessary and I see why that is. However, still\
    \ I do not think that it is O(n log n).\n<|/ c |>\n<| c |>\nOh, you're right.\
    \ I misread the algorithm, sorry. However, I think there is still a O(n) solution\
    \ for finding the unique numbers in the array.\n<|/ c |>\n<| a tags=sorting,algorithm,java\
    \ |>\n<code>\nclass LongComparator\n{\n   public int compare(Long a, Long b)\n\
    \   {\n       if (a==b)\n       {\n           return 0;\n       }\n       if (a==null)\n\
    \       {\n           return 1;\n       }\n       if (b==null)\n       {\n   \
    \        return -1;\n       }\n       return Long.compare(a, b);\n   }\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nIt would be better to use a comparator which returns\
    \ `Long.compare(lhs, rhs)`.\n<|/ c |>\n<| c |>\nThis isn't O(n). For a long list,\
    \ there are 2^32 different numbers, so it would be O(2^32), which is way too slow.\n\
    <|/ c |>\n<| c |>\nAh, I thought you meant sort... I thought you were just trying\
    \ to remove the duplicates.\n<|/ c |>\n<| c \nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3q4c45at.d(34): Error: declaration expected, not `<`

    /tmp/tmp3q4c45at.d(46): Error: unterminated character constant

    /tmp/tmp3q4c45at.d(57): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3q4c45at.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong result\
    \ = 0;\n\t\n\tfor (int i = 0; i < l.length; i++) \n\t{\n\t\tlong tmpResult = l[i];\n\
    \t\t\n\t\tfor (int j = i + 1; j < l.length; j++) \n\t\t{\n\t\t\tif (l[j] == tmpResult)\n\
    \t\t\t{\n\t\t\t\tj = l.length;\n\t\t\t}\n\t\t\t\n\t\t\tif (l[j] != tmpResult)\
    \ \n\t\t\t{\n\t\t\t\tl[j - i - 1] = tmpResult;\n\t\t\t\tresult = tmpResult;\n\t\
    \t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn l;\n}\nunittest\n{\n    alias\
    \ candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjiuoxz1i.d(21): Error: cannot implicitly convert expression `l.length`
    of type `ulong` to `int`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjiuoxz1i.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  var ans = Array[int](l);\n\
    \  var h = new HashSet[int](l);\n  for(i <- 0 until l) \n    if(h.add(l[i]))\n\
    \      ans[l[i]] = 1;\n  return ans;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzjb2klma.d(11): Error: found `]` when expecting `.` following int

    /tmp/tmpzjb2klma.d(11): Error: found `(` when expecting identifier following `int`.

    /tmp/tmpzjb2klma.d(11): Error: found `l` when expecting `,`

    /tmp/tmpzjb2klma.d(11): Error: expression expected, not `)`

    /tmp/tmpzjb2klma.d(11): Error: found `;` when expecting `,`

    /tmp/tmpzjb2klma.d(12): Error: found `h` when expecting `,`

    /tmp/tmpzjb2klma.d(12): Error: expression expected, not `=`

    /tmp/tmpzjb2klma.d(12): Error: found `new` when expecting `,`

    /tmp/tmpzjb2klma.d(12): Error: found `]` when expecting `.` following int

    /tmp/tmpzjb2klma.d(12): Error: found `(` when expecting identifier following `int`.

    /tmp/tmpzjb2klma.d(12): Error: found `l` when expecting `,`

    /tmp/tmpzjb2klma.d(12): Error: expression expected, not `)`

    /tmp/tmpzjb2klma.d(12): Error: found `;` when expecting `,`

    /tmp/tmpzjb2klma.d(13): Error: expression expected, not `for`

    /tmp/tmpzjb2klma.d(13): Error: found `until` when expecting `,`

    /tmp/tmpzjb2klma.d(14): Error: found `if'
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t// find unique\
    \ elements\n\tlong[] result = new long[l.length];\n\tfor(int i=0; i<l.length;\
    \ ++i) {\n\t\tfor(int j=i+1; j<l.length; ++j) {\n\t\t\tif(l[i] == l[j])\n\t\t\t\
    \tbreak;\n\t\t}\n\t\tif(j==l.length)\n\t\t\tresult[i] = l[i];\n\t}\n\treturn result;\n\
    }\n/*\nReturn the number of items in an array\n    >>> count(5L)\n    1\n    \n\
    */\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp81sfopmq.d(18): Error: undefined identifier `j`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp81sfopmq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    \n    if(l.length==0)\
    \ return l;\n    \n    long first = l[0];\n    \n    for(int i=0; i<l.length;\
    \ i++) \n    {\n        if(l[i]!=first)\n        {\n            long last = l[i];\n\
    \            for(int j=i; j<l.length; j++) \n            {\n                l[j]=last;\n\
    \            }\n            break;\n        }\n    }\n    return l;\n}\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp72x3w7dg.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x42835d]

    ??:? void tmp72x3w7dg.__unittest_L30_C1() [0x42802c]

    ??:? void tmp72x3w7dg.__modtest() [0x4280dc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c3df]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b272]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430405]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x4308b4]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x430391]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b249]

    ??:? runModuleUnitTests [0x42c1b5]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428820]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] u =\
    \ new long[l[l.length-1]];\n    int j = 0;\n    for (int i=0; i < l.length; i++)\n\
    \    {\n        if (u[j] == l[i])\n            continue;\n        u[j] = l[i];\n\
    \        j++;\n    }\n    return u;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpev55g553.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x428355]

    ??:? void tmpev55g553.__unittest_L22_C1() [0x428028]

    ??:? void tmpev55g553.__modtest() [0x4280d8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c433]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b2c6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430551]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430a00]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4304dd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b29d]

    ??:? runModuleUnitTests [0x42c209]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428818]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\nlong[] rd = new\
    \ long[l.length];\nfor(int i = 0; i < l.length; i++) \n{\n    if(l[i] != i) \n\
    \    {\n        rd[l[i]] = l[i];\n    }\n}\nreturn rd;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n>>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n[123L,\
    \ 0L, 2L, 3L, 5L, 9L]\n*/\nlong[] unique(long[][] rd)\n{\nlong[] l = new long[rd.length];\n\
    for(int i = 0; i < rd.length; i++) \n{\n    l[i] = rd[i][0];\n}\nreturn l;\n}\n\
    /*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L,\
    \ 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[]\
    \ l, long[] rd)\n{\nlong[] ld = new long[l.length];\nfor(int i = 0; i < l.length;\
    \ i++) \n{\n    if(l[i] != i) \n    {\n        ld[l[i]] = l[i];\n    }\n}\nlong[]\
    \ rdo = new long[rd.length];\nfor(int i = 0; i < rd.length; i++) \n{\n    rdo[i]\
    \ = rd[i];\n}\nreturn unique(ld,rdo);\n}\n/*\nReturn sorted unique elements in\
    \ an array\n>>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n[123L, 0L, 2L,\
    \ 3L, 5L, 9L]\n*/\nlong[] unique(long[][] l, long[][] rd)\n{\nlong[] ld = new\
    \ long[l.length];\nfor(int i = 0; i < l.length; i++) \n{\n    ld[i] = l[i][0];\n\
    }\nlong[] rdo = new long[rd.length];\nfor(int i = 0; i < rd.length; i++) \n{\n\
    \    rdo[i] = rd[i][0];\n}\nreturn unique(ld,rdo);\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nHow can you make sense of the code above without knowing the language\
    \ used? It would be better to explain how these methods work.\n<|/ c |>\n<| a\
    \ tags=arrays,sorting,algorithm,language-agnostic |>\nThis can be done in O(n)\
    \ time and O(1) space.\n<code>\nprivate void sort(int[] a)\n{\n    // sort by\
    \ first number\n    int first = a\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3u32qf43.d(77): Error: declaration expected, not `<`

    /tmp/tmp3u32qf43.d(93): Error: declaration expected, not `assert`

    /tmp/tmp3u32qf43.d(94): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3u32qf43.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] ret\
    \ = new long[l.length];\n    for(int i = 0; i < l.length; ++i) {\n        ret[i]\
    \ = l[i];\n    }\n    Arrays.sort(ret);\n    return ret;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a tags=sorting,optimization,algorithm,big-o dscore=2 |>\nI took the code\
    \ of Elias Van Ootegem and wrote it in Java. The code is self-explanatory.\n<code>\n\
    public static long unique(long[] array) {\n    Set<Long> set = new HashSet<Long>();\n\
    \    Long[] ret = new Long[array.length];\n    for (int i = 0; i < array.length;\
    \ i++) {\n        set.add((long) array[i]);\n        ret[i] = set.size() - 1;\n\
    \    }\n    Arrays.sort(ret);\n    return ret[array.length-1];\n}\n</code>\n<|/\
    \ a |>\n<| a dscore=2 |>\nI wrote a similar one in Python for the challenge. Worked\
    \ for me in O(nlogn) and O(n) time.\n<code>\ndef uniqueInOrder(arr):\n    seen\
    \ = set()\n    unique = []\n    i = 0\n    while i < len(arr):\n        if arr[i]\
    \ in seen:\n            unique.append(arr[i])\n        else:\n            seen.add(arr[i])\n\
    \        i += 1\n    unique.reverse()\n    return unique\n</code>\n<|/ a tags=sorting,optimization,algorithm,big-o\
    \ |>\n<| a tags=sorting,optimization,algorithm,big-o dscore=2 |>\nI wrote a solution\
    \ in Java which runs in O(nlogn) time for an array of size upto 10^7.\n<code>\n\
    import java.util.Arrays;\nimport java.util.List;\nimport java.util.concurrent.TimeUnit;\n\
    import java.util.stream.Collectors;\nimport java.util.stream.IntStream;\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0pxs87wp.d(18): Error: declaration expected, not `<`

    /tmp/tmp0pxs87wp.d(26): Error: declaration expected, not `for`

    /tmp/tmp0pxs87wp.d(26): Error: no identifier for declarator `i`

    /tmp/tmp0pxs87wp.d(26): Error: declaration expected, not `<`

    /tmp/tmp0pxs87wp.d(26): Error: no identifier for declarator `i`

    /tmp/tmp0pxs87wp.d(26): Error: declaration expected, not `++`

    /tmp/tmp0pxs87wp.d(28): Error: no identifier for declarator `ret[i]`

    /tmp/tmp0pxs87wp.d(28): Error: declaration expected, not `=`

    /tmp/tmp0pxs87wp.d(29): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0pxs87wp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t// This could\
    \ have been made faster with some trickery with bit operations.\n\t// But this\
    \ seems simpler, and should probably be fast.\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] out =\
    \ new long[l.length];\n\tint[] count = new int[l.length];\n\t\n\tfor (int i =\
    \ 0; i < l.length; i++)\n\t{\n\t\tcount[l[i]]++;\n\t}\n\t\n\tfor (int i = 0; i\
    \ < l.length; i++)\n\t{\n\t\tif (count[l[i]] == 1)\n\t\t{\n\t\t\tout[l[i]] = l[i];\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tfor (int j = i+1; j < l.length; j++)\n\t\t\t{\n\t\
    \t\t\tif (l[i] != l[j])\n\t\t\t\t{\n\t\t\t\t\tif (count[l[j]] > 1) count[l[j]]\
    \ -= 1; else i--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn out;\n}\n/*\n\
    Return array of unique elements in an array\n\t>>> unique(array.array('L', [5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]))\n\tarray('L', [0L, 2L, 3L, 5L, 9L, 123L])\n\
    */\npublic static native long[] unique(long []l) /*-{\n\tvar out = new long[l.length];\n\
    \tvar count = new int[l.length];\n\tfor (var i=0; i < l.length; i++)\n\t\tcount[l[i]]++;\n\
    \t\n\tfor (var i=0; i < l.length; i++)\n\t{\n\t\tif (count[l[i]] == 1)\n\t\t\t\
    out[l[i]] = l[i];\n\t\telse\n\t\t{\n\t\t\tfor (var j = i+1; j < l.length; j++)\n\
    \t\t\t{\n\t\t\t\tif (l[i] != l[j])\n\t\t\t\t{\n\t\t\t\t\tif (count[l[j]] > 1)\
    \ count[l[j]] -= 1; else i--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n\
    }-*/;\n/*\nReturn array of unique elements in an array\n\t>>> unique(array.array('L',\
    \ [5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]))\n\tarray('L', [0L, 2L, 3L, 5L, 9L,\
    \ 123L])\n*/\npublic static native long[] unique(long[] l) /*-{\n\tvar out = new\
    \ long[l.length];\n\tvar count = new int[l.length];\n\tfor (var i=0; i < l.length;\
    \ i++)\n\t\tcount[l[i]]++;\n\t\n\tfor (var i=0; i < l.length; i++)\n\t{\n\t\t\
    if (count[l[i]] == 1)\n\t\t\tout[l[i]] = l[i];\n\t\telse\n\t\t{\n\t\t\tfor (var\
    \ j = i+1; j < l.length; j++)\n\t\t\t{\n\t\t\t\tif (l[i] != l[j])\n\t\t\t\t{\n\
    \t\t\t\t\tif (count[l[j]] > 1) count[l[j]] -= 1; else i--;\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn out;\n}-*/;\n/*\nReturn sorted unique elements in an array\n\
    \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj5zsjbtv.d(11): Error: no identifier for declarator `long[]`

    /tmp/tmpj5zsjbtv.d(11): Error: found `out` instead of statement

    /tmp/tmpj5zsjbtv.d(23): Error: found `out` instead of statement

    /tmp/tmpj5zsjbtv.d(37): Error: expression expected, not `out`

    /tmp/tmpj5zsjbtv.d(44): Error: no identifier for declarator `native`

    /tmp/tmpj5zsjbtv.d(72): Error: no identifier for declarator `native`

    /tmp/tmpj5zsjbtv.d(95): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj5zsjbtv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long counts[],\
    \ lc[1024], i, j, count;\n    long x;\n    \n    if (l==null) return null;\n \
    \   \n    x = l[0];\n    \n    for (i = 1; i < l.length; i++)\n    {\n\tx = std.math.min(x,\
    \ l[i]);\n    }\n    \n    counts[0] = 1;\n    \n    for (i = 1; i < l.length;\
    \ i++)\n    {\n\tfor (count = 1 ; count < counts.length; count++)\n\t{\n\t   \
    \ if (counts[count] <= l[i] - x)\n\t\tbreak;\n\t    else\n\t\tcounts[count]++;\n\
    \t}\n\tif (count < counts.length)\n\t    counts[count]++;\n\t\n\tfor (j=0; j<counts.length;\
    \ j++)\n\t    lc[counts[j]] = l[i];\n    }\n    \n    for (j=0; j<counts.length;\
    \ j++)\n\tlc[counts[j]] = x;\n    \n    long[] res = new long[counts.length];\n\
    \    \n    for (i=0; i<res.length; i++)\n    {\n\tres[i] = lc[counts[i]];\n  \
    \  }\n    \n    return res;\n}\n/*\nReturn unique elements in an array\n    >>>\
    \ unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n\
    \    \n*/\nlong[] unique(long[] l, long eq) {\n    long counts[], lc[1024], i,\
    \ j, count;\n    long x;\n    \n    if (l==null) return null;\n    \n    x = l[0];\n\
    \    \n    for (i = 1; i < l.length; i++)\n    {\n\tx = std.math.min(x, l[i]);\n\
    \    }\n    \n    counts[0] = 1;\n    \n    for (i = 1; i < l.length; i++)\n \
    \   {\n\tfor (count = 1 ; count < counts.length; count++)\n\t{\n\t    if (counts[count]\
    \ <= l[i] - x && eq(x, l[i] - x))\n\t\tbreak;\n\t    else\n\t\tcounts[count]++;\n\
    \t}\n\tif (count < counts.length)\n\t    counts[count]++;\n\t\n\tfor (j=0; j<counts.length;\
    \ j++)\n\t    lc[counts[j]] = l[i];\n    }\n    \n    for (j=0; j<counts.length;\
    \ j++)\n\tlc[counts[j]] = x;\n    \n    long[] res = new long[counts.length];\n\
    \    \n    for (i=0; i<res.length; i++)\n    {\n\tres[i] = lc[counts[i]];\n  \
    \  }\n    \n    return res;\n}\n/*\nReturn sorted unique elements in an array\n\
    \nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxbf594h3.d(11): Deprecation: instead of C-style syntax, use D-style
    syntax `long[] counts`

    /tmp/tmpxbf594h3.d(11): Error: multiple declarations must have the same type,
    not `long[]` and `long[1024]`

    /tmp/tmpxbf594h3.d(11): Deprecation: instead of C-style syntax, use D-style syntax
    `long[1024] lc`

    /tmp/tmpxbf594h3.d(11): Error: multiple declarations must have the same type,
    not `long[]` and `long`

    /tmp/tmpxbf594h3.d(11): Error: multiple declarations must have the same type,
    not `long[]` and `long`

    /tmp/tmpxbf594h3.d(11): Error: multiple declarations must have the same type,
    not `long[]` and `long`

    /tmp/tmpxbf594h3.d(60): Deprecation: instead of C-style syntax, use D-style syntax
    `long[] counts`

    /tmp/tmpxbf594h3.d(60): Error: multiple declarations must have the same type,
    not `long[]` and `long[1024]`

    /tmp/tmpxbf594h3.d(60): Deprecation: instead of C-style syntax, use D-style syntax
    `long[1024] lc`

    /tmp/tmpxbf594h3.d(60): Error: multiple declarations must have the same type,
    not `long[]` and `long`

    /tmp'
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long h = 1;\n\
    \    for(int i=0;i<l.size();i++) {\n        h += l[i];\n        if(h%2L==1L) {\n\
    \            long temp = h;\n            h = 1L;\n            while(temp != 1L)\
    \ {\n                h *= 2L;\n                temp /= 2L;\n            }\n  \
    \          h = l == null ? 0 : h;\n        }\n    }\n    if(l == null)\n     \
    \   return l;\n    long [] result = new long[(int)h.nextSetBit(h)+1];\n    for(int\
    \ i=0;i<l.size();i++)\n        result[i] = l[i];\n    return result;\n}\n/*\n\
    Return a sorted unique list in an array \n    >>> unique([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n    \n    \n*/\nlong[]\
    \ unique(long[] l, int fromIndex) \n{\n    int from = (int)((fromIndex < 0?fromIndex\
    \ + l.length : fromIndex) - 1);\n    long h = 1;\n    for(int i=from;i<l.size();i++)\
    \ {\n        h += l[i];\n        if(h%2L==1L) {\n            long temp = h;\n\
    \            h = 1L;\n            while(temp != 1L) {\n                h *= 2L;\n\
    \                temp /= 2L;\n            }\n            h = l == null ? 0 : h;\n\
    \        }\n    }\n    if(l == null)\n        return l;\n    long [] result =\
    \ new long[(int)h.nextSetBit(h)+1];\n    for(int i=from;i<l.size();i++)\n    \
    \    result[i] = l[i];\n    return result;\n}\n/*\nReturn a sorted unique list\
    \ in an array \n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n    \n    \n*/\nlong[] unique(long[] l, int from,\
    \ int to) \n{\n    int from = (int)((fromIndex < 0?fromIndex + l.length : fromIndex)\
    \ - 1);\n    int to = (int)((toIndex < 0?toIndex + l.length : toIndex) - 1);\n\
    \    long h = 1;\n    for(int i=from;i<to;i++) {\n        h += l[i];\n       \
    \ if(h%2L==1L) {\n            long temp = h;\n            h = 1L;\n          \
    \  while(temp != 1L) {\n                h *= 2L;\n                temp /= 2L;\n\
    \            }\n            h = l == \nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswq2w985.d(26): Error: C style cast illegal, use `cast(int)h.nextSetBit(h)`

    /tmp/tmpswq2w985.d(41): Error: C style cast illegal, use `cast(int)((fromIndex
    < 0 ? fromIndex + l.length : fromIndex) - 1)`

    /tmp/tmpswq2w985.d(57): Error: C style cast illegal, use `cast(int)h.nextSetBit(h)`

    /tmp/tmpswq2w985.d(72): Error: C style cast illegal, use `cast(int)((fromIndex
    < 0 ? fromIndex + l.length : fromIndex) - 1)`

    /tmp/tmpswq2w985.d(73): Error: C style cast illegal, use `cast(int)((toIndex <
    0 ? toIndex + l.length : toIndex) - 1)`

    /tmp/tmpswq2w985.d(85): Error: expression expected, not `unittest`

    /tmp/tmpswq2w985.d(86): Error: found `{` when expecting `;` following statement

    /tmp/tmpswq2w985.d(91): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpswq2w985.d(91): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswq2w985.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\nlong[] u;\nunittest\n\
    {\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L,\
    \ 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4vzpfa_z.d(12): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4vzpfa_z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] u;\n\t\
    u = new long[l.length];\n\tint[] noDupes = new int[l.length];\n\tfor (int i =\
    \ 0; i < l.length; i++)\n\t{\n\t\tif (!contains(u, l[i]))\n\t\t{\n\t\t\tu[l[i]]\
    \ = l[i];\n\t\t\tnoDupes[l[i]] = i;\n\t\t}\n\t}\n\treturn u;\n}\n/*\nReturn sorted\
    \ unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L,\
    \ 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l, long\
    \ equality) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\tint[] noDupes = new\
    \ int[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t{\n\t\tif (!contains(u,\
    \ l[i]))\n\t\t{\n\t\t\tu[l[i]] = l[i];\n\t\t\tnoDupes[l[i]] = i;\n\t\t}\n\t}\n\
    \tArrays.sort(u, new LongLongArrayCompare(equality));\n\treturn u;\n}\n/*\nReturn\
    \ sorted unique elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L,\
    \ 9L, 0L, 123L], std.math.longEquality)\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n\
    */\nlong[] unique(long[] l, int equality) \n{\n\tlong[] u;\n\tu = new long[l.length];\n\
    \tint[] noDupes = new int[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\
    {\n\t\tif (!contains(u, l[i]))\n\t\t{\n\t\t\tu[l[i]] = l[i];\n\t\t\tnoDupes[l[i]]\
    \ = i;\n\t\t}\n\t}\n\tArrays.sort(u, new LongArrayCompare(equality));\n\treturn\
    \ u;\n}\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L,\
    \ 5L, 2L, 3L, 3L, 9L, 0L, 123L], std.math.longEquality)\n    [0L, 2L, 3L, 5L,\
    \ 9L, 123L]\n    \n*/\nlong[] unique(long [] l, int equality) \n{\n\tlong[] u;\n\
    \tu = new long[l.length];\n\tint[] noDupes = new int[l.length];\n\tfor (int i\
    \ = 0; i < l.length; i++)\n\t{\n\t\tif (!contains(u, l[i]))\n\t\t{\n\t\t\tu[l[i]]\
    \ = l[i];\n\t\t\tnoDupes[\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp45trxozu.d(85): Error: expression expected, not `unittest`

    /tmp/tmp45trxozu.d(86): Error: found `{` when expecting `,`

    /tmp/tmp45trxozu.d(87): Error: expression expected, not `alias`

    /tmp/tmp45trxozu.d(87): Error: found `candidate` when expecting `,`

    /tmp/tmp45trxozu.d(87): Error: expression expected, not `=`

    /tmp/tmp45trxozu.d(87): Error: found `unique` when expecting `,`

    /tmp/tmp45trxozu.d(87): Error: expression expected, not `;`

    /tmp/tmp45trxozu.d(89): Error: found `assert` when expecting `,`

    /tmp/tmp45trxozu.d(89): Error: found `;` when expecting `,`

    /tmp/tmp45trxozu.d(90): Error: expression expected, not `}`

    /tmp/tmp45trxozu.d(91): Error: found `void` when expecting `,`

    /tmp/tmp45trxozu.d(91): Error: found `{` when expecting `,`

    /tmp/tmp45trxozu.d(91): Error: expression expected, not `}`

    /tmp/tmp45trxozu.d(91): Error: found `End of File` when expecting `,`

    /tmp/tmp45trxozu.d(91): Error: found `End of File` when expecting `]`

    /tmp/tmp45trxozu.d(91): Error: found `End of File` when expecting `;` fo'
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    // This function\
    \ sorts the array and removes duplicates, it can be replaced with `unique.sort(l)`\n\
    \    // \n    // But since array is small enough it might be better to sort it\
    \ first\n    // And then remove duplicates.\n    l.sort(null);\n    long[] a =\
    \ Arrays.copyOf(l,l.length);\n    long[] b = new long[a.length];\n    int j =\
    \ 0;\n    for(int i = 0; i < a.length; ++i)\n    {\n        if(a[i] != i) { b[j]\
    \ = a[i]; j ++; }\n    }\n    return Arrays.copyOf(b,j);\n}\n</code>\n<|/ a dscore=5\
    \ tags=arrays,c#,performance |>\n<| c |>\nThis solution is really good and easy\
    \ to understand - thanks!\n<|/ c |>\n<| c |>\nThis solution worked well for me\
    \ - it is the simplest and fastest solution in terms of efficiency. I am using\
    \ a list for my test data but the result is identical with an array after it has\
    \ been sorted. I am using it for my code now and it is a very simple solution\
    \ that works to an extent that I need it.\n<|/ c |>\n<| c |>\nThis is not thread\
    \ safe, if the array is concurrent\n<|/ c |>\n<| c |>\nFor arrays of size <=32\
    \ this solution is very fast. For arrays of size >32 it needs almost 3 seconds\
    \ for me on average.\n<|/ c |>\n<| a tags=arrays,c#,performance |>\nFor a static\
    \ array, it is very simple to write your own sorting algorithm.\nI see you already\
    \ know how to sort.  What you can do is write a function with a signature like\
    \ the following:\n<code>\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnujgvn5j.d(25): Error: declaration expected, not `<`

    /tmp/tmpnujgvn5j.d(47): Error: declaration expected, not `assert`

    /tmp/tmpnujgvn5j.d(48): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnujgvn5j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] l1;\n\
    \    long[] u;\n    int i;\n    int j;\n    int k;\n    k = l.length;\n    l1\
    \ = new long[k];\n    \n    u = new long[k];\n    \n    for(int i = 0; i < l.length;\
    \ i++) \n    {\n        for(j = 0; j < i; j++)\n        {\n            if(l[j]\
    \ == l[i])\n            {\n                break;\n            }\n        }\n\
    \        if(j != i)\n        {\n            l1[i] = l[i];\n        }\n    }\n\
    \    \n    for(int i = 0; i < k; i++)\n    {\n        j = i;\n        \n     \
    \   for(int j = 0; j < k; j++)\n        {\n            if(l1[j] == l1[i])\n  \
    \          {\n                j = j + 1;\n            }\n        }\n        \n\
    \        u[i] = l1[j];\n    }\n    \n    return u;\n}\n/*\nReturn sorted unique\
    \ elements in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n\
    \    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\ndouble[] unique(double[] l) \n{\n \
    \   double[] l1;\n    double[] u;\n    int i;\n    int j;\n    int k;\n    k =\
    \ l.length;\n    l1 = new double[k];\n    \n    u = new double[k];\n    \n   \
    \ for(int i = 0; i < l.length; i++) \n    {\n        for(j = 0; j < i; j++)\n\
    \        {\n            if(l[j] == l[i])\n            {\n                break;\n\
    \            }\n        }\n        if(j != i)\n        {\n            l1[i] =\
    \ l[i];\n        }\n    }\n    \n    for(int i = 0; i < k; i++)\n    {\n     \
    \   j = i;\n        \n        for(int j = 0; j < k; j++)\n        {\n        \
    \    if(l1[j] == l1[i])\n            {\n                j = j + 1;\n         \
    \   }\n        }\n        \n        u[i] = l1[j];\n    }\n    \n    return u;\n\
    }\n/*\nReturn sorted unique elements in an array\n    >>> unique([5L, 3L, 5L,\
    \ 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L, 2L, 3L, 5L, 9L, 123L]\n    \n*/\nfloat[]\
    \ unique(float[] l) \n{\n    float[] l1;\n    float[] u;\n    int i;\n    int\
    \ j;\n    int k;\n    k = l.length;\n    l1 = new float[k];\n    \n    u = new\
    \ float[k];\n    \n    for(int i = 0; i < l.length; i++) \n    {\n        for(j\
    \ = 0; j < i; j++)\n        {\n            if(l[j] == l[i])\n            {\n \
    \               break;\n            }\n\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpyiuqm09h.d(130): Error: found `unittest` instead of statement

    /tmp/tmpyiuqm09h.d(136): Error: found `End of File` when expecting `}` following
    compound statement

    /tmp/tmpyiuqm09h.d(136): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyiuqm09h.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164447
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long[] result\
    \ = new long[l.length];\n    Arrays.sort(l);\n    long last = l[0];\n    for(int\
    \ i = 1; i < l.length; i++)\n    {\n        if(l[i] == last)\n        {\n    \
    \        long old = l[i];\n            while(true)\n            {\n          \
    \      try\n                {\n                    result[i - 1]++;\n        \
    \        }\n                catch(ArrayIndexOutOfBoundsException e)\n        \
    \        {\n                    result[i-1] = old;\n                    break;\n\
    \                }\n            }\n        }\n        else\n        {\n      \
    \      last = l[i];\n            result[i] = l[i];\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaimpiylk.d(12): Error: undefined identifier `Arrays`

    /tmp/tmpaimpiylk.d(25): Error: undefined identifier `ArrayIndexOutOfBoundsException`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaimpiylk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] res =\
    \ new long[l.length];\n\tfor (int i = 0; i < l.length; i++)\n\t\tif (i == 0)\n\
    \t\t\tres[i] = l[i];\n\t\telse\n\t\t\tif (l[i] != l[i-1])\n\t\t\t\tres[i] = l[i];\n\
    \t\t\telse\n\t\t\t\tres[i] = l[i-1];\n\treturn res;\n}\n/* \n    Find all the\
    \ prime factors of an integer\n    >>> prime_factors(363)\n    [3, 9, 15]\n  \
    \  >>> prime_factors(150)\n    [3, 5]\n*/\nlong[] prime_factors(long i)\n{\n\t\
    long[] res = new long[1000000];\n\tlong j;\n\tbool isPrime;\n\tint k;\n\tfor (j\
    \ = 2; j <= i/2; j++) {\n\t\tisPrime = true;\n\t\tfor (k = 0; k < j; k++)\n\t\t\
    \tif (i%k == 0) {\n\t\t\t\tisPrime = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\tif (isPrime)\
    \ {\n\t\t\tres[j] = i;\n\t\t}\n\t}\n\treturn res;\n}\nunittest\n{\n    alias candidate\
    \ = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) ==\
    \ [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp36ta7g3a.d(52): unittest failure

    ----------------

    ??:? _d_unittestp [0x42851d]

    ??:? void tmp36ta7g3a.__unittest_L48_C1() [0x4281ec]

    ??:? void tmp36ta7g3a.__modtest() [0x42829c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42c5fb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42b48e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x430719]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430bc8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x4306a5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42b465]

    ??:? runModuleUnitTests [0x42c3d1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4289e0]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\tlong[] r;\n\t\
    size_t n = l.length;\n\tr = new long[n];\n\tsize_t i;\n\tfor(i=0; i<n; ++i)\n\t\
    {\n\t\tif(!contains(r, l[i]))\n\t\t\tr[insert(r, l[i])] = l[i];\n\t}\n\treturn\
    \ r;\n}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl1y4fe5j.d(17): Error: undefined identifier `contains`

    /tmp/tmpl1y4fe5j.d(18): Error: undefined identifier `insert`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl1y4fe5j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    long h;\n\
    \    h = std.math.max(l[0]);\n    int n = 0;\n    for (long i: l)\n    {\n   \
    \     if (i != h)\n        {\n            n++;\n            h = i;\n        }\n\
    \    }\n    long[] r;\n    r = new long[n];\n    n = 0;\n    for (long i: l)\n\
    \    {\n        if (i == h)\n        {\n            r[n++] = h;\n            h\
    \ = i;\n        }\n        else\n        {\n            r[n++] = i;\n        }\n\
    \    }\n    return r;\n}\n</code>\n<|/ a dscore=0 tags=arrays,sorting,algorithm\
    \ |>\n<| a tags=arrays,sorting,algorithm |>\nHere is one way to approach this\
    \ problem.\n<code>\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0m3a37fw.d(14): Error: semicolon expected, not `:`

    /tmp/tmp0m3a37fw.d(14): Error: expression expected, not `:`

    /tmp/tmp0m3a37fw.d(14): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmp0m3a37fw.d(25): Error: semicolon expected, not `:`

    /tmp/tmp0m3a37fw.d(25): Error: expression expected, not `:`

    /tmp/tmp0m3a37fw.d(25): Error: found `l` when expecting `;` following `for` condition

    /tmp/tmp0m3a37fw.d(39): Error: declaration expected, not `<`

    /tmp/tmp0m3a37fw.d(48): Error: declaration expected, not `assert`

    /tmp/tmp0m3a37fw.d(49): Error: unrecognized declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0m3a37fw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n\t\n\tArrays.sort(l);\n\
    \tlong[] result = new long[l.length];\n\tint j = 0;\n\tfor(int i = 0; i < l.length;\
    \ ++i)\n\t{\n\t\tif(l[i] != l[j])\n\t\t{\n\t\t\tresult[j] = l[i];\n\t\t\t++j;\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3_86hnsd.d(12): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3_86hnsd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n  var ans = new\
    \ long[l.length];\n  for (int i = 0; i < l.length; ++i)\n    ans[i] = l[i];\n\
    \  Arrays.sort(ans);\n  return ans;\n}\nunittest\n{\n    alias candidate = unique;\n\
    \n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_bl33bhu.d(11): Error: undefined identifier `var`

    /tmp/tmp_bl33bhu.d(14): Error: undefined identifier `Arrays`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_bl33bhu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    int size =\
    \ l.length;\n    long[] u = new long[size];\n    for(int i = 0; i < size; i++)\
    \ u[i] = l[i];\n    Arrays.sort(u);\n    return u;\n}\n</code>\n<|/ a dscore=4\
    \ tags=java,duplicates,arrays,algorithm |>\n<| c |>\nThe Java equivalent of `std::unique`\
    \ is `Arrays.sort`.\n<|/ c |>\n<| c |>\nThat is not the equivalent of std::unique,\
    \ is it?\n<|/ c |>\n<| a tags=java,duplicates,arrays,algorithm dscore=3 |>\nAn\
    \ alternative to the other solutions listed is to use the HashSet and implement\
    \ it like so:\n<code>\npublic static int[] findDuplicates(int[] a) {\n    Set<Integer>\
    \ set = new HashSet<>();\n    for(int i : a)\n        if (!set.contains(i))\n\
    \            set.add(i);\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L,\
    \ 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmcj1dmrd.d(17): Error: declaration expected, not `<`

    /tmp/tmpmcj1dmrd.d(30): Error: declaration expected, not `for`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmcj1dmrd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\nReturn sorted unique elements\
    \ in an array\n    >>> unique([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L])\n    [0L,\
    \ 2L, 3L, 5L, 9L, 123L]\n    \n*/\nlong[] unique(long[] l) \n{\n    List ls =\
    \ toList( l);\n    List res = new List();\n    foreach( long l in ls)\n    {\n\
    \        if( !res.contains( l))\n        {\n            res.add( l);\n       \
    \ }\n    }\n    return toList( res);\n}\n</code>\n<|/ a |>\n<| c |>\nThat is very\
    \ nice, I like how you use functional concepts instead of imperative ones.\n<|/\
    \ c |>\n<| a dscore=0 tags=algorithm,arrays,duplicates,collections,c# |>\n<code>\n\
    using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\
    using System.Threading.Tasks;\nunittest\n{\n    alias candidate = unique;\n\n\
    \    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L,\
    \ 5L, 9L, 123L]);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd3amlagl.d(13): Error: found `in` when expecting `;`

    /tmp/tmpd3amlagl.d(22): Error: declaration expected, not `<`

    /tmp/tmpd3amlagl.d(30): Error: semicolon expected, not `.`

    /tmp/tmpd3amlagl.d(30): Error: no identifier for declarator `.Collections.Generic`

    /tmp/tmpd3amlagl.d(31): Error: semicolon expected, not `.`

    /tmp/tmpd3amlagl.d(31): Error: no identifier for declarator `.Linq`

    /tmp/tmpd3amlagl.d(32): Error: semicolon expected, not `.`

    /tmp/tmpd3amlagl.d(32): Error: no identifier for declarator `.Text`

    /tmp/tmpd3amlagl.d(33): Error: semicolon expected, not `.`

    /tmp/tmpd3amlagl.d(33): Error: no identifier for declarator `.Threading.Tasks`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd3amlagl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164448

language: d
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x+y+z) == std.int(x + y + z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvpwdsl3o.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpvpwdsl3o.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvpwdsl3o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x), std.int(y), std.int(z)) ==\
    \ std.int((x+y+z)));\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n \
    \   assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpscpxp855.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpscpxp855.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpscpxp855.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpscpxp855.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpscpxp855.d(30): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpscpxp855.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return bool(x < y + z && y < x + z && x < z +\
    \ y); \n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcxmz7ak8.d(28): Error: found \''(\'' when expecting \''.\''
    following bool\n/tmp/tmpcxmz7ak8.d(28): Error: found \'')\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcxmz7ak8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    float a, b, c, d;\n    // Write your code here\n\
    \    if ( x < y )\n        a = x;\n    else\n        a = y;\n    if ( y < z )\n\
    \        b = y;\n    else\n        b = z;\n    if ( z < a )\n        c = z;\n\
    \    else\n        c = a;\n    if ( a < b )\n        d = a;\n    else\n      \
    \  d = b;\n    if ( b < c )\n        return ( b + c + d ) < ( a + b + c );\n \
    \   else\n        return ( a + b + c ) < ( a + b + c );\n    \n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfeejrqek.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int a = (int)x;\n    int b = (int)y;\n    int\
    \ c = (int)z;\n    return a==b+c && b==a+c && c==a+b;\n}\n</code>\n<|/ a tags=c++,math,sum,integer,function\
    \ |>\n<| c |>\nThanks for the code. I tried implementing it in C++ but I'm getting\
    \ an error for float and int. I've also tried casting to (int) but I'm getting\
    \ an error saying \"expected expression\".  Any suggestions?\n<|/ c |>\n<| c |>\n\
    The cast is redundant and unnecessary. Simply assign the variables to a float.\
    \ You should also be careful with your parentheses. `return (a==b+c) && (b==a+c)\
    \ && (c==a+b);` should be sufficient\n<|/ c |>\n<| c |>\nIt would be more robust\
    \ to not depend on type coercion and to rely on a standard math function like\
    \ `std::abs`. It's not clear whether this is an acceptable course of action.\n\
    <|/ c |>\n<| c |>\n`abs` is `math.h` specific. It's not an acceptable course of\
    \ action unless you have a `using namespace std;` somewhere that pulls in `math.h`\
    \ before this program runs.\n<|/ c |>\n<| c |>\n: Good call. I've adjusted the\
    \ example to be more robust to bad input. Thanks!\n<|/ c |>\n<| a tags=c++,math,sum,integer,function\
    \ |>\n<code>\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo6s7b7q9.d(28): Error: C style cast illegal, use cast(int)x\n/tmp/tmpo6s7b7q9.d(29):
    Error: C style cast illegal, use cast(int)y\n/tmp/tmpo6s7b7q9.d(30): Error: C
    style cast illegal, use cast(int)z\n/tmp/tmpo6s7b7q9.d(33): Error: Declaration
    expected, not \''<\''\n/tmp/tmpo6s7b7q9.d(36): Error: unterminated character constant\n/tmp/tmpo6s7b7q9.d(36):
    Error: unterminated character constant\n/tmp/tmpo6s7b7q9.d(36): Error: unterminated
    character constant\n/tmp/tmpo6s7b7q9.d(42): Error: unterminated character constant\n/tmp/tmpo6s7b7q9.d(45):
    Error: unterminated character constant\n/tmp/tmpo6s7b7q9.d(48): Error: unterminated
    character constant\n/tmp/tmpo6s7b7q9.d(56): Error: Declaration expected, not \''assert\''\n/tmp/tmpo6s7b7q9.d(57):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpo6s7b7q9.d(58): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpo6s7b7q9.d(59): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpo6s7b7q9.d(60): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpo6s7b7q9.d(61): Error: Declaration expected, not \''assert\''\n/tmp/tmpo6s7b7q9.d(62):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpo6s7b7q9.d(63): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpo6s7b7q9.d(64): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpo6s7b7q9.d(65): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpo6s7b7q9.d(66): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo6s7b7q9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n  // Your code here\n  if(std.typecons.integer(x)\
    \ && std.typecons.integer(y) \n    && std.typecons.integer(z) \n    && std.typecons.integer(x\
    \ + y) \n    && std.typecons.integer(x + z) \n    && std.typecons.integer(y +\
    \ z))\n    return true;\n  return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv996x7p5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return !std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z) && std.typecons.isinteger(x) && std.typecons.isinteger(y)\
    \ && std.typecons.isinteger(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmjb0pub8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif ( ((x == x+y) && (y == y+z) && (x == x+z)) ||\
    \ ((x == x-y) && (y == y-z) && (x == x-z)) )\n\t\treturn true;\n\telse\n\t\treturn\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtnp2txf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.typecons.any_int(x, y, z);\n}\n/*\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplucdz_bf.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmplucdz_bf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif (x == y)\n\t{\n\t\tif (x == z)\n\t\t{\n\t\t\t\
    return true;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n\telse\n\t{\n\t\tif (y\
    \ < z)\n\t\t\treturn false;\n\t\telse\n\t\t\treturn any_int(x, y, z);\n\t}\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzqcn0xnj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    bool result = false;\n    if (!std.isInt(x) ||\
    \ !std.isInt(y) || !std.isInt(z)) \n    { \n        return false; \n    } \n \
    \   int a = std.int(x), b = std.int(y), c = std.int(z); \n    result = !((a ==\
    \ b) || (a == c) || (b == c)); \n    return !result;\n} \nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptl367x_f.d(33): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmptl367x_f.d(33): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmptl367x_f.d(33): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptl367x_f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return std.math.isnum(x) && std.math.isnum(y)\
    \ && std.math.isnum(z) && std.math.isnum(x+y) && std.math.isnum(x+z) && std.math.isnum(y+z)\
    \ && x+y+z == std.math.toint(x+y+z); \n} \nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvf3vj23e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == x + y && y == y + z && x == x + z) \n\
    \    {\n        return true;\n    }\n    return false;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa6acoeiu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int sum = x + y + z;\n    float temp = (float)sum;\n\
    \    int temp2 = (int)temp;\n    return temp2 == sum;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp357hrs9b.d(29): Error: C style cast illegal, use cast(float)sum\n/tmp/tmp357hrs9b.d(30):
    Error: C style cast illegal, use cast(int)temp\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp357hrs9b.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x==y || x==z) return true;\n    else return\
    \ false;\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1ye8ev9s.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp1ye8ev9s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if (x < y && x\
    \ < z) result = true;\n    else if (y < x && y < z) result = true;\n    else result\
    \ = true;\n    \n    return result;\n}\n/*\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5ko1y6qy.d(36): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp5ko1y6qy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ((x == x && y == y) || (x == x && z == z) ||\
    \ (y == y && z == z))\n    {\n        return true;\n    }\n    return false;\n\
    }\n</code>\n<|/ a tags=c++,c |>\n<| a |>\nOne problem with your code is that your\
    \ any_int function takes three floats as parameters and you compare them against\
    \ a float.  You should use an int for x and y and z.\n<|/ a dscore=2 tags=c++,c\
    \ |>\n<| c |>\nNot the main reason though, just an observation not directly related\
    \ to the question.\n<|/ c |>\n<| c |>\nThis is true. I didn't notice that.\n<|/\
    \ c |>\n<| a tags=c++,c |>\nYou shouldn't use float variables for comparison -\
    \ use int variables instead.\n<|/ a dscore=2 |>\n<| a |>\nThis looks like homework,\
    \ so I'll give hints:\nThe == operator in C and C++ does not do what you seem\
    \ to think it does. It compares the two operands using the == operator of their\
    \ type. Since you are trying to compare the floating point values of the variables\
    \ (as if they were doubles), you cannot use the == operator. Instead, you should\
    \ use fabsf() from <math.h>.\nThe function fabsf() will return the absolute value\
    \ of the floating-point number you're trying to compare to. Here's how you can\
    \ use it:\n<code>\n#include <math.h>\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxdfp7ku2.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmpxdfp7ku2.d(43):
    Error: unterminated character constant\n/tmp/tmpxdfp7ku2.d(46): Error: unterminated
    character constant\n/tmp/tmpxdfp7ku2.d(49): Error: unterminated character constant\n/tmp/tmpxdfp7ku2.d(51):
    Error: unterminated character constant\n/tmp/tmpxdfp7ku2.d(51): Error: unterminated
    character constant\n/tmp/tmpxdfp7ku2.d(58): Error: Declaration expected, not \''assert\''\n/tmp/tmpxdfp7ku2.d(59):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpxdfp7ku2.d(60): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpxdfp7ku2.d(61): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpxdfp7ku2.d(62): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpxdfp7ku2.d(63): Error: Declaration expected, not \''assert\''\n/tmp/tmpxdfp7ku2.d(64):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpxdfp7ku2.d(65): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpxdfp7ku2.d(66): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpxdfp7ku2.d(67): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpxdfp7ku2.d(68): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxdfp7ku2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return any_int(x,y,z);\n}\n/*\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0_sahvdv.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0_sahvdv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n  if (x != 0.0f || y != 0.0f || z != 0.0f)\n    return\
    \ fmod(x - z - y, x) == 0.0f || fmod(y - z - x, y) == 0.0f || fmod(z - x - y,\
    \ z) == 0.0f;\n  else \n    return x == y || x == z || y == z;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpztykb3xa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (x == y + z);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp42fnl9r0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return x != z && y != z && x == y + z;\n}\n/*\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk1bt5n0t.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpk1bt5n0t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    \n    if(std.is_same_type(std.int_t, x))\n   \
    \ {\n        if(std.is_same_type(std.int_t, y))\n        {\n            if(std.is_same_type(std.int_t,\
    \ z))\n            {\n                if(((x+y+z) == (x*y+z)) || ((x-y-z) == (x*y-z)))\n\
    \                {\n                    return true;\n                }\n    \
    \        }\n        }\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcz6o1u3i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x < 0 || x > 100 || y < 0 || y > 100 || z\
    \ < 0 || z > 100) return false;\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcprpd9gs.d(29): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcprpd9gs.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    \n    long long int intVal1 = (int) x;\n    long\
    \ long int intVal2 = (int) y;\n    long long int intVal3 = (int) z;\n    \n  \
    \  if (intVal1 == intVal2 && intVal2 == intVal3)\n    {\n        return true;\n\
    \    }\n    \n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprdczgyv.d(29): Error: no identifier for declarator long\n/tmp/tmpprdczgyv.d(29):
    Error: no identifier for declarator long\n/tmp/tmpprdczgyv.d(29): Error: C style
    cast illegal, use cast(int)x\n/tmp/tmpprdczgyv.d(30): Error: no identifier for
    declarator long\n/tmp/tmpprdczgyv.d(30): Error: no identifier for declarator long\n/tmp/tmpprdczgyv.d(30):
    Error: C style cast illegal, use cast(int)y\n/tmp/tmpprdczgyv.d(31): Error: no
    identifier for declarator long\n/tmp/tmpprdczgyv.d(31): Error: no identifier for
    declarator long\n/tmp/tmpprdczgyv.d(31): Error: C style cast illegal, use cast(int)z\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpprdczgyv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    bool result = false; \n    int sum = fmax(fabs(x),\
    \ fabs(y)) + (x == 0 ? 0 : fabs(x)) + fabs(y); \n    if (z != 0 && z != sum) {\
    \ \n        float zabs = fabs(z); \n        result = fmax(zabs - (z == 0 ? 0 :\
    \ zabs), zabs - sum) > 0; \n    } \n    return result; \n} \nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmg6mtgwn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(std.isOfType<float>(x) && std.isOfType<float>(y)\
    \ && std.isOfType<float>(z)) {\n        return std.intFloor(std.round(x, std.intBitsToFloat(y),\
    \ std.intBitsToFloat(z))) == x + y + z;\n    }\n    else {\n        return false;\n\
    \    }\n}\n'''\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9qqmk045.d(28): Error: found \''>\'' when expecting \''.\''
    following float\n/tmp/tmp9qqmk045.d(28): Error: found \''(\'' when expecting identifier
    following \''float.\''\n/tmp/tmp9qqmk045.d(28): Error: found \''x\'' when expecting
    \'')\''\n/tmp/tmp9qqmk045.d(28): Error: found \'')\'' instead of statement\n/tmp/tmp9qqmk045.d(31):
    Error: Declaration expected, not \''else\''\n/tmp/tmp9qqmk045.d(33): Error: unrecognized
    declaration\n/tmp/tmp9qqmk045.d(35): Error: unterminated character constant\n/tmp/tmp9qqmk045.d(35):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp9qqmk045.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math._any_int(x, y, z);\n}\n/*\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8zuhze0g.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp8zuhze0g.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n  return std.math.equal_to(x, std.math.add(y, z));\n\
    }\n\"\"\")\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaxv_4bme.d(30): Error: Declaration expected, not \''""\''\n/tmp/tmpaxv_4bme.d(30):
    Error: unterminated string constant starting at /tmp/tmpaxv_4bme.d(30)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxv_4bme.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\t// TODO: Not sure what the correct return type should\
    \ be here.\n\tfloat4 a = _float4(x,y,z,1);\n\tfloat4 b = _float4(_float4(x,y,z,1)\
    \ + _float4(x, y, z, 1), x, y, z, _float4(1, 0, 0, 0));\n\tfloat4 c = -a;\n\t\
    float4 d = _float4(x, y, _float4(x, y, z), 1);\n\treturn (((_float4(_float4(_float4(_float4(x,\
    \ y, z, 0) + a) + b) + c) + d) != _float4(0,0,0,0)));\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1j9oohnq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int xx = int(x + x + x);\n    int yy = int(y +\
    \ y + y);\n    int zz = int(z + z + z);\n    return (xx + yy + zz) == int(x +\
    \ y + z);\n}\n\"\"\")\n</cell>\n<text>\nis_integer\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiwlrhq9v.d(28): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpiwlrhq9v.d(28): Error: semicolon expected, not \'')\''\n/tmp/tmpiwlrhq9v.d(28):
    Error: found \'')\'' instead of statement\n/tmp/tmpiwlrhq9v.d(29): Error: found
    \''(\'' when expecting \''.\'' following int\n/tmp/tmpiwlrhq9v.d(29): Error: semicolon
    expected, not \'')\''\n/tmp/tmpiwlrhq9v.d(29): Error: found \'')\'' instead of
    statement\n/tmp/tmpiwlrhq9v.d(30): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpiwlrhq9v.d(30): Error: semicolon expected, not \'')\''\n/tmp/tmpiwlrhq9v.d(30):
    Error: found \'')\'' instead of statement\n/tmp/tmpiwlrhq9v.d(31): Error: found
    \''(\'' when expecting \''.\'' following int\n/tmp/tmpiwlrhq9v.d(31): Error: found
    \'')\'' when expecting \'';\'' following return statement\n/tmp/tmpiwlrhq9v.d(33):
    Error: Declaration expected, not \''""\''\n/tmp/tmpiwlrhq9v.d(33): Error: unterminated
    string constant starting at /tmp/tmpiwlrhq9v.d(33)\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpiwlrhq9v.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(!isint(x) || !isint(y) || !isint(z) || !isint(x\
    \ + y) || !isint(x + z) || !isint(y + z) || !isint(x - y) || !isint(x - z) ||\
    \ !isint(y - z))\n        return false;\n    \n    return true;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp983hx77y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return (\n        (std.typecons.is_int(x) &&\
    \ std.typecons.is_int(y) && std.typecons.is_int(z)) ||\n        (std.typecons.is_int(x)\
    \ && std.typecons.is_int(y) && std.typecons.is_int(z)) ||\n        (std.typecons.is_int(y)\
    \ && std.typecons.is_int(z) && std.typecons.is_int(x)) ||\n        (std.typecons.is_int(y)\
    \ && std.typecons.is_int(z) && std.typecons.is_int(x)) ||\n        (std.typecons.is_int(z)\
    \ && std.typecons.is_int(x) && std.typecons.is_int(y))\n    );\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplmfontmj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( is_int(x) && is_int(y) && is_int(z) ) \n\
    \    { \n        return ( x == x + y && z == x + z ); \n    } \n    else\n   \
    \ { \n        return false;\n    } \n} \n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This is an interesting solution - I might consider using it for another part of\
    \ my program. My problem is that the problem is as far as I can see slightly more\
    \ complex than I have shown, so a solution might not always be a good one.\n<|/\
    \ c |>\n<| a tags=c++,int,double |>\nThe above solutions seem to work, however\
    \ I ended up using a slightly different method of achieving the same result. I\
    \ will post my solution for the sake of completeness. \nI used a solution similar\
    \ to that posted here: \nc++ check if all numbers in a list are integers\nI made\
    \ one modification in my solution - I added a variable that would hold a count\
    \ of the number of non-decimal digits. I then used an if statement that would\
    \ check whether the number of non-decimal digits was equal to the number of digits\
    \ in the number. I added the if statement under every if statement. The variable\
    \ that held the number of non-decimal digits is called nnondp. The code that follows\
    \ is the modified if statement. \n<code>\nif ( is_int(x) && is_int(y) && is_int(z)\
    \ ) \n{ \n    // check if all numbers are integers \n    if ( (x == x + y) &&\
    \ z == x + z ) \n    { \n        // check whether there are enough non-decimal\
    \ digits \n        if ( nnondp == std::to_string(x).size() \n            && nnondp\
    \ == std::to_string(x).size() ) \n        { \n            // check if all digits\
    \ in the number are integers \n            if ( is_int(std::atof(std::to_string(x))\
    \ && is_int(std::to_string(x)) && is_int(std::to_string(x)) ) \n            )\
    \ \n            { \n                return true; \n            } \n        } \n\
    \    } \n} \n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\nYou can do it with\
    \ template like this:\n<code>\ntemplate<class T> bool areAllIntegersInRange(const\
    \ T& firstValue, const T& lastValue)\n{\n   T firstHalf = firstValue / 2;\n  \
    \ T lastHalf = lastValue / 2;\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsgjmg1dc.d(37): Error: Declaration expected, not \''<\''\n/tmp/tmpsgjmg1dc.d(62):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgjmg1dc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif(x == y)\n\t\treturn true;\n\t\n\tif(x == z &&\
    \ y == z && x > 0)\n\t\treturn true;\n\t\n\treturn false;\n}\n//==============================================================================\n\
    //\t\t\t   Array Functions\n//==============================================================================\n\
    /*\n    \n    Return the smallest integer that is greater than or equal to x.\n\
    \    \n    Arguments\n    x\n    \n    Returns\n    int\n    \n    Example\n \
    \   \n    >>> smallest_int_greater_than(5)\n    5\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgfocadx9.d(39): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpgfocadx9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.conformance::is_integral_number(x)\
    \ && std.conformance::is_integral_number(y) && std.conformance::is_integral_number(z)\
    \ && std.conformance::is_integral_number(x + y) && std.conformance::is_integral_number(x\
    \ + z) && std.conformance::is_integral_number(y + z) && std.conformance::is_integral_number(x\
    \ + y + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjs6x5x8y.d(28): Error: found \'':\'' when expecting \'';\''
    following return statement\n/tmp/tmpjs6x5x8y.d(28): Error: found \'':\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjs6x5x8y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y)\n    {\n        if (y == z)\n    \
    \    {\n            return true;\n        }\n        else\n        {\n       \
    \     return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\n</code>\n<|/ a dscore=0 tags=c++,function,arrays |>\n<| a dscore=0\
    \ |>\nThe way I like to do this is with a function with a std::tuple parameter.\
    \ Something like this:\n<code>\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9cx81bp2.d(44): Error: Declaration expected, not \''<\''\n/tmp/tmp9cx81bp2.d(53):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp9cx81bp2.d(54): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp9cx81bp2.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9cx81bp2.d(56): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9cx81bp2.d(57): Error: Declaration expected, not \''assert\''\n/tmp/tmp9cx81bp2.d(58):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp9cx81bp2.d(59): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp9cx81bp2.d(60): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp9cx81bp2.d(61): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp9cx81bp2.d(62): Error: Declaration expected, not \''assert\''\n/tmp/tmp9cx81bp2.d(63):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9cx81bp2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool any = (x || y) || z;\n    \n    if(!any)\n\
    \        return false;\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3e4s62bj.d(32): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3e4s62bj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return ((x == x + y) || (x == y - z) || (x ==\
    \ z - y)) && \n           ((x == x + z) || (x == y - z) || (x == z + y)) && \n\
    \           ((y == x + z) || (y == y - z) || (y == z + x)) && \n           ((z\
    \ == x + y) || (z == y - x) || (z == y - x));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0f8phps.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ((x==y&&x==z&&x!=0) || (y==x&&y==z&&y!=0) ||\
    \ (z==x&&z==y&&z!=0) || (x==0&&y==0&&z==0) && (x!=y!=z!=0) )\n        return true;\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpm1eeswxy.d(28): Error: found \''!=\'' when expecting \'')\''\n/tmp/tmpm1eeswxy.d(28):
    Error: found \''z\'' when expecting \'')\''\n/tmp/tmpm1eeswxy.d(28): Error: found
    \''!=\'' instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1eeswxy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool equal = true;\n    equal = equal && (x ==\
    \ std.math.add(x,y,z));\n    return equal;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgg3avrwn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn ((x == x + y) && \n\t\t(y == y + z) &&\n\t\
    \t(z == z));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp28s6uzq_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n  // Your code goes here\n  return (floor(x) == floor(x)\
    \ + floor(y) + floor(z));\n}\n// End of any_int\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfjsbkp0t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return x != y && x != z && y != z;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw8rw4rnp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInInt(x) && std.math.isInInt(y)\
    \ && std.math.isInInt(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe0a7bwby.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n  return x==y+z && x==std.int::ceil(x) && x==std.int::ceil(y)\
    \ && x==std.int::ceil(z); \n} \nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpf463vto9.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpf463vto9.d(28): Error: found \'':\'' when expecting \'';\''
    following return statement\n/tmp/tmpf463vto9.d(28): Error: found \'':\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf463vto9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x+y==z) && (x+y<z) && (x+y>y));\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4qmt2u3w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    if ( is_int(x) && is_int(y) && is_int(z) && x\
    \ >= 0 && y >= 0 && z >= 0 &&\n         x != y && x != z && y != z && x == x +\
    \ y && x == x - z && y == y - z) \n        return true; \n    else \n        return\
    \ false; \n} \nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt_vviy46.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (x || y) && \n        ((x ^ y) != 0 &&\
    \ (!x || !y)) && \n        (!x || !y || !z) &&\n        (y == x ? !y : x < y);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgtz_5xc4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x < y && x < z) return true;\n    else if\
    \ (x < z && y < z) return true;\n    else if (y < z) return true;\n    else return\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps47zf992.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif(!int(x) || !int(y) || !int(z)) return false;\n\
    \treturn (x == ((x + y) + z));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyn2k3ook.d(28): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpyn2k3ook.d(28): Error: found \''||\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyn2k3ook.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    if ( fabs(x) == fabs(y) && fabs(x) == fabs(z)\
    \ && fabs(x) <= 1 )\n    {\n        return true;\n    }\n    else\n    {\n   \
    \     return false;\n    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb4ce3s92.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x + y == z) && x.is_integer()) || ((x\
    \ - y == z) && x.is_integer()) || ((y - x == z) && x.is_integer()) || ((y - z\
    \ == x) && x.is_integer()) || ((y - z == y) && x.is_integer()) || ((y - z == z)\
    \ && x.is_integer());\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpju09mm98.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \t\treturn true;\n\tbool x1 = std.typecons.isinteger(x);\n\tbool y1 = std.typecons.isinteger(y);\n\
    \tbool z1 = std.typecons.isinteger(z);\n\tif (x1 && y1 && z1)\n\t{\n\t\treturn\
    \ (x+y+z == x);\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk2fg2qre.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (( x == (x + y) ) && ( y == (x + z) ));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl49_w3p_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    long a = std.math.max(x,y);\n    long b = std.math.min(x,y);\n\
    \    long c = std.math.max(z, std.math.max(x, y));\n    long d = std.math.min(z,\
    \ std.math.min(x, y));\n    return std.math.isIntegral(a+b+c+d);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8soshof_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ((x % y == 0) && (y % z == 0) && (z % x ==\
    \ 0))\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\n/* Function Prototypes */\ndouble sum(double num1, double num2, double\
    \ num3);\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppwcjsqok.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n  return (x == std::fabs(y) + z);\n}\n/*\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7s56g7qq.d(28): Error: found \'':\'' when expecting \'')\''\n/tmp/tmp7s56g7qq.d(28):
    Error: found \'':\'' when expecting \'';\'' following return statement\n/tmp/tmp7s56g7qq.d(28):
    Error: found \'')\'' when expecting \'';\'' following statement\n/tmp/tmp7s56g7qq.d(30):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7s56g7qq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    if(x < y && x < z && x == y * z) return true;\
    \ \n    if(x < y && x < z && y == z * x) return true; \n    if(x < y && x < z\
    \ && z == x * y) return true; \n    if(x < y && y == z * x && z == x * y) return\
    \ true; \n    if(x < y && z == x * y && y == z * x) return true; \n    if(y ==\
    \ z * x && y == x * z && y == x * y) return true; \n    if(x == y * z && x ==\
    \ z * y && x == y * x) return true; \n    if(x == z * y && y == x * z && y ==\
    \ x * y) return true; \n    if(x == y * z && y == z * x && y == z * y) return\
    \ true; \n    if(x == z * y && z == x * y && z == x * x) return true; \n    if(x\
    \ == y * z && y == z * x && y == z * y) return true; \n    if(x == z * y && z\
    \ == x * x && y == z * y) return true; \n    if(x == y * z && y == z * y && y\
    \ == z * x) return true; \n    if(z == x * y && z == x * x && y == z * y) return\
    \ true; \n    if(y == x * z && y == x * y && y == z * x) return true; \n    if(y\
    \ == x * z && y == x * y && y == z * y) return true; \n    if(y == x * z && y\
    \ == x * y && y == z * x) return true; \n    if(y == z * x && y == z * y && y\
    \ == x * x) return true; \n    if(y == z * x && y == z * y && y == x * y) return\
    \ true; \n    if(y == z * x && y == z * y && y == x * z) return true; \n    if(y\
    \ == z * y && y == z * x && y == x * z) return true; \n    if(y == z * y && y\
    \ == z * x && y == x * y) return true; \n    if(y == z * y && y == z * x && y\
    \ == x * x) return true; \n    if(z == x * y && z == x * x && y == z * y) return\
    \ true; \n    if(z == x * y && z == x * x && y == z * x) return true; \n    if(z\
    \ == x * y && z == x * x && y == z * y) return true; \n    if(z == x * y && z\
    \ == x * x && y == z * x) return true; \n    if(z == x * y && z == x * y && y\
    \ == x * x) return true; \n    if(z == x * y && z == x * y \nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp21h587rr.d(57): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmp21h587rr.d(72):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp21h587rr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n  // TODO: Complete this function\n    return x >\
    \ y && x > z && y > z;\n}\nunittest\n{\n    alias candidate = any_int;\n\n   \
    \ assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk0z08pj2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(isint(x))\n        return any_int(y, z);\n\
    \    if(isint(y))\n        return any_int(x,z);\n    if(isint(z))\n        return\
    \ any_int(x,y);\n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmproo15u09.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isinteger(x) && std.math.isinteger(y)\
    \ && std.math.isinteger(z) \n        && (std.math.abs(x) == std.math.abs(y) &&\
    \ std.math.abs(x) == std.math.abs(z)) \n        && (std.math.toInt(x) == std.math.toInt(y)\
    \ && std.math.toInt(x) == std.math.toInt(z));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuwm872hz.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpuwm872hz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.typecons.is_int(std.math.fadd(x, y))\
    \ || std.typecons.is_int(std.math.fadd(z));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvmqs739f.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpvmqs739f.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x <  y) return true;\n    if ( y <  z) return\
    \ true;\n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsxolsbj0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif(((x*x + y*y + z*z) == (x+y+z)) || ((x*x + y*y)\
    \ == (x+y)) || ((x*x + z*z) == (x)) || ((y*y + z*z) == (y+z)) || ((x*x + y*y +\
    \ z*z) == (x+y+z)))\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\
    \t}\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4k1op9lp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || x == z) return true;\n    else return\
    \ false;\n}\n</cell>\n<cell>\n%simulate any_int\n</cell>\n<text>\nGreat! Now,\
    \ we can write our conditional expression:\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphgvmfhah.d(31): Error: Declaration expected, not \''<\''\n/tmp/tmphgvmfhah.d(41):
    Error: Declaration expected, not \''assert\''\n/tmp/tmphgvmfhah.d(42): Error:
    Declaration expected, not \''assert\''\n/tmp/tmphgvmfhah.d(43): Error: Declaration
    expected, not \''assert\''\n/tmp/tmphgvmfhah.d(44): Error: Declaration expected,
    not \''assert\''\n/tmp/tmphgvmfhah.d(45): Error: Declaration expected, not \''assert\''\n/tmp/tmphgvmfhah.d(46):
    Error: Declaration expected, not \''assert\''\n/tmp/tmphgvmfhah.d(47): Error:
    Declaration expected, not \''assert\''\n/tmp/tmphgvmfhah.d(48): Error: Declaration
    expected, not \''assert\''\n/tmp/tmphgvmfhah.d(49): Error: Declaration expected,
    not \''assert\''\n/tmp/tmphgvmfhah.d(50): Error: Declaration expected, not \''assert\''\n/tmp/tmphgvmfhah.d(51):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphgvmfhah.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.typecons.float2int(x.fsum() == y.fsum()\
    \ && x.fsum() == z.fsum()); \n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg_nrngue.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool a = std.typecons.is_int(x);\n    bool b =\
    \ std.typecons.is_int(y);\n    bool c = std.typecons.is_int(z);\n    return a\
    \ || b || c;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jd86y3o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if( x > y && y > z && x > 0)\n        return true;\n\
    \    return false;\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n   \
    \ assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeoyhikf3.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpeoyhikf3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn (std.math.abs(x-y) <= std.math.abs(x) &&\
    \ std.math.abs(x-y) <= std.math.abs(y) && std.math.abs(x-y) <= std.math.abs(z));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57m3nhcz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int x_int = int(x), y_int = int(x), z_int = int(x);\n\
    \    \n    if (x_int + y_int + z_int == x) \n    {\n        return true;\n   \
    \ }\n    else \n    {\n        return false;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprwkytgiz.d(28): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmprwkytgiz.d(28): Error: semicolon expected, not \'')\''\n/tmp/tmprwkytgiz.d(28):
    Error: found \'')\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmprwkytgiz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return is_int(x.toIntegral()) && is_int(y.toIntegral())\
    \ && is_int(z.toIntegral());\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ub_b_in.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool found=false;\n    if(x==(y+z)) found=true;\n\
    \    else if((x+y)==z) found=true;\n    else if(x==z) found=true;\n    return\
    \ found;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzuslxs6i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (!std.math.isint(x) && !std.math.isint(y)\
    \ && !std.math.isint(z)) return false;\n    return (x+y+z==x*y+y*z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_tu6ci72.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z))\n    {\n        float result = (x+y+z);\n       \
    \ if (std.math.isIntegral(result))\n        {\n            return true;\n    \
    \    }\n    }\n    return false;\n}\n////////////////////////////////////////////////////////////////////////////////////////\n\
    // Checks for any three integer numbers\n////////////////////////////////////////////////////////////////////////////////////////\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5cyssd3a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.abs(z - std.math.max(x, y)) <=\
    \ std.math.abs(z - std.math.min(x, y));\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmeulrrpc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(!std.isint(x) && !std.isint(y) && !std.isint(z))\
    \ {\n        return false;\n    }\n    \n    if(x == y || y == z || x == z) {\n\
    \        return true;\n    }\n    \n    float sum = (x + y + z)/3.f;\n    return\
    \ std.isint(sum);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqwfoqw7h.d(39): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpqwfoqw7h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x < y && y < z && z < x) return true;\n  \
    \  return false;\n}\n//#include <math.h>\n//#include <stdio.h>\n//#include <stdlib.h>\n\
    //#include <string.h>\n//#include <unistd.h>\n//#include <stdbool.h>\n//#include\
    \ <stdint.h>\n//#include <stdlib.h>\n//#include <string.h>\n//#include <unistd.h>\n\
    //#include <stdbool.h>\n//#include <stdint.h>\n//#include <stdlib.h>\n//#include\
    \ <string.h>\n//#include <unistd.h>\n//#include <stdbool.h>\n//#include <stdint.h>\n\
    //#include <stdlib.h>\n//#include <string.h>\n//#include <unistd.h>\n//#include\
    \ <stdbool.h>\n//#include <stdint.h>\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdm0wy9mu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tfloat sum=x+y+z;\n\treturn std.int.is_int(sum);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptnm8wgsx.d(29): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptnm8wgsx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    if ( x >= y && x >= z ) return true; \n    else\
    \ if ( y >= x && y >= z ) return true; \n    else if ( z >= x && z >= y ) return\
    \ true; \n    else return false; \n} \nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpia0g9cgo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (x == std::fadd(x, y) && y == std::fadd(x,\
    \ z) && z == std::fadd(y, z));\n}\n</code>\n<|/ a tags=c dscore=2 |>\n<| c |>\n\
    Thanks for the answer. Can you please explain the line `return (x == std::fadd(x,\
    \ y) && y == std::fadd(x, z) && z == std::fadd(y, z));` ? I am not able to understand\
    \ this line. Thanks.\n<|/ c |>\n<| c |>\nThe lines of code you posted are the\
    \ standard C language (ISO/IEC 9899:1999 \xA7 6.5 Expressions, \xB62 \u2014 \xB6\
    13). In C++ or C99, a standard header file declares some functions. In these declarations,\
    \ some functions are declared and defined in different ways. I suggest that you\
    \ look in the definitions of the functions in those header files to see how they\
    \ are defined.\n<|/ c |>\n<| c |>\nThanks for explaining. I think I got it now.\n\
    <|/ c |>\n<| a dscore=1 tags=c |>\nI used the answer from user3386109 to come\
    \ up with the following code:\n<code>\n#include <math.h>\n#include <stdio.h>\n\
    #include <stdint.h>\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt8znhuie.d(28): Error: found \'':\'' when expecting \'')\''\n/tmp/tmpt8znhuie.d(28):
    Error: found \'':\'' when expecting \'';\'' following return statement\n/tmp/tmpt8znhuie.d(28):
    Error: found \'':\'' when expecting \'';\'' following statement\n/tmp/tmpt8znhuie.d(28):
    Error: found \'':\'' instead of statement\n/tmp/tmpt8znhuie.d(30): Error: Declaration
    expected, not \''<\''\n/tmp/tmpt8znhuie.d(36): Error: unsupported char 0xa7\n/tmp/tmpt8znhuie.d(36):
    Error: unsupported char 0xb6\n/tmp/tmpt8znhuie.d(36): Error: unsupported char
    0x2014\n/tmp/tmpt8znhuie.d(36): Error: unsupported char 0xb6\n/tmp/tmpt8znhuie.d(51):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpt8znhuie.d(52): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpt8znhuie.d(53): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpt8znhuie.d(54): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpt8znhuie.d(55): Error: Declaration expected, not \''assert\''\n/tmp/tmpt8znhuie.d(56):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpt8znhuie.d(57): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpt8znhuie.d(58): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpt8znhuie.d(59): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpt8znhuie.d(60): Error: Declaration expected, not \''assert\''\n/tmp/tmpt8znhuie.d(61):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8znhuie.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n   return ((is_int(x) == is_int(y) && is_int(z))\
    \ || (is_int(x) == is_int(z) && is_int(y)) || (is_int(y) == is_int(z) && is_int(x)));\
    \ \n} \nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3reyuqdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n  // TODO: implement a solution here that checks all\
    \ three numbers\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo8bv8n2z.d(29): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo8bv8n2z.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(x < y && x < z) return true;\n    if(y < x\
    \ && y < z) return true;\n    if(z < x && z < y) return true;\n    return false;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqfq92en_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y + z && x == int(x) && y == int(y) &&\
    \ z == int(z)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n</code>\n<|/ a tags=c++,math dscore=0 |>\n<| c |>\nWhile this might\
    \ answer the question, you should [edit] your answer to include some explanation.\n\
    <|/ c |>\n<| a dscore=0 |>\nThe function you provided does not return the correct\
    \ result for inputs:\n<code>\nany_int(3.6, -2.2, 2L)\n</code>\nIt returns true\
    \ because 3L + 2.2L is 6.6L and int(6.6L) is 6.\n<|/ a tags=c++,math |>\n<| a\
    \ |>\nThis is an approach using bitwise AND and XOR operations:\n<code>\n#include\
    \ <bits/stdc++.h>\nusing namespace std;\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4y96ejoo.d(28): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp4y96ejoo.d(28): Error: found \''&&\'' instead of statement\n/tmp/tmp4y96ejoo.d(30):
    Error: Declaration expected, not \''else\''\n/tmp/tmp4y96ejoo.d(32): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4y96ejoo.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif (x.is_int() || y.is_int() || z.is_int())\n\t\t\
    return true;\n\tif (x.is_float() && y.is_float() && z.is_float())\n\t{\n\t\tfloat\
    \ xi = x.to<float>();\n\t\tfloat yi = y.to<float>();\n\t\tfloat zi = z.to<float>();\n\
    \t\tif (xi == yi + zi)\n\t\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6b6vhxxy.d(32): Error: found \''>\'' when expecting \''.\''
    following float\n/tmp/tmp6b6vhxxy.d(32): Error: found \''(\'' when expecting identifier
    following \''float.\''\n/tmp/tmp6b6vhxxy.d(32): Error: semicolon expected, not
    \'')\''\n/tmp/tmp6b6vhxxy.d(32): Error: found \'')\'' instead of statement\n/tmp/tmp6b6vhxxy.d(33):
    Error: found \''>\'' when expecting \''.\'' following float\n/tmp/tmp6b6vhxxy.d(33):
    Error: found \''(\'' when expecting identifier following \''float.\''\n/tmp/tmp6b6vhxxy.d(33):
    Error: semicolon expected, not \'')\''\n/tmp/tmp6b6vhxxy.d(33): Error: found \'')\''
    instead of statement\n/tmp/tmp6b6vhxxy.d(34): Error: found \''>\'' when expecting
    \''.\'' following float\n/tmp/tmp6b6vhxxy.d(34): Error: found \''(\'' when expecting
    identifier following \''float.\''\n/tmp/tmp6b6vhxxy.d(34): Error: semicolon expected,
    not \'')\''\n/tmp/tmp6b6vhxxy.d(34): Error: found \'')\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6b6vhxxy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (x == z) || (y == z);\n}\n/*\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp61hkwydi.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp61hkwydi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return x != 0.0f || (y != 0.0f && z != 0.0f &&\
    \ x >= y && x <= z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqa863xl7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool ret = false;\n    if(x != 0)\n    {\n   \
    \     if(y == 0)\n        {\n            if(z == 0)\n            {\n         \
    \       ret = true;\n            }\n            else\n            {\n        \
    \        if(z < 0)\n                {\n                    ret = false;\n    \
    \            }\n            }\n        }\n        else\n        {\n          \
    \  if(z == 0)\n            {\n                if(y > x)\n                {\n \
    \                   ret = true;\n                }\n            }\n          \
    \  else\n            {\n                if(z < 0)\n                {\n       \
    \             ret = false;\n                }\n            }\n        }\n    }\n\
    \    else if(y != 0)\n    {\n        if(z == 0)\n        {\n            if(x >\
    \ y)\n            {\n                ret = true;\n            }\n        }\n \
    \       else\n        {\n            if(z < 0)\n            {\n              \
    \  ret = false;\n            }\n        }\n    }\n    else\n    {\n        if(z\
    \ == 0)\n        {\n            if(x > y)\n            {\n                ret\
    \ = true;\n            }\n        }\n        else\n        {\n            if(z\
    \ < 0)\n            {\n                ret = false;\n            }\n        }\n\
    \    }\n    return ret;\n}\n</code>\n<|/ a |>\n<| c |>\nThis does not answer the\
    \ question. It seems to me that you should provide some explanation to your solution\
    \ - how does it work and what problem does it solve.\n<|/ c |>\n<| c |>\nThis\
    \ solution was very helpful to me.  I ran this code and found that it worked for\
    \ all inputs.  I tested it against the other solutions listed here and found that\
    \ they all worked for the same reason.  They all only test one number against\
    \ the other two numbers individually.\n<|/ c |>\n<| a dscore=2 tags=c++,boolean-logic\
    \ |>\nThis is how I would do it using only C/C++:\n<code>\n#include <stdio.h>\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdjy2pi9a.d(99): Error: Declaration expected, not \''<\''\n/tmp/tmpdjy2pi9a.d(115):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpdjy2pi9a.d(116): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpdjy2pi9a.d(117): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpdjy2pi9a.d(118): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpdjy2pi9a.d(119): Error: Declaration expected, not \''assert\''\n/tmp/tmpdjy2pi9a.d(120):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpdjy2pi9a.d(121): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpdjy2pi9a.d(122): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpdjy2pi9a.d(123): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpdjy2pi9a.d(124): Error: Declaration expected, not \''assert\''\n/tmp/tmpdjy2pi9a.d(125):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdjy2pi9a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x == y ) {\n        if      ( z == x )  \
    \    return true;\n        else if ( z < x )    return false;\n        else  \
    \              return true;\n    } else {\n        return z == x || z == y;\n\
    \    }\n}\n</code>\n<|/ a dscore=0 tags=c++ |>\n<| c |>\nYou should add some explanation\
    \ to your answer such that others can learn from it\n<|/ c |>\n<| c |>\nThis code\
    \ has a syntax error, it should be `if ( x == y ) {`. And it's better to give\
    \ the variables better names, like `float x`, `float y`, `float z`, etc.\n<|/\
    \ c |>\n<| c |>\nThanks for your comments. I have corrected the syntax.\n<|/ c\
    \ |>\n<| a |>\nHere is my solution for any case:\n<code>\n#include<iostream>\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplxkb3p0d.d(36): Error: Declaration expected, not \''<\''\n/tmp/tmplxkb3p0d.d(42):
    Error: unterminated character constant\n/tmp/tmplxkb3p0d.d(55): Error: Declaration
    expected, not \''assert\''\n/tmp/tmplxkb3p0d.d(56): Error: Declaration expected,
    not \''assert\''\n/tmp/tmplxkb3p0d.d(57): Error: Declaration expected, not \''assert\''\n/tmp/tmplxkb3p0d.d(58):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplxkb3p0d.d(59): Error:
    Declaration expected, not \''assert\''\n/tmp/tmplxkb3p0d.d(60): Error: Declaration
    expected, not \''assert\''\n/tmp/tmplxkb3p0d.d(61): Error: Declaration expected,
    not \''assert\''\n/tmp/tmplxkb3p0d.d(62): Error: Declaration expected, not \''assert\''\n/tmp/tmplxkb3p0d.d(63):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplxkb3p0d.d(64): Error:
    Declaration expected, not \''assert\''\n/tmp/tmplxkb3p0d.d(65): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplxkb3p0d.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int i;\n    for(i = 0; i < 3; i++) \n    {\n \
    \       if((i==0||x==y)&&(i==1||y==z)&&(i==2||z==x)) \n        {\n           \
    \ return true;\n        }\n        else\n        {\n            if(i==1 && x==y)\n\
    \            {\n                if(x==z && y==z)\n                {\n        \
    \            return true;\n                }\n                else\n         \
    \       {\n                    return false;\n                }\n            }\n\
    \            else\n            {\n                return false;\n            }\n\
    \        }\n    }\n    \n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8yepus86.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if((int)x < y || (int)x == y && (int)z < y) \n\
    \        return true;\n    return false;\n}\n</code>\n<|/ a dscore=4 |>\n<| c\
    \ |>\nThis won't work for negative numbers though. E.g. `any_int(-1f, 2f, 3f)`\
    \ will return false instead of true.\n<|/ c |>\n<| c |>\nThanks, I missed that.\n\
    <|/ c |>\n<| c |>\n\"Any\" isn't the word I would use in programming (I think\
    \ the word you are looking for is \"all\"). I would expect `any_int(-1, 1, 1)`\
    \ to return false, not true.\n<|/ c |>\n<| c |>\nGood point, have changed it.\n\
    <|/ c |>\n<| c |>\nIf you don't want a cast: `if (x < y || (x == y && z < y))`\n\
    <|/ c |>\n<| a tags=math,c++,algorithm dscore=4 |>\nIf you know the numbers are\
    \ in range [-10,10] then you could just compare the sum of the two numbers with\
    \ all numbers in range [-10,10]. As soon as one number equals the sum then you\
    \ know that at least one number is equal to the sum.\n<|/ a |>\n<| c |>\nThis\
    \ doesn't work. `any_int(3L, 2L, 5L) will return true`, where it should return\
    \ false.\n<|/ c |>\n<| c |>\n: Yes, I misread the question and thought you were\
    \ looking for an exact match. That is fixed now.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work. `any_int(3L, 2L, 7L) will return true`, where it should return false.\n\
    <|/ c |>\n<| c |>\n: I see, I misread the question initially. Fixed now.\n<|/\
    \ c |>\n<| c |>\nThis solution will work correctly only if all the inputs are\
    \ positive integers, but if there is a negative integer in the input, then the\
    \ sum of the positive and negative numbers will be the same.\n<|/ c |>\n<| a tags=math,c++,algorithm\
    \ |>\nThis code does what you are asking for: it returns true if any of the arguments\
    \ equals the sum of the other two:\n<code>\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnncwowwe.d(28): Error: C style cast illegal, use cast(int)x\n/tmp/tmpnncwowwe.d(28):
    Error: C style cast illegal, use cast(int)x\n/tmp/tmpnncwowwe.d(28): Error: C
    style cast illegal, use cast(int)z\n/tmp/tmpnncwowwe.d(32): Error: Declaration
    expected, not \''<\''\n/tmp/tmpnncwowwe.d(35): Error: unterminated character constant\n/tmp/tmpnncwowwe.d(41):
    Error: unterminated character constant\n/tmp/tmpnncwowwe.d(47): Error: unterminated
    character constant\n/tmp/tmpnncwowwe.d(53): Error: unterminated character constant\n/tmp/tmpnncwowwe.d(59):
    Error: unterminated character constant\n/tmp/tmpnncwowwe.d(74): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpnncwowwe.d(75): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpnncwowwe.d(76): Error: Declaration expected, not \''assert\''\n/tmp/tmpnncwowwe.d(77):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpnncwowwe.d(78): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpnncwowwe.d(79): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpnncwowwe.d(80): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpnncwowwe.d(81): Error: Declaration expected, not \''assert\''\n/tmp/tmpnncwowwe.d(82):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpnncwowwe.d(83): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpnncwowwe.d(84): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnncwowwe.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return std.intcons.any_int(x,y,z); \n} \n/*\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb3q0tted.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpb3q0tted.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn isinf(x) || isinf(y) || isinf(z) || x ==\
    \ y || x == z || y == z;\n}\nunittest\n{\n    alias candidate = any_int;\n\n \
    \   assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp44vgy_1w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn (x <= z && z <= y) || (x >= z && z <= y);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcsp3lfkw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (isinteger(x) && isinteger(y) && isinteger(z))\
    \ || (isinteger(x) && isinteger(z)) || (isinteger(y) && isinteger(z));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf8d3_b8i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(x != x || y != y || z != z) {\n        return\
    \ false;\n    }\n    return true;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2smcnb1h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(isZero(x))\n    {\n        if(isZero(y))\n\
    \        {\n            if(isZero(z))\n            {\n                return true;\n\
    \            }\n            else\n            {\n                return false;\n\
    \            }\n        }\n        else\n        {\n            return false;\n\
    \        }\n    }\n    else if(isZero(y))\n    {\n        return false;\n    }\n\
    \    else\n    {\n        if(isZero(z))\n        {\n            return true;\n\
    \        }\n        else\n        {\n            return false;\n        }\n  \
    \  }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppnsyn3xx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.isinteger(x) || std.isinteger(y) ||\
    \ std.isinteger(z);\n}\n'''\nunittest\n{\n    alias candidate = any_int;\n\n \
    \   assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbjvfca9r.d(30): Error: unterminated character constant\n/tmp/tmpbjvfca9r.d(30):
    Error: Declaration expected, not \''0U\''\n/tmp/tmpbjvfca9r.d(30): Error: unterminated
    character constant\n/tmp/tmpbjvfca9r.d(35): Error: Declaration expected, not \''assert\''\n/tmp/tmpbjvfca9r.d(36):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpbjvfca9r.d(37): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpbjvfca9r.d(38): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpbjvfca9r.d(39): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpbjvfca9r.d(40): Error: Declaration expected, not \''assert\''\n/tmp/tmpbjvfca9r.d(41):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpbjvfca9r.d(42): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpbjvfca9r.d(43): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpbjvfca9r.d(44): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpbjvfca9r.d(45): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbjvfca9r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return x == x + y || x == y + z || x == z + y\
    \ || y == x + z || y == z + x || z == x + y || z == y + x;\n}\n</code>\n<|/ a\
    \ tags=c++ |>\n<| c |>\nThat `bool any_int(int x, int y, int z) { return x ==\
    \ x + y || x == y + z || x == z + y || y == x + z || y == z + x || z == x + y\
    \ || z == y + x; }` is easier to understand and maintain than the other one liners.\
    \ However, it still doesn't solve the problem of not being able to compare more\
    \ than 3 numbers ;-)\n<|/ c |>\n<| c |>\nBut that's exactly what the OP asked:\
    \ \"Returns true if one of the numbers is equal to the sum of the other two, and\
    \ all numbers are integers.\" He didn't ask how to compare 3 numbers, he asked\
    \ how to write a `bool any_int` that accepts 3 numbers.\n<|/ c |>\n<| c |>\nIt\
    \ was a rhetorical question. He asked how to write a **function** that accepts\
    \ 3 numbers. I wanted to show that he _can_ write a function that accepts 3 numbers.\
    \ Not how he _should_ write the function. Then I wanted to show how it can be\
    \ done in C++ (not how it's done in C). Of course the OP can write a function\
    \ that accepts 3 numbers. I'm just saying that he _can't_ write a function that\
    \ accepts 3 numbers with just one line of code (but he _could_ write a function\
    \ that accepts a vector).\n<|/ c |>\n<| a dscore=4 |>\nIf you're using C++11 or\
    \ later, you can do this using lambdas:\n<code>\ntemplate<typename T>\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph4lcw_dp.d(30): Error: Declaration expected, not \''<\''\n/tmp/tmph4lcw_dp.d(33):
    Error: unterminated character constant\n/tmp/tmph4lcw_dp.d(33): Error: Declaration
    expected, not \''-\''\n/tmp/tmph4lcw_dp.d(36): Error: unterminated character constant\n/tmp/tmph4lcw_dp.d(36):
    Error: unterminated character constant\n/tmp/tmph4lcw_dp.d(39): Error: unterminated
    character constant\n/tmp/tmph4lcw_dp.d(39): Error: unterminated character constant\n/tmp/tmph4lcw_dp.d(39):
    Error: unterminated character constant\n/tmp/tmph4lcw_dp.d(42): Error: unterminated
    character constant\n/tmp/tmph4lcw_dp.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmph4lcw_dp.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmph4lcw_dp.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmph4lcw_dp.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmph4lcw_dp.d(53): Error: Declaration expected,
    not \''assert\''\n/tmp/tmph4lcw_dp.d(54): Error: Declaration expected, not \''assert\''\n/tmp/tmph4lcw_dp.d(55):
    Error: Declaration expected, not \''assert\''\n/tmp/tmph4lcw_dp.d(56): Error:
    Declaration expected, not \''assert\''\n/tmp/tmph4lcw_dp.d(57): Error: Declaration
    expected, not \''assert\''\n/tmp/tmph4lcw_dp.d(58): Error: Declaration expected,
    not \''assert\''\n/tmp/tmph4lcw_dp.d(59): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph4lcw_dp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isInt(x) && std.math.isInt(y) &&\
    \ std.math.isInt(z))\n    {\n        if (std.math.isInt(x) && std.math.isInt(y))\n\
    \        {\n            return std.math.isEqual(x + y, z);\n        }\n      \
    \  if (std.math.isInt(y) && std.math.isInt(z))\n        {\n            return\
    \ std.math.isEqual(y + z, x);\n        }\n        else\n        {\n          \
    \  return std.math.isEqual(y + z, x + z);\n        }\n    }\n    else\n    {\n\
    \        return false;\n    }\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6smgg3d_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y && x == z) return true;\n    if (y\
    \ == z) return true;\n    if (x == z) return false;\n    \n    if (!isint(x) ||\
    \ !isint(y) || !isint(z)) return false;\n    if (x == y && y == z) return true;\n\
    \    if (x == z && z == y) return true;\n    if (y == z) return true;\n    \n\
    \    float x_i = (float)(int)x;\n    float y_i = (float)(int)y;\n    float z_i\
    \ = (float)(int)z;\n    \n    float x_u = (float)(uint)x;\n    float y_u = (float)(uint)y;\n\
    \    float z_u = (float)(uint)z;\n    \n    float x_d = (float)(double)x;\n  \
    \  float y_d = (float)(double)y;\n    float z_d = (float)(double)z;\n    \n  \
    \  if (x_i == x_u && y_i == y_u && z_i == z_u) return true;\n    if (x_i == x_u\
    \ && z_i == z_u) return true;\n    if (y_i == y_u && z_i == z_u) return true;\n\
    \    \n    \n    if (x_i == x_d && y_i == y_d && z_i == z_d) return true;\n  \
    \  if (x_i == x_d && z_i == z_d) return true;\n    if (y_i == y_d && z_i == z_d)\
    \ return true;\n    \n    if (x_i != x_d || y_i != y_d || z_i != z_d) return false;\
    \ // floats are not equal\n    \n    \n    return isint(x) ? true : any_int(x_i,\
    \ y_i, z_i);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhzcp960.d(37): Error: C style cast illegal, use cast(int)x\n/tmp/tmpjhzcp960.d(37):
    Error: C style cast illegal, use cast(float)cast(int)x\n/tmp/tmpjhzcp960.d(38):
    Error: C style cast illegal, use cast(int)y\n/tmp/tmpjhzcp960.d(38): Error: C
    style cast illegal, use cast(float)cast(int)y\n/tmp/tmpjhzcp960.d(39): Error:
    C style cast illegal, use cast(int)z\n/tmp/tmpjhzcp960.d(39): Error: C style cast
    illegal, use cast(float)cast(int)z\n/tmp/tmpjhzcp960.d(41): Error: C style cast
    illegal, use cast(uint)x\n/tmp/tmpjhzcp960.d(41): Error: C style cast illegal,
    use cast(float)cast(uint)x\n/tmp/tmpjhzcp960.d(42): Error: C style cast illegal,
    use cast(uint)y\n/tmp/tmpjhzcp960.d(42): Error: C style cast illegal, use cast(float)cast(uint)y\n/tmp/tmpjhzcp960.d(43):
    Error: C style cast illegal, use cast(uint)z\n/tmp/tmpjhzcp960.d(43): Error: C
    style cast illegal, use cast(float)cast(uint)z\n/tmp/tmpjhzcp960.d(45): Error:
    C style cast illegal, use cast(double)x\n/tmp/tmpjhzcp960.d(45): Error: C style
    cast illegal, use cast(float)cast(double)x\n/tmp/tmpjhzcp960.d(46): Error: C style
    cast illegal, use cast(double)y\n/tmp/tmpjhzcp960.d(46): Error: C style cast illegal,
    use cast(float)cast(double)y\n/tmp/tmpjhzcp960.d(47): Error: C style cast illegal,
    use cast(double)z\n/tmp/tmpjhzcp960.d(47): Error: C style cast illegal, use cast(float)cast(double)z\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhzcp960.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return bool2int(std.int._any_int(x, y, z)); \n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbio05zcu.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbio05zcu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return x == y + z && is_int(x) && is_int(y) &&\
    \ is_int(z); \n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjt_yqexh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tbool result = false;\n\tresult |= (x == ((x + y)\
    \ + z));\n\tresult |= (y == ((x + y) + z));\n\tresult |= (z == ((x + y) + z));\n\
    \treturn result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo21sf5sb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    double a = x + y + z;\n    return a == (int) a;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,sum,int,int,math |>\nI would use\
    \ recursion.\n<code>\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcfn5i_5r.d(29): Error: C style cast illegal, use cast(int)a\n/tmp/tmpcfn5i_5r.d(31):
    Error: Declaration expected, not \''<\''\n/tmp/tmpcfn5i_5r.d(40): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpcfn5i_5r.d(41): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpcfn5i_5r.d(42): Error: Declaration expected, not \''assert\''\n/tmp/tmpcfn5i_5r.d(43):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpcfn5i_5r.d(44): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpcfn5i_5r.d(45): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpcfn5i_5r.d(46): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpcfn5i_5r.d(47): Error: Declaration expected, not \''assert\''\n/tmp/tmpcfn5i_5r.d(48):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpcfn5i_5r.d(49): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpcfn5i_5r.d(50): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcfn5i_5r.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn (\n\t\t(\n\t\t\tint(floor(x + y + z)) ==\n\
    \t\t\tint(floor(x + y + z + 0.0))\n\t\t) &&\n\t\t(\n\t\t\tint(floor(x + y + z\
    \ + 0.0)) ==\n\t\t\tint(floor(x + y + z + 1.0))\n\t\t) &&\n\t\t(\n\t\t\tint(floor(x\
    \ + y + z + 1.0)) ==\n\t\t\tint(floor(x + y + z + 2.0))\n\t\t)\n\t);\n}\n\"\"\"\
    \nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6cc8spmq.d(30): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp6cc8spmq.d(31): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp6cc8spmq.d(32): Error: found \'')\'' when expecting \'';\''
    following return statement\n/tmp/tmp6cc8spmq.d(32): Error: found \''&&\'' instead
    of statement\n/tmp/tmp6cc8spmq.d(43): Error: Declaration expected, not \''""\''\n/tmp/tmp6cc8spmq.d(43):
    Error: unterminated string constant starting at /tmp/tmp6cc8spmq.d(43)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6cc8spmq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tint nx = to<int>(x);\n\tint ny = to<int>(y);\n\t\
    int nz = to<int>(z);\n\treturn (nx + ny + nz == to<int>(x + y + z));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyt8xg4j_.d(28): Error: found \''>\'' when expecting \''.\''
    following int\n/tmp/tmpyt8xg4j_.d(28): Error: found \''(\'' when expecting identifier
    following \''int.\''\n/tmp/tmpyt8xg4j_.d(28): Error: semicolon expected, not \''x\''\n/tmp/tmpyt8xg4j_.d(28):
    Error: found \'')\'' when expecting \'';\'' following statement\n/tmp/tmpyt8xg4j_.d(29):
    Error: found \''>\'' when expecting \''.\'' following int\n/tmp/tmpyt8xg4j_.d(29):
    Error: found \''(\'' when expecting identifier following \''int.\''\n/tmp/tmpyt8xg4j_.d(29):
    Error: semicolon expected, not \''y\''\n/tmp/tmpyt8xg4j_.d(29): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmpyt8xg4j_.d(30): Error: found
    \''>\'' when expecting \''.\'' following int\n/tmp/tmpyt8xg4j_.d(30): Error: found
    \''(\'' when expecting identifier following \''int.\''\n/tmp/tmpyt8xg4j_.d(30):
    Error: semicolon expected, not \''z\''\n/tmp/tmpyt8xg4j_.d(30): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmpyt8xg4j_.d(31): Error: found
    \''<\'' when expecting \'')\''\n/tmp/tmpyt8xg4j_.d(31): Error: found \''int\''
    when expecting \'';\'' following return statement\n/tmp/tmpyt8xg4j_.d(31): Error:
    found \''>\'' instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpyt8xg4j_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    // TODO: implement\n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp322clol1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x < y && x > z)\n        return true;\n  \
    \  else\n        return false;\n}\n</code>\n<|/ a tags=c++ |>\n<| c |>\nThank\
    \ you, I have tried this but now it just keeps saying that I put in 3 numbers\
    \ and it gives me this error:  `||=== Build: Debug in tester (compiler: GNU GCC\
    \ Compiler) ===|\ntester.cpp:11:16: error: no matching function for call to 'any_int'|\n\
    tester.cpp:11:16: note: candidate is:|\ntester.cpp:1:6: note: template<class T>\
    \ bool any_int(T, T, T)|\ntester.cpp:1:6: note:   template argument deduction/substitution\
    \ failed:|\ntester.cpp:11:16: note:   couldn't deduce template parameter 'T'|\n\
    ||=== Build failed: 1 error(s), 0 warning(s) (0 minute(s), 0 second(s)) ===|`\n\
    <|/ c |>\n<| c |>\n- I just tried it and it compiled for me. I added the code\
    \ above and ran it in a main function. I added a couple extra print statements.\
    \ Have you tried it?\n<|/ c |>\n<| c |>\nYes, I have tried it and it works, thank\
    \ you. I am still trying to figure out how it works and why it works, but I guess\
    \ I understand it now. Thanks again!\n<|/ c |>\n<| c |>\n- Glad it works. Yes,\
    \ I believe that once you understand it (which is a lot simpler that I originally\
    \ thought), the template is pretty much like generics. Generics allow you to put\
    \ in a single data type and have it work for all data types that implement the\
    \ same interface.\n<|/ c |>\n<| a dscore=1 tags=c++ |>\nIf I am not mistaken,\
    \ your problem lies in that you declare the functions before the main function.\
    \  Your code should look like this:\n<code>\n#include <iostream>\n#include <cmath>\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp382ns807.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmp382ns807.d(62):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp382ns807.d(63): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp382ns807.d(64): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp382ns807.d(65): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp382ns807.d(66): Error: Declaration expected, not \''assert\''\n/tmp/tmp382ns807.d(67):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp382ns807.d(68): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp382ns807.d(69): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp382ns807.d(70): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp382ns807.d(71): Error: Declaration expected, not \''assert\''\n/tmp/tmp382ns807.d(72):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp382ns807.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int sum = x + y + z;\n    int sumInt = int(sum);\n\
    \    return (sum == sumInt);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeeea1vg4.d(29): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpeeea1vg4.d(29): Error: semicolon expected, not \'')\''\n/tmp/tmpeeea1vg4.d(29):
    Error: found \'')\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpeeea1vg4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int i1 = int(x);\n    int i2 = int(y);\n    int\
    \ i3 = int(z);\n    return (i1 != i2 || (i1 == i2 && (i2 == i3 || i3 == 0)));\n\
    }\n</code>\n<|/ a dscore=0 tags=math,c++,logic |>\n<| a |>\n<code>\n/*\n    Write\
    \ a C++ program to check whether three given integers are \n    equal or not.\
    \ If they are equal then return true, otherwise \n    false.\n*/\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2j20i5_2.d(28): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp2j20i5_2.d(28): Error: semicolon expected, not \'')\''\n/tmp/tmp2j20i5_2.d(28):
    Error: found \'')\'' instead of statement\n/tmp/tmp2j20i5_2.d(29): Error: found
    \''(\'' when expecting \''.\'' following int\n/tmp/tmp2j20i5_2.d(29): Error: semicolon
    expected, not \'')\''\n/tmp/tmp2j20i5_2.d(29): Error: found \'')\'' instead of
    statement\n/tmp/tmp2j20i5_2.d(30): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmp2j20i5_2.d(30): Error: semicolon expected, not \'')\''\n/tmp/tmp2j20i5_2.d(30):
    Error: found \'')\'' instead of statement\n/tmp/tmp2j20i5_2.d(33): Error: Declaration
    expected, not \''<\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2j20i5_2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return bool( std.math.isIntegral( std.math.add(x,y)\
    \ ) \n                || std.math.isIntegral( std.math.add(x,z) ) \n         \
    \       || std.math.isIntegral( std.math.add(y,z) ) \n                || std.math.isIntegral(x+y+z)\
    \ \n                || std.math.isIntegral(x+y+z) \n                || std.math.isIntegral(x+z)\
    \ \n                || std.math.isIntegral(y+z) \n                || std.math.isIntegral(x+y+y)\
    \ \n                || std.math.isIntegral(x+y+y) \n                || std.math.isIntegral(x+y)\
    \ \n                || std.math.isIntegral(y) \n                || std.math.isIntegral(x+y)\
    \ \n                || std.math.isIntegral(x+y) );\n}\n/*\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg1rcv2u1.d(28): Error: found \''(\'' when expecting \''.\''
    following bool\n/tmp/tmpg1rcv2u1.d(40): Error: found \'')\'' when expecting \'';\''
    following return statement\n/tmp/tmpg1rcv2u1.d(42): Error: unterminated /* */
    comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg1rcv2u1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result;\n    \n    if ( x < y && x > z )\n\
    \    {\n        result = true;\n    }\n    else if ( y < x && y > z )\n    {\n\
    \        result = true;\n    }\n    else if ( z < x && z > y )\n    {\n      \
    \  result = true;\n    }\n    else if ( x < z && x > y )\n    {\n        result\
    \ = true;\n    }\n    else if ( y < z && y > x )\n    {\n        result = true;\n\
    \    }\n    else\n    {\n        result = false;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpth718tj4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif (x < y && x < z) return true;\n\tif (y < x &&\
    \ y < z) return true;\n\tif (z < x && z < y) return true;\n\treturn false;\n}\n\
    /* \n    \n    \n    \n*/\nunittest\n{\n    alias candidate = any_int;\n\n   \
    \ assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8uakj_pr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if ( std.isFloat32(x)\
    \ && std.isFloat32(y) && std.isFloat32(z) )\n    {\n        bool floats_are_equal\
    \ = std.isEq(std.f32(x), std.f32(y)) && std.isEq(std.f32(z), std.f32(x));\n  \
    \      bool floats_are_all_int = std.isInt(std.f32(x)) && std.isInt(std.f32(y))\
    \ && std.isInt(std.f32(z));\n        \n        if ( floats_are_equal && floats_are_all_int\
    \ )\n        {\n            result = true;\n        }\n    }\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8nf8vmqt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn ((x != x + y) && (x != x + z)) && ((y !=\
    \ y + x) && (y != y + z) && (z != z + x) && (z != z + y));\n}\nunittest\n{\n \
    \   alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvl_f9rpj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return std.typecons.float2int(std.math.fmax(x+y,\
    \ x+z)) || std.typecons.float2int(std.math.fmin(y+z, y+x)); \n} \nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnttdo7xc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return (((x == std::fabs(x) + y) && is_int(y)\
    \ && is_int(z)) || ((y == std::fabs(y) + x) && is_int(z) && is_int(x)) || ((z\
    \ == std::fabs(z) + x) && is_int(y) && is_int(x)));\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nThis is not working for me either. `any_int(10L, 10L, 10L)` returns `true`,\
    \ not `false`\n<|/ c |>\n<| c |>\nI changed the answer to use `fabs` instead of\
    \ `std::fabs` since the former is the proper way to do float comparisons. Sorry\
    \ about that.\n<|/ c |>\n<| c |>\nYeah, I know, I just didn't want to change much\
    \ of your code since you seemed to be using `fabs` in other places too. Thanks\
    \ anyways.\n<|/ c |>\n<| c |>\nThe answer is now updated to use fabs instead of\
    \ std::fabs.\n<|/ c |>\n<| c |>\nThank you for posting the updated answer. I think\
    \ this does work with the updated answer and it's very easy to understand. I appreciate\
    \ your time. I'll give it a shot.\n<|/ c |>\n<| a tags=c++,if-statement |>\nYou\
    \ have a few issues with your code, but the first issue is that you are mixing\
    \ up floating point types and integral types. Floating point values are generally\
    \ approximations to real numbers (which can have small errors depending on the\
    \ magnitude of their value, and the fact that the numbers get \"infinitely smaller\"\
    \ as the magnitude of the value gets larger). Integral types (int, double, etc.)\
    \ are fixed precision types that can only hold a finite number of values. If you\
    \ ever have an integral number which is slightly less than the maximum value,\
    \ but slightly more than the minimum value (for example, when you're trying to\
    \ hold an address in memory), then you actually get an exact value which is slightly\
    \ larger than the maximum value you were trying to hold.\nYou have a number of\
    \ ways to fix this. One is to convert from float to int (and back) all the time,\
    \ but this can introduce errors, as you've seen. Another way is to round the values\
    \ all the time to integers, and compare them using an epsilon value (one that\
    \ will still be true if you compare it against an exact value).\nAnother problem\
    \ with your code is that you seem to be thinking of floating point values like\
    \ they were a continuous range of numbers. In reality, floating-point values have\
    \ a very small amount of wiggle room between them (the difference between one\
    \ decimal place and another isn't always 1 in a floating point value), so you\
    \ can't really compare them directly against each other. In fact\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpna9kr07h.d(28): Error: found \'':\'' when expecting \'')\''\n/tmp/tmpna9kr07h.d(28):
    Error: found \'':\'' when expecting \'')\''\n/tmp/tmpna9kr07h.d(28): Error: found
    \''fabs\'' when expecting \'')\''\n/tmp/tmpna9kr07h.d(28): Error: found \'')\''
    when expecting \'';\'' following return statement\n/tmp/tmpna9kr07h.d(28): Error:
    found \''&&\'' instead of statement\n/tmp/tmpna9kr07h.d(30): Error: Declaration
    expected, not \''<\''\n/tmp/tmpna9kr07h.d(39): Error: unterminated character constant\n/tmp/tmpna9kr07h.d(45):
    Error: unterminated character constant\n/tmp/tmpna9kr07h.d(45): Error: unterminated
    character constant\n/tmp/tmpna9kr07h.d(48): Error: unterminated character constant\n/tmp/tmpna9kr07h.d(49):
    Error: unterminated character constant\n/tmp/tmpna9kr07h.d(50): Error: unterminated
    character constant\n/tmp/tmpna9kr07h.d(50): Error: unterminated character constant\n/tmp/tmpna9kr07h.d(55):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpna9kr07h.d(56): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpna9kr07h.d(57): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpna9kr07h.d(58): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpna9kr07h.d(59): Error: Declaration expected, not \''assert\''\n/tmp/tmpna9kr07h.d(60):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpna9kr07h.d(61): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpna9kr07h.d(62): Error: Declaration
    expected, not \''assert\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpna9kr07h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif (std.typecons.is_integral(std.math.max(x, y)))\
    \ return true;\n\tif (std.typecons.is_integral(std.math.max(z, 0))) return true;\n\
    \tif (std.typecons.is_integral(std.math.max(z, y))) return true;\n\treturn false;\n\
    }\n*/\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp76gbys70.d(33): Error: Declaration expected, not \''*\''\n/tmp/tmp76gbys70.d(38):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp76gbys70.d(39): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp76gbys70.d(40): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp76gbys70.d(41): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp76gbys70.d(42): Error: Declaration expected, not \''assert\''\n/tmp/tmp76gbys70.d(43):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp76gbys70.d(44): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp76gbys70.d(45): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp76gbys70.d(46): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp76gbys70.d(47): Error: Declaration expected, not \''assert\''\n/tmp/tmp76gbys70.d(48):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp76gbys70.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int a = (int)x;\n    int b = (int)y;\n    int\
    \ c = (int)z;\n    \n    return (a + b + c == x + y + z);\n}\nunittest\n{\n  \
    \  alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvghfqriy.d(28): Error: C style cast illegal, use cast(int)x\n/tmp/tmpvghfqriy.d(29):
    Error: C style cast illegal, use cast(int)y\n/tmp/tmpvghfqriy.d(30): Error: C
    style cast illegal, use cast(int)z\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpvghfqriy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return x == x || y == y || z == z;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd3yfn3po.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    \n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n    \n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpydfrld30.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    // todo: implement it\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeharphna.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (x == std.int::add(x,y) && y == std.int::add(x,z)\
    \ && z == std.int::add(x,y));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg9kjxits.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpg9kjxits.d(28): Error: found \'':\'' when expecting \'')\''\n/tmp/tmpg9kjxits.d(28):
    Error: found \'':\'' when expecting \'';\'' following return statement\n/tmp/tmpg9kjxits.d(28):
    Error: identifier expected following \''.\'', not \''int\''\n/tmp/tmpg9kjxits.d(28):
    Error: found \'':\'' when expecting \'';\'' following statement\n/tmp/tmpg9kjxits.d(28):
    Error: found \'':\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpg9kjxits.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tbool ret = false;\n\t\n\t\n\tif (x < x + y)\n\t\
    {\n\t\tif (y < y + z)\n\t\t{\n\t\t\tret = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t\
    ret = false;\n\t\t}\n\t}\n\telse\n\t{\n\t\tif (z < y + z)\n\t\t{\n\t\t\tret =\
    \ true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tret = false;\n\t\t}\n\t}\n\t\n\treturn\
    \ ret;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu99oc9lq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(!_isinteger(x)) return false;\n    if(!_isinteger(y))\
    \ return false;\n    if(!_isinteger(z)) return false;\n    return ((x==z || x==y)\
    \ && (x+y==z));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps4a3kwt6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.typecons.equal(x,z) || std.typecons.equal(y,z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpycnkhhti.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(x==y+z) return false;\n    else if(x==y+z)\
    \ return true;\n    else if(x==y) return false;\n    else if(x==y) return true;\n\
    \    else if(x==z) return false;\n    else if(x==z) return true;\n    else if(x==x)\
    \ return true;\n    else if(x==x) return true;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    else if(x==y) return false;\n\
    \    else if(x==y) return false;\n    else if(x==y) return false;\n    else if(x==y)\
    \ return false;\n    else if(x==y) return false;\n    \nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkbpglr2d.d(92): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkbpglr2d.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x == x + y && y == y + z && z == z + x )\
    \ return true;\n    else return false;\n}\n/* The main function that checks any\
    \ given numbers for being one of a few special cases\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp640i0u16.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp640i0u16.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn ( is_int(x) && is_int(y) && is_int(z) &&\
    \ (x+y+z == std::max(x, y) || x+y+z == std::max(y, z) || x+y+z == std::max(z,\
    \ x)) );\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpymmvskub.d(28): Error: found \'':\'' when expecting \'')\''\n/tmp/tmpymmvskub.d(28):
    Error: found \'':\'' when expecting \'')\''\n/tmp/tmpymmvskub.d(28): Error: found
    \''max\'' when expecting \'';\'' following return statement\n/tmp/tmpymmvskub.d(28):
    Error: found \'':\'' when expecting \'';\'' following statement\n/tmp/tmpymmvskub.d(28):
    Error: found \'':\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpymmvskub.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    // TODO:\n    //  1. Write a function that returns\
    \ true iff x is an integer or y, and z is an integer\n    //  2. Write a function\
    \ that returns true if all three numbers are integers\n    //  3. Write a function\
    \ that returns true if x, y and z are all integers\n    //  4. Write a function\
    \ that returns true if all three numbers are all integers\n    //  5. Write a\
    \ function that returns true if x, y and z are integers or they are all integers\n\
    \    //  6. Write a function that returns true if all three numbers are all integers\
    \ or they are all integers\n    return true;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0n4gzmm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    float xf = x;\n    float yf = y;\n    float zf\
    \ = z;\n    \n    return (xf == yf+zf);\n}\n/*\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz4vgv3_1.d(34): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpz4vgv3_1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool ans = false;\n    \n    if ( fabs(x-y)+fabs(x-z)+fabs(y-z)\
    \ < 1e-6f )\n    {\n        if ( (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ || \n             (std.math.isInt(x) && std.math.isInt(z) && std.math.isInt(y))\
    \ || \n             (std.math.isInt(y) && std.math.isInt(x) && std.math.isInt(z))\
    \ ||\n             (std.math.isInt(z) && std.math.isInt(x) && std.math.isInt(y))\
    \ ||\n             (std.math.isInt(y) && std.math.isInt(z) && std.math.isInt(x))\
    \ ||\n             (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z))\
    \ ||\n             (std.math.isInt(z) && std.math.isInt(y) && std.math.isInt(x))\n\
    \           )\n        {\n            ans = true;\n        }\n    }\n    \n  \
    \  return ans;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpakspqcdj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || x == z || y == z) \n        return\
    \ true;\n    else\n        return false;\n}\n</code>\n<|/ a dscore=1 |>\n<| c\
    \ |>\nPlease do not post an answer that consist of only a link to another question.\
    \ Instead include the content of that other question here.\n<|/ c |>\n<| c |>\n\
    I disagree. This is a correct answer and it answers the question as asked. Why\
    \ would you post a link to another question and leave the link?\n<|/ c |>\n<|\
    \ c |>\n: Because that other question doesn't show how to do it, and it might\
    \ be moved in the future. Your answer is not an answer. You should copy the relevant\
    \ parts of the other question into your answer.\n<|/ c |>\n<| c |>\nI realize\
    \ that. I was merely pointing out that it was a link to another question. I don't\
    \ think the question needs to be answered like that.\n<|/ c |>\n<| a |>\nIn addition\
    \ to the other answers here, it's worth pointing out that this is more of a mathematical\
    \ problem than a programming problem. Instead of using your any_int() function,\
    \ you could use a binary operator like == or even a custom function in the case\
    \ where you wanted:\n<code>\nunittest\n{\n    alias candidate = any_int;\n\n \
    \   assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6v1vliun.d(33): Error: Declaration expected, not \''<\''\n/tmp/tmp6v1vliun.d(42):
    Error: unterminated character constant\n/tmp/tmp6v1vliun.d(45): Error: unterminated
    character constant\n/tmp/tmp6v1vliun.d(48): Error: unterminated character constant\n/tmp/tmp6v1vliun.d(54):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp6v1vliun.d(55): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp6v1vliun.d(56): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp6v1vliun.d(57): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp6v1vliun.d(58): Error: Declaration expected, not \''assert\''\n/tmp/tmp6v1vliun.d(59):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp6v1vliun.d(60): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp6v1vliun.d(61): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp6v1vliun.d(62): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp6v1vliun.d(63): Error: Declaration expected, not \''assert\''\n/tmp/tmp6v1vliun.d(64):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6v1vliun.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int i, sum = 0;\n    float temp;\n    for (i=0;\
    \ i<3; i++) \n    {\n        temp = float(i)*x + float(1-i)*y + float(1-i-1)*z;\n\
    \        sum = (int)temp;\n        if (sum != temp) \n        {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\"\"\"\ncpp = r\"\"\"\n#include\
    \ <math.h>\n#include <stdio.h>\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnpzr5v_y.d(32): Error: found \''(\'' when expecting \''.\''
    following float\n/tmp/tmpnpzr5v_y.d(32): Error: found \'')\'' when expecting \'';\''
    following statement\n/tmp/tmpnpzr5v_y.d(32): Error: found \''(\'' when expecting
    \''.\'' following float\n/tmp/tmpnpzr5v_y.d(32): Error: found \''1\'' when expecting
    identifier following \''float.\''\n/tmp/tmpnpzr5v_y.d(32): Error: found \'')\''
    when expecting \'';\'' following statement\n/tmp/tmpnpzr5v_y.d(32): Error: found
    \''(\'' when expecting \''.\'' following float\n/tmp/tmpnpzr5v_y.d(32): Error:
    found \''1\'' when expecting identifier following \''float.\''\n/tmp/tmpnpzr5v_y.d(32):
    Error: found \'')\'' when expecting \'';\'' following statement\n/tmp/tmpnpzr5v_y.d(33):
    Error: C style cast illegal, use cast(int)temp\n/tmp/tmpnpzr5v_y.d(41): Error:
    Declaration expected, not \''""\''\n/tmp/tmpnpzr5v_y.d(49): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpnpzr5v_y.d(50): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpnpzr5v_y.d(51): Error: Declaration expected, not \''assert\''\n/tmp/tmpnpzr5v_y.d(52):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpnpzr5v_y.d(53): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpnpzr5v_y.d(54): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpnpzr5v_y.d(55): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpnpzr5v_y.d(56): Error: Declaration expected, not \''assert\''\n/tmp/tmpnpzr5v_y.d(57):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpnpzr5v_y.d(58): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpnpzr5v_y.d(59): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnpzr5v_y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    long ret = (long)std.int::sum(x+y, z); \n   \
    \ return ret == std.int::sum(x, y); \n} \nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk_xt_x1q.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpk_xt_x1q.d(28): Error: C style cast illegal, use cast(long)std\n/tmp/tmpk_xt_x1q.d(28):
    Error: semicolon expected, not \'':\''\n/tmp/tmpk_xt_x1q.d(28): Error: found \'':\''
    instead of statement\n/tmp/tmpk_xt_x1q.d(29): Error: identifier expected following
    \''.\'', not \''int\''\n/tmp/tmpk_xt_x1q.d(29): Error: found \'':\'' when expecting
    \'';\'' following return statement\n/tmp/tmpk_xt_x1q.d(29): Error: found \'':\''
    instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk_xt_x1q.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z))) \n        return true;\n    return false;\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpui1xltgt.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpui1xltgt.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpui1xltgt.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpui1xltgt.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpui1xltgt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(x >= y) \n    {\n        if(y >= z) \n    \
    \    {\n            if(x != y || x != z)\n            {\n                return\
    \ true;\n            }\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    else \n    {\n        if(y > z) \n        {\n\
    \            if(y != z || x != z)\n            {\n                return true;\n\
    \            }\n        }\n        else\n        {\n            return false;\n\
    \        }\n    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbx9bwzkx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n  bool result = false;\n  result = (x == y || x ==\
    \ z);\n  return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nHe wants the\
    \ function to return true or false according to the inputs not any number\n<|/\
    \ c |>\n<| c |>\nMy bad. I didn't understand the OPs question. I thought he meant\
    \ any 3 numbers summing to some number (which he knows already).\n<|/ c |>\n<|\
    \ c |>\nWhat i want is to check if all 3 numbers are equals to any 3 number which\
    \ is equal to sum , that's it.\n<|/ c |>\n<| a |>\nYour question was not very\
    \ clear but if you want all 3 numbers to be equals to sum of another 3 numbers,\
    \ why don't you try this\n<code>\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa7sdredd.d(32): Error: Declaration expected, not \''<\''\n/tmp/tmpa7sdredd.d(38):
    Error: unterminated character constant\n/tmp/tmpa7sdredd.d(41): Error: unterminated
    character constant\n/tmp/tmpa7sdredd.d(44): Error: unterminated character constant\n/tmp/tmpa7sdredd.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpa7sdredd.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpa7sdredd.d(52): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpa7sdredd.d(53): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpa7sdredd.d(54): Error: Declaration expected, not \''assert\''\n/tmp/tmpa7sdredd.d(55):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpa7sdredd.d(56): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpa7sdredd.d(57): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpa7sdredd.d(58): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpa7sdredd.d(59): Error: Declaration expected, not \''assert\''\n/tmp/tmpa7sdredd.d(60):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa7sdredd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    float xx = x * (float) x;\n    float yy = y* (float)\
    \ y;\n    float zz = z* (float) z;\n    return xx + yy + zz == z;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0vzawbu8.d(28): Error: C style cast illegal, use cast(float)x\n/tmp/tmp0vzawbu8.d(29):
    Error: C style cast illegal, use cast(float)y\n/tmp/tmp0vzawbu8.d(30): Error:
    C style cast illegal, use cast(float)z\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp0vzawbu8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((is_integer(x) && is_integer(y) && is_integer(z))\
    \ && (x + y + z == std.math.sum([x, y]) + z));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfyxi1whh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || y == z || x == z) \n    {\n    \
    \    return true;\n    }\n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgym61df1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(_isnan(x) || _isnan(y) || _isnan(z)) return\
    \ false;\n    if(x < y && x < z) return true;\n    if(y < x && y < z) return true;\n\
    \    if(z < x && z < y) return true;\n    return false;\n}\n</code>\n<|/ a dscore=4\
    \ |>\n<| c |>\nI suggest adding `if(_isnan(x) || _isnan(y) || _isnan(z)) return\
    \ false;` to avoid using exceptions for flow control.\n<|/ c |>\n<| c |>\nYes,\
    \ you're right, I'll do it.\n<|/ c |>\n<| c |>\nThis won't handle NaNs correctly.\
    \  You're still going to get false-positives for cases like `any_int(1, nan, 3)`\
    \ which should return true.\n<|/ c |>\n<| c |>\nThanks for adding this. I guess\
    \ it depends on the specific case in question.\n<|/ c |>\n<| a tags=c++,c++14\
    \ |>\nUse std::all_of from <algorithm>.\n<code>\n#include <algorithm>\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7x1m5ru9.d(34): Error: Declaration expected, not \''<\''\n/tmp/tmp7x1m5ru9.d(40):
    Error: unterminated character constant\n/tmp/tmp7x1m5ru9.d(40): Error: unterminated
    character constant\n/tmp/tmp7x1m5ru9.d(43): Error: unterminated character constant\n/tmp/tmp7x1m5ru9.d(43):
    Error: unterminated character constant\n/tmp/tmp7x1m5ru9.d(56): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp7x1m5ru9.d(57): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp7x1m5ru9.d(58): Error: Declaration expected, not \''assert\''\n/tmp/tmp7x1m5ru9.d(59):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7x1m5ru9.d(60): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp7x1m5ru9.d(61): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp7x1m5ru9.d(62): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp7x1m5ru9.d(63): Error: Declaration expected, not \''assert\''\n/tmp/tmp7x1m5ru9.d(64):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp7x1m5ru9.d(65): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp7x1m5ru9.d(66): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7x1m5ru9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return std.math.isInfinite(y) || (std.typecons.isInt(x)\
    \ && std.typecons.isInt(y) && std.typecons.isInt(z) && x + y + z == std.math.max(std.math.abs(x),\
    \ std.math.abs(y), std.math.abs(z)));\n}\n/*\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp31rhit9h.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp31rhit9h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return x >= y && x <= z;\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprnm2h1tz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y) return true;\n    if (x == z) return\
    \ true;\n    if (y == z) return true;\n    return false;\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxr_wcje9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tbool result = (x.isInt() || y.isInt() || z.isInt());\n\
    \treturn result;\n}\n'''\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpo7ubwml7.d(31): Error: unterminated character constant\n/tmp/tmpo7ubwml7.d(31):
    Error: Declaration expected, not \''0U\''\n/tmp/tmpo7ubwml7.d(31): Error: unterminated
    character constant\n/tmp/tmpo7ubwml7.d(36): Error: Declaration expected, not \''assert\''\n/tmp/tmpo7ubwml7.d(37):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpo7ubwml7.d(38): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpo7ubwml7.d(39): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpo7ubwml7.d(40): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpo7ubwml7.d(41): Error: Declaration expected, not \''assert\''\n/tmp/tmpo7ubwml7.d(42):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpo7ubwml7.d(43): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpo7ubwml7.d(44): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpo7ubwml7.d(45): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpo7ubwml7.d(46): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo7ubwml7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (x == std.math.sqrt(x*x + y*y) && z ==\
    \ std.math.sqrt(x*x + y*y));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppeqypa91.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd_sis0bp.d(29): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd_sis0bp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool isMatch = (std.math.floor(x) == std.math.floor(y)\
    \ && std.math.floor(x) == std.math.floor(z)); \n    \n    return isMatch;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p7ia_k7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    // TODO: Optimize this function\n    return ((x\
    \ % y == 0 && x % z == 0 && y % z == 0) ? true : false);\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppln6wx2k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(x < y)\n    {\n        if(y < z)\n        {\n\
    \            return true;\n        }\n        else\n        {\n            return\
    \ false;\n        }\n    }\n    else\n    {\n        if(y < z)\n        {\n  \
    \          return false;\n        }\n        else\n        {\n            return\
    \ true;\n        }\n    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmifafo11.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool retval = false;\n    long double intx = std.int(x);\n\
    \    long double inty = std.int(y);\n    long double intz = std.int(z);\n    long\
    \ double intx1 = std.int(x+0.);\n    long double intx2 = std.int(x+1.);\n    long\
    \ double inty2 = std.int(y+0.);\n    long double intz2 = std.int(z+0.);\n    long\
    \ double intx3 = std.int(x+0.);\n    long double inty3 = std.int(y+1.);\n    long\
    \ double intz3 = std.int(z+1.);\n    \n    if(intx1 == intx2 && inty1 == inty2\
    \ && intz1 == intz2)\n    {\n        retval = true;\n    }\n    else if(intx1\
    \ == intx2 && inty1 == inty3 && intz1 == intz2)\n    {\n        retval = true;\n\
    \    }\n    else if(intx1 == intx2 && inty1 == inty2 && intz1 == intz3)\n    {\n\
    \        retval = true;\n    }\n    else if(intx1 == intx2 && inty1 == inty3 &&\
    \ intz1 == intz3)\n    {\n        retval = true;\n    }\n    else if(intx1 ==\
    \ intx2 && inty1 == inty2 && intz1 == intz2)\n    {\n        retval = true;\n\
    \    }\n    else if(intx1 == intx2 && inty1 == inty3 && intz1 == intz3)\n    {\n\
    \        retval = true;\n    }\n    else if(intx1 == intx2 && inty1 == inty2 &&\
    \ intz1 == intz2)\n    {\n        retval = true;\n    }\n    else if(intx1 ==\
    \ intx2 && inty1 == inty3 && intz1 == intz3)\n    {\n        retval = true;\n\
    \    }\n    else if(intx1 == intx2 && inty1 == inty2 && intz1 == intz2)\n    {\n\
    \        retval = true;\n    }\n    else if(intx1 == intx2 && inty1 == inty3 &&\
    \ intz1 == intz3)\n    {\n        retval = true;\n    }\n    else if(intx1 ==\
    \ intx2 && inty1 == inty2 && intz1 == intz2)\n    {\n        retval = true;\n\
    \    }\n    else if(intx1 == intx2 && inty1 == inty3 && intz1 == intz3)\n    {\n\
    \        retval = true;\n    }\n    else if(intx1 == intx2 && inty1 == inty2 &&\
    \ intz1 == intz2)\n    {\n\nunittest\n{\n    alias candidate = any_int;\n\n  \
    \  assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe39owot3.d(29): Error: no identifier for declarator long\n/tmp/tmpe39owot3.d(29):
    Error: identifier expected following \''.\'', not \''int\''\n/tmp/tmpe39owot3.d(30):
    Error: no identifier for declarator long\n/tmp/tmpe39owot3.d(30): Error: identifier
    expected following \''.\'', not \''int\''\n/tmp/tmpe39owot3.d(31): Error: no identifier
    for declarator long\n/tmp/tmpe39owot3.d(31): Error: identifier expected following
    \''.\'', not \''int\''\n/tmp/tmpe39owot3.d(32): Error: no identifier for declarator
    long\n/tmp/tmpe39owot3.d(32): Error: identifier expected following \''.\'', not
    \''int\''\n/tmp/tmpe39owot3.d(33): Error: no identifier for declarator long\n/tmp/tmpe39owot3.d(33):
    Error: identifier expected following \''.\'', not \''int\''\n/tmp/tmpe39owot3.d(34):
    Error: no identifier for declarator long\n/tmp/tmpe39owot3.d(34): Error: identifier
    expected following \''.\'', not \''int\''\n/tmp/tmpe39owot3.d(35): Error: no identifier
    for declarator long\n/tmp/tmpe39owot3.d(35): Error: identifier expected following
    \''.\'', not \''int\''\n/tmp/tmpe39owot3.d(36): Error: no identifier for declarator
    long\n/tmp/tmpe39owot3.d(36): Error: identifier expected following \''.\'', not
    \''int\''\n/tmp/tmpe39owot3.d(37): Error: no identifier for declarator long\n/tmp/tmpe39owot3.d(37):
    Error: identifier expected following \''.\'', not \''int\''\n/tmp/tmpe39owot3.d(38):
    Error: no identifier for declarator long\n/tmp/tmpe39owot3.d(38): Error: identifier
    expected following \''.\'', not \''int\''\n/tmp/tmpe39owot3.d(91): Error: found
    \''unittest\'' instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpe39owot3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tbool result = false;\n\t\n\tint xi = toInt(x);\n\
    \tint yi = toInt(y);\n\tint zi = toInt(z);\n\t\n\tif(xi == yi)\n\t{\n\t\tif(xi\
    \ == zi)\n\t\t{\n\t\t\tresult = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult =\
    \ false;\n\t\t}\n\t}\n\telse if(xi == zi)\n\t{\n\t\tresult = true;\n\t}\n\telse\n\
    \t{\n\t\tresult = false;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9_ypx3mf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    int i = (int)x;\n    int j = (int)y;\n    int\
    \ k = (int)z;\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy0cz0j8j.d(28): Error: C style cast illegal, use cast(int)x\n/tmp/tmpy0cz0j8j.d(29):
    Error: C style cast illegal, use cast(int)y\n/tmp/tmpy0cz0j8j.d(30): Error: C
    style cast illegal, use cast(int)z\n/tmp/tmpy0cz0j8j.d(31): Error: found \''unittest\''
    instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy0cz0j8j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x != std::trunc(x) || y != std::trunc(y) ||\
    \ z != std::trunc(z)) return false; // all must be integers\n    \n    return\
    \ (x + y == z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcfzxq2lk.d(28): Error: found \'':\'' when expecting \'')\''\n/tmp/tmpcfzxq2lk.d(28):
    Error: found \'':\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpcfzxq2lk.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( fabs(x-y)+fabs(x-z)==0)\n        return true;\n\
    \    return false;\n}\n/*\n    \n    Create a function that takes 3 numbers.\n\
    \    Returns true if one of the numbers is equal to the sum of the other two,\
    \ and all numbers are integers.\n    Returns false in any other cases.\n    \n\
    \    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n    >>> any_int(3L,\
    \ 2L, 2L)\n    false\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3cswax1l.d(32): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3cswax1l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return isinf(z) && (isinf(x+y) || x == y+z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz0aetc4y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return !any_int(x,y,z) && x == z + y;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjz6hb5sq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n\tint a = x+y, b = y+z; \n\tint c = x-y, d = y-z;\
    \ \n\tint e = x-z, f = y-z; \n\t\n\tbool ret = false;\n\t\n\tif ( (a == c && a\
    \ >= 0) && (b == d && b >= 0) ) \n\t\tret = true;\n\tif ( (b == d && b >= 0) &&\
    \ (c == e && c >= 0) ) \n\t\tret = true;\n\tif ( (c == e && c >= 0) && (d == f\
    \ && d >= 0) ) \n\t\tret = true;\n\t\n\treturn ret; \n} \nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf1az66v_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n  \n  int xint = int(x);\n  int yint = int(x);\n \
    \ int zint = int(x);\n  \n  if (xint == yint + zint) \n    return true; \n  \n\
    \  else \n    return false;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nYou should\
    \ also check for negative numbers since negative numbers can be added without\
    \ changing the result.\n<|/ c |>\n<| c |>\nThis code was very helpful for me.\
    \ Thank you.\n<|/ c |>\n<| a tags=c++ dscore=1 |>\n<code>\n#include <iostream>\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpv207k882.d(29): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpv207k882.d(29): Error: semicolon expected, not \'')\''\n/tmp/tmpv207k882.d(29):
    Error: found \'')\'' instead of statement\n/tmp/tmpv207k882.d(30): Error: found
    \''(\'' when expecting \''.\'' following int\n/tmp/tmpv207k882.d(30): Error: semicolon
    expected, not \'')\''\n/tmp/tmpv207k882.d(30): Error: found \'')\'' instead of
    statement\n/tmp/tmpv207k882.d(31): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpv207k882.d(31): Error: semicolon expected, not \'')\''\n/tmp/tmpv207k882.d(31):
    Error: found \'')\'' instead of statement\n/tmp/tmpv207k882.d(39): Error: Declaration
    expected, not \''<\''\n/tmp/tmpv207k882.d(54): Error: Declaration expected, not
    \''assert\''\n/tmp/tmpv207k882.d(55): Error: Declaration expected, not \''assert\''\n/tmp/tmpv207k882.d(56):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpv207k882.d(57): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpv207k882.d(58): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpv207k882.d(59): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpv207k882.d(60): Error: Declaration expected, not \''assert\''\n/tmp/tmpv207k882.d(61):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpv207k882.d(62): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpv207k882.d(63): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpv207k882.d(64): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv207k882.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(isInt(x) && isInt(y) && isInt(z))\n    {\n\
    \        float temp = x + y;\n        if(isInt(temp) && isInt(z)) return true;\n\
    \    }\n    return false;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\nHere is another\
    \ way to solve this problem in Java\n<code>\nprivate static boolean areAllIntsAreEqualToEachOther(int...\
    \ numbers) {\n  int sum = 0;\n  for (int i : numbers) {\n    sum += i;\n  }\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgkeun6cc.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmpgkeun6cc.d(42):
    Error: Declaration expected, not \''for\''\n/tmp/tmpgkeun6cc.d(44): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgkeun6cc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.algorithm.is_integer(x) && std.algorithm.is_integer(y)\
    \ && std.algorithm.is_integer(z)) || \n            (std.algorithm.is_integer(x)\
    \ && std.algorithm.is_integer(z) && std.algorithm.is_integer(y)) ||\n        \
    \    (std.algorithm.is_integer(y) && std.algorithm.is_integer(x) && std.algorithm.is_integer(z))\
    \ ||\n            (std.algorithm.is_integer(y) && std.algorithm.is_integer(z)\
    \ && std.algorithm.is_integer(x)));\n}\n/*\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8r1cghvg.d(33): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp8r1cghvg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = (x == y) + !(x != y && z != 0);\n\
    \    result &= !((x == y) + (z != 0)); \n    return result;\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsit29c40.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif(x==y || (x>0 && y>0) || (x<0 && y<0))\n\t\treturn\
    \ true;\n\t\n\tif( ((x>0 && x<1) && z>0) || ((x>0 && x<1) && z<0) || ((x<0 &&\
    \ x>1) && z>0) || ((x<0 && x>1) && z<0) )\n\t\treturn false;\n\t\n\treturn (x>y\
    \ || x<z || y>z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfh0rcveo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return x != y && x != z && y != z;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw8rw4rnp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978429
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt02jrmtr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n\tif (x < y)\n\t\treturn false; \n\tif (y < z)\n\t\
    \treturn false; \n\tif (z < x)\n\t\treturn false; \n\tbool a = isint(x); \n\t\
    bool b = isint(y); \n\tbool c = isint(z); \n\treturn (a || b || c); \n} \nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphf899ypk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    \n    return any([x >= y, x >= z, y >= z]);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo5d3a17c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\t\n\tif((x==y||x==z||y==z||x==z)) {\n\t\treturn true;\n\
    \t}\n\t\n\treturn false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n \
    \   assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprky6u1d7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (((x == y) || (x == z)) && \n         \
    \   ((y == z) || (y == x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpboz8bdqw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x + (y >= 0 ? z : -z)) >= (int) x);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmn1430m0.d(28): Error: C style cast illegal, use cast(int)x\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmn1430m0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    // TODO: Use real numbers\n    float temp = (x\
    \ + y + z) / 3;\n    return temp == std.typecons.integer(x) || temp == std.typecons.integer(y)\
    \ || temp == std.typecons.integer(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcleqeqln.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(x == y)\n    {\n        if(!std.isint(x))\n\
    \            return false;\n        if(!std.isint(z))\n            return false;\n\
    \        return true;\n    }\n    if(!std.isint(x))\n        return false;\n \
    \   if(!std.isint(y))\n        return false;\n    if(z != 0)\n    {\n        if(!std.isint(z))\n\
    \            return false;\n    }\n    else\n    {\n        if(std.isint(x) &&\
    \ std.isint(y))\n            return true;\n        else if(std.isint(x) && std.isint(y))\n\
    \            return false;\n        else\n            return false;\n    }\n \
    \   return true;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph7uia48m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    auto a = (int)(x); \n    auto b = (int)(y); \n\
    \    auto c = (int)(z); \n    return ((a==b && a==c) || \n            (b==a &&\
    \ b==c) || \n            (a==b && b==c && c==a)) ;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp55klfvpr.d(28): Error: C style cast illegal, use cast(int)x\n/tmp/tmp55klfvpr.d(29):
    Error: C style cast illegal, use cast(int)y\n/tmp/tmp55klfvpr.d(30): Error: C
    style cast illegal, use cast(int)z\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp55klfvpr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return x != 0.0f && y != 0.0f && z != 0.0f &&\
    \ std::find(std::begin(x), std::end(x), x) != std::end(x) && std::find(std::begin(y),\
    \ std::end(y), y) != std::end(y) && std::find(std::begin(z), std::end(z), z) !=\
    \ std::end(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2fkh9wq6.d(28): Error: found \'':\'' when expecting \'';\''
    following return statement\n/tmp/tmp2fkh9wq6.d(28): Error: found \'':\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2fkh9wq6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (is_int(x) && is_int(y) && is_int(z)) return\
    \ true; \n    \n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxhs7o95m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isint(x) && std.math.isint(y)\
    \ && std.math.isint(z)) || (std.math.isint(y) && std.math.isint(z) && std.math.isint(x)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqm25gd8s.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    \n    return ((x==((y+z)))&&(y==((x+z)))&&(z==((x+y))));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgwd5xw3t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x == z) || (y == z)) || ((x == y) &&\
    \ (z == z));\n}\n</code>\n<|/ a tags=c++,function,variadic-functions,functional-programming\
    \ dscore=0 |>\n<| c |>\nThanks I'll look into that\n<|/ c |>\n<| a dscore=0 |>\n\
    You could use std::all_of:\n<code>\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpint97bs_.d(30): Error: Declaration expected, not \''<\''\n/tmp/tmpint97bs_.d(33):
    Error: unterminated character constant\n/tmp/tmpint97bs_.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpint97bs_.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpint97bs_.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmpint97bs_.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpint97bs_.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpint97bs_.d(47): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpint97bs_.d(48): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpint97bs_.d(49): Error: Declaration expected, not \''assert\''\n/tmp/tmpint97bs_.d(50):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpint97bs_.d(51): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpint97bs_.d(52): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpint97bs_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{ \n    return x == y || (isinteger(x) && isinteger(y)\
    \ && isinteger(z)) || \n           (isinteger(x) && isinteger(y) && !isinteger(z))\
    \ || \n           (!isinteger(x) && isinteger(y) && isinteger(z));\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsrjh1gbq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool is_int_x = isinteger(x);\n    bool is_int_y\
    \ = isinteger(y);\n    bool is_int_z = isinteger(z);\n    if(is_int_x && is_int_y\
    \ && is_int_z)\n    {\n        return (x + y + z == (x + y) || x + y + z == (x\
    \ + y) || x + y + z == (x + y));\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp31vsvovi.d(40): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp31vsvovi.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (x == y || x == z || y == z || is_integer(x)\
    \ && is_integer(y) && is_integer(z));\n}\n\"\"\")\n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcbpg2wej.d(30): Error: Declaration expected, not \''""\''\n/tmp/tmpcbpg2wej.d(30):
    Error: unterminated string constant starting at /tmp/tmpcbpg2wej.d(30)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcbpg2wej.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\treturn (x && y && z && x==((int)x+(int)y+(int)z)\
    \ && (int)x==(int)x && (int)y==(int)y && (int)z==(int)z);\n}\nunittest\n{\n  \
    \  alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn_gpy4x3.d(28): Error: C style cast illegal, use cast(int)x\n/tmp/tmpn_gpy4x3.d(28):
    Error: C style cast illegal, use cast(int)y\n/tmp/tmpn_gpy4x3.d(28): Error: C
    style cast illegal, use cast(int)z\n/tmp/tmpn_gpy4x3.d(28): Error: C style cast
    illegal, use cast(int)x\n/tmp/tmpn_gpy4x3.d(28): Error: C style cast illegal,
    use cast(int)x\n/tmp/tmpn_gpy4x3.d(28): Error: C style cast illegal, use cast(int)y\n/tmp/tmpn_gpy4x3.d(28):
    Error: C style cast illegal, use cast(int)y\n/tmp/tmpn_gpy4x3.d(28): Error: C
    style cast illegal, use cast(int)z\n/tmp/tmpn_gpy4x3.d(28): Error: C style cast
    illegal, use cast(int)z\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn_gpy4x3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif (x < y)\n\t{\n\t\tif (y < z)\n\t\t\treturn true;\n\
    \t\telse\n\t\t\treturn false;\n\t}\n\telse\n\t{\n\t\tif (x > z)\n\t\t\treturn\
    \ true;\n\t\telse\n\t\t\treturn false;\n\t}\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9p5p5rdi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    double a, b, c;\n    bool a = x == y + z;\n  \
    \  bool b = x != y + z;\n    bool c = y == z + x;\n    bool d = y != z + x;\n\
    \    return a || b || c || d;\n}\n</code>\n<|/ a |>\n<| c |>\nWhy would this be\
    \ the accepted answer?  It does not work with the example provided in OP's question.\
    \  This answer does not even try to answer the question.  For your code to work\
    \ the example would have to be: any_int(5L, 2L, 7L)  ... or any_int(5L, 2L, 7L)\
    \  ... or any_int(3L, 2L, 2L)\n<|/ c |>\n<| c |>\nI'm sorry but what is a question\
    \ asking for \"a function that takes 3 numbers.\"? The question states \"3 numbers\"\
    \ (three arguments). So this answer matches the example provided in the question.\n\
    <|/ c |>\n<| c |>\nThe question states \"a function that takes 3 numbers\". Which\
    \ is what my code provides and will work for that case too.  If you really don't\
    \ like my answer, I'll delete it.\n<|/ c |>\n<| c |>\nThe question states \"a\
    \ function that takes 3 numbers\". The answer provided does not meet that requirement.\
    \  I have run your code against the example provided in OPs question and your\
    \ code fails the example.  So this answer does not meet OPs requirements.\n<|/\
    \ c |>\n<| c |>\nI see. Yeah, I read that as \"three integers\". I guess \"a function\
    \ that takes 3 numbers\" would be a better phrase.\n<|/ c |>\n<| a dscore=2 tags=int,c++,double,floating-point,boolean\
    \ |>\nYou want to return true only if all 3 are integers\n<code>\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6w5nz5v7.d(35): Error: Declaration expected, not \''<\''\n/tmp/tmp6w5nz5v7.d(38):
    Error: unterminated character constant\n/tmp/tmp6w5nz5v7.d(41): Error: unterminated
    character constant\n/tmp/tmp6w5nz5v7.d(44): Error: unterminated character constant\n/tmp/tmp6w5nz5v7.d(44):
    Error: unterminated character constant\n/tmp/tmp6w5nz5v7.d(59): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp6w5nz5v7.d(60): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp6w5nz5v7.d(61): Error: Declaration expected, not \''assert\''\n/tmp/tmp6w5nz5v7.d(62):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp6w5nz5v7.d(63): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp6w5nz5v7.d(64): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp6w5nz5v7.d(65): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp6w5nz5v7.d(66): Error: Declaration expected, not \''assert\''\n/tmp/tmp6w5nz5v7.d(67):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp6w5nz5v7.d(68): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp6w5nz5v7.d(69): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6w5nz5v7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    \n    // TODO: use std.algorithm.equal\n    if\
    \ (x == y) return true;\n    \n    bool result = false;\n    \n    \n    if ((x\
    \ < y) != (y < x)) result = true;\n    \n    if (x == z) result = true;\n    \n\
    \    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpied2v7o3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x != 0.0f) || (y != 0.0f) || (z != 0.0f))\n\
    \        && (std.math.are_int(x) && std.math.are_int(y) && std.math.are_int(z))\n\
    \        && std.typecons.are_both_int(x);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8pxxgg6u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x || y) && std.int._opEq(x,std.int._add(std.int._add(x,\
    \ y), z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp944f7dfz.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp944f7dfz.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp944f7dfz.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp944f7dfz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(!std.isint(x)) throw new core.UnsupportedError(\"\
    x is not integer!\");\n    if(!std.isint(y)) throw new core.UnsupportedError(\"\
    y is not integer!\");\n    if(!std.isint(z)) throw new core.UnsupportedError(\"\
    z is not integer!\");\n    if(std.isint(x) && std.isint(y) && std.isint(z)) \n\
    \    {\n        if(std.type_eq(x, y, z)) return true;\n        else \n       \
    \ {\n            float tx = std.type_add(x,z);\n            float ty = std.type_add(y,z);\n\
    \            if(std.type_eq(tx, ty)) return true;\n        }\n    }\n    return\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqcmadm1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return (x == y || x == z || y == z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptdyvbeu0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if( std.isint(x) &&  std.isint(y) &&  std.isint(z)\
    \ ){\n        return  x+y+z == std.int(x+y+z);\n    }\n    return false;\n}\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw3en6lek.d(29): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw3en6lek.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tif (std.num.compare(x, std.num.sum(y, z)) == 0)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1yszg8qm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n  return !std.cint.not_any()(x, y, z) && std.typecons.is_int(std.math.add(x,y,z));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt3d8c3on.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    typedef bool (*fn)(float, float, float);\n  \n\
    \    int a = floor(x);\n    int b = floor(y);\n    int c = floor(z);\n    \n \
    \   return \n      a == b || a == c || b == c || a == b || b == c || a == b ||\
    \ a == c || b == c || a == b || a == c || b == c;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbgd4jhmv.d(28): Deprecation: use of typedef is deprecated; use
    alias instead\n/tmp/tmpbgd4jhmv.d(28): Deprecation: C-style function pointer and
    pointer to array syntax is deprecated. Use \''function\'' to declare function
    pointers\nError: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbgd4jhmv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ( \n                int( x == y + z ) ==\
    \ x &&\n                int( x == y - z ) == x &&\n                int( x == z\
    \ + y ) == x &&\n                int( x == z - y ) == x &&\n                int(\
    \ y == z + x ) == y &&\n                int( y == z - x ) == y &&\n          \
    \      int( z == z + x ) == z &&\n                int( z == z - x ) == z &&\n\
    \                int(x) == int(x) &&\n                int(y) == int(y) &&\n  \
    \              int(z) == int(z) &&\n                x >= 0 &&\n              \
    \  x <= 1 &&\n                y >= 0 &&\n                y <= 1 &&\n         \
    \       z >= 0 &&\n                z <= 1 &&\n                x != y &&\n    \
    \            x != z &&\n                y != z &&\n                x != y &&\n\
    \                x != z &&\n                y != z\n              );\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj5qunvf8.d(29): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpj5qunvf8.d(30): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmpj5qunvf8.d(30): Error: found \'')\'' when expecting \'';\''
    following return statement\n/tmp/tmpj5qunvf8.d(30): Error: found \''==\'' instead
    of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj5qunvf8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n\tassert(typecons.is_integral(y));\n\tassert(typecons.is_integral(z));\n\
    \tassert(typecons.is_integral(x));\n\t\n\tif ( (typecons.is_integral(y)&&typecons.is_integral(z))\
    \ && (typecons.is_integral(x)&&(typecons.is_integer(x)) )) \n\t{\n\t\tint xint\
    \ = typecons.to_integer(x);\n\t\tint yint = typecons.to_integer(y);\n\t\tint zint\
    \ = typecons.to_integer(z);\n\t\t\n\t\tif ( (xint+yint+zint) == (x+y+z) ) return\
    \ true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n\t\n\treturn false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi_gp0j3m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if(x != 0 && y != 0 && z != 0) {\n        bool\
    \ eq1 = (x == y + z);\n        bool eq2 = (x == z);\n        bool eq3 = (y ==\
    \ z);\n        bool eq4 = (x == y && y == z);\n        bool eq5 = (x == y || y\
    \ == z);\n        bool eq6 = (x == z || y == z);\n        bool eq7 = (x == y ||\
    \ y == x);\n        bool eq8 = (x == z || z == x);\n        bool eq9 = (y == z\
    \ || z == y);\n        bool eq10 = (y == x || x == y);\n        bool eq11 = (z\
    \ == x || x == z);\n        bool eq12 = (z == y || y == z);\n        bool eq13\
    \ = (z == x || x == z);\n        bool eq14 = (z == y || y == z);\n        bool\
    \ eq15 = (x == z || y == z);\n        bool eq16 = (y == z || x == z);\n      \
    \  bool eq17 = (y == x || y == x);\n        bool eq18 = (x == y || y == x);\n\
    \        bool eq19 = (x == z || z == x);\n        bool eq20 = (y == z || z ==\
    \ y);\n        bool eq21 = (z == x || y == z);\n        bool eq22 = (z == y ||\
    \ x == z);\n        bool eq23 = (y == z || y == z);\n        bool eq24 = (y ==\
    \ x || x == y);\n        bool eq25 = (z == x || x == z);\n        bool eq26 =\
    \ (z == y || y == z);\n        bool eq27 = (y == x || x == y);\n        bool eq28\
    \ = (x == z || y == z);\n        bool eq29 = (y == x || y == x);\n        bool\
    \ eq30 = (x == y || y == y);\n        bool eq31 = (z == x || z == y);\n      \
    \  bool eq32 = (y == z || z == x);\n        bool eq33 = (y == x || x == y);\n\
    \        bool eq34 = (x == z || y == z);\n        bool eq35 = (z == y || x ==\
    \ z);\n        bool eq36 = (y == z || y == z);\n        bool eq37 = (y == x ||\
    \ x == y);\n        bool eq38 = (z == x || y == z);\n        bool eq39 = (z ==\
    \ y || x == z);\n        bool eq40 = (y == z || y == z);\n        bool eq41 =\
    \ (z == x || z == y);\n        bool eq42 = (z == y || x == z);\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsnan2j13.d(71): Error: found \''unittest\'' instead of statement\n/tmp/tmpsnan2j13.d(86):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsnan2j13.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (fabs(x - y) < 1e-12) { return (x - y == 0);\
    \ }\n    if (fabs(x - z) < 1e-12) { return (x - z == 0); }\n    return (x + y\
    \ == z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8b4ij50_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430
- exit_code: 1
  program: "import std.typecons;\nimport std.math;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.typecons.is_int(x.type) && std.typecons.is_int(y.type)\
    \ && std.typecons.is_int(z.type)) || (std.typecons.is_double(x.type) && std.typecons.is_double(y.type)\
    \ && std.typecons.is_double(z.type)));\n}\n#endif\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp712drt36.d(30): Error: Declaration expected, not \''#\''\n/tmp/tmp712drt36.d(35):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp712drt36.d(36): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp712drt36.d(37): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp712drt36.d(38): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp712drt36.d(39): Error: Declaration expected, not \''assert\''\n/tmp/tmp712drt36.d(40):
    Error: Declaration expected, not \''assert\''\n/tmp/tmp712drt36.d(41): Error:
    Declaration expected, not \''assert\''\n/tmp/tmp712drt36.d(42): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp712drt36.d(43): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp712drt36.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmp712drt36.d(45):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp712drt36.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659978430

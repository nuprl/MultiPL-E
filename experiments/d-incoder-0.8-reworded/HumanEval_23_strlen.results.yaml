language: d
name: HumanEval_23_strlen
results:
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  int i=0;\n  while (string[i] != 0) i++;\n  return i;\n}\nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzzvxcqk5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0L;\n\t\n\tfor(auto i : string) \n\t{\n\t\tlen++L;\n\t}\n\t\
    \n\treturn len;\n}\n/*\n Return index of first occurrence of given substring\n\
    \    >>> strfind(\"abc\", \"bc\")\n    2L\n    >>> strfind(\"abc\", \"zbc\")\n\
    \    0L\n    \n*/\nlong strfind(string haystack, string needle)\n{\n\tlong idx\
    \ = 0L;\n\t\n\tfor(auto i : haystack) \n\t{\n\t\tif(needle == i) \n\t\t{\n\t\t\
    \tidx = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn idx;\n}\n/*\n Return index\
    \ of last occurrence of given substring\n    >>> strrfind(\"abc\", \"bc\")\n \
    \   3L\n    >>> strrfind(\"abc\", \"zbc\")\n    0L\n    \n*/\nlong strrfind(string\
    \ haystack, string needle)\n{\n\tlong idx = 0L;\n\t\n\tfor(auto i : haystack)\
    \ \n\t{\n\t\tif(needle == i) \n\t\t{\n\t\t\tidx = i;\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\t\n\treturn idx;\n}\n/*\n Return true if given string contains given substring\n\
    \    >>> strcontains(\"abc\", \"bc\")\n    True\n    >>> strcontains(\"abc\",\
    \ \"zbc\")\n    False\n    \n*/\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9fambrbc.d(14): Error: no identifier for declarator i\n/tmp/tmp9fambrbc.d(14):
    Error: expression expected, not \'':\''\n/tmp/tmp9fambrbc.d(14): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmp9fambrbc.d(16):
    Error: found \''L\'' when expecting \'';\'' following statement\n/tmp/tmp9fambrbc.d(33):
    Error: no identifier for declarator i\n/tmp/tmp9fambrbc.d(33): Error: expression
    expected, not \'':\''\n/tmp/tmp9fambrbc.d(33): Error: found \''haystack\'' when
    expecting \'';\'' following for condition\n/tmp/tmp9fambrbc.d(56): Error: no identifier
    for declarator i\n/tmp/tmp9fambrbc.d(56): Error: expression expected, not \'':\''\n/tmp/tmp9fambrbc.d(56):
    Error: found \''haystack\'' when expecting \'';\'' following for condition\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9fambrbc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong length = 0;\n\tint i = 0;\n\twhile(i != string.size - 1) \n\t{\n\
    \t\tlength += 1;\n\t\ti = i + 1;\n\t}\n\treturn length;\n}\n/*\n Check if given\
    \ string equal \"\"\n    >>> \"\" == \"\"\n    True\n    \n*/\nunittest\n{\n \
    \   alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpotnnet6r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result = 0;\n    \n\tfor(int i = 0; i < string.length; i++)\n\t\
    {\n\t\tresult += 1;\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbpes2gky.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint cnt = 0;\n\tchar ch;\n\twhile (cnt < string.length()) {\n\t\tch =\
    \ string[cnt];\n\t\tcnt++;\n\t}\n\treturn cnt;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1y42i5hl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i = 0;\n\tfor(i = 0; i < string.size; i++) {\n\t\tif(i == (string.size-1))\n\
    \t\t\treturn string.size(i);\n\t}\n\treturn string.size(i);\n}\nstring substr(string\
    \ string, int start, int len) {\n\treturn string.substr(start, len);\n}\nstring\
    \ substring(string string, int start, int len) {\n\treturn string.substring(start,\
    \ len);\n}\nstring append(string string, string stringToAppend) {\n\treturn string.append(stringToAppend);\n\
    }\nstring append(string string, string stringToAppend, string stringToAppend2)\
    \ {\n\treturn string.append(stringToAppend, stringToAppend2);\n}\nstring append(string\
    \ string, string stringToAppend, string stringToAppend2, string stringToAppend3)\
    \ {\n\treturn string.append(stringToAppend, stringToAppend2, stringToAppend3);\n\
    }\nstring append(string string, string stringToAppend, string stringToAppend2,\
    \ string stringToAppend3, string stringToAppend4) {\n\treturn string.append(stringToAppend,\
    \ stringToAppend2, stringToAppend3, stringToAppend4);\n}\nstring append(string\
    \ string, string stringToAppend, string stringToAppend2, string stringToAppend3,\
    \ string stringToAppend4, string stringToAppend5) {\n\treturn string.append(stringToAppend,\
    \ stringToAppend2, stringToAppend3, stringToAppend4, stringToAppend5);\n}\nstring\
    \ append(string string, string stringToAppend, string stringToAppend2, string\
    \ stringToAppend3, string stringToAppend4, string stringToAppend5, string stringToAppend6)\
    \ {\n\treturn string.append(stringToAppend, stringToAppend2, stringToAppend3,\
    \ stringToAppend4, stringToAppend5, stringToAppend6);\n}\nstring append(string\
    \ string, string stringToAppend, string stringToAppend2, string stringToAppend3,\
    \ string stringToAppend4, string stringToAppend5, string stringToAppend6, string\
    \ stringToAppend7) {\n\treturn string.append(stringToAppend, stringToAppend2,\
    \ stringToAppend3, stringToAppend4, stringToAppend5, stringToAppend6, stringToAppend7);\n\
    }\nstring append(string string, string stringToAppend, string stringToAppend2,\
    \ string stringToAppend3, string stringToAppend4, string stringToAppend5, string\
    \ stringToAppend6, string stringToAppend7, string stringToAppend8) {\n\treturn\
    \ string.append(stringToAppend, stringToAppend2, stringToAppend3, stringToAppend4,\
    \ stringToAppend5, stringToAppend6, stringToAppend7, stringToAppend8);\n}\nstring\
    \ append(string string, string stringToAppend, string stringToAppend2, string\
    \ stringToAppend3, string stringToAppend4, string \nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqsz4ark4.d(50): Error: found \''unittest\'' when expecting \'')\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqsz4ark4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong result = 0;\n\tauto len = string.length();\n\tfor(auto i=0;i<len;++i){\n\
    \t\tresult += std.math::abs(string.data()[i]-'0');\n\t}\n\treturn result;\n}\n\
    /*\n Return number of characters in given string\n    >>> strlen(\"abc\")\n  \
    \  3L\n    \n*/\nsize_t strlen(string string) \n{\n\tsize_t result = 0;\n\tauto\
    \ len = string.length();\n\tfor(auto i=0;i<len;++i){\n\t\tresult += std.math::abs(string.data()[i]-'0');\n\
    \t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkbhz8r4s.d(15): Error: found \'':\'' when expecting \'';\''
    following statement\n/tmp/tmpkbhz8r4s.d(15): Error: found \'':\'' instead of statement\n/tmp/tmpkbhz8r4s.d(30):
    Error: found \'':\'' when expecting \'';\'' following statement\n/tmp/tmpkbhz8r4s.d(30):
    Error: found \'':\'' instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpkbhz8r4s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tauto l = string.length();\n\treturn l;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjm9b8e3e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i, n = 1;\n    \n    for (i = 0; i < string.size(); ++i)\n    \
    \    if (string[i] != 0)\n            n = 1 + n;\n    \n    return n;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp69c0wjwc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long l;\n    for (l = 0; l < string.length; ++l)\n        if (!isalpha(string[l]))\n\
    \            break;\n    return l;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp95igqnlr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length = 0L;\n    int i;\n    for(i=0; i<string.length; ++i)\n\
    \    {\n        if(string.charAt(i) != '\\0')\n            ++length;\n    }\n\
    \    return length;\n}\n/*\n Return length of given string\n    >>> strlen()\n\
    \    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\n\
    {\n    long length = 0L;\n    int i;\n    for(i=0; i<string.length; ++i)\n   \
    \ {\n        if(string.charAt(i) != '\\0')\n            ++length;\n    }\n   \
    \ return length;\n}\n/*\n Return length of given string\n    >>> strlen()\n  \
    \  0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\n\
    {\n    long length = 0L;\n    int i;\n    for(i=0; i<string.length; ++i)\n   \
    \ {\n        if(string.charAt(i) != '\\0')\n            ++length;\n    }\n   \
    \ return length;\n}\n/*\n Return length of given string\n    >>> strlen()\n  \
    \  0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\n\
    {\n    long length = 0L;\n    int i;\n    for(i=0; i<string.length; ++i)\n   \
    \ {\n        if(string.charAt(i) != '\\0')\n            ++length;\n    }\n   \
    \ return length;\n}\n/*\n Return length of given string\n    >>> strlen()\n  \
    \  0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\n\
    {\n    long length = 0L;\n    int i;\n    for(i=0; i<string.length; ++i)\n   \
    \ {\n        if(string.charAt(i) != '\\0')\n            ++length;\n    }\n   \
    \ return length;\n}\n/*\n Return length of given string\n    >>> strlen()\n  \
    \  0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\n\
    {\n    long length = 0L;\n    int i;\n    for(i=0; i<string.length; ++i)\n   \
    \ {\n        if(string.charAt(i) != '\\0')\n            ++length;\n    }\n   \
    \ return length;\n}\n/*\n Return length of given string\n    >>> strlen()\n  \
    \  0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\n\
    {\n    long length = 0L;\n    int i;\n    for(i=0; i<string.length; ++i)\n   \
    \ {\n        if(string.charAt(i) != '\\0')\n\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmz7gnjj7.d(132): Error: found \''unittest\'' instead of statement\n/tmp/tmpmz7gnjj7.d(140):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmz7gnjj7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n\tint i = 0;\n\twhile (string[i]) \n\t\t++i;\n\treturn i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfff0xm35.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length;\n    const char *p;\n    for(p = string.data; p != string.data\
    \ + string.size; p++)\n    {\n        if(*p == '\\0')\n        {\n           \
    \ length = p - string.data;\n            break;\n        }\n        else\n   \
    \     {\n            length++;\n        }\n    }\n    return length;\n}\n/*\n\
    \ Return string with specified length cut off from the end.\n    >>> strrchr(\"\
    abc\", 0)\n    'abc'\n    >>> strrchr(\"abc\", 0)\n    'abc'\n    >>> strrchr(\"\
    abc\", 3)\n    'cb'\n    >>> strrchr(\"abc\", 3)\n    'cb'\n    >>> strrchr(\"\
    abc\", 3)\n    'cb'\n*/\nstring strrchr(string string, long length) \n{\n    long\
    \ i;\n    string s;\n    for(i = string.size - 1, s = string; i >= 0; i--)\n \
    \   {\n        if(string.data[i] == length)\n        {\n            s.data = string.data\
    \ + i;\n            s.size = i - 1;\n            return s;\n        }\n    }\n\
    \    s.data = string.data;\n    s.size = 0;\n    return s;\n}\n/*\n Return string\
    \ with specified length cut off from the beginning.\n    >>> strlchr(\"abc\",\
    \ 0)\n    'abc'\n    >>> strlchr(\"abc\", 0)\n    'abc'\n    >>> strlchr(\"abc\"\
    , 3)\n    'ab'\n    >>> strlchr(\"abc\", 3)\n    'ab'\n*/\nstring strlchr(string\
    \ string, long length) \n{\n    long i;\n    string s;\n    for(i = 0; i < string.size;\
    \ i++)\n    {\n        if(string.data[i] == length)\n        {\n            s.data\
    \ = string.data;\n            s.size = i;\n            return s;\n        }\n\
    \    }\n    s.data = string.data;\n    s.size = 0;\n    return s;\n}\n/*\n Compare\
    \ string with specified length\n    >>> strncmp(\"abc\", \"abc\", 1)\n    0L\n\
    \    >>> strncmp(\"abc\", \"abc\", 2)\n    0L\n    >>> strncmp(\"abc\", \"abc\"\
    , 3)\n    1L\n*/\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1_n1mh9p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(char i : string) \n    {\n        len\
    \ += 1;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd1_5s6y6.d(14): Error: semicolon expected, not \'':\''\n/tmp/tmpd1_5s6y6.d(14):
    Error: expression expected, not \'':\''\n/tmp/tmpd1_5s6y6.d(14): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpd1_5s6y6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint n;\n\tlong len=0;\n\tfor(n=0;n<(string.length());n++)\n\t\tlen++;\n\
    \treturn len;\n}\n/*\n Convert given string from UTF-8 to Unicode\n    >>> str(u\"\
    a\")\n    'a'\n    >>> str(u\"abc\")\n    'abc'\n*/\nstring str(string string)\n\
    {\n\tint n=0,i;\n\tstring temp;\n\tfor(i=0;i<(string.length());i++)\n\t{\n\t\t\
    if(string.at(i)<0x80)\n\t\t\ttemp+=string[i];\n\t\telse\n\t\t{\n\t\t\tif(temp.length()>0)\n\
    \t\t\t\tn+=utf8tounicode(n,temp);\n\t\t\ttemp=\"\";\n\t\t\tn++;\n\t\t}\n\t}\n\t\
    if(temp.length()>0)\n\t\tn+=utf8tounicode(n,temp);\n\treturn n;\n}\n/*\n Convert\
    \ given string from UTF-8 to Unicode\n    >>> str(u\"a\")\n    'a'\n    >>> str(u\"\
    abc\")\n    'abc'\n*/\nstring unicode(string string)\n{\n\tint n=0,i;\n\tstring\
    \ temp;\n\tfor(i=0;i<(string.length());i++)\n\t{\n\t\tif(string.at(i)<0x80)\n\t\
    \t\ttemp+=string[i];\n\t\telse\n\t\t{\n\t\t\tif(temp.length()>0)\n\t\t\t\tn+=unicodetoutf8(n,temp);\n\
    \t\t\ttemp=\"\";\n\t\t\tn++;\n\t\t}\n\t}\n\tif(temp.length()>0)\n\t\tn+=unicodetoutf8(n,temp);\n\
    \treturn n;\n}\n/*\n Convert given string to UTF-8\n    >>> utf8(\"a\")\n    'a'\n\
    \    >>> utf8(\"abc\")\n    'abc'\n*/\nstring utf8(string string)\n{\n\tint i;\n\
    \tint n=0;\n\tstring temp=\"\";\n\tfor(i=0;i<(string.length());i++)\n\t{\n\t\t\
    if(string.at(i)<0x80)\n\t\t\ttemp+=string.at(i);\n\t\telse\n\t\t{\n\t\t\tif(temp.length()>0)\n\
    \t\t\t\tn+=utf8tounicode(n,temp);\n\t\t\ttemp=\"\";\n\t\t\tn++;\n\t\t}\n\t}\n\t\
    if(temp.length()>0)\n\t\tn+=utf8tounicode(n,temp);\n\treturn n;\n}\n/*\n Convert\
    \ given string to Unicode\n    >>> unicode(\"a\")\n    'a'\n    >>> unicode(\"\
    abc\")\n    'abc'\n*/\nstring unicode(string string)\n{\n\tint i;\n\tint n=0;\n\
    \tstring temp=\"\";\n\tfor(i=0;i<(string.length());i++)\n\t{\n\t\tif(string.at(i)<0x80)\n\
    \t\t\ttemp+=string.at(i);\n\t\telse\n\t\t{\n\t\t\tif(temp.length()>0)\n\t\t\t\t\
    \nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph6wn4zi6.d(120): Error: found \''unittest\'' instead of statement\n/tmp/tmph6wn4zi6.d(128):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmph6wn4zi6.d(128):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph6wn4zi6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tsize_t length = 0 ;\n\tfor (auto c : string)\n\t{\n\t\tlength++;\n\t\
    }\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwyhhw9ba.d(13): Error: no identifier for declarator c\n/tmp/tmpwyhhw9ba.d(13):
    Error: expression expected, not \'':\''\n/tmp/tmpwyhhw9ba.d(13): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpwyhhw9ba.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    string newString = string;\n    size_t len = 0;\n    size_t pos = 0;\n\
    \    while ( newString[pos] ) {\n        ++len;\n        ++pos;\n    }\n    return\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3yui3_xr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result = 0;\n\t\n    for(long i = 0; i < string.length; ++i)\n\
    \        result += (string.charAt(i) == '\\0' ? 0 : 1L);\n        \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0plw4nc8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long i = 0;\n    while (i < string.length) \n        ++i;\n    return\
    \ i;\n}\n</code>\nThis algorithm is O(n), which means it's very fast and you don't\
    \ have to worry about memory management.  This is basically the same algorithm\
    \ that you'd have to write if you wanted to write your own string copy function.\n\
    <|/ a tags=string,string-length,stl,c++ dscore=3 |>\n<| a tags=string,string-length,stl,c++\
    \ |>\nIt's easy enough to write your own string length function using std::strlen().\
    \ \nIf you don't want to do that, you could use std::getline() and std::stoi()\
    \ to find the end of line. Something like this:\n<code>\nstd::string s1(1000000,\
    \ \"a\");\nstd::string s2(1000000, \"a\");\nstd::cout << s1 << std::endl;\nstd::cout\
    \ << s2 << std::endl;\nstd::string::size_type i = 0;\nstd::string::size_type j\
    \ = 0;\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwt8zwfl4.d(17): Error: Declaration expected, not \''<\''\n/tmp/tmpwt8zwfl4.d(18):
    Error: unterminated character constant\n/tmp/tmpwt8zwfl4.d(18): Error: unterminated
    character constant\n/tmp/tmpwt8zwfl4.d(18): Error: unterminated character constant\n/tmp/tmpwt8zwfl4.d(21):
    Error: unterminated character constant\n/tmp/tmpwt8zwfl4.d(22): Error: unterminated
    character constant\n/tmp/tmpwt8zwfl4.d(25): Error: no identifier for declarator
    std\n/tmp/tmpwt8zwfl4.d(25): Error: Declaration expected, not \'':\''\n/tmp/tmpwt8zwfl4.d(26):
    Error: no identifier for declarator std\n/tmp/tmpwt8zwfl4.d(26): Error: Declaration
    expected, not \'':\''\n/tmp/tmpwt8zwfl4.d(27): Error: no identifier for declarator
    std\n/tmp/tmpwt8zwfl4.d(27): Error: Declaration expected, not \'':\''\n/tmp/tmpwt8zwfl4.d(28):
    Error: no identifier for declarator std\n/tmp/tmpwt8zwfl4.d(28): Error: Declaration
    expected, not \'':\''\n/tmp/tmpwt8zwfl4.d(29): Error: no identifier for declarator
    std\n/tmp/tmpwt8zwfl4.d(29): Error: Declaration expected, not \'':\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwt8zwfl4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i=0;\n\twhile (string[i]!='\\0') \n\t{\n\t\ti++;\n\t}\n\treturn i;\n\
    }\n/*\n Convert string to uppercase.\n >>> toupper(\"abc\")\n    'ABC'\n*/\nstring\
    \ toupper(string string) \n{\n\tfor (int i=0; i<string.length(); i++) {\n\t\t\
    string[i] = toupper(string[i]);\n\t}\n\treturn string;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphmqma8zr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long i;\n    \n    for (i = 0; string[i] != '\\0'; i++) {\n       \
    \ ;\n    }\n    \n    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmos75f86.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong length;\n\t\n\tstring=trimright(string);\n\t\n\tlength = 0;\n\t\n\
    \tfor(string::iterator it = string.begin(); it != string.end(); ++it) {\n\t\t\
    if (*it != ' ' && tolower(*it) != '\\0') {\n\t\t\t++length;\n\t\t}\n\t}\n\t\n\t\
    return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw9fibrrb.d(18): Error: found \'':\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw9fibrrb.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    auto len = string.length();\n    \n    if (len == 0) {\n        return\
    \ 0L;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxurov5d5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n\tlong len = -1L;\n\t\n\tif (string == null) return len;\n\t\n\tfor (len\
    \ = 0; (string[len] != 0) && (string[len] != 10) && (string[len] != 13) && (string[len]\
    \ != 10);) len++;\n\t\n\treturn len; \n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu5y44w8g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = string.length;\n\t\n\tfor (len = 0; len < string.length; ++len)\n\
    \t\tif (!string.charCodeAt(len)) {\n\t\t\tbreak;\n\t\t}\n\t\n\treturn len;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqyw2ero_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i, length = 0;\n\t\n\tfor(i=0; i<string.length(); i++)\n\t{\n\t\t\
    if(string.at(i) == 0)\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tlength++;\n\t}\n\t\n\t\
    return length;\n}\n/*\n Return length of given string\n    >>> strlen(\"abc\"\
    )\n    3L\n    >>> strlen(\"ab\")\n    2L\n    \n*/\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbilyy946.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i = 0;\n\twhile(string.data[i])\n\t\ti++;\n\treturn i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1nvfwu6z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  return length;\n}\n/*\n Return substring of given string\n    >>> substr(\"\
    abracadabra\", 0, 6)\n    \"abracad\"\n    >>> substr(\"abracadabra\", 3, 9)\n\
    \    \"abracadabra\"\n    \n*/\nstring substr(string string, long startIndex,\
    \ long length)\n{\n  return string.substr(startIndex, length);\n}\n/*\n Return\
    \ length of substring\n    >>> strlen(\"abracadabra\")\n    10L\n    \n*/\nlong\
    \ substrlen(string string, long startIndex, long length) \n{\n  return string.substrlen(startIndex,\
    \ length);\n}\n/*\n Return reverse of given string\n    >>> strrev(\"abracadabra\"\
    )\n    \"rabadabrac\"\n    \n*/\nstring strrev(string string)\n{\n  string result;\n\
    \  string temp = string.data;\n  \n  while (!string.eof()) {\n    result.push_back(temp[string.rpos()]);\n\
    \  }\n  return result;\n}\n/*\n Return count of first occurrence of substring\
    \ in string\n    >>> strstr(\"abracadabra\", \"abracad\")\n    4L\n    >>> strstr(\"\
    abracadabra\", \"raba\")\n    0L\n    \n*/\nlong strstr(string string, string\
    \ substring) \n{\n  return string.strstr(substring);\n}\n/*\n Return index of\
    \ first occurrence of substring in string\n    >>> strindex(\"abracadabra\", \"\
    abracad\")\n    4L\n    >>> strindex(\"abracadabra\", \"raba\")\n    -1L\n   \
    \ \n*/\nlong strindex(string string, string substring) \n{\n  return string.strindex(substring);\n\
    }\n/*\n Return index of first occurrence of substring in string\n    >>> strrindex(\"\
    abracadabra\", \"abracad\")\n    8L\n    >>> strrindex(\"abracadabra\", \"raba\"\
    )\n    -1L\n    \n*/\nlong strrindex(string string, string substring) \n{\n  return\
    \ string.strrindex(substring);\n}\n/*\n Convert string to lower case\n    >>>\
    \ strtolower(\"Abracadabra\")\n    \"abracadabra\"\n    \n*/\nstring strtolower(string\
    \ string)\n{\n  return string.strtolower();\n}\n/*\n Convert string to upper case\n\
    \    >>> strtoupper(\"abracadabra\")\n    \"ABRACADABRA\"\n    \n*/\nstring strtoupper(\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3hmxaq29.d(105): Error: basic type expected, not unittest\n/tmp/tmp3hmxaq29.d(105):
    Error: found \''unittest\'' when expecting \'')\''\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp3hmxaq29.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tif (string == \"\")\n\t{\n\t\treturn 0L;\n\t}\n\telse\n\t{\n\t\tsize_t\
    \ len = string.size();\n\t\t\n\t\tif (len <= MAX_STR_SIZE)\n\t\t\treturn len +\
    \ sizeof(char);\n\t\t\n\t\tstring newString = \"\";\n\t\tint i = 0;\n\t\t\n\t\t\
    while(i < len && newString.size() < MAX_STR_SIZE)\n\t\t{\n\t\t\tnewString += string[i];\n\
    \t\t\t++i;\n\t\t}\n\t\t\n\t\tstring newString2 = \"\";\n\t\tint j = 0;\n\t\t\n\
    \t\twhile(j < MAX_STR_SIZE)\n\t\t{\n\t\t\tnewString2 += newString[j];\n\t\t\t\
    ++j;\n\t\t}\n\t\t\n\t\treturn newString2.size();\n\t}\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8bj_4tf3.d(21): Error: found \'')\'' when expecting \''.\''
    following char\n/tmp/tmp8bj_4tf3.d(21): Error: found \'';\'' when expecting identifier
    following \''char.\''\n/tmp/tmp8bj_4tf3.d(23): Error: found \''string\'' when
    expecting \'',\''\n/tmp/tmp8bj_4tf3.d(23): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmp8bj_4tf3.d(24): Error: found \''i\'' when expecting \''.\'' following
    int\n/tmp/tmp8bj_4tf3.d(24): Error: found \''=\'' when expecting identifier following
    \''int.\''\n/tmp/tmp8bj_4tf3.d(24): Error: found \''0\'' when expecting \'',\''\n/tmp/tmp8bj_4tf3.d(24):
    Error: expression expected, not \'';\''\n/tmp/tmp8bj_4tf3.d(26): Error: found
    \''while\'' when expecting \'',\''\n/tmp/tmp8bj_4tf3.d(26): Error: found \''<\''
    when expecting \'')\''\n/tmp/tmp8bj_4tf3.d(26): Error: missing { ... } for function
    literal\n/tmp/tmp8bj_4tf3.d(26): Error: found \''len\'' when expecting \'',\''\n/tmp/tmp8bj_4tf3.d(26):
    Error: expression expected, not \''&&\''\n/tmp/tmp8bj_4tf3.d(26): Error: found
    \''newString\'' when expecting \'',\''\n/tmp/tmp8bj_4tf3.d(27): Error: found \''{\''
    when expecting \'';\'' following return statement\n/tmp/tmp8bj_4tf3.d(43): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8bj_4tf3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    if (string) {\n        len = (string).len;\n   \
    \ }\n    return len;\n}\n/*\n Convert string to lower case\n    >>> strlower(\"\
    Hello world\")\n    \"hello world\"\n*/\nstring strlower(string string) \n{\n\
    \    char temp[string.length];\n    memcpy (temp, string.data, string.length);\n\
    \    string.data = temp;\n    return string;\n}\n/*\n Convert string to upper\
    \ case\n    >>> strupper(\"Hello world\")\n    \"HELLO WORLD\"\n*/\nstring strupper(string\
    \ string) \n{\n    char temp[string.length];\n    memcpy (temp, string.data, string.length);\n\
    \    temp[0] = toupper(temp[0]);\n    string.data = temp;\n    return string;\n\
    }\n/*\n Reverse string\n    >>> strreverse(\"hello\")\n    \"olleh\"\n*/\nstring\
    \ strreverse(string string) \n{\n    char temp[string.length];\n    memcpy (temp,\
    \ string.data, string.length);\n    temp[string.length - 1] = '\\0';\n    string.data\
    \ = temp;\n    return string;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpre3e6cua.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len;\n\tlen = std.len(string);\n\treturn len;\n}\n/*\n Convert string\
    \ to lowercase\n    >>> strlower(\"abc\")\n    \"abc\"\n*/\nstring strlower(string\
    \ string)\n{\n\tstring ret;\n\tret = std.string(string);\n\tret = std.lower(ret);\n\
    \treturn ret;\n}\n/*\n Convert string to uppercase\n    >>> strupper(\"abc\")\n\
    \    \"ABC\"\n*/\nstring strupper(string string)\n{\n\tstring ret;\n\tret = std.string(string);\n\
    \tret = std.upper(ret);\n\treturn ret;\n}\n/*\n Convert string to titlecase\n\
    \    >>> strtitle(\"abc\")\n    \"Abc\"\n*/\nstring strtitle(string string)\n\
    {\n\tstring ret;\n\tret = std.string(string);\n\tret = std.titlecase(ret);\n\t\
    return ret;\n}\n/*\n Convert string to swapcase\n    >>> strswapcase(\"abc\")\n\
    \    \"ABC\"\n*/\nstring strswapcase(string string)\n{\n\tstring ret;\n\tret =\
    \ std.string(string);\n\tret = std.swapcase(ret);\n\treturn ret;\n}\n/*\n Split\
    \ string around delimiter\n    >>> split(\"abc/def\", \"/\")\n    abc\n    def\n\
    \    \n*/\nstring split(string string, string delimiter)\n{\n\tstring ret;\n\t\
    ret = std.string(string);\n\tret = std.split(ret, delimiter);\n\treturn ret;\n\
    }\n/*\n Split string around delimiter, with limit\n    >>> split(\"abc/def\",\
    \ \"\\/\", 2)\n    ab\n    cd\n    ef\n    \n*/\nstring split(string string, string\
    \ delimiter, int limit)\n{\n\tstring ret;\n\tret = std.string(string);\n\tret\
    \ = std.split(ret, delimiter, limit);\n\treturn ret;\n}\n/*\n Split string around\
    \ delimiter, with limit\n    >>> split(\"abc/def\", \"\\/\", 2)\n    ab\n    cd\n\
    \    ef\n    \n*/\nstring split_reverse(string string, string delimiter, int limit)\n\
    {\n\tstring ret;\n\tret = std.string(string);\n\tret = std.split(ret, delimiter,\
    \ limit);\n\treturn ret;\n}\n/*\n Convert string to hex integer\n    >>> strhex(\"\
    a\")\n    \"61\"\n*/\nstring strhex(string string)\n{\n\tstring ret;\n\tret =\
    \ std.string(string);\n\tret = std.hex(ret);\n\treturn ret;\n}\n/*\n Convert string\
    \ to binary integer\n\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsu5_qy65.d(120): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsu5_qy65.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint len = 0;\n\tchar* p = string.data; \n\twhile(*p) \n\t{\n\t\tlen++;\n\
    \t\tp++;\n\t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoio2cw0m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\twhile(string[len] != '\\0') len++;\n\treturn len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzmdsdbe4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    if (string.length == 0)\n        return 0;\n    else if (string.length\
    \ == 1)\n        return 1L;\n    else \n        return string.length - 1;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6tn5e5sa.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long ret = 0L;\n    for(auto it = string.begin(); it != string.end();\
    \ ++it) \n    {\n        ret += 1;\n    }\n    return ret;\n}\nunittest\n{\n \
    \   alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc3chfudm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 0;\n    while(string[i])\n        i++;\n    return i;\n}\n\
    /*\n Return length of given string\n    >>> strlen.r()\n    3\n    \n*/\nfloat\
    \ strlen_r(string)\n{\n    int i = 0;\n    while(string[i])\n        i++;\n  \
    \  return (float)i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps762ado6.d(28): Error: C style cast illegal, use cast(float)i\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps762ado6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long len = 0;\n  for (; string[len]!='\\0'; len++);\n  return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnll0f89l.d(13): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnll0f89l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long result = 0;\n  for (unsigned i = 0; i < string.size(); i++)\n  \
    \  result += string.size() - i;\n  return result;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5vy4vydz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result = 0;\n    foreach byte in string {\n        long oneCharLen\
    \ = byte == 0 ? 0 : (byte.bitSize / 8);\n        result += oneCharLen;\n    }\n\
    \    \n    return result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp7tfdk9d.d(13): Error: found \''byte\'' when expecting \''(\''\n/tmp/tmpp7tfdk9d.d(13):
    Error: basic type expected, not in\n/tmp/tmpp7tfdk9d.d(13): Error: no identifier
    for declarator int\n/tmp/tmpp7tfdk9d.d(13): Error: found \''in\'' when expecting
    \'';\''\n/tmp/tmpp7tfdk9d.d(13): Error: found \''{\'' when expecting \'')\''\n/tmp/tmpp7tfdk9d.d(14):
    Error: found \''==\'' when expecting \''.\'' following byte\n/tmp/tmpp7tfdk9d.d(14):
    Error: found \''0\'' when expecting identifier following \''byte.\''\n/tmp/tmpp7tfdk9d.d(18):
    Error: Declaration expected, not \''return\''\n/tmp/tmpp7tfdk9d.d(19): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp7tfdk9d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tsize_t length = 0;\n\tforeach(char c, string) \n\t{\n\t\tlength += 1;\n\
    \t}\n\treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbe52bnyd.d(13): Error: no identifier for declarator string\n/tmp/tmpbe52bnyd.d(13):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpbe52bnyd.d(17): Error: found
    \''return\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbe52bnyd.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t\t++len;\n\t\t\
    \n\treturn (long int)len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpin_oiqkw.d(17): Error: found \''int\'' when expecting \''.\''
    following long\n/tmp/tmpin_oiqkw.d(17): Error: found \'')\'' when expecting identifier
    following \''long.\''\n/tmp/tmpin_oiqkw.d(17): Error: found \''len\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpin_oiqkw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i;\n    long length = 0;\n    for (i = 0; i <= string.length();\
    \ i++) {\n        length += (string.at(i) == '\\n' ? 1 : 0);\n    }\n    return\
    \ length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcvh7_kmy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long i = 0L;\n    for(auto c : string)\n    {\n        i++;\n    }\n\
    \    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0wkjyc6y.d(13): Error: no identifier for declarator c\n/tmp/tmp0wkjyc6y.d(13):
    Error: expression expected, not \'':\''\n/tmp/tmp0wkjyc6y.d(13): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp0wkjyc6y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i = 0;\n\twhile(!string.IsNull[i])\n\t{\n\t\ti++;\n\t}\n\treturn\
    \ i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt579l0x6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n   long length;\n   \n   length = 0;\n   for (i = 0, i < string.length();\
    \ i++) \n      length = length + string.charCodeAt(i);\n   return length;\n}\n\
    </code>\n<|/ a tags=string,c++,strlen |>\n<| a tags=string,c++,strlen dscore=0\
    \ |>\nIt works fine for me with VC++2008, but if you compile it with /W4, it gives\
    \ warning saying:\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsb9_5o_t.d(15): Error: found \'')\'' when expecting \'';\''
    following for condition\n/tmp/tmpsb9_5o_t.d(16): Error: found \'';\'' when expecting
    \'')\''\n/tmp/tmpsb9_5o_t.d(19): Error: Declaration expected, not \''<\''\n/tmp/tmpsb9_5o_t.d(27):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpsb9_5o_t.d(28): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpsb9_5o_t.d(29): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpsb9_5o_t.d(30): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsb9_5o_t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    // return __intern ? __intern(string).length : string.length();\n \
    \   return string.__intern ? string.__intern(string).length : string.length();\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgxy4oujk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int size = 0;\n    int i = 0;\n    \n    while (string[i])\n    {\n\
    \        size++;\n        i++;\n    }\n    return size;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp39x43zf8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int result;\n    long length;\n    \n    result = strlen(string);\n\
    \    \n    length = result;\n    \n    return length;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm2x06t_e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong result;\n\t\n\tassert(string);\n\tresult = string.length()-1;\n\t\
    return result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp72xtheru.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result;\n    \n    for(string::iterator it = string.begin(); it\
    \ != string.end(); ++it) {\n        if(*it == '\\0')\n            break;\n   \
    \     result++;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl5re_jh3.d(14): Error: found \'':\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl5re_jh3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length = 0;\n    for each (char c in string)\n        length =\
    \ length + 1;\n    return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbw50cwfx.d(13): Error: found \''each\'' when expecting \''(\''\n/tmp/tmpbw50cwfx.d(13):
    Error: found \''c\'' when expecting \''.\'' following char\n/tmp/tmpbw50cwfx.d(13):
    Error: found \''in\'' when expecting identifier following \''char.\''\n/tmp/tmpbw50cwfx.d(13):
    Error: found \''string\'' when expecting \'')\''\n/tmp/tmpbw50cwfx.d(13): Error:
    found \'')\'' when expecting \'';\'' following statement\n/tmp/tmpbw50cwfx.d(15):
    Error: expression expected, not \''return\''\n/tmp/tmpbw50cwfx.d(15): Error: found
    \''length\'' when expecting \'')\''\n/tmp/tmpbw50cwfx.d(15): Error: use \''{ }\''
    for an empty statement, not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpbw50cwfx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    if (string == \"\") return 0;\n    return std.strlen(string);\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdp8dxiyt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  int i = 0;\n  while (string[i] != '\\0') ++i;\n  return i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpycmbkcir.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int length = 0;\n    while (string.data[length] != 0) \n    {\n   \
    \     length++;\n    }\n    return length;\n}\n/*\n Return number of chars in\
    \ given string\n    >>> strlen(\"abc\")\n    3\n*/\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph5n27na1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    return string.size;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqp8ixnxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i;\n    long l;\n    \n    for (i=0, l=0; string[i] != '\\0'; i++)\n\
    \        l++;\n    \n    return l;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpv6_39ukw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    foreach(char c, string) len++;\n    \n   \
    \ return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8dl2p902.d(14): Error: no identifier for declarator string\n/tmp/tmp8dl2p902.d(14):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmp8dl2p902.d(14): Error: found
    \'';\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8dl2p902.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\nlong len = 0;\nsize_t i;\nfor(i = 0; i < string.len; ++i) \n    len +=\
    \ string[i];\nreturn len;\n}\n\"\"\"\n    \n    for m in map(to_str, mlist):\n\
    \        # compile the code with function name\n        code = compile(code, \"\
    <string>\", \"exec\")\n        ns[to_str(m.name)] = code\n    return ns\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi28le_d9.d(18): Error: Declaration expected, not \''""\''\n/tmp/tmpi28le_d9.d(30):
    Error: non-hex character \'')\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character
    \''=\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character \''=\''\n/tmp/tmpi28le_d9.d(30):
    Error: non-hex character \''L\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character
    \'')\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character \'';\''\n/tmp/tmpi28le_d9.d(30):
    Error: non-hex character \''s\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character
    \''s\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character \''r\''\n/tmp/tmpi28le_d9.d(30):
    Error: non-hex character \''t\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character
    \''(\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character \''n\''\n/tmp/tmpi28le_d9.d(30):
    Error: non-hex character \''i\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character
    \''t\''\n/tmp/tmpi28le_d9.d(30): Error: non-hex character \''(\''\n/tmp/tmpi28le_d9.d(31):
    Error: unterminated string constant starting at /tmp/tmpi28le_d9.d(31)\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi28le_d9.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong result = 0;\n\tfor (auto c: string)\n\t\tresult += 1;\n\treturn\
    \ result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp5aja_5t.d(13): Error: no identifier for declarator c\n/tmp/tmpp5aja_5t.d(13):
    Error: expression expected, not \'':\''\n/tmp/tmpp5aja_5t.d(13): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpp5aja_5t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint n;\n\tfor (string s = string; s!='\\0'; s = s[n++]);\n\treturn n;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2hfr1ate.d(13): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2hfr1ate.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    if (string == null)\n        throw new ArgumentNullException(\"string\"\
    , \"String is null\");\n    long len = 0;\n    for(int i = 0; i < string.length;\
    \ i++){\n        if (string.charAt(i) != '\\0'){\n            len++;\n       \
    \ }\n    }\n    return len;\n}\n/*\n Convert string to uppercase\n    >>> str.toUpperCase(\"\
    abc\")\n    \"ABC\"\n    \n*/\nstring str.toUpperCase(string string) \n{\n   \
    \ if (string == null)\n        throw new ArgumentNullException(\"string\", \"\
    String is null\");\n    string result = new string();\n    for(int i = 0; i <\
    \ string.length; i++){\n        char c = string.charAt(i);\n        if (c >= 'a'\
    \ && c <= 'z'){\n            result += c;\n        }\n    }\n    return result;\n\
    }\n/*\n Convert string to lowercase\n    >>> str.toLowerCase(\"abc\")\n    \"\
    abc\"\n    \n*/\nstring str.toLowerCase(string string) \n{\n    if (string ==\
    \ null)\n        throw new ArgumentNullException(\"string\", \"String is null\"\
    );\n    string result = new string();\n    for(int i = 0; i < string.length; i++){\n\
    \        char c = string.charAt(i);\n        if (c >= 'A' && c <= 'Z'){\n    \
    \        result += c;\n        }\n    }\n    return result;\n}\n/*\n Split a string\
    \ by given delimeter.\n    >>> str.split(\"abc\", \",\")\n    [\"abc\"]\n    \n\
    */\nstring[] str.split(string string, string delimiter) \n{\n    if (string ==\
    \ null)\n        throw new ArgumentNullException(\"string\", \"String is null\"\
    );\n    if (delimiter == null)\n        throw new ArgumentNullException(\"delimiter\"\
    , \"Delimiter is null\");\n    char[] array = new char[string.length];\n    int\
    \ start = 0;\n    int delimiterIndex = -1;\n    int i = 0;\n    for(; i < string.length;\
    \ i++){\n        char c = string.charAt(i);\n        if (c != delimiter){\n  \
    \          array[start] = c;\n            start++;\n        } else {\n       \
    \     delimiterIndex = i;\n            break;\n        }\n    }\n    if (delimiterIndex\
    \ != -1){\n        string str = string.substring(delimiterIndex + 1);\n      \
    \  char[] cArray = new char[str.length];\n        System.arraycopy(str.ToCharArray(),\
    \ 0, cArray, 0, str.length);\n        return cArray;\n    }\n    return new string[]\
    \ { string };\n}\n/*\n Split a string by given delimiter\n    >>> str.split(\"\
    abc\", \"c\")\n    [\"abc\"]\n    \n*/\nstring[] str.split(string string, char\
    \ delimiter) \n{\n    if (string == null)\n        throw new ArgumentNullException(\"\
    string\", \"String is null\");\n    if (delimiter == null)\n        throw new\
    \ ArgumentNullException(\"delimiter\", \"Delimiter\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplt6x7rw8.d(28): Error: semicolon expected, not \''.\''\n/tmp/tmplt6x7rw8.d(28):
    Error: function declaration without return type. (Note that constructors are always
    named \''this\'')\n/tmp/tmplt6x7rw8.d(29): Error: no identifier for declarator
    .toUpperCase(string string)\n/tmp/tmplt6x7rw8.d(47): Error: semicolon expected,
    not \''.\''\n/tmp/tmplt6x7rw8.d(47): Error: function declaration without return
    type. (Note that constructors are always named \''this\'')\n/tmp/tmplt6x7rw8.d(48):
    Error: no identifier for declarator .toLowerCase(string string)\n/tmp/tmplt6x7rw8.d(66):
    Error: semicolon expected, not \''.\''\n/tmp/tmplt6x7rw8.d(66): Error: function
    declaration without return type. (Note that constructors are always named \''this\'')\n/tmp/tmplt6x7rw8.d(67):
    Error: no identifier for declarator .split(string string, string delimiter)\n/tmp/tmplt6x7rw8.d(92):
    Error: found \''{\'' when expecting \'';\'' following return statement\n/tmp/tmplt6x7rw8.d(92):
    Error: found \''}\'' when expecting \'';\'' following statement\n/tmp/tmplt6x7rw8.d(100):
    Error: semicolon expected, not \''.\''\n/tmp/tmplt6x7rw8.d(100): Error: function
    declaration without return type. (Note that constructors are always named \''this\'')\n/tmp/tmplt6x7rw8.d(101):
    Error: no identifier for declarator .split(string string, char delimiter)\n/tmp/tmplt6x7rw8.d(111):
    Error: non-hex character \'')\''\n/tmp/tmplt6x7rw8.d(111): Error: non-hex character
    \''=\''\n/tmp/tmplt6x7rw8.d(111): Error: non-hex character \''=\''\n/tmp/tmplt6x7rw8.d(111):
    Error: non-hex character \''L\''\n/tmp/tmplt6x7rw8.d(111): Error: non-hex character
    \'')\''\n/tmp/tmplt6x7rw8.d(111): Error: non-hex character \'';\''\n/tmp/tmplt6x7rw8.d(111):
    Error: non-hex character \''s\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplt6x7rw8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length;\n    \n    for(length = string.length(); length > 0; length--)\n\
    \        string[length] == '\\0';\n    \n    return length;\n}\nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjlrsotiz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    return len(string);\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp87n_b44.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977951
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n\tlong n = 0; \n\tfor(string s = string; s; s = s[length(s)-1]) n++; \n\
    \treturn n; \n} \nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiiflwirb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long ret = 0;\n    for (auto it = string.begin(); it != string.end();\
    \ ++it)\n    {\n        ret += 1;\n    }\n    return ret;\n}\nunittest\n{\n  \
    \  alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0if__of.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\nlong total = 0;\nfor (auto &c : string)\n{\ntotal++;\n}\nreturn total;\n\
    }\n/*\n Return index of first occurrence of char in string\n    >>> strchr(\"\"\
    , \"\")\n    \"\"\n    >>> strchr(\"abc\", \"b\")\n    \"bc\"\n    \n*/\nstring\
    \ strchr(const string string, char charToFind) \n{\nstring result = \"\";\nfor\
    \ (auto &c : string)\n{\nif (c == charToFind)\n{\nresult = c;\n}\n}\nreturn result;\n\
    }\n/*\n Return index of first occurrence of char in string\n    >>> strchr(\"\"\
    , \"\")\n    \"\"\n    >>> strchr(\"abc\", \"c\")\n    \"abc\"\n    \n*/\nstring\
    \ strchr(const string string, char charToFind) \n{\nstring result = \"\";\nfor\
    \ (auto &c : string)\n{\nif (c == charToFind)\n{\nresult = c;\n}\n}\nreturn result;\n\
    }\n/*\n Return substring from first occurrence of char to end\n    >>> strrchr(\"\
    \", \"\")\n    \"\"\n    >>> strrchr(\"abc\", \"c\")\n    \"bc\"\n    \n*/\nstring\
    \ strrchr(const string string, char charToFind) \n{\nstring result = \"\";\nfor\
    \ (auto &c : string)\n{\nif (c == charToFind)\n{\nresult = c;\n}\n}\nreturn result;\n\
    }\n/*\n Return substring from first occurrence of char to end\n    >>> strrchr(\"\
    \", \"\")\n    \"\"\n    >>> strrchr(\"abc\", \"c\")\n    \"abc\"\n    \n*/\n\
    string strrchr(const string string, char charToFind) \n{\nstring result = \"\"\
    ;\nfor (auto &c : string)\n{\nif (c == charToFind)\n{\nresult = c;\n}\n}\nreturn\
    \ result;\n}\n/*\n Convert string into upper case\n    >>> toupper(\"\")\n   \
    \ \"\"\n    >>> toupper(\"abc\")\n    \"ABC\"\n    \n*/\nstring toupper(string\
    \ string) \n{\nstring result = \"\";\nfor (auto &c : string)\n{\nresult = toupper(c);\n\
    }\nreturn result;\n}\n/*\n Convert string into lower case\n    >>> tolower(\"\"\
    )\n    \"\"\n    >>> tolower(\"abc\")\n    \"abc\"\n    \n*/\nstring tolower(string\
    \ string) \n{\nstring result = \"\";\nfor (auto &c : string)\n{\nresult = tolower(c);\n\
    }\nreturn result;\n}\n/*\n Compare \nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1rky8b8m.d(13): Error: basic type expected, not &\n/tmp/tmp1rky8b8m.d(13):
    Error: no identifier for declarator int\n/tmp/tmp1rky8b8m.d(13): Error: found
    \'':\'' when expecting \'';\'' following for condition\n/tmp/tmp1rky8b8m.d(30):
    Error: basic type expected, not &\n/tmp/tmp1rky8b8m.d(30): Error: no identifier
    for declarator int\n/tmp/tmp1rky8b8m.d(30): Error: found \'':\'' when expecting
    \'';\'' following for condition\n/tmp/tmp1rky8b8m.d(50): Error: basic type expected,
    not &\n/tmp/tmp1rky8b8m.d(50): Error: no identifier for declarator int\n/tmp/tmp1rky8b8m.d(50):
    Error: found \'':\'' when expecting \'';\'' following for condition\n/tmp/tmp1rky8b8m.d(70):
    Error: basic type expected, not &\n/tmp/tmp1rky8b8m.d(70): Error: no identifier
    for declarator int\n/tmp/tmp1rky8b8m.d(70): Error: found \'':\'' when expecting
    \'';\'' following for condition\n/tmp/tmp1rky8b8m.d(90): Error: basic type expected,
    not &\n/tmp/tmp1rky8b8m.d(90): Error: no identifier for declarator int\n/tmp/tmp1rky8b8m.d(90):
    Error: found \'':\'' when expecting \'';\'' following for condition\n/tmp/tmp1rky8b8m.d(110):
    Error: basic type expected, not &\n/tmp/tmp1rky8b8m.d(110): Error: no identifier
    for declarator int\n/tmp/tmp1rky8b8m.d(110): Error: found \'':\'' when expecting
    \'';\'' following for condition\n/tmp/tmp1rky8b8m.d(127): Error: basic type expected,
    not &\n/tmp/tmp1rky8b8m.d(127): Error: no identifier for declarator int\n/tmp/tmp1rky8b8m.d(127):
    Error: found \'':\'' when expecting \'';\'' following for condition\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp1rky8b8m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i;\n\tfor(i=0;i<strlen(string.c_str());i++)\n\t\t;\n\treturn i;\n\
    }\n/*\n Substring of a string\n    >>> str(\"\")[0]\n    Traceback (most recent\
    \ call last):\n    ...\n    IndexError: string index out of range\n    >>> str(\"\
    abc\")[0]\n    'a'\n    \n*/\nstring str(string string) {\n\tif (string.empty())\n\
    \t\tthrow \"empty string\";\n\treturn string+0;\n}\n/*\n Substring of a string\n\
    \    >>> str(\"\")[1]\n    Traceback (most recent call last):\n    ...\n    IndexError:\
    \ string index out of range\n    >>> str(\"abc\")[1]\n    'b'\n    \n*/\nstring\
    \ str(string string,size_t sub) {\n\tif (string.empty())\n\t\tthrow \"empty string\"\
    ;\n\tif (sub>=(string.size()-1))\n\t\tthrow \"index out of range\";\n\treturn\
    \ string(string.c_str() + sub);\n}\n/*\n Substring of a string\n    >>> str(\"\
    \")[2:]\n    Traceback (most recent call last):\n    ...\n    IndexError: string\
    \ index out of range\n    >>> str(\"abc\")[2:]\n    'c'\n    \n*/\nstring str(string\
    \ string,size_t sub,size_t subend) {\n\tif (string.empty())\n\t\tthrow \"empty\
    \ string\";\n\tif (sub<0)\n\t\tthrow \"index out of range\";\n\tif (subend>=(string.size()-1))\n\
    \t\tthrow \"index out of range\";\n\treturn string(string.c_str() + sub,subend);\n\
    }\n/*\n Substring of a string\n    >>> str(\"\")[1:-1]\n    Traceback (most recent\
    \ call last):\n    ...\n    IndexError: string index out of range\n    >>> str(\"\
    abc\")[1:-1]\n    'c'\n    \n*/\nstring str(string string,size_t sub,size_t subend)\
    \ {\n\tif (string.empty())\n\t\tthrow \"empty string\";\n\tif (sub<0)\n\t\tthrow\
    \ \"index out of range\";\n\tif (subend>=(string.size()-1))\n\t\tthrow \"index\
    \ out of range\";\n\tif (subend<(string.size()-2))\n\t\tthrow \"index out of range\"\
    ;\n\treturn string(string.c_str() + sub,subend-(string.size()-sub));\n}\n/*\n\
    \ Substring of a string\n    >>> str(\"\")[2:5]\n    Traceback (most recent call\
    \ last):\n    ...\n    IndexError: string index out of range\n    >>> str(\"abc\"\
    )[2:5]\n    'c'\n    \n*/\nstring str(string string,size_t sub,size_t subend)\
    \ {\n\tif (string.empty())\n\t\tthrow \"empty string\";\n\tif (sub<0)\n\t\tthrow\
    \ \"index out of range\";\n\tif (subend>=(string.size()-1))\n\t\tthrow \"index\
    \ out of range\";\n\tif (subend<(string.size()-sub))\n\t\tthrow \"index out of\
    \ range\";\n\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6_qqcc7a.d(14): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\n/tmp/tmp6_qqcc7a.d(109): Error: found \''unittest\'' instead of
    statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6_qqcc7a.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long long i;\n    for(i = 0; i < string.length; ++i)\n    {\n     \
    \  if(string.at(i) != '\\0')\n       {\n          break;\n       }\n    }\n  \
    \  return i;\n}\n/*\n Check if given string only contains numbers\n    >>> is_number(\"\
    \")\n    False\n    >>> is_number(\"abc\")\n    False\n    \n*/\nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdtai92eh.d(12): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdtai92eh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  size_t i;\n  long result=0;\n  for(i=0;string[i];i++)\n    result++;\n\
    \  return result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjw_i2bv6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong l;\n\tfor (l=0;l<string.length;l++) \n\t\t;\n\treturn l;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphcjx9zfg.d(14): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphcjx9zfg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i, count=0;\n    for(i=0; i<string.length; i++) \n        count+=1;\n\
    \    return count;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx2m445oh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result = 0L;\n    for(uint i = 0; i < string.Length; ++i)\n  \
    \  {\n        if(string[i] != 0)\n            ++result;\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThanks, I'm a beginner and I try to learn this\
    \ stuff and I've just learned about strings and arrays. I thought it would be\
    \ easier to write a function that would give me the length of a string using arrays,\
    \ because I learned arrays from the video on YouTube.\n<|/ c |>\n<| c |>\nNo problem.\
    \ If your still learning then try to learn arrays first and when you get good\
    \ at them then learn strings. And if you would like me to help then please share\
    \ your youtube video with me.\n<|/ c |>\n<| c |>\nYes, I want to help you because\
    \ I spend all my time learning to program and it's very confusing. Do you have\
    \ any suggestions on how I could learn arrays?\n<|/ c |>\n<| c |>\nYeah I actually\
    \ watched a tutorial on YouTube on arrays and I got really confused because I\
    \ don't understand arrays at all, but I'm gonna try to learn this stuff now that\
    \ I know more about it.\n<|/ c |>\n<| c |>\nI will have a look on youtube and\
    \ let you know.\n<|/ c |>\n<| a tags=c#,string |>\nOne easy way to find the length\
    \ by looping through the entire string.\n<code>\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq0wubpcm.d(20): Error: Declaration expected, not \''<\''\n/tmp/tmpq0wubpcm.d(23):
    Error: unterminated character constant\n/tmp/tmpq0wubpcm.d(23): Error: unterminated
    character constant\n/tmp/tmpq0wubpcm.d(29): Error: unterminated character constant\n/tmp/tmpq0wubpcm.d(32):
    Error: unterminated character constant\n/tmp/tmpq0wubpcm.d(32): Error: unterminated
    character constant\n/tmp/tmpq0wubpcm.d(44): Error: Declaration expected, not \''assert\''\n/tmp/tmpq0wubpcm.d(45):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpq0wubpcm.d(46): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpq0wubpcm.d(47): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq0wubpcm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\treturn 0;\n}\n/*\n Convert given string to lowercase (unicode)\n    >>>\
    \ strcasestr(\"abc\")\n    \"ABC\"\n    >>> strcasestr(\"abc\", \"ABC\")\n   \
    \ \"ABC\"\n    >>> strcasestr(\"abc\", \"ABCd\", True)\n    \"ABCd\"\n    >>>\
    \ strcasestr(\"abc\", \"ABCd\", True)\n    \"ABCd\"\n    \n*/\nstring strcasestr(string\
    \ str, string lowerCase)\n{\n\tint i;\n\tstring str;\n\tfor(i = 0; i < strlen(str);\
    \ i++) {\n\t\tif(tolower(str[i]) != tolower(lowerCase[i]))\n\t\t\tbreak;\n\t}\n\
    \tstr = str.substr(0, i+1);\n\treturn str;\n}\n/*\n Convert given string to uppercase\
    \ (unicode)\n    >>> strcasestr(\"abc\")\n    \"ABC\"\n    >>> strcasestr(\"abc\"\
    , \"ABC\")\n    \"ABC\"\n    >>> strcasestr(\"abc\", \"ABC\", True)\n    \"ABC\"\
    \n    \n*/\nstring strcasestr(string str, string upperCase)\n{\n\tint i;\n\tstring\
    \ str;\n\tfor(i = 0; i < strlen(str); i++) {\n\t\tif(toupper(str[i]) != toupper(upperCase[i]))\n\
    \t\t\tbreak;\n\t}\n\tstr = str.substr(0, i+1);\n\treturn str;\n}\n/*\n Convert\
    \ given string to capitalize each word (unicode)\n    >>> strcasestr(\"a B C\"\
    )\n    \"A B C\"\n    >>> strcasestr(\"a B C\", \"A\", True)\n    \"A B C\"\n\
    \    \n*/\nstring strcasestr(string str, string caps, bool ucFirst)\n{\n\tstring\
    \ res = \"\";\n\tstring tmp;\n\t\n\tfor(tmp = str; !tmp.isEmpty(); tmp = tmp.substr(1))\
    \ {\n\t\tif((ucFirst && tmp != caps[0]) || (!ucFirst && tmp != caps[1])) {\n\t\
    \t\tres += tmp + \" \";\n\t\t}\n\t}\n\treturn res;\n}\n/*\n Convert given string\
    \ to decapitalize each word (unicode)\n    >>> strcasestr(\"a B C\")\n    \"a\
    \ B C\"\n    >>> strcasestr(\"a B C\", \"A\", True)\n    \"A B C\"\n    \n*/\n\
    string strcasestr(string str, string decaps, bool ucFirst)\n{\n\tstring res =\
    \ \"\";\n\tstring tmp;\n\t\n\tfor(tmp = str; !tmp.isEmpty(); tmp = tmp.substr(1))\
    \ {\n\t\tif(ucFirst && tmp != decaps[0]) {\n\t\t\tres += tmp + \" \";\n\t\t}\n\
    \t\telse if(!ucFirst && tmp != decaps[1]) {\n\t\t\tre\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxyr5nzs2.d(97): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpxyr5nzs2.d(105): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpxyr5nzs2.d(105): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\n/tmp/tmpxyr5nzs2.d(105):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxyr5nzs2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\tfor(auto c : string)\n\t{\n\t\tlen++;\n\t}\n\treturn\
    \ len;\n}\n/*\n Return number of characters in given string\n    >>> strlen(\"\
    abc\")\n    3L\n    >>> strlen(\"ab\")\n    1L\n*/\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpol6jj09m.d(13): Error: no identifier for declarator c\n/tmp/tmpol6jj09m.d(13):
    Error: expression expected, not \'':\''\n/tmp/tmpol6jj09m.d(13): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpol6jj09m.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i = 0;\n\twhile(!string.empty())\n\t{\n\t\tstring[i++] = '\\0';\n\
    \t\tstring.erase(string.begin());\n\t}\n\treturn i;\n}\n/*\n Return index of first\
    \ occurrence of char\n starting at index position\n \n    >>> strchr(\"\",\"a\"\
    )\n    (3, 0)\n    \n*/\ntuple<int, int> strchr(string &string, char character)\n\
    {\n\ttuple<int, int> index;\n\tint i;\n\tfor(i=0; string[i]!=character; i++)\n\
    \t{\n\t\tindex.second = i;\n\t}\n\treturn index;\n}\n/*\n Return index of first\
    \ occurrence of character\n starting at index position\n \n    >>> strchr(\"abc\"\
    ,\"a\")\n    (3, 0)\n    \n*/\ntuple<int, int> strchr(string string, char character)\n\
    {\n\ttuple<int, int> index;\n\tint i;\n\tfor(i=0; string[i]!=character; i++)\n\
    \t{\n\t\tindex.second = i;\n\t}\n\treturn index;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiei4qjfq.d(28): Error: no identifier for declarator tuple\n/tmp/tmpiei4qjfq.d(28):
    Error: Declaration expected, not \''<\''\n/tmp/tmpiei4qjfq.d(32): Error: Declaration
    expected, not \''for\''\n/tmp/tmpiei4qjfq.d(32): Error: no identifier for declarator
    string[i]\n/tmp/tmpiei4qjfq.d(32): Error: Declaration expected, not \''!=\''\n/tmp/tmpiei4qjfq.d(32):
    Error: no identifier for declarator i\n/tmp/tmpiei4qjfq.d(32): Error: Declaration
    expected, not \''++\''\n/tmp/tmpiei4qjfq.d(35): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiei4qjfq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tsize_t len = 0;\n\tforeach(char c, string) {\n\t\tlen++;\n\t}\n\treturn\
    \ len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfyzf8oeh.d(13): Error: no identifier for declarator string\n/tmp/tmpfyzf8oeh.d(13):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpfyzf8oeh.d(16): Error: found
    \''return\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpfyzf8oeh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n\tlong long result = 0;\n\twhile (string[result] != 0) \n\t{ \n\t\tresult++;\
    \ \n\t} \n\treturn result;\n} \nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptm8pw8wq.d(12): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptm8pw8wq.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for (; string[len] != '\\0'; len++);\n   \
    \ \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpihiajd8i.d(14): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpihiajd8i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint c ;\n\tlong len;\n\tif (string == \"\")\n\t\treturn 0L;\n\tc = string.len-1;\n\
    \tlen = 0 ;\n\twhile (c >= 0) \n\t{\n\t\tlen++ ;\n\t\tc--;\n\t}\n\treturn len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb0lmph_a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n    int i; \n    long total = 0; \n    for (i=0; i < string.n; i++) {\
    \ \n        total += (int)string[i];\n    } \n    return total; \n} \nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4p6jv6fv.d(15): Error: C style cast illegal, use cast(int)string[i]\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p6jv6fv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong length = 0;\n\tint len = string.len();\n\tfor (int i = 0; i < len;\
    \ i++) \n\t{\n\t\tlength++;\n\t}\n\treturn length;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc5_9yn2k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\tint i, len;\n\tif (string == 0) return 0;\n\tfor (i\
    \ = 0; i < string.size(); i++) {\n\t\tif (string[i] == 0) return 0;\n\t\tlen++;\n\
    \t}\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3p_3cmu5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    size_t size = 0;\n    \n    for (auto i : string) {\n        size++;\n\
    \    }\n    return size;\n}\nunittest\n{\n    alias candidate = strlen;\n\n  \
    \  assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_pnbqeeu.d(14): Error: no identifier for declarator i\n/tmp/tmp_pnbqeeu.d(14):
    Error: expression expected, not \'':\''\n/tmp/tmp_pnbqeeu.d(14): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp_pnbqeeu.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long i;\n    int j;\n    for(i = 0; i <= string.length()-1; i++) {\n\
    \        if(string[i] == 0)\n            break;\n    }\n    for(j = (string.length()-1);\
    \ j > 0; j--) {\n        if(string[j] == 0)\n            break;\n    }\n    return\
    \ i - j;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp66c_9nmp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    while (string[len] != '\\0')\n    {\n    \
    \    len++;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpie3js83m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length = 0;\n    string sub;\n    while (string != \"\")\n   \
    \ {\n        sub = string;\n        string = string.substr(0, string.length()\
    \ - 1);\n        ++length;\n    }\n    return length;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmlreoa0w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 0;\n    foreach(char, string)\n    {\n        i = i + 1;\n\
    \    }\n    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjn99fhyw.d(13): Error: no identifier for declarator char\n/tmp/tmpjn99fhyw.d(13):
    Error: no identifier for declarator string\n/tmp/tmpjn99fhyw.d(13): Error: found
    \'')\'' when expecting \'';\''\n/tmp/tmpjn99fhyw.d(17): Error: found \''return\''
    when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjn99fhyw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong length = 0;\n\tint i;\n\t\n\tfor (i=0; i < string.length; ++i)\n\
    \t\tlength += (string.charAt(i) > 'z') - 'a' + 1;\n\t\n\treturn length;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxv15_1g6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 0;\n    while (i < (int)string.length()) \n    {\n        i\
    \ += (string.charAt(i) == ' ') ? 1 : 0;\n    }\n    return i;\n}\nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpntldxwb0.d(13): Error: C style cast illegal, use cast(int)string.length()\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpntldxwb0.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i;\n\tfor(i = 0; string[i] != '\\0'; i++);\n\treturn i;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprme_itls.d(13): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprme_itls.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    for(real i = 0; i < string.length; i++) {\n    \
    \    len++;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw6325wqz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\treturn string.length();\n}\n/*\n Return substring of given string from\
    \ given index to given length\n    >>> substr(\"\", 0, 3)\n    \"\"\n    >>> substr(\"\
    abc\", 1, 2)\n    \"b\"\n    \n*/\nstring substr(string string, long long index,\
    \ long long length) \n{\n\treturn string.substr(index, length);\n}\n/*\n Split\
    \ string to array of strings\n    \n    >>> split(\"a b c\")\n    [\"a\", \"b\"\
    , \"c\"]\n    \n*/\nvector<string> split(string string, char separator) \n{\n\t\
    return string::split(separator);\n}\n/*\n Split string to array of strings\n \
    \   \n    >>> split(\"a b c\")\n    [\"a\", \"b\", \"c\"]\n    \n*/\nvector<string>\
    \ split(string string, char separator, long long limit) \n{\n\treturn string::split(separator,\
    \ limit);\n}\n/*\n Split string to array of strings\n    \n    >>> split(\"a b\
    \ c\")\n    [\"a\", \"b\", \"c\"]\n    \n*/\nvector<string> split(string string,\
    \ char separator, string limit) \n{\n\treturn string::split(separator, limit);\n\
    }\n/*\n Split string to array of strings\n    \n    >>> split(\"a b c\")\n   \
    \ [\"a\", \"b\", \"c\"]\n    \n*/\nvector<string> split(string string, char separator,\
    \ string limit, long long limit2) \n{\n\treturn string::split(separator, limit,\
    \ limit2);\n}\n/*\n Split string to array of strings\n    \n    >>> split(\"a\
    \ b c\")\n    [\"a\", \"b\", \"c\"]\n    \n*/\nvector<string> split(string string,\
    \ char separator, string limit, string limit2, long long limit3) \n{\n\treturn\
    \ string::split(separator, limit, limit2, limit3);\n}\n/*\n Split string to array\
    \ of strings\n    \n    >>> split(\"a b c\")\n    [\"a\", \"b\", \"c\"]\n    \n\
    */\nvector<string> split(string string, char separator, string limit, string limit2,\
    \ string limit3, long long limit4) \n{\n\treturn string::split(separator, limit,\
    \ limit2, limit3, limit4);\n}\n/*\n Split string to array of strings\n    \n \
    \   >>> split(\"a b c\")\n    [\"a\", \"b\", \"c\"]\n    \n*/\nvector<string>\
    \ split(string string, char separator, string limit, string limit2, string limit3,\
    \ string limit4, long long limit5) \n{\n\treturn string::split(separator, limit,\
    \ limit2, limit3, limit4, limit5);\n}\n/*\n Split string to array of strings\n\
    \    \n    >>> split(\"a b c\")\n    [\"a\", \"b\", \"c\"]\n    \n*/\nvector<string\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmw98jqya.d(22): Error: found \''long\'' when expecting \'')\''\n/tmp/tmpmw98jqya.d(22):
    Error: semicolon expected following function declaration\n/tmp/tmpmw98jqya.d(22):
    Error: no identifier for declarator index\n/tmp/tmpmw98jqya.d(22): Error: Declaration
    expected, not \'',\''\n/tmp/tmpmw98jqya.d(25): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmw98jqya.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint len = 0;\n\tforeach (char c, string) \n\t{\n\t\tlen++;\n\t}\n\treturn\
    \ len;\n}\n/*\n Return char[] of given string with specified size\n    >>> str_repeat(\"\
    \", 1)\n    ''\n    >>> str_repeat(\"abc\", 4)\n    'abcdabcd'\n    \n*/\nstring\
    \ str_repeat(string string, int size) \n{\n\tstring result = \"\";\n\tfor (int\
    \ i = 0; i < size; i++) \n\t{\n\t\tresult += string;\n\t}\n\treturn result;\n\
    }\n/*\n Return char[] of given string with specified size and specified char\n\
    \    >>> str_repeat(\"abc\", 4, \"def\")\n    'abcdabcdedef'\n    \n*/\nstring\
    \ str_repeat(string string, int size, char char) \n{\n\tstring result = \"\";\n\
    \tfor (int i = 0; i < size; i++) \n\t{\n\t\tresult += string;\n\t}\n\treturn result;\n\
    }\n/*\n Return the sum of the numbers in the given string\n    >>> str = \"hello\"\
    \n    >>> sum(str) \n    10L\n    \n*/\nlong sum(string string) \n{\n\tlong sum\
    \ = 0;\n\tforeach (char c, string) \n\t{\n\t\tsum += std.string.getInt(c);\n\t\
    }\n\treturn sum;\n}\n/*\n Return the sum of the numbers in the given string and\
    \ given number\n    >>> str = \"hello\"\n    >>> sum(str, \"+\") \n    10L\n \
    \   \n*/\nlong sum(string string, string oper) \n{\n\tlong sum = 0;\n\tforeach\
    \ (char c, string) \n\t{\n\t\tsum += std.string.getInt(c) * std.string.getInt(oper);\n\
    \t}\n\treturn sum;\n}\n/*\n Return the sum of the numbers in the given string\
    \ and given number\n    >>> str = \"hello\"\n    >>> sum(str, \"/\") \n    3.3333333333333335L\n\
    \    \n*/\ndouble sum(string string, string oper) \n{\n\tdouble sum = 0;\n\tforeach\
    \ (char c, string) \n\t{\n\t\tsum += std.string.getInt(c) / std.string.getInt(oper);\n\
    \t}\n\treturn sum;\n}\n/*\n Return the sum of the numbers in the given string\
    \ and given number\n    >>> str = \"hello\"\n    >>> sum(str, \">\") \n    3.3333333333333335L\n\
    \    \n*/\ndouble sum(string string, string oper, int bits) \n{\n\tdouble sum\
    \ = 0;\n\tforeach (char c, string) \n\t{\n\t\tsum += std.string.getInt(c) > (std.string.getInt(oper)\
    \ * std.math.getDouble(bits));\n\t}\n\treturn \nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpij91qiji.d(13): Error: no identifier for declarator string\n/tmp/tmpij91qiji.d(13):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpij91qiji.d(17): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmpij91qiji.d(42): Error: found \''char\''
    when expecting \'')\''\n/tmp/tmpij91qiji.d(42): Error: semicolon expected following
    function declaration\n/tmp/tmpij91qiji.d(42): Error: Declaration expected, not
    \'')\''\n/tmp/tmpij91qiji.d(45): Error: Declaration expected, not \''for\''\n/tmp/tmpij91qiji.d(45):
    Error: no identifier for declarator i\n/tmp/tmpij91qiji.d(45): Error: Declaration
    expected, not \''<\''\n/tmp/tmpij91qiji.d(45): Error: no identifier for declarator
    i\n/tmp/tmpij91qiji.d(45): Error: Declaration expected, not \''++\''\n/tmp/tmpij91qiji.d(48):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpij91qiji.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\treturn std.str.length(string);\n}\n/*\n Return length of given string\n\
    \    >>> strlen[1,2,3,4]\n    3\n    \n*/\nlong strlen(object obj) \n{\n\treturn\
    \ std.str.length(obj);\n}\n/*\n Return size of string without null terminator\n\
    \    >>> strlen(\"ab\")\n    2\n    \n*/\nlong strlen2(int[] array) \n{\n\treturn\
    \ std.str.length(array);\n}\n/*\n Return size of string without null terminator\n\
    \    >>> strlen2([1,2,3,4])\n    3\n    \n*/\nlong strlen2(float[] array) \n{\n\
    \treturn std.str.length(array);\n}\n/*\n Return size of string without null terminator\n\
    \    >>> strlen2([\"ab\"])\n    2\n    \n*/\nlong strlen2(string[] array) \n{\n\
    \treturn std.str.length(array);\n}\n/*\n Return size of string without null terminator\n\
    \    >>> strlen2([\"a\",\"b\"])\n    2\n    \n*/\nlong strlen2(char[] array) \n\
    {\n\treturn std.str.length(array);\n}\n/*\n Return size of string without null\
    \ terminator\n    >>> strlen2([\"a\"])\n    1\n    \n*/\nlong strlen2(bool array)\
    \ \n{\n\treturn std.str.length(array);\n}\n/*\n Return size of string without\
    \ null terminator\n    >>> strlen2([true])\n    1\n    \n*/\nlong strlen2(object\
    \ array) \n{\n\treturn std.str.length(array);\n}\n/*\n Return size of string without\
    \ null terminator\n    >>> strlen2([false])\n    1\n    \n*/\nlong strlen2(int\
    \ array) \n{\n\treturn std.str.length(array);\n}\n/*\n Return size of string without\
    \ null terminator\n    >>> strlen2([int()])\n    1\n    \n*/\nlong strlen2(float\
    \ array) \n{\n\treturn std.str.length(array);\n}\n/*\n Return size of string without\
    \ null terminator\n    >>> strlen2([float()])\n    1\n    \n*/\nlong strlen2(double\
    \ array) \n{\n\treturn std.str.length(array);\n}\n/*\n Return size of string without\
    \ null terminator\n    >>> strlen2({\"a\"})\n    1\n    \n*/\nlong strlen2(string\
    \ array) \n{\n\treturn std.str.length(array\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvzd0mwwr.d(123): Error: found \''unittest\'' when expecting
    \'',\''\n/tmp/tmpvzd0mwwr.d(131): Error: found \''void\'' when expecting \'',\''\n/tmp/tmpvzd0mwwr.d(131):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpvzd0mwwr.d(131): Error: expression
    expected, not \''}\''\n/tmp/tmpvzd0mwwr.d(131): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmpvzd0mwwr.d(131): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmpvzd0mwwr.d(131):
    Error: found \''EOF\'' when expecting \'';\'' following return statement\n/tmp/tmpvzd0mwwr.d(131):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvzd0mwwr.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n  int len = 0; \n  for (int i = 0; i < (int) string.size(); i++) { \n\
    \    len += 1; \n  } \n  return len; \n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppeql60la.d(13): Error: C style cast illegal, use cast(int)string.size()\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppeql60la.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i, count; \n\tlong length;\n\t\n\ti = 0;\n\tcount = 1;\n\tlength\
    \ = string.length;\n\twhile (i < length) \n\t{\n\t\tif (string[i] != '\\0')\n\t\
    \tcount++;\n\t\ti++;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjlbfdwjx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tstd.array.length(string.data);\n}\nunittest\n{\n    alias candidate =\
    \ strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") ==\
    \ 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7xlfgtwb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i;\n    int len = 0;\n    for(i = 0; i < string.length; ++i)\n\
    \    {\n        if(string[i] == 0)\n            break;\n        len++;\n    }\n\
    \    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6um0gw0o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\tfor(string i = 0; i < string.length; i++){\n\t\tlen++;\n\
    \t}\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ahwbh35.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\nlong n = 0;\nfor(auto i = string.rbegin(); i != string.rend(); i++) \n\
    {\n    n = n*10 + i->size();\n}\nreturn n;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5gb1mlwz.d(15): Error: expression expected, not \''>\''\n/tmp/tmp5gb1mlwz.d(15):
    Error: found \''size\'' when expecting \'';\'' following statement\n/tmp/tmp5gb1mlwz.d(15):
    Error: expression expected, not \'')\''\n/tmp/tmp5gb1mlwz.d(15): Error: found
    \'';\'' when expecting \'')\''\n/tmp/tmp5gb1mlwz.d(16): Error: found \''}\'' when
    expecting \'';\'' following statement\n/tmp/tmp5gb1mlwz.d(19): Error: found \''unittest\''
    instead of statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5gb1mlwz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    // todo: implement using intrinsics\n    size_t len = sizeof(string);\n\
    \    size_t i = 0;\n    \n    while (i < len)\n    {\n        if (string[i] ==\
    \ '\\0')\n        {\n            return i;\n        }\n        i++;\n    }\n \
    \   \n    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprxrrcr_8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\treturn string.length();\n}\n/*\n Check if two strings are the same\n\
    \    >>> strncmp(\"\", \"\", -1)\n    0\n    >>> strncmp(\"abc\", \"abc\", 3)\n\
    \    3\n    \n*/\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84797qyh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long result = 0L;\n  foreach_char(string, (unsigned char)0, [&result](unsigned\
    \ char c) { result += 1;});\n  return result;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd534af3l.d(13): Error: found \''char\'' when expecting \'')\''\n/tmp/tmpd534af3l.d(13):
    Error: found \''0\'' when expecting \'';\'' following statement\n/tmp/tmpd534af3l.d(13):
    Error: found \'',\'' instead of statement\n/tmp/tmpd534af3l.d(13): Error: Declaration
    expected, not \'')\''\n/tmp/tmpd534af3l.d(14): Error: Declaration expected, not
    \''return\''\n/tmp/tmpd534af3l.d(15): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd534af3l.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i = 0;\n\twhile(i < string.Length) \n\t{\n\t\t++i;\n\t}\n\treturn\
    \ i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnir5qoqm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    char* p = &string[0];\n    while(*p)\n    {\n  \
    \      len++;\n        p++;\n    }\n    return len;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpei568rci.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long n;\n  char[] s;\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6ppft5x2.d(14): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ppft5x2.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i;\n    long len = 0;\n    for(i=0; (string[i]!='\\0'); i++)\n\
    \        len++;\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt_gsuzpg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(int i = 0; i < string.length; i++)\n \
    \   {\n        if(string[i] != '\\0')\n        {\n            len++;\n       \
    \ }\n    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsitc_cb3.d(21): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsitc_cb3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong length = 0;\n\t\n\tforeach(char c,string)\n\t\tlength++;\n\treturn\
    \ length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3siqv7t_.d(14): Error: no identifier for declarator string\n/tmp/tmp3siqv7t_.d(14):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmp3siqv7t_.d(15): Error: found
    \'';\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3siqv7t_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i;\n\tfor (i = 0; i<string.length; ++i)\n\t{\n\t\t;\n\t}\n\t\n\t\
    return i;\n}\n/*\n Return length of given string\n    >>> strlen(\"abc\")\n  \
    \  3L\n    \n*/\nlong strlen(string string, int start) \n{\n\tlong i;\n\tif (start==-1)\
    \ start=string.length-1;\n\tfor (i = start; i<string.length; ++i)\n\t{\n\t\t;\n\
    \t}\n\t\n\treturn i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7p3c8nsj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint len=0;\n\tfor(i=0;i<string.length();i++) len++;\n\treturn len;\n\
    }\n/*\n Substring with given length from given string\n    >>> substr(\"\",1,1)\n\
    \    \"\"\n    >>> substr(\"\",1,2)\n    \"\"\n    \n*/\nstring substr(string\
    \ string, long long start, long long end) \n{\n\tstring res;\n\tstring tmp;\n\t\
    long long j;\n\t\n\tif (start>end)\n\t{\n\t\tstring tmp;\n\t\tstring tmp2;\n\t\
    \tstring tmp3;\n\t\t\n\t\ttmp2=string[start];\n\t\ttmp3=string[end];\n\t\ttmp=substr(string[start+1],end,1);\n\
    \t\ttmp=tmp2.tmp;\n\t\ttmp=tmp3.tmp;\n\t\tres=tmp;\n\t\t\n\t\treturn res;\n\t\
    }\n\t\n\tfor(i=start;i<end;i++) \n\t{\n\t\ttmp=string[i];\n\t\ttmp+=res;\n\t}\n\
    \t\n\treturn tmp;\n}\n/*\n Convert string to char array\n    >>> to_chararray(\"\
    \")\n    ''\n    >>> to_chararray(\"abc\")\n    'abc'\n    \n*/\nstring to_chararray(string\
    \ string) \n{\n\tstring res;\n\tint i;\n\t\n\tres=\"\";\n\t\n\tfor (i=0;i<string.length();i++)\
    \ \n\t{\n\t\tres+=string[i];\n\t}\n\treturn res;\n}\n/*\n Convert char array to\
    \ string\n    >>> to_string(\"\")\n    ''\n    >>> to_string(\"abc\")\n    'abc'\n\
    \    \n*/\nstring to_string(string string) \n{\n\tstring res;\n\t\n\tres=\"\"\
    ;\n\t\n\tfor (i=0;i<string.length();i++) \n\t{\n\t\tres+=string[i];\n\t}\n\treturn\
    \ res;\n}\n/*\n Convert to string from char array\n    >>> to_string(\"abc\")\n\
    \    'abc'\n    \n*/\nstring to_string(char string[]) \n{\n\tstring res;\n\tint\
    \ i;\n\t\n\tres=\"\";\n\t\n\tfor (i=0;i<string.length;i++) \n\t{\n\t\tres+=string[i];\n\
    \t}\n\treturn res;\n}\n/*\n String with given length from given string\n    >>>\
    \ substr(\"abc\",1,2)\n    \"bc\"\n    \n*/\nstring substr(char string[], long\
    \ long start, long long end) \n{\n\tstring res;\n\tchar tmp;\n\tint i;\n\t\n\t\
    if (start>end)\n\t{\n\t\tstring tmp;\n\t\tstring tmp2;\n\t\tstring tmp3;\n\t\t\
    \nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3rhaxs2a.d(24): Error: found \''long\'' when expecting \'')\''\n/tmp/tmp3rhaxs2a.d(24):
    Error: semicolon expected following function declaration\n/tmp/tmp3rhaxs2a.d(24):
    Error: no identifier for declarator start\n/tmp/tmp3rhaxs2a.d(24): Error: Declaration
    expected, not \'',\''\n/tmp/tmp3rhaxs2a.d(28): Error: no identifier for declarator
    long\n/tmp/tmp3rhaxs2a.d(30): Error: Declaration expected, not \''if\''\n/tmp/tmp3rhaxs2a.d(36):
    Error: no identifier for declarator tmp2\n/tmp/tmp3rhaxs2a.d(36): Error: Declaration
    expected, not \''=\''\n/tmp/tmp3rhaxs2a.d(37): Error: no identifier for declarator
    tmp3\n/tmp/tmp3rhaxs2a.d(37): Error: Declaration expected, not \''=\''\n/tmp/tmp3rhaxs2a.d(38):
    Error: no identifier for declarator tmp\n/tmp/tmp3rhaxs2a.d(38): Error: Declaration
    expected, not \''=\''\n/tmp/tmp3rhaxs2a.d(39): Error: no identifier for declarator
    tmp\n/tmp/tmp3rhaxs2a.d(39): Error: Declaration expected, not \''=\''\n/tmp/tmp3rhaxs2a.d(40):
    Error: no identifier for declarator tmp\n/tmp/tmp3rhaxs2a.d(40): Error: Declaration
    expected, not \''=\''\n/tmp/tmp3rhaxs2a.d(41): Error: no identifier for declarator
    res\n/tmp/tmp3rhaxs2a.d(41): Error: Declaration expected, not \''=\''\n/tmp/tmp3rhaxs2a.d(43):
    Error: Declaration expected, not \''return\''\n/tmp/tmp3rhaxs2a.d(44): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3rhaxs2a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i;\n\tfor (i=0; string[i]!='\\0'; i++);\n\treturn i;\n}\n/*\n Return\
    \ substring from given string at given index\n    >>> substring(\"abcdef\", 0,\
    \ 1)\n    'abc'\n    >>> substring(\"abcdef\", 1, 2)\n    'bc'\n    >>> substring(\"\
    abcdef\", -1, 2)\n    'f'\n*/\nstring substring(string string, long i, long j)\
    \ \n{\n\tif (i>=j)\n\t\treturn \"\";\n\telse if (i<0)\n\t\treturn substring(string,\
    \ i+strlen(string), j);\n\telse\n\t\treturn string+i;\n}\n/*\n Return substring\
    \ from given string at given index\n    >>> substring(\"abcdef\", 0, 1)\n    'abc'\n\
    \    >>> substring(\"abcdef\", 1, 2)\n    'bc'\n    >>> substring(\"abcdef\",\
    \ -1, 2)\n    'f'\n*/\nstring substring(string string, long i, long j, long k)\n\
    {\n\tif (i>=j)\n\t\treturn \"\";\n\telse if (i<0)\n\t\treturn substring(string,\
    \ i+strlen(string), j, k);\n\telse if (k<0)\n\t\treturn substring(string, i, i+strlen(string)-k-1,\
    \ k);\n\telse\n\t\treturn substring(string, i, i+strlen(string)-k, k);\n}\n/*\n\
    \ Return substring from given string at given index\n    >>> substring(\"abcdef\"\
    , 0, 1)\n    'abc'\n    >>> substring(\"abcdef\", 1, 2)\n    'bc'\n    >>> substring(\"\
    abcdef\", -1, 2)\n    'f'\n*/\nstring substring(string string, long i, long j,\
    \ long k, long l)\n{\n\tif (i>=j)\n\t\treturn \"\";\n\telse if (i<0)\n\t\treturn\
    \ substring(string, i+strlen(string), j, k, l);\n\telse if (k<0)\n\t\treturn substring(string,\
    \ i, i+strlen(string)-k-1, k, l);\n\telse if (l<0)\n\t\treturn substring(string,\
    \ i, i+strlen(string)-k, k, l);\n\telse\n\t\treturn substring(string, i, i+strlen(string)-k,\
    \ k, l);\n}\n/*\n Return substring from given string at given index\n    >>> substring(\"\
    abcdef\", 0, 1)\n    'abc'\n    >>> substring(\"abcdef\", 1, 2)\n    'bc'\n  \
    \  >>> substring(\"abcdef\", -1, 2)\n    'f'\n*/\nstring substring(string string,\
    \ long i, long j, long k, long l, long m)\n{\n\tif (i>=j)\n\t\treturn \"\";\n\t\
    else if (i<0)\n\t\treturn substring(string, i+strlen(string), j, k, l, m);\n\t\
    else if (k<0)\n\t\treturn substring(string, i, i+strlen(string)-k-1, k, l, m);\n\
    \telse if (l<0)\n\t\treturn substring(string, i, i+strlen(\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpui0yrnol.d(13): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\n/tmp/tmpui0yrnol.d(95): Error: expression expected, not \''unittest\''\n/tmp/tmpui0yrnol.d(96):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpui0yrnol.d(97): Error: expression
    expected, not \''alias\''\n/tmp/tmpui0yrnol.d(97): Error: found \''candidate\''
    when expecting \'',\''\n/tmp/tmpui0yrnol.d(97): Error: expression expected, not
    \''=\''\n/tmp/tmpui0yrnol.d(97): Error: found \''strlen\'' when expecting \'',\''\n/tmp/tmpui0yrnol.d(97):
    Error: expression expected, not \'';\''\n/tmp/tmpui0yrnol.d(99): Error: found
    \''assert\'' when expecting \'',\''\n/tmp/tmpui0yrnol.d(99): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmpui0yrnol.d(100): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpui0yrnol.d(101): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpui0yrnol.d(102):
    Error: expression expected, not \''}\''\n/tmp/tmpui0yrnol.d(103): Error: found
    \''void\'' when expecting \'',\''\n/tmp/tmpui0yrnol.d(103): Error: found \''{\''
    when expecting \'',\''\n/tmp/tmpui0yrnol.d(103): Error: expression expected, not
    \''}\''\n/tmp/tmpui0yrnol.d(103): Error: found \''EOF\'' when expecting \'',\''\n/tmp/tmpui0yrnol.d(103):
    Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmpui0yrnol.d(103): Error:
    found \''EOF\'' when expecting \'',\''\n/tmp/tmpui0yrnol.d(103): Error: found
    \''EOF\'' when expecting \'')\''\n/tmp/tmpui0yrnol.d(103): Error: found \''EOF\''
    when expecting \'';\'' following return statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpui0yrnol.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long result = 0;\n  if (string == \"\") \n    return 0;\n  string +=\
    \ \"\"; // handle empty string\n  for (size_t i=0; i<string.size(); i++)\n   \
    \ result += std.math::abs(string[i]);\n  return result;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp69xlec6u.d(17): Error: found \'':\'' when expecting \'';\''
    following statement\n/tmp/tmp69xlec6u.d(17): Error: found \'':\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp69xlec6u.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result = 0L;\n    \n    for (auto c : string)\n        result\
    \ += 1;\n    \n    return result;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp47ovo_64.d(14): Error: no identifier for declarator c\n/tmp/tmp47ovo_64.d(14):
    Error: expression expected, not \'':\''\n/tmp/tmp47ovo_64.d(14): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp47ovo_64.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0L;\n\tfor (long i=0; i<string.length; ++i) \n\t{\n\t\tlen++;\n\
    \t}\n\treturn len;\n}\n/*\n Compare two strings\n Returns: 0 when strings are\
    \ identical, -1 when string1 is smaller than string2, 1 when string1 is greater\
    \ than string2\n Example:\n    >>> strcmp(\"abc\",\"abc\")\n    0\n    >>> strcmp(\"\
    abc\",\"abd\")\n    1\n    >>> strcmp(\"abc\",\"abcde\")\n    -1\n*/\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsjtdlfw7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i;\n\tfor (i = 0; string[i] != '\\0'; i++) {\n\t};\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpybg7055b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    return std.string.length(string);\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjk93og9n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  int i = 0;\n  while (string[i])\n    i++;\n  return i;\n}\n</code>\n\
    <|/ a |>\n<| a |>\n<code>\n#include<iostream>\n#include<string>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\"\
    ) == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqt3gljj7.d(17): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqt3gljj7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i;\n\tint size = string.size();\n\tlong len = 0;\n\tfor (i = 0; i\
    \ < size; i++) {\n\t\tlen += string.data()[i] - '0';\n\t}\n\treturn len;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6mug5fpt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\treturn string.length();\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt9humupl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 0;\n    for(;i<string.length();i++) {\n        if(string[i]=='\
    \ ' || string[i]==',' || string[i]=='(' || string[i]==')' || string[i]=='[' ||\
    \ string[i]==']' || string[i]=='{' || string[i]=='}' || string[i]=='\\\"' || string[i]=='\\\
    '') {\n            i++;\n            continue;\n        }\n        break;\n  \
    \  }\n    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf31ty9_g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint len = 0;\n\t\n\twhile(string.data[len] != '\\0'){\n\t\tlen++;\n\t\
    }\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1zof70hu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint n = 0;\n\tint c = 0;\n\tfor(int i = 0; (i < string.size()); i++)\
    \ {\n\t\tc = string[i];\n\t\tn++;\n\t\tif(n >= MAXLEN) return n; // string too\
    \ long\n\t}\n\treturn n;\n}\nunittest\n{\n    alias candidate = strlen;\n\n  \
    \  assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqfrzrg30.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977993
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tsize_t length = 0;\n\tsize_t i;\n\tfor (i = 0; i < (sizeof string / sizeof\
    \ *string); i++) {\n\t\tif (string[i] == 0)\n\t\t\tbreak;\n\t\tlength++;\n\t}\n\
    \treturn length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy3rm87ty.d(14): Error: found \''string\'' when expecting \'')\''\n/tmp/tmpy3rm87ty.d(14):
    Error: found \'')\'' when expecting \'';\'' following for condition\n/tmp/tmpy3rm87ty.d(14):
    Error: expression expected, not \'';\''\n/tmp/tmpy3rm87ty.d(14): Error: found
    \''i\'' when expecting \'')\''\n/tmp/tmpy3rm87ty.d(14): Error: expression expected,
    not \'')\''\n/tmp/tmpy3rm87ty.d(14): Error: found \''{\'' when expecting \'';\''
    following statement\n/tmp/tmpy3rm87ty.d(19): Error: Declaration expected, not
    \''return\''\n/tmp/tmpy3rm87ty.d(20): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy3rm87ty.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long l = 0;\n    unsigned i;\n    for(i = 0; string[i] != '\\0'; i++);\n\
    \    return i;\n}\n/*\n Return offset of given string\n    >>> stroff(\"\", 3)\n\
    \    3L\n    >>> stroff(\"abc\", 2)\n    5L\n    \n*/\nlong stroff(string string,\
    \ long offset) \n{\n    long l = 0;\n    unsigned i;\n    for(i = 0; string[i]\
    \ != '\\0'; i++);\n    l += i;\n    return l;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpss9rndft.d(14): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\n/tmp/tmpss9rndft.d(29): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpss9rndft.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i;\n\tlong len = 0;\n\tfor (i = 0; i < string.length; i++) \n\t\t\
    len++;\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ef5j6_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    int c;\n    for(c=0; c<int(string.length()); ++c)\
    \ \n    {\n        ++len;\n    }\n    return len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppw7bivdm.d(14): Error: found \''(\'' when expecting \''.\''
    following int\n/tmp/tmppw7bivdm.d(14): Error: found \'')\'' when expecting \'';\''
    following for condition\n/tmp/tmppw7bivdm.d(14): Error: expression expected, not
    \'';\''\n/tmp/tmppw7bivdm.d(14): Error: found \''c\'' when expecting \'')\''\n/tmp/tmppw7bivdm.d(14):
    Error: found \'')\'' instead of statement\n/tmp/tmppw7bivdm.d(18): Error: Declaration
    expected, not \''return\''\n/tmp/tmppw7bivdm.d(19): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppw7bivdm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  return length(string);\n}\n/*\n Return 'true' if string is empty or 'false'\
    \ if string is not empty\n \n >>> is_empty()\n false\n >>> is_empty(\"\")\n true\n\
    \ >>> is_empty(\"Hello\")\n false\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6f3dptif.d(14): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp6f3dptif.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 0;\n    while (string[i]) {\n        i++;\n    }\n    return\
    \ i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph0_a1tr2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = string.length();\n\tif (len < 0) \n\t\treturn 0;\n\telse\n\
    \t\treturn len;\n}\n/*\n Replace substring in string with new string\n    >>>\n\
    */\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp95af8z2_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    if (string == null)\n        throw new ArgumentNullException(\"string\"\
    , \"'string' must not be null\");\n    return string.Length;\n}\nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp12r0mfvy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n\tsize_t result;\n\tstringstream stream (string);\n\tresult = (size_t)\
    \ stream.str().size();\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8h3tjti7.d(14): Error: C style cast illegal, use cast(size_t)stream.str().size()\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8h3tjti7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 0;\n    while(string[i] != '\\0')\n    {\n        i++;\n  \
    \  }\n    return (long) i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0vso85gf.d(17): Error: C style cast illegal, use cast(long)i\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0vso85gf.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    while (string[len] != '\\0')\n    {\n        len++;\n\
    \    }\n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n   \
    \ assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpreet_cvk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977951
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(string s = string; !s.empty(); s = next(string))\n\
    \        len++;\n    \n    return len;\n}\nunittest\n{\n    alias candidate =\
    \ strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") ==\
    \ 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6u_9furf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i;\n    long s = 0;\n    for (i = 0; i < string.length; ++i)\n\
    \    {\n       ++s;\n       if (string[i] == '\\0') \n          return s;\n  \
    \  }\n    return s;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9uih73pt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tstringstream stream(string);\n\tstream >> noskipws;\n\tlong long result\
    \ = 0;\n\twhile(stream.good())\n\t{\n\t\tchar c = stream.peek();\n\t\tif(!(c <\
    \ '0' || c > '9'))\n\t\t\tbreak;\n\t\tresult = result * 10 + c - '0';\n\t\tstream.ignore();\n\
    \t}\n\treturn result;\n}\n/*\n Return size of given string\n    >>> sizeof(\"\
    a\")\n    1L\n    >>> sizeof(\"abc\")\n    3L\n    \n*/\nlong sizeof(string string)\
    \ \n{\n\tstringstream stream(string);\n\tstream >> noskipws;\n\tlong long result\
    \ = 0;\n\twhile(stream.good())\n\t{\n\t\tchar c = stream.peek();\n\t\tif(!(c <\
    \ '0' || c > '9'))\n\t\t\tbreak;\n\t\tresult = result * 10 + c - '0';\n\t\tstream.ignore();\n\
    \t}\n\treturn result;\n}\n/*\n Return string with all non-digit characters replaced\
    \ by underscore\n    >>> format(\"abc/123\")\n    \"abc_123\"\n    \n*/\nstring\
    \ format(string string) \n{\n\tstringstream stream(string);\n\tstream >> noskipws;\n\
    \tstring result;\n\tchar c;\n\twhile(stream.good())\n\t{\n\t\tc = stream.peek();\n\
    \t\tif(!(c < '0' || c > '9'))\n\t\t{\n\t\t\tresult += '_';\n\t\t}\n\t\telse\n\t\
    \t{\n\t\t\tresult += c;\n\t\t}\n\t\tstream.ignore();\n\t}\n\treturn result;\n\
    }\n/*\n Return string with only digits replaced by zero\n    >>> format(\"123\"\
    )\n    \"000123\"\n    \n*/\nstring zfill(string string) \n{\n\tstringstream stream(string);\n\
    \tstream >> noskipws;\n\tstring result;\n\tchar c;\n\twhile(stream.good())\n\t\
    {\n\t\tc = stream.peek();\n\t\tif(!(c < '0' || c > '9'))\n\t\t{\n\t\t\tresult\
    \ += c;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tresult += '0';\n\t\t}\n\t\tstream.ignore();\n\
    \t}\n\treturn result;\n}\n/*\n Return string with only non-digits replaced by\
    \ underscore\n    >>> format(\"abc\")\n    \"abc\"\n    \n*/\nstring replace(string\
    \ string) \n{\n\tstringstream stream(string);\n\tstream >> noskipws;\n\tstring\
    \ result;\n\tchar c;\n\twhile(stream.good())\n\t{\n\t\tc = stream.peek();\n\t\t\
    if(!(c < '0' || c > \nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8cdkd3nz.d(14): Error: no identifier for declarator long\n/tmp/tmp8cdkd3nz.d(37):
    Error: no identifier for declarator long\n/tmp/tmp8cdkd3nz.d(118): Error: expression
    expected, not \''unittest\''\n/tmp/tmp8cdkd3nz.d(117): Error: found \''{\'' when
    expecting \'')\''\n/tmp/tmp8cdkd3nz.d(120): Error: found \''alias\'' when expecting
    \'')\''\n/tmp/tmp8cdkd3nz.d(126): Error: found \''EOF\'' when expecting \''}\''
    following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8cdkd3nz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0, pos = 0;\n    while(string[pos] != '\\0')\n    {\n  \
    \      len++;\n        pos++;\n    }\n    return len;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnq9fw2g1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 0;\n    long n = 0;\n    while(string.at(i) != '\\0')\n   \
    \ {\n        ++i;\n        ++n;\n    }\n    return n;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvl8tiaz9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long l;\n    if (string.length < 1)\n        return 0L;\n    else {\n\
    \        l = string.length();\n        for(string::const_iterator it=string.begin();\
    \ it != string.end(); ++it) {\n            switch(*it) {\n                case\
    \ '\\0': l++; break;\n                default: l+=2; break;\n            }\n \
    \       }\n        return l;\n    }\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuvhjs3vy.d(17): Error: found \'':\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuvhjs3vy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i;\n    long length = 0L;\n    for (i = 0; i < string.length; ++i)\n\
    \    {\n        if (string[i] != '\\0')\n        {\n            ++length;\n  \
    \      }\n    }\n    return length;\n}\n</code>\n<|/ a tags=c++,string dscore=4\
    \ |>\n<| a dscore=3 tags=c++,string |>\n<code>\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi0f4w1z_.d(23): Error: Declaration expected, not \''<\''\n/tmp/tmpi0f4w1z_.d(31):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpi0f4w1z_.d(32): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpi0f4w1z_.d(33): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpi0f4w1z_.d(34): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi0f4w1z_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long long i=0;\n    \n    for(i = 0;i < string.length;i++)\n    {\n\
    \        if(string[i] != '\\0')\n            break;\n    }\n    \n    return i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph728fzxj.d(12): Error: no identifier for declarator long\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph728fzxj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n\tlong len = 0 ;\n\t\n\tfor(auto c : string) len++ ;\n\treturn len ;\n\
    }\n/**\n    @defgroup string String manipulation\n    @{\n    */\n#include <algorithm>\n\
    #include <cassert>\n#include <initializer_list>\n#include <cstdlib>\n#include\
    \ <cstring>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include\
    \ <vector>\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0_9pd3wj.d(14): Error: no identifier for declarator c\n/tmp/tmp0_9pd3wj.d(14):
    Error: expression expected, not \'':\''\n/tmp/tmp0_9pd3wj.d(14): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmp0_9pd3wj.d(21):
    Error: Declaration expected, not \''#\''\n/tmp/tmp0_9pd3wj.d(34): Error: Declaration
    expected, not \''assert\''\n/tmp/tmp0_9pd3wj.d(35): Error: Declaration expected,
    not \''assert\''\n/tmp/tmp0_9pd3wj.d(36): Error: Declaration expected, not \''assert\''\n/tmp/tmp0_9pd3wj.d(37):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0_9pd3wj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0, i = 1;\n    for(;i<(string.length()-2);i++,len++);\n\
    \    return len;\n}\n/*\n Return number of words in given string\n    >>> count_words(\"\
    abc\")\n    2L\n    >>> count_words(\"a b c\")\n    3L\n    \n*/\nlong count_words(string\
    \ string)\n{\n    long len = 0;\n    string temp = \"\";\n    for(;i<(string.length()-2);i++)\n\
    \    {\n        if(string[i]==' ')\n        {\n            len++;\n        }\n\
    \        else\n        {\n            temp = temp + string[i];\n        }\n  \
    \  }\n    return len;\n}\n/*\n Convert number to string\n    >>> to_string(12)\n\
    \    '12'\n    >>> to_string(12.5)\n    '12.5'\n    >>> to_string(12.56789)\n\
    \    '12.56789'\n    \n*/\nstring to_string(float number)\n{\n    long len = 0;\n\
    \    string temp = \"\";\n    for(;number>0L;len++,number/=10);\n    string str\
    \ = \"\" + number;\n    for(;len>0;len--)\n    {\n        temp = temp + \".\"\
    \ + string[str%string.length()];\n        str/=10;\n    }\n    return temp;\n\
    }\n/*\n Return sum of given numbers\n    >>> add(1L,1L)\n    2L\n    >>> add(2L,3L)\n\
    \    5L\n    \n*/\nlong add(long a,long b)\n{\n    return a + b;\n}\n/*\n Return\
    \ multiplication of given numbers\n    >>> multiply(2L,3L)\n    6L\n    \n*/\n\
    long multiply(long a,long b)\n{\n    return a * b;\n}\n/*\n Return division of\
    \ given numbers\n    >>> divide(2L,3L)\n    1.5L\n    \n*/\nfloat divide(float\
    \ a,float b)\n{\n    return a/b;\n}\n/*\n Return floor of given number\n    >>>\
    \ floor(2L)\n    2L\n    \n*/\nlong floor(long a)\n{\n    return (int)a;\n}\n\
    /*\n Return floor of given number\n    >>> floor(1.5)\n    1L\n    \n*/\nlong\
    \ floor(float a)\n{\n    return (int)a;\n}\n/*\n Return ceil of given number\n\
    \    >>> ceil(2.2)\n    3L\n    \n*/\nlong ceil(long a)\n{\n    return (int)ceil(a);\n\
    }\n/*\n Return ceil of given number\n    >>> ceil(2.4)\n    2.5L\n    \n*/\nlong\
    \ ceil(float a)\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeqheibek.d(13): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\n/tmp/tmpeqheibek.d(55): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\n/tmp/tmpeqheibek.d(104): Error: C style cast illegal, use cast(int)a\n/tmp/tmpeqheibek.d(114):
    Error: C style cast illegal, use cast(int)a\n/tmp/tmpeqheibek.d(124): Error: C
    style cast illegal, use cast(int)ceil(a)\n/tmp/tmpeqheibek.d(133): Error: semicolon
    expected following function declaration\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpeqheibek.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    return std.math._stringLength(std.string.__stringOf(string)._ptr);\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpre9iykj4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int len = 0;\n    int len = string.length();\n    return len;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxk05crnd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long total = 0L;\n    for (auto i : string) {\n        total += 1;\n\
    \    }\n    return total;\n}\nunittest\n{\n    alias candidate = strlen;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa7xc545t.d(13): Error: no identifier for declarator i\n/tmp/tmpa7xc545t.d(13):
    Error: expression expected, not \'':\''\n/tmp/tmpa7xc545t.d(13): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpa7xc545t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 1;\n    \n    while (i < string.length && string[i] != '\\\
    0') \n        i++;\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl5eop7ox.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl5eop7ox.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong stringLength;\nunittest\n{\n    alias candidate = strlen;\n\n  \
    \  assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgggocxh3.d(13): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgggocxh3.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i, n=0;\n    for (i=0; string[i]; i++)\n        n++;\n    return\
    \ n;\n}\n/*\n Return substring with given indexes\n    \n*/\nstring substr(string\
    \ str, int start, int end) \n{\n    int i;\n    char c;\n    string s = \"\";\n\
    \    for(i=start, c=0; i<=end && c<=strlen(str); i++, c = str[i])\n        s +=\
    \ c;\n    return s;\n}\n/*\n Return string without last char\n    \n*/\nstring\
    \ trim(string str)\n{\n    string s = \"\";\n    int i;\n    for(i=strlen(str);\
    \ i>0; i--)\n        s += str[i];\n    return s;\n}\n/*\n Return string with last\
    \ char removed\n    \n*/\nstring substr(string str)\n{\n    string s = \"\";\n\
    \    int i;\n    for(i=strlen(str); i>0; i--)\n        s += str[i];\n    return\
    \ s;\n}\n/*\n Return true if string starts with given string\n    \n*/\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9jeq8ej.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tstring str = \"\";\n\tlong n = 0;\n\t\n\twhile (std.string.find(str,\
    \ string, 0, string.length()) != -1)\n\t{\n\t\tstr += \"0\";\n\t\tn += 1;\n\t\
    }\n\t\n\treturn n;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_6vibhp0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i;\n    long result = 0;\n    \n    for (i = 0; i < string.length;\
    \ i++)\n    {\n        if (string[i] >= '0' && string[i] <= '9')\n        {\n\
    \            result = result + 1;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpel0l5u5a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong stringLength = string.length()\n\t\n\treturn stringLength;\n}\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpho9487pj.d(14): Error: semicolon expected, not \''return\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpho9487pj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint\t\ti;\n\tlong\t\tj = 0;\n\t\n\tfor (i = 0; string[i]; i++)\n\t{\n\
    \t\tif (string[i] != '\\0')\n\t\t\tj++;\n\t}\n\t\n\treturn (j);\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2bjs17x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile(string[len] != '\\0') {\n\t\tlen++;\n\t}\n\
    \treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyi2whdnm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length = 0;\n    while(string[length] != '\\0') \n        length++;\n\
    \    return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84g1doac.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i;\n    int len = 0;\n    string s;\n    string c;\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphy655eb_.d(16): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphy655eb_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n  long length;\n  \n  // First check to see if string has length > 0,\
    \ otherwise return length\n  if(string.size > 0) \n  { \n    length = string.length();\
    \ \n  }\n  else \n  { \n    length = 0; \n  } \n  return length; \n} \nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0ml_6isf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tunsigned long result;\n\t\n\tresult = 0;\n\t\n\twhile(string[result]\
    \ != NULL_CHAR)\n\t{\n\t\tresult++;\n\t}\n\t\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_sziud2y.d(12): Error: found \''long\'' when expecting \'';\''
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_sziud2y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long len = 0;\n  while(string.data[len] != 0) {\n    len++;\n  }\n  return\
    \ len;\n}\n/*\n Compare two strings\n    >>> strcmp(\"\", \"\")\n    0\n    >>>\
    \ strcmp(\"a\", \"a\")\n    0\n    >>> strcmp(\"ab\", \"abc\")\n    1\n    \n\
    */\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5ua68b3y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong result = 0;\n\twhile(string.codePointAt(result) != 0) {\n\t\tresult\
    \ += 1;\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm06ogn0d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    size_t len = string.length();\n    if(len == 0)\n        throw runtime_error(\"\
    Invalid length of given string\");\n    return (long)len;\n}\nunittest\n{\n  \
    \  alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg0j0j1nw.d(15): Error: C style cast illegal, use cast(long)len\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg0j0j1nw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\nlong len=0;\n\tdo\n\t{\n\t\tlen++;\n\t} while(string[len]!='\\0');\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqpjta4f_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0L;\n    \n    foreach(i, string) \n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqwu2w9na.d(14): Error: no identifier for declarator string\n/tmp/tmpqwu2w9na.d(14):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpqwu2w9na.d(19): Error: found
    \''return\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpqwu2w9na.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i = 0; \n\twhile (string[i] != '\\0')\n\t\ti = i + 1;\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn7yeh1zr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long i;\n    \n    long len = 0;\n    \n    for (i=0; i<string.length;\
    \ i++)\n    {\n\tlen++;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo9ha75ek.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long i;\n    for(i=0;i<string.length;i++) {\n        if(i == string.length-1)\
    \ {\n            break;\n        }\n        if(string[i] == null) {\n        \
    \    break;\n        }\n    }\n    \n    return i;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ykuwta2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n  long len = 0;\n  for (string i = 0; i < string.length; i++) \n  {\n\
    \    len++; \n  }\n  return len;\n}\n</code>\n<|/ q dscore=1 tags=stack-overflow,c\
    \ |>\n<| c |>\nWhy are you defining a `function` named `function`? Why are you\
    \ declaring variables inside your `function`?\n<|/ c |>\n<| c |>\nI have no idea\
    \ why I defined a function named function, but yes I should declare variables\
    \ inside function. I did it because I thought the compiler is confused because\
    \ I didn't put any variable or function declaration before I called the function.\
    \ It was an error of declaring variables inside the function and I didn't notice\
    \ I declared a variable inside function.\n<|/ c |>\n<| a tags=stack-overflow,c\
    \ |>\nIn function main():\n<code>\nfunction ()\n{\n    ...\n}\n</code>\nshould\
    \ be\n<code>\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps81e7nb6.d(19): Error: Declaration expected, not \''<\''\n/tmp/tmps81e7nb6.d(25):
    Error: unterminated character constant\n/tmp/tmps81e7nb6.d(25): Error: unterminated
    character constant\n/tmp/tmps81e7nb6.d(41): Error: Declaration expected, not \''assert\''\n/tmp/tmps81e7nb6.d(42):
    Error: Declaration expected, not \''assert\''\n/tmp/tmps81e7nb6.d(43): Error:
    Declaration expected, not \''assert\''\n/tmp/tmps81e7nb6.d(44): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps81e7nb6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    const char* string = string.c_str();\n    size_t size = 0;\n    \n\
    \    while (string[size] != '\\0') {\n        size++;\n    }\n    return size;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpte9182vb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n    long length = 0;\n    int i;\n    \n    for (i=0; i < string.length;\
    \ i++) \n    {\n        length += string.codeUnitAt(i); \n    }\n    return length;\n\
    }\n/*\n Return first character of given string\n    >>> strfirst(\"\")\n    error:\
    \ invalid argument (empty string)\n    >>> strfirst(\"abc\")\n    'a'\n*/\nchar\
    \ strfirst(string string) \n{ \n    char first;\n    int i;\n    \n    first =\
    \ string.codeUnitAt(0);\n    for (i=1; i < string.length; i++) \n    {\n     \
    \   first += string.codeUnitAt(i);\n    }\n    return first;\n}\n/*\n Return last\
    \ character of given string\n    >>> strlast(\"\")\n    error: invalid argument\
    \ (empty string)\n    >>> strlast(\"abc\")\n    'c'\n*/\nchar strlast(string string)\
    \ \n{ \n    char last;\n    int i;\n    \n    last = string.codeUnitAt(string.length-1);\n\
    \    for (i=string.length-2; i >= 0; i--) \n    {\n        last += string.codeUnitAt(i);\n\
    \    }\n    return last;\n}\nunittest\n{\n    alias candidate = strlen;\n\n  \
    \  assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpop7vgpbu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i;\n\t\n\ti = 0;\n\twhile (string[i] != 0) \n\t\ti++;\n\t\n\treturn\
    \ i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5eslfrfl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length = 0;\n    for (auto c: string) \n    {\n        length\
    \ = std.math.max(std.math::min(length, std.string.length(c)), 1L);\n    }\n  \
    \  return length;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmhilgjll.d(13): Error: no identifier for declarator c\n/tmp/tmpmhilgjll.d(13):
    Error: expression expected, not \'':\''\n/tmp/tmpmhilgjll.d(13): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmpmhilgjll.d(15):
    Error: found \'':\'' when expecting \'',\''\n/tmp/tmpmhilgjll.d(15): Error: expression
    expected, not \'':\''\n/tmp/tmpmhilgjll.d(15): Error: found \''min\'' when expecting
    \'',\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmhilgjll.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n\tstring s;\n\tfor ( size_t i = 0; i<string.length;\
    \ ++i )\n\t{\n\t\ts = string.substr(i,1);\n\t\tif( s == \"\" ){\n\t\t\tbreak;\n\
    \t\t}\n\t\tlen++;\n\t}\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvn87ux4d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for (auto &c : string) \n        len++;\n\
    \    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxwlp7qk_.d(14): Error: basic type expected, not &\n/tmp/tmpxwlp7qk_.d(14):
    Error: no identifier for declarator int\n/tmp/tmpxwlp7qk_.d(14): Error: found
    \'':\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpxwlp7qk_.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong length = 0L;\n\tauto it=string.begin();\n\tauto end=string.end();\n\
    \twhile (it!=end) length++;\n\treturn length;\n}\n/*\n Return sum of numbers in\
    \ given array \n If array is empty 0 is returned\n    >>> sum([1, 2, 3])\n   \
    \ 6\n    >>> sum([])\n    0L\n    \n*/\nlong sum(vector<long int> array) {\n\t\
    long sum = 0L;\n\tfor (auto iter = array.cbegin(); iter != array.cend(); ++iter)\
    \ {\n\t\tsum += *iter;\n\t}\n\treturn sum;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoj46yy_g.d(27): Error: found \''<\'' when expecting \'')\''\n/tmp/tmpoj46yy_g.d(27):
    Error: semicolon expected following function declaration\n/tmp/tmpoj46yy_g.d(27):
    Error: no identifier for declarator long\n/tmp/tmpoj46yy_g.d(27): Error: no identifier
    for declarator int\n/tmp/tmpoj46yy_g.d(27): Error: Declaration expected, not \''>\''\n/tmp/tmpoj46yy_g.d(29):
    Error: Declaration expected, not \''for\''\n/tmp/tmpoj46yy_g.d(29): Error: no
    identifier for declarator iter\n/tmp/tmpoj46yy_g.d(29): Error: Declaration expected,
    not \''!=\''\n/tmp/tmpoj46yy_g.d(29): Error: Declaration expected, not \''++\''\n/tmp/tmpoj46yy_g.d(31):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoj46yy_g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{ \n\tlong ret; \n\tret = string.len; \n\treturn ret; \n} \nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbf4ekzqp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    return string.length()/sizeof(char);\n}\n/*\n Return sum of all digits\
    \ in given string\n    >>> sum([0,1,2,3,4])\n    10L\n    \n*/\nlong sum(string\
    \ string) \n{\n    long total = 0;\n    for (auto i = 0; i != string.length();\
    \ i++)\n        total += string[i]-'0';\n    return total;\n}\nunittest\n{\n \
    \   alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1_ld55fg.d(12): Error: found \'')\'' when expecting \''.\''
    following char\n/tmp/tmp1_ld55fg.d(12): Error: found \'';\'' when expecting identifier
    following \''char.\''\n/tmp/tmp1_ld55fg.d(13): Error: found \''}\'' when expecting
    \'',\''\n/tmp/tmp1_ld55fg.d(20): Error: found \''sum\'' when expecting \''.\''
    following long\n/tmp/tmp1_ld55fg.d(20): Error: found \''(\'' when expecting identifier
    following \''long.\''\n/tmp/tmp1_ld55fg.d(20): Error: found \''string\'' when
    expecting \'',\''\n/tmp/tmp1_ld55fg.d(21): Error: found \''{\'' when expecting
    \'';\'' following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp1_ld55fg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result;\n    \n    result = 0;\n    \n    foreach char c in string\n\
    \    {\n        result = result + 1;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8lx5pl8c.d(16): Error: found \''char\'' when expecting \''(\''\n/tmp/tmp8lx5pl8c.d(16):
    Error: no identifier for declarator c\n/tmp/tmp8lx5pl8c.d(16): Error: found \''in\''
    when expecting \'';\''\n/tmp/tmp8lx5pl8c.d(17): Error: found \''{\'' when expecting
    \'')\''\n/tmp/tmp8lx5pl8c.d(21): Error: Declaration expected, not \''return\''\n/tmp/tmp8lx5pl8c.d(22):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8lx5pl8c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i = 0 ;\n\tforeach_string (istring[i], string) {\n\t\ti++ ;\n\t\
    }\n\treturn i ;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9q0e1bpe.d(13): Error: found \''{\'' when expecting \'';\''
    following statement\n/tmp/tmp9q0e1bpe.d(16): Error: Declaration expected, not
    \''return\''\n/tmp/tmp9q0e1bpe.d(17): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9q0e1bpe.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long result = 0;\n  for (unsigned i = 0; i < string.length; ++i)\n  \
    \  result += getChar(string[i]);\n  return result;\n}\n*/\n/*\n Convert string\
    \ to uppercase\n    >>> toUpper(\"AbC\")\n    \"ABC\"\n    \n Convert string to\
    \ lowercase\n    >>> toLower(\"AbC\")\n    \"abc\"\n*/\nstring toUpper(string\
    \ string) \n{\n  string result = \"\";\n  for (unsigned i = 0; i < string.length;\
    \ ++i)\n    result += toUpper(getChar(string[i]));\n  return result;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdme7ot6a.d(17): Error: Declaration expected, not \''*\''\n/tmp/tmpdme7ot6a.d(30):
    Error: Declaration expected, not \''for\''\n/tmp/tmpdme7ot6a.d(30): Error: no
    identifier for declarator i\n/tmp/tmpdme7ot6a.d(30): Error: Declaration expected,
    not \''<\''\n/tmp/tmpdme7ot6a.d(30): Error: Declaration expected, not \''++\''\n/tmp/tmpdme7ot6a.d(32):
    Error: Declaration expected, not \''return\''\n/tmp/tmpdme7ot6a.d(33): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdme7ot6a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tforeach(char ch, string)\n\t{\n\t\tlen++;\n\t}\n\
    \treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkgvbstyj.d(14): Error: no identifier for declarator string\n/tmp/tmpkgvbstyj.d(14):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmpkgvbstyj.d(18): Error: found
    \''return\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpkgvbstyj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tforeach(char ch, string) {\n\t\tlen++;\n\t}\n\t\n\
    \treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_o7wst8s.d(14): Error: no identifier for declarator string\n/tmp/tmp_o7wst8s.d(14):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmp_o7wst8s.d(18): Error: found
    \''return\'' when expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp_o7wst8s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long length = 0;\n    int i = 0;\n    \n    while (string[i])\n   \
    \ {\n        length++;\n        i++;\n    }\n    return length;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6kahd3uj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong result = 0;\n\tfor (int i=0; i<string.length; ++i) \n\t\tresult\
    \ += string[i];\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph2asv_7f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    if (string == 0) {\n        return 0L;\n    } else {\n        size_t\
    \ len = string.len();\n        size_t i = 0;\n        for (; (i < len); i++) {\n\
    \            if (string[i] == '\\0') {\n                return i;\n          \
    \  }\n        }\n        return len;\n    }\n}\n/*\n Return string in reversed\
    \ order\n    >>> strrev(\"abc\")\n    \"cba\"\n    \n*/\nstring strrev(string\
    \ string) \n{\n    string result;\n    string temp;\n    size_t len = 0;\n   \
    \ size_t i = string.len()-1;\n    for (; (i >= 0); i--) {\n        temp = string[i];\n\
    \        len += string[i].len();\n        result = result + temp;\n    }\n   \
    \ for (; (len > 0); len--) {\n        result = result + string[len];\n    }\n\
    \    return result;\n}\n/*\n Sort a string\n    >>> sort(\"abcefgh\")\n    \"\
    abcdefgh\"\n    \n*/\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplyqexuqh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long i;\n    long len;\n    for(i = 0; i < string.len; ++i)\n    {\n\
    \        len = string.len - (i + 1);\n        if(string[i] != 0)\n           \
    \ len++;\n    }\n    return len;\n}\n/*\n Return length of given string\n    >>>\
    \ strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(char16_t string) \n{\n    long\
    \ i;\n    long len;\n    for(i = 0; i < string.length; ++i)\n    {\n        len\
    \ = string.length - (i + 1);\n        if(string[i] != 0)\n            len++;\n\
    \    }\n    return len;\n}\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(wchar_t string)\
    \ \n{\n    long i;\n    long len;\n    for(i = 0; i < string.length; ++i)\n  \
    \  {\n        len = string.length - (i + 1);\n        if(string[i] != 0)\n   \
    \         len++;\n    }\n    return len;\n}\n/*\n Return length of given string\n\
    \    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nsize_t\
    \ strlen(string const & string) \n{\n    return string.length();\n}\n/*\n Return\
    \ length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\"\
    )\n    3L\n    \n*/\nsize_t strlen(char16_t const & string) \n{\n    return string.length();\n\
    }\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"\
    abc\")\n    3L\n    \n*/\nsize_t strlen(wchar_t const & string) \n{\n    return\
    \ string.length();\n}\n/*\n Return pointer to character before first non-zero\
    \ character\n    >>> str = \"abc\"\n    >>> str.ptrbefore(0)\n    'a'\n    >>>\
    \ str.ptrbefore(1)\n    'b'\n    >>> str.ptrbefore(2)\n    'c'\n    \n*/\nstring\
    \ str.ptrbefore(size_t position) \n{\n    if(position > length())\n        throw\
    \ length_error(\"str::ptrbefore : position out of range\");\n    string str(position\
    \ + 1, 0);\n    str.str[0] = string[position];\n    return str;\n}\n/*\n Return\
    \ pointer to character before first non-zero character\n    >>> str = \"abc\"\n\
    \    >>> str.ptrbefore(0)\n    'a'\n    >>> str.ptrbefore(1)\n    'b'\n    >>>\
    \ str.ptrbefore(2)\n    'c'\n    \nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxi8rl_3i.d(68): Error: found \''const\'' when expecting \'')\''\n/tmp/tmpxi8rl_3i.d(68):
    Error: semicolon expected following function declaration\n/tmp/tmpxi8rl_3i.d(68):
    Error: Declaration expected, not \''&\''\n/tmp/tmpxi8rl_3i.d(71): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxi8rl_3i.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long length = 0L;\n  foreach(char ch, string)\n    length++\n  return\
    \ length;\n}\nlong strlen(string string) \n{\n  long length = 0L;\n  foreach(char\
    \ ch, string)\n    length++\n  return length;\n}\n/*\n Return length of given\
    \ string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n\
    */\nlong strlen(string string) \n{\n  long length = 0L;\n  foreach(char ch, string)\n\
    \    length++\n  return length;\n}\nlong strlen(string string) \n{\n  long length\
    \ = 0L;\n  foreach(char ch, string)\n    length++\n  return length;\n}\n/*\n Return\
    \ length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\"\
    )\n    3L\n    \n*/\nlong strlen(string string) \n{\n  long length = 0L;\n  foreach(char\
    \ ch, string)\n    length++\n  return length;\n}\nlong strlen(string string) \n\
    {\n  long length = 0L;\n  foreach(char ch, string)\n    length++\n  return length;\n\
    }\n/*\n Return length of given string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"\
    abc\")\n    3L\n    \n*/\nlong strlen(string string) \n{\n  long length = 0L;\n\
    \  foreach(char ch, string)\n    length++\n  return length;\n}\nlong strlen(string\
    \ string) \n{\n  long length = 0L;\n  foreach(char ch, string)\n    length++\n\
    \  return length;\n}\n/*\n Return length of given string\n    >>> strlen(\"\"\
    )\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  long length = 0L;\n  foreach(char ch, string)\n    length++\n  return\
    \ length;\n}\nlong strlen(string string) \n{\n  long length = 0L;\n  foreach(char\
    \ ch, string)\n    length++\n  return length;\n}\n/*\n Return length of given\
    \ string\n    >>> strlen(\"\")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n\
    */\nlong strlen(string string) \n{\n  long length = 0L;\n  foreach(char ch, string)\n\
    \    length++\n  return length;\n}\nlong strlen(string string) \n{\n  long length\n\
    unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n\
    \    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1cjavmfk.d(13): Error: no identifier for declarator string\n/tmp/tmp1cjavmfk.d(13):
    Error: found \'')\'' when expecting \'';\''\n/tmp/tmp1cjavmfk.d(15): Error: found
    \''return\'' when expecting \'')\''\n/tmp/tmp1cjavmfk.d(20): Error: no identifier
    for declarator string\n/tmp/tmp1cjavmfk.d(20): Error: found \'')\'' when expecting
    \'';\''\n/tmp/tmp1cjavmfk.d(22): Error: found \''return\'' when expecting \'')\''\n/tmp/tmp1cjavmfk.d(35):
    Error: no identifier for declarator string\n/tmp/tmp1cjavmfk.d(35): Error: found
    \'')\'' when expecting \'';\''\n/tmp/tmp1cjavmfk.d(37): Error: found \''return\''
    when expecting \'')\''\n/tmp/tmp1cjavmfk.d(42): Error: no identifier for declarator
    string\n/tmp/tmp1cjavmfk.d(42): Error: found \'')\'' when expecting \'';\''\n/tmp/tmp1cjavmfk.d(44):
    Error: found \''return\'' when expecting \'')\''\n/tmp/tmp1cjavmfk.d(57): Error:
    no identifier for declarator string\n/tmp/tmp1cjavmfk.d(57): Error: found \'')\''
    when expecting \'';\''\n/tmp/tmp1cjavmfk.d(59): Error: found \''return\'' when
    expecting \'')\''\n/tmp/tmp1cjavmfk.d(64): Error: no identifier for declarator
    string\n/tmp/tmp1cjavmfk.d(64): Error: found \'')\'' when expecting \'';\''\n/tmp/tmp1cjavmfk.d(66):
    Error: found \''return\'' when expecting \'')\''\n/tmp/tmp1cjavmfk.d(79): Error:
    no identifier for declarator string\n/tmp/tmp1cjavmfk.d(79): Error: found \'')\''
    when expecting \'';\''\n/tmp/tmp1cjavmfk.d(81): Error: found \''return\'' when
    expecting \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1cjavmfk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i;\n\tlong result;\n\t\n\tresult = 0;\n\tfor (i=0; i<string.length;\
    \ ++i)\n\t\tresult += charToInt(string[i]);\n\t\n\treturn result;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo9kdmo0z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\tauto begin = string.begin;\n\tauto end = string.end;\n\
    \twhile (begin != end) {\n\t\t++begin;\n\t\t++len;\n\t}\n\treturn len;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa9019flc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0, c;\n    \n    for(c = 0; c < string.length; ++c)\n  \
    \  {\n        len += std.ctype.isWhiteSpace(string.data[c]) ? (c == '\\n' ? 1\
    \ : (len + 2)) : 0;\n    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9f0sj_pz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint len = 0;\n\tfor (int i = 0; i < string.length(); ++i)\n\t\tlen +=\
    \ string.chars[i] != 0;\n\treturn len;\n}\nunittest\n{\n    alias candidate =\
    \ strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") ==\
    \ 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgn7o37we.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n   long i = 0;\n   string temp = string;\n   \n   while(temp[i] != '\\\
    0')\n      i++;\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3osowfph.d(17): Error: found \''unittest\'' instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3osowfph.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tint i = 0;\n\twhile (string[i] != '\\0') {\n\t\ti++;\n\t}\n\treturn i;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfz64op47.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i;\n\tfor (i = 1; i < string.length(); i++) \n\t\n\t{ \n\t\tbreak;\n\
    \t}\n\treturn i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsl_xkhz_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i, count = 0;\n    for(i = 0; i < string.length; i++) \n    {\n\
    \      count += 1;\n      if (string[i] == 0) break;\n    }\n    return count;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3xhc11bp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n  int i=0;\n  while(std.string(\"string\".char+i) != 0) \n  {\n    i++;\n\
    \  }\n  return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyyhxg53g.d(13): Error: identifier expected following \''.\'',
    not \''char\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyyhxg53g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    int i = 0;\n    for(; i < string.length; ++i){\n        if(string.at(i)=='\\\
    0'){\n            if(i==0) return 0;\n            else return i;\n        }\n\
    \    }\n    return i;\n}\n/*\n Return the length of a given string\n    >>> strlen(\"\
    abc\")\n    3L\n*/\nunsigned long strlen_ulong(string string) \n{\n    unsigned\
    \ long i = 0;\n    for(; i < string.length; ++i){\n        if(string.at(i)=='\\\
    0'){\n            if(i==0) return 0;\n            else return i;\n        }\n\
    \    }\n    return i;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0s6fu9wg.d(26): Error: no identifier for declarator unsigned\n/tmp/tmp0s6fu9wg.d(28):
    Error: found \''long\'' when expecting \'';\'' following statement\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp0s6fu9wg.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long count = 0;\n    int i;\n    for(i = 0; string[i] != '\\0'; i++)\n\
    \    {\n        count += 1;\n    }\n    return count;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0am3v95d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong i;\n\tfor(i=0;string[i]!=0;++i);\n\treturn i;\n}\nunittest\n{\n\
    \    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpiv478ef9.d(13): Error: use \''{ }\'' for an empty statement,
    not a \'';\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiv478ef9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long result = 0;\n    for (auto it: string.begin(); it != string.end();\
    \ ++it)\n    {\n        if (it == string.begin())\n            continue;\n   \
    \     if (*it == '\\0')\n        {\n            break;\n        }\n        else\n\
    \        {\n            ++result;\n        }\n    }\n    return result;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph_2p53sh.d(13): Error: no identifier for declarator it\n/tmp/tmph_2p53sh.d(13):
    Error: expression expected, not \'':\''\n/tmp/tmph_2p53sh.d(13): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmph_2p53sh.d(13):
    Error: found \'';\'' when expecting \'')\''\n/tmp/tmph_2p53sh.d(13): Error: found
    \'')\'' when expecting \'';\'' following statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmph_2p53sh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659977994

name: HumanEval_116_sort_array
language: js
prompt: "//In this Kata, you have to sort an array of non-negative integers according\
  \ to\n// number of ones in their binary representation in ascending order.\n// For\
  \ similar number of ones, sort based on decimal value.\n// It must be implemented\
  \ like this:\n// >>> sort_array([1, 5, 2, 3, 4])\n// [1, 2, 3, 4, 5]\n// >>> sort_array([-2,\
  \ -3, -4, -5, -6])\n// [-6, -5, -4, -3, -2]\n// >>> sort_array([1, 0, 2, 3, 4])\n\
  // [0, 1, 2, 3, 4]\nfunction sort_array(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5]);\n\
  \  assert.deepEqual(candidate([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3]);\n  assert.deepEqual(candidate([1,\
  \ 0, 2, 3, 4]),[0, 1, 2, 4, 3]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([2,\
  \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77]);\n  assert.deepEqual(candidate([3,\
  \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44]);\n  assert.deepEqual(candidate([2, 4,\
  \ 8, 16, 32]),[2, 4, 8, 16, 32]);\n  assert.deepEqual(candidate([2, 4, 8, 16, 32]),[2,\
  \ 4, 8, 16, 32]);\n}\n\ntest();"
completions: ["    return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.split('1').length\
    \ - 1;\n        let bOnes = bBinary.split('1').length - 1;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "  return arr.sort((a, b) => {\n    let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bOnes = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n    } else\
    \ {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n    let arr2 = arr1.map(x\
    \ => x.split('').filter(y => y === '1').length);\n    let arr3 = arr2.map((x,\
    \ i) => [x, arr[i]]);\n    let arr4 = arr3.sort((a, b) => a[0] - b[0]);\n    let\
    \ arr5 = arr4.map(x => x[1]);\n    return arr5;\n}\n", "  return arr.sort((a,\
    \ b) => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y == 1).length);\n    arr2.sort((a, b) => a - b);\n    let arr3 = arr2.map(x\
    \ => arr1.indexOf(x));\n    let arr4 = arr3.map(x => arr[x]);\n    return arr4;\n\
    }\n", "    let sorted = arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      } else {\n            return aOnes - bOnes;\n        }\n    });\n    return\
    \ sorted;\n}\n", "    let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n\
    \    let arr4 = [];\n    let arr5 = [];\n    let arr6 = [];\n    let arr7 = [];\n\
    \    let arr8 = [];\n    let arr9 = [];\n    let arr10 = [];\n    let arr11 =\
    \ [];\n    let arr12 = [];\n    let arr13 = [];\n    let arr14 = [];\n    let\
    \ arr15 = [];\n    let arr16 = [];\n    let arr17 = [];\n    let arr18 = [];\n\
    \    let arr19 = [];\n    let arr20 = [];\n    let arr21 = [];\n    let arr22\
    \ = [];\n    let arr23 = [];\n    let arr24 = [];\n    let arr25 = [];\n    let\
    \ arr26 = [];\n    let arr27 = [];\n    let arr28 = [];\n    let arr29 = [];\n\
    \    let arr30 = [];\n    let arr31 = [];\n    let arr32 = [];\n    let arr33\
    \ = [];\n    let arr34 = [];\n    let arr35 = [];\n    let arr36 = [];\n    let\
    \ arr37 = [];\n    let arr38 = [];\n    let arr39 = [];\n    let arr40 = [];\n\
    \    let arr41 = [];\n    let arr42 = [];\n    let arr43 = [];\n    let arr44\
    \ = [];\n    let arr45 = [];\n    let arr46 = [];\n    let arr47 = [];\n    let\
    \ arr48 = [];\n    let arr49 = [];\n    let arr50 = [];\n    let arr51 = [];\n\
    \    let arr52 = [];\n    let arr53 = [];\n    let arr54 = [];\n    let arr55\
    \ = [];\n    let arr56 = [];\n    let arr57 = [];\n    let arr58 = [];\n    let\
    \ arr59 = [];\n    let arr60 = [];\n    let arr61 = [];\n    let arr62 = [];\n\
    \    let arr63 = [];\n    let arr64 = [];\n    let arr65 = [];\n    let arr66\
    \ = [];\n    let arr67 = [];\n    let arr68 = [];\n    let arr69 = [];\n    let\
    \ arr70 = [];\n    let arr71 = [];\n    let arr72 = [];\n    let arr73 = [];\n",
  "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(el\
    \ => el === '1').length;\n        let bOnes = bBin.split('').filter(el => el ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      } else {\n            return aOnes - bOnes;\n        }\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('1').length - 1;\n   \
    \     let bOnes = bBin.split('1').length - 1;\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n  \
    \      let aOnes = aBinary.split('1').length - 1;\n        let bOnes = bBinary.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n  \
    \      let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(function(x){\n        return x.toString(2);\n\
    \    });\n    let arr2 = arr1.map(function(x){\n        return x.split('').filter(function(y){\n\
    \            return y == 1;\n        }).length;\n    });\n    let arr3 = arr2.map(function(x,\
    \ i){\n        return [x, arr[i]];\n    });\n    let arr4 = arr3.sort(function(a,\
    \ b){\n        if(a[0] == b[0]){\n            return a[1] - b[1];\n        }\n\
    \        return a[0] - b[0];\n    });\n    return arr4.map(function(x){\n    \
    \    return x[1];\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length -\
    \ 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n \
    \       return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n        let bOnes =\
    \ bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        } else {\n            return aOnes - bOnes;\n\
    \        }\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let sorted\
    \ = arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBin.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        } else {\n         \
    \   return aOnes - bOnes;\n        }\n    });\n    return sorted;\n}\n", "   \
    \ return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let sorted\
    \ = arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin\
    \ = b.toString(2);\n        if (aBin.match(/1/g) === null && bBin.match(/1/g)\
    \ === null) {\n            return a - b;\n        } else if (aBin.match(/1/g)\
    \ === null) {\n            return 1;\n        } else if (bBin.match(/1/g) ===\
    \ null) {\n            return -1;\n        } else {\n            let aOnes = aBin.match(/1/g).length;\n\
    \            let bOnes = bBin.match(/1/g).length;\n            if (aOnes === bOnes)\
    \ {\n                return a - b;\n            } else {\n                return\
    \ aOnes - bOnes;\n            }\n        }\n    });\n    return sorted;\n}\n",
  "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    let newArr = [];\n    let ones = [];\n   \
    \ for(let i = 0; i < arr.length; i++){\n        let binary = arr[i].toString(2);\n\
    \        let count = 0;\n        for(let j = 0; j < binary.length; j++){\n   \
    \         if(binary[j] === '1'){\n                count++;\n            }\n  \
    \      }\n        ones.push(count);\n    }\n    for(let i = 0; i < ones.length;\
    \ i++){\n        let min = Math.min(...ones);\n        let index = ones.indexOf(min);\n\
    \        newArr.push(arr[index]);\n        ones.splice(index, 1);\n        arr.splice(index,\
    \ 1);\n    }\n    return newArr;\n}\n", "    return arr.sort((a, b) => {\n   \
    \     let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n        let\
    \ bOnes = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('1').length\
    \ - 1;\n        let bOnes = bBin.split('1').length - 1;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n    let arr2 = arr1.map(x\
    \ => x.split('').filter(y => y == 1).length);\n    let arr3 = arr2.map((x, i)\
    \ => [x, arr[i]]);\n    let arr4 = arr3.sort((a, b) => a[0] - b[0]);\n    let\
    \ arr5 = arr4.map(x => x[1]);\n    return arr5;\n}\n", "    let arr1 = arr.map(function(x){\n\
    \        return x.toString(2).split('').filter(function(y){\n            return\
    \ y === '1';\n        }).length;\n    });\n    let arr2 = arr.map(function(x){\n\
    \        return x.toString(2).split('').filter(function(y){\n            return\
    \ y === '1';\n        }).length;\n    });\n    arr2.sort(function(a, b){\n   \
    \     return a - b;\n    });\n    let arr3 = [];\n    arr2.forEach(function(x){\n\
    \        arr3.push(arr[arr1.indexOf(x)]);\n    });\n    return arr3;\n}\n", " \
    \   let arr1 = arr.sort((a,b)=>{\n        let a1 = a.toString(2).split('').filter(x=>x==='1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x=>x==='1').length;\n       \
    \ if(a1===b1){\n            return a-b;\n        }\n        return a1-b1;\n  \
    \  });\n    return arr1;\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n       \
    \ let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        } else {\n            return\
    \ aOnes - bOnes;\n        }\n    });\n}\n", "    let sorted = arr.sort((a, b)\
    \ => {\n        let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n\
    \        let aOnes = aBinary.split('').filter(x => x === '1').length;\n      \
    \  let bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        } else {\n            return\
    \ aOnes - bOnes;\n        }\n    });\n    return sorted;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    let arr1 = arr.map(function(x){\n        return\
    \ x.toString(2).split('').filter(function(y){\n            return y == 1;\n  \
    \      }).length;\n    });\n    let arr2 = arr.map(function(x){\n        return\
    \ x.toString(2).split('').filter(function(y){\n            return y == 1;\n  \
    \      }).length;\n    });\n    arr1.sort(function(a,b){\n        return a - b;\n\
    \    });\n    let arr3 = [];\n    for(let i = 0; i < arr1.length; i++){\n    \
    \    for(let j = 0; j < arr2.length; j++){\n            if(arr1[i] == arr2[j]){\n\
    \                arr3.push(arr[j]);\n                arr2[j] = -1;\n         \
    \   }\n        }\n    }\n    return arr3;\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n  \
    \      let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        if (aBin.match(/1/g) === null && bBin.match(/1/g)\
    \ === null) {\n            return a - b;\n        } else if (aBin.match(/1/g)\
    \ === null) {\n            return -1;\n        } else if (bBin.match(/1/g) ===\
    \ null) {\n            return 1;\n        } else if (aBin.match(/1/g).length ===\
    \ bBin.match(/1/g).length) {\n            return a - b;\n        } else {\n  \
    \          return aBin.match(/1/g).length - bBin.match(/1/g).length;\n       \
    \ }\n    });\n}\n", "    let arr1 = arr.map(function(item){\n        return item.toString(2);\n\
    \    });\n    let arr2 = arr1.map(function(item){\n        return item.split('').filter(function(item){\n\
    \            return item === '1';\n        }).length;\n    });\n    let arr3 =\
    \ arr2.map(function(item, index){\n        return {\n            index: index,\n\
    \            value: item\n        };\n    });\n    arr3.sort(function(a, b){\n\
    \        return a.value - b.value;\n    });\n    let arr4 = arr3.map(function(item){\n\
    \        return arr[item.index];\n    });\n    return arr4;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBin.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bBin = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary\
    \ = a.toString(2);\n        let bBinary = b.toString(2);\n        let aOnes =\
    \ aBinary.split('').filter(x => x === '1').length;\n        let bOnes = bBinary.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = [];\n    let arr2 = [];\n    let arr3 = [];\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] < 0) {\n            arr1.push(arr[i]);\n        }\
    \ else if (arr[i] === 0) {\n            arr2.push(arr[i]);\n        } else {\n\
    \            arr3.push(arr[i]);\n        }\n    }\n    arr1.sort((a, b) => a -\
    \ b);\n    arr2.sort((a, b) => a - b);\n    arr3.sort((a, b) => {\n        let\
    \ a1 = a.toString(2).split('').filter(x => x === '1').length;\n        let b1\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (a1 ===\
    \ b1) {\n            return a - b;\n        } else {\n            return a1 -\
    \ b1;\n        }\n    });\n    return arr1.concat(arr2).concat(arr3);\n}\n", " \
    \   return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 > b1) {\n            return 1;\n        }\
    \ else if (a1 < b1) {\n            return -1;\n        } else {\n            return\
    \ a - b;\n        }\n    });\n}\n", "    let arr1 = arr.map(function(x){\n   \
    \     return x.toString(2);\n    });\n    let arr2 = arr1.map(function(x){\n \
    \       return x.split('').filter(function(y){\n            return y === '1';\n\
    \        }).length;\n    });\n    let arr3 = arr2.map(function(x, i){\n      \
    \  return [x, arr[i]];\n    });\n    let arr4 = arr3.sort(function(a, b){\n  \
    \      if(a[0] === b[0]){\n            return a[1] - b[1];\n        }\n      \
    \  return a[0] - b[0];\n    });\n    return arr4.map(function(x){\n        return\
    \ x[1];\n    });\n}\n", "  return arr.sort((a, b) => {\n    let aBinary = a.toString(2);\n\
    \    let bBinary = b.toString(2);\n    let aOnes = aBinary.split('').filter(e\
    \ => e === '1').length;\n    let bOnes = bBinary.split('').filter(e => e === '1').length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes\
    \ - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length -\
    \ 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n \
    \       return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n  \
    \      let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n  \
    \      if (aOnes === bOnes) {\n            return a - b;\n        }\n        return\
    \ aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n        let\
    \ aOnes = aBinary.match(/1/g) || [];\n        let bOnes = bBinary.match(/1/g)\
    \ || [];\n        if (aOnes.length === bOnes.length) {\n            return a -\
    \ b;\n        }\n        return aOnes.length - bOnes.length;\n    });\n}\n", " \
    \   let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n    let arr4 = [];\n\
    \    let arr5 = [];\n    let arr6 = [];\n    let arr7 = [];\n    let arr8 = [];\n\
    \    let arr9 = [];\n    let arr10 = [];\n    let arr11 = [];\n    let arr12 =\
    \ [];\n    let arr13 = [];\n    let arr14 = [];\n    let arr15 = [];\n    let\
    \ arr16 = [];\n    let arr17 = [];\n    let arr18 = [];\n    let arr19 = [];\n\
    \    let arr20 = [];\n    let arr21 = [];\n    let arr22 = [];\n    let arr23\
    \ = [];\n    let arr24 = [];\n    let arr25 = [];\n    let arr26 = [];\n    let\
    \ arr27 = [];\n    let arr28 = [];\n    let arr29 = [];\n    let arr30 = [];\n\
    \    let arr31 = [];\n    let arr32 = [];\n    let arr33 = [];\n    let arr34\
    \ = [];\n    let arr35 = [];\n    let arr36 = [];\n    let arr37 = [];\n    let\
    \ arr38 = [];\n    let arr39 = [];\n    let arr40 = [];\n    let arr41 = [];\n\
    \    let arr42 = [];\n    let arr43 = [];\n    let arr44 = [];\n    let arr45\
    \ = [];\n    let arr46 = [];\n    let arr47 = [];\n    let arr48 = [];\n    let\
    \ arr49 = [];\n    let arr50 = [];\n    let arr51 = [];\n    let arr52 = [];\n\
    \    let arr53 = [];\n    let arr54 = [];\n    let arr55 = [];\n    let arr56\
    \ = [];\n    let arr57 = [];\n    let arr58 = [];\n    let arr59 = [];\n    let\
    \ arr60 = [];\n    let arr61 = [];\n    let arr62 = [];\n    let arr63 = [];\n\
    \    let arr64 = [];\n    let arr65 = [];\n    let arr66 = [];\n    let arr67\
    \ = [];\n    let arr68 = [];\n    let arr69 = [];\n    let arr70 = [];\n    let\
    \ arr71 = [];\n    let arr72 = [];\n    let arr73 = [];\n", "    let arr1 = arr.map(x\
    \ => x.toString(2));\n    let arr2 = arr1.map(x => x.split('').filter(y => y ===\
    \ '1').length);\n    let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    arr3.sort((a,\
    \ b) => a[0] - b[0]);\n    return arr3.map(x => x[1]);\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n\
    \        let aOnes = aBinary.split('').filter(x => x === '1').length;\n      \
    \  let bOnes = bBinary.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').reduce((acc,\
    \ curr) => curr === '1' ? acc + 1 : acc, 0);\n        let bOnes = bBin.split('').reduce((acc,\
    \ curr) => curr === '1' ? acc + 1 : acc, 0);\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBinary = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aBinary === bBinary) {\n            return\
    \ a - b;\n        }\n        return aBinary - bBinary;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBin.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    let aBin = a.toString(2);\n\
    \    let bBin = b.toString(2);\n    let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n    let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes\
    \ - bOnes;\n    }\n  });\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length).sort((a, b) => a - b);\n    let arr3 = [];\n    for (let\
    \ i = 0; i < arr2.length; i++) {\n        for (let j = 0; j < arr1.length; j++)\
    \ {\n            if (arr2[i] === arr1[j]) {\n                arr3.push(arr[j]);\n\
    \                arr1[j] = -1;\n            }\n        }\n    }\n    return arr3;\n\
    }", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n    \
    \    let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x =>\
    \ x === '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    let\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n    let bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    } else {\n      return aOnes - bOnes;\n \
    \   }\n  });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length\
    \ : 0;\n        let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        } else {\n\
    \            return aOnes - bOnes;\n        }\n    });\n}\n", "    let arr1 =\
    \ arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n    let\
    \ arr2 = arr.map(x => x.toString(2).split('').filter(y => y === '1').length);\n\
    \    arr2.sort((a, b) => a - b);\n    let arr3 = [];\n    for (let i = 0; i <\
    \ arr2.length; i++) {\n        let index = arr1.indexOf(arr2[i]);\n        arr3.push(arr[index]);\n\
    \        arr1[index] = -1;\n    }\n    return arr3;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let a1\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n\
    \        }\n        return a1 - b1;\n    });\n}\n", "    let sorted = arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        } else {\n            return aOnes\
    \ - bOnes;\n        }\n    });\n    return sorted;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.map(el => el.toString(2));\n    let arr2 =\
    \ arr1.map(el => el.split('').filter(el => el === '1').length);\n    let arr3\
    \ = arr.map((el, i) => [el, arr2[i]]);\n    let arr4 = arr3.sort((a, b) => a[1]\
    \ - b[1]);\n    let arr5 = arr4.map(el => el[0]);\n    return arr5;\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.match(/1/g) ? aBin.match(/1/g).length : 0;\n       \
    \ let bOnes = bBin.match(/1/g) ? bBin.match(/1/g).length : 0;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        } else {\n            return\
    \ aOnes - bOnes;\n        }\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes\
    \ = bBin.split('').filter(x => x === '1').length;\n        if (aOnes === bOnes)\
    \ {\n            return a - b;\n        }\n        return aOnes - bOnes;\n   \
    \ });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).match(/1/g).length;\n        let\
    \ bOnes = b.toString(2).match(/1/g).length;\n        if (aOnes === bOnes) {\n\
    \            return a - b;\n        }\n        return aOnes - bOnes;\n    });\n\
    }\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1\
    \ = arr.map(x => x.toString(2).split(\"\").filter(x => x === \"1\").length);\n\
    \    let arr2 = arr.map(x => x.toString(2).split(\"\").filter(x => x === \"1\"\
    ).length).sort((a, b) => a - b);\n    let arr3 = arr.map(x => x.toString(2).split(\"\
    \").filter(x => x === \"1\").length).sort((a, b) => b - a);\n    let arr4 = arr.map(x\
    \ => x.toString(2).split(\"\").filter(x => x === \"1\").length).sort((a, b) =>\
    \ a - b);\n    let arr5 = arr.map(x => x.toString(2).split(\"\").filter(x => x\
    \ === \"1\").length).sort((a, b) => b - a);\n    let arr6 = arr.map(x => x.toString(2).split(\"\
    \").filter(x => x === \"1\").length).sort((a, b) => a - b);\n    let arr7 = arr.map(x\
    \ => x.toString(2).split(\"\").filter(x => x === \"1\").length).sort((a, b) =>\
    \ b - a);\n    let arr8 = arr.map(x => x.toString(2).split(\"\").filter(x => x\
    \ === \"1\").length).sort((a, b) => a - b);\n    let arr9 = arr.map(x => x.toString(2).split(\"\
    \").filter(x => x === \"1\").length).sort((a, b) => b - a);\n    let arr10 = arr.map(x\
    \ => x.toString(2).split(\"\").filter(x => x === \"1\").length).sort((a, b) =>\
    \ a - b);\n    let arr11 = arr.map(x => x.toString(2).split(\"\").filter(x =>\
    \ x === \"1\").length).sort((a, b) => b - a);\n    let arr12 = arr.map(x => x.toString(2).split(\"\
    \").filter(x => x === \"1\").length).sort((a, b)", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    // your code here\n    return arr.sort((a,b)=>{\n       \
    \ let aBin = a.toString(2).split('').filter(x=>x==='1').length;\n        let bBin\
    \ = b.toString(2).split('').filter(x=>x==='1').length;\n        return aBin-bBin\
    \ || a-b;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n\
    \    let arr2 = arr1.map(x => x.split(\"\").filter(y => y == 1).length);\n   \
    \ let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    let arr4 = arr3.sort((a, b)\
    \ => a[0] - b[0]);\n    let arr5 = arr4.map(x => x[1]);\n    return arr5;\n}\n",
  "    let sorted = arr.sort((a, b) => {\n        let aBin = a.toString(2);\n    \
    \    let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x =>\
    \ x === '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        } else {\n\
    \            return aOnes - bOnes;\n        }\n    });\n    return sorted;\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a,\
    \ b) => {\n    let aBin = a.toString(2);\n    let bBin = b.toString(2);\n    let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n    let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n    if (aOnes === bOnes) {\n      return a - b;\n   \
    \ } else {\n      return aOnes - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "  return arr.sort((a, b) => {\n    let aBin =\
    \ a.toString(2);\n    let bBin = b.toString(2);\n    let aOnes = aBin.split('').filter(e\
    \ => e === '1').length;\n    let bOnes = bBin.split('').filter(e => e === '1').length;\n\
    \    if (aOnes === bOnes) {\n      return a - b;\n    } else {\n      return aOnes\
    \ - bOnes;\n    }\n  });\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2);\n        const bBin = b.toString(2);\n\
    \        const aOnes = aBin.split('').filter(x => x === '1').length;\n       \
    \ const bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        return a.toString(2).split('').filter(x\
    \ => x === '1').length - b.toString(2).split('').filter(x => x === '1').length\
    \ || a - b;\n    });\n}\n", "    let result = [];\n    let ones = [];\n    let\
    \ zeros = [];\n    let sorted = [];\n    for(let i = 0; i < arr.length; i++){\n\
    \        let binary = arr[i].toString(2);\n        let count = 0;\n        for(let\
    \ j = 0; j < binary.length; j++){\n            if(binary[j] === '1'){\n      \
    \          count++;\n            }\n        }\n        result.push([arr[i], count]);\n\
    \    }\n    for(let i = 0; i < result.length; i++){\n        if(result[i][1] ===\
    \ 0){\n            zeros.push(result[i][0]);\n        }\n        else{\n     \
    \       ones.push(result[i]);\n        }\n    }\n    ones.sort(function(a, b){\n\
    \        return a[1] - b[1];\n    });\n    for(let i = 0; i < ones.length; i++){\n\
    \        sorted.push(ones[i][0]);\n    }\n    for(let i = 0; i < zeros.length;\
    \ i++){\n        sorted.push(zeros[i]);\n    }\n    return sorted;\n}\n", "  \
    \  return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(e => e ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(e => e === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        } else {\n\
    \            return aOnes - bOnes;\n        }\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let b1 = b.toString(2).split('').filter(x => x === '1').length;\n   \
    \     if (a1 === b1) {\n            return a - b;\n        }\n        return a1\
    \ - b1;\n    });\n}\n", "    var ones = [];\n    var zeros = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        var binary = arr[i].toString(2);\n   \
    \     var count = 0;\n        for(var j = 0; j < binary.length; j++){\n      \
    \      if(binary[j] === '1'){\n                count++;\n            }\n     \
    \   }\n        if(count === 0){\n            zeros.push(arr[i]);\n        }\n\
    \        else{\n            ones.push([arr[i], count]);\n        }\n    }\n  \
    \  ones.sort(function(a, b){\n        if(a[1] === b[1]){\n            return a[0]\
    \ - b[0];\n        }\n        else{\n            return a[1] - b[1];\n       \
    \ }\n    });\n    var result = [];\n    for(var i = 0; i < ones.length; i++){\n\
    \        result.push(ones[i][0]);\n    }\n    for(var i = 0; i < zeros.length;\
    \ i++){\n        result.push(zeros[i]);\n    }\n    return result;\n}\n", "  \
    \  return arr.sort((a, b) => {\n        let aOnes = a.toString(2).match(/1/g).length;\n\
    \        let bOnes = b.toString(2).match(/1/g).length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    let sorted = arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        } else {\n  \
    \          return aBin - bBin;\n        }\n    });\n    return sorted;\n}\n",
  "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2).split('').filter(e => e === '1').length;\n   \
    \     let bBin = b.toString(2).split('').filter(e => e === '1').length;\n    \
    \    if (aBin === bBin) {\n            return a - b;\n        } else {\n     \
    \       return aBin - bBin;\n        }\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(e\
    \ => e === '1').length;\n        let bBin = b.toString(2).split('').filter(e =>\
    \ e === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        } else {\n            return aBin - bBin;\n        }\n    });\n}\n",
  "    let arr1 = arr.map(x => x.toString(2));\n    let arr2 = arr1.map(x => x.split('').filter(y\
    \ => y === '1').length);\n    let arr3 = arr2.map((x, i) => [x, arr[i]]);\n  \
    \  let arr4 = arr3.sort((a, b) => a[0] - b[0]);\n    let arr5 = arr4.map(x =>\
    \ x[1]);\n    return arr5;\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(x\
    \ => x === '1').length);\n    arr1.sort((a, b) => a - b);\n    arr2.sort((a, b)\
    \ => b - a);\n    let arr3 = [];\n    for (let i = 0; i < arr.length; i++) {\n\
    \        if (arr1[i] === arr2[i]) {\n            arr3.push(arr[i]);\n        }\
    \ else {\n            arr3.unshift(arr[i]);\n        }\n    }\n    return arr3;\n\
    }\n", "    let arr1 = arr.slice();\n    arr1.sort((a, b) => {\n        let a1\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n\
    \        } else {\n            return a1 - b1;\n        }\n    });\n    return\
    \ arr1;\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bOnes = b.toString(2).split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').reduce((acc, curr) => curr === '1' ? acc +\
    \ 1 : acc, 0);\n        let bOnes = bBin.split('').reduce((acc, curr) => curr\
    \ === '1' ? acc + 1 : acc, 0);\n        if (aOnes === bOnes) {\n            return\
    \ a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let bBin =\
    \ b.toString(2);\n        let aOnes = aBin.split('').filter(x => x === '1').length;\n\
    \        let bOnes = bBin.split('').filter(x => x === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        }\n        return aOnes\
    \ - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin =\
    \ b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "  return arr.sort((a, b) => {\n    let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n    let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n    if (aBin === bBin) {\n      return a - b;\n    } else\
    \ {\n      return aBin - bBin;\n    }\n  });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aOnes = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bOnes = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "  return arr.sort((a, b) => {\n    const\
    \ aOnes = a.toString(2).split('').filter(x => x === '1').length;\n    const bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n    if (aOnes ===\
    \ bOnes) {\n      return a - b;\n    }\n    return aOnes - bOnes;\n  });\n}\n",
  "    let arr1 = arr.map(x => x.toString(2).split(\"\").filter(y => y === \"1\").length);\n\
    \    let arr2 = arr.map(x => x.toString(2).split(\"\").filter(y => y === \"1\"\
    ).length);\n    arr1.sort((a, b) => a - b);\n    let arr3 = [];\n    for (let\
    \ i = 0; i < arr1.length; i++) {\n        let index = arr2.indexOf(arr1[i]);\n\
    \        arr3.push(arr[index]);\n        arr2[index] = -1;\n    }\n    return\
    \ arr3;\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(c => c === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(c => c === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = countOnes(a);\n\
    \        let bOnes = countOnes(b);\n        if (aOnes === bOnes) {\n         \
    \   return a - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", " \
    \   return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n        let\
    \ bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x => x ===\
    \ '1').length;\n        let bOnes = bBin.split('').filter(x => x === '1').length;\n\
    \        if (aOnes === bOnes) {\n            return a - b;\n        }\n      \
    \  return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let a_ones = a.toString(2).match(/1/g).length;\n        let b_ones = b.toString(2).match(/1/g).length;\n\
    \        if (a_ones === b_ones) {\n            return a - b;\n        }\n    \
    \    return a_ones - b_ones;\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n      \
    \  let aOnes = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n  \
    \      let aOnes = aBin.split('').filter(char => char === '1').length;\n     \
    \   let bOnes = bBin.split('').filter(char => char === '1').length;\n        if\
    \ (aOnes === bOnes) {\n            return a - b;\n        } else {\n         \
    \   return aOnes - bOnes;\n        }\n    });\n}\n", "    let arr1 = arr.map(x\
    \ => x.toString(2));\n    let arr2 = arr1.map(x => x.split('').filter(y => y ==\
    \ 1).length);\n    let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    arr3.sort((a,\
    \ b) => a[0] - b[0]);\n    let arr4 = arr3.map(x => x[1]);\n    return arr4;\n\
    }\n", "    let sorted = arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      } else {\n            return aOnes - bOnes;\n        }\n    });\n    return\
    \ sorted;\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.map(x\
    \ => {\n        return {\n            val: x,\n            bin: x.toString(2)\n\
    \        };\n    });\n    arr1.sort((a, b) => {\n        return a.bin.split('').filter(x\
    \ => x === '1').length - b.bin.split('').filter(x => x === '1').length;\n    });\n\
    \    return arr1.map(x => x.val);\n}\n", "    return arr.sort((a, b) => {\n  \
    \      let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        return aOnes === bOnes ? a - b : aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.map(item\
    \ => item.toString(2));\n    let arr2 = arr1.map(item => item.split('').filter(item\
    \ => item == 1).length);\n    let arr3 = arr2.map((item, index) => [item, arr[index]]);\n\
    \    arr3.sort((a, b) => a[0] - b[0]);\n    return arr3.map(item => item[1]);\n\
    }\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2);\n  \
    \      let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    let sorted = arr.sort((a, b) => {\n      \
    \  let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n      \
    \  let aOnes = aBinary.split('1').length - 1;\n        let bOnes = bBinary.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n    return sorted;\n}\n", "    return\
    \ arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        let bBin = b.toString(2).split('').filter(x => x\
    \ === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    let ones = arr.map(x\
    \ => x.toString(2).match(/1/g).length);\n    let sorted = arr.sort((a, b) => ones[arr.indexOf(a)]\
    \ - ones[arr.indexOf(b)]);\n    return sorted;\n}\n", "    let arr1 = arr.map(x\
    \ => x.toString(2).split('').filter(y => y === '1').length);\n    let arr2 = arr.map(x\
    \ => x.toString(2).split('').filter(y => y === '1').length);\n    arr2.sort((a,\
    \ b) => a - b);\n    let result = [];\n    for (let i = 0; i < arr2.length; i++)\
    \ {\n        for (let j = 0; j < arr1.length; j++) {\n            if (arr2[i]\
    \ === arr1[j]) {\n                result.push(arr[j]);\n                arr1[j]\
    \ = -1;\n                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let result = [];\n    let ones = [];\n    let zeros = [];\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        let binary = arr[i].toString(2);\n\
    \        let count = 0;\n        for (let j = 0; j < binary.length; j++) {\n \
    \           if (binary[j] === '1') {\n                count++;\n            }\n\
    \        }\n        if (count === 0) {\n            zeros.push(arr[i]);\n    \
    \    } else {\n            ones.push([arr[i], count]);\n        }\n    }\n   \
    \ ones.sort(function (a, b) {\n        if (a[1] === b[1]) {\n            return\
    \ a[0] - b[0];\n        } else {\n            return a[1] - b[1];\n        }\n\
    \    });\n    for (let i = 0; i < ones.length; i++) {\n        result.push(ones[i][0]);\n\
    \    }\n    for (let i = 0; i < zeros.length; i++) {\n        result.push(zeros[i]);\n\
    \    }\n    return result;\n}\n", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let arr1 = arr.slice();\n    arr1.sort((a, b) => {\n    \
    \    let a1 = a.toString(2).split('').filter(x => x === '1').length;\n       \
    \ let b1 = b.toString(2).split('').filter(x => x === '1').length;\n        if\
    \ (a1 === b1) {\n            return a - b;\n        } else {\n            return\
    \ a1 - b1;\n        }\n    });\n    return arr1;\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    let arr1 = arr.slice();\n\
    \    arr1.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(el\
    \ => el === '1').length;\n        let b1 = b.toString(2).split('').filter(el =>\
    \ el === '1').length;\n        if (a1 === b1) {\n            return a - b;\n \
    \       } else {\n            return a1 - b1;\n        }\n    });\n    return\
    \ arr1;\n}\n", "    return arr.sort((a, b) => {\n        if (a.toString(2).split('').filter(x\
    \ => x === '1').length === b.toString(2).split('').filter(x => x === '1').length)\
    \ {\n            return a - b;\n        } else {\n            return a.toString(2).split('').filter(x\
    \ => x === '1').length - b.toString(2).split('').filter(x => x === '1').length;\n\
    \        }\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        if (a.toString(2).split('').filter(x => x === '1').length >\
    \ b.toString(2).split('').filter(x => x === '1').length) {\n            return\
    \ 1;\n        } else if (a.toString(2).split('').filter(x => x === '1').length\
    \ < b.toString(2).split('').filter(x => x === '1').length) {\n            return\
    \ -1;\n        } else {\n            return a - b;\n        }\n    });\n}\n",
  "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('1').length\
    \ - 1;\n        let bOnes = b.toString(2).split('1').length - 1;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let a1 = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let b1 = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (a1 === b1) {\n            return a - b;\n  \
    \      }\n        return a1 - b1;\n    });\n}\n", "    return arr.sort((a, b)\
    \ => {\n        let aBin = a.toString(2).split('').filter(e => e === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(e => e === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        } else {\n  \
    \          return aBin - bBin;\n        }\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBinary = a.toString(2);\n        let bBinary = b.toString(2);\n\
    \        let aOnes = aBinary.split('1').length - 1;\n        let bOnes = bBinary.split('1').length\
    \ - 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n\
    \        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) =>\
    \ {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    let arr1 = arr.map(x => x.toString(2));\n\
    \    let arr2 = arr1.map(x => x.split('').filter(y => y == '1').length);\n   \
    \ let arr3 = arr2.map((x, i) => [x, arr[i]]);\n    let arr4 = arr3.sort((a, b)\
    \ => a[0] - b[0]);\n    let arr5 = arr4.map(x => x[1]);\n    return arr5;\n}\n",
  "    let arr1 = arr.map(el => el.toString(2));\n    let arr2 = arr1.map(el => el.split('').filter(el\
    \ => el === '1').length);\n    let arr3 = arr2.map((el, i) => [el, arr[i]]);\n\
    \    let arr4 = arr3.sort((a, b) => a[0] - b[0]);\n    let arr5 = arr4.map(el\
    \ => el[1]);\n    return arr5;\n}\n", "    return arr.sort((a, b) => {\n     \
    \   let aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let\
    \ aOnes = aBin.split('').filter(x => x === '1').length;\n        let bOnes = bBin.split('').filter(x\
    \ => x === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        let bBin = b.toString(2).split('').filter(x => x === '1').length;\n \
    \       if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aOnes\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bOnes\
    \ = b.toString(2).split('').filter(x => x === '1').length;\n        if (aOnes\
    \ === bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let sorted = arr.sort((a, b) => {\n        let aBin = a.toString(2);\n\
    \        let bBin = b.toString(2);\n        let aOnes = aBin.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBin.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      } else {\n            return aOnes - bOnes;\n        }\n    });\n    return\
    \ sorted;\n}\n", "    let arr1 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr2 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr3 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr4 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr5 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr6 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr7 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr8 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr9 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr10 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr11 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr12 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr13 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr14 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n    let arr15 = arr.map(x => x.toString(2).split('').filter(y\
    \ => y === '1').length);\n   ", "    return arr.sort((a, b) => {\n        let\
    \ aBin = a.toString(2);\n        let bBin = b.toString(2);\n        let aOnes\
    \ = aBin.split('1').length - 1;\n        let bOnes = bBin.split('1').length -\
    \ 1;\n        if (aOnes === bOnes) {\n            return a - b;\n        }\n \
    \       return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a, b) => {\n\
    \        let a1 = a.toString(2).split('').filter(x => x === '1').length;\n   \
    \     let b1 = b.toString(2).split('').filter(x => x === '1').length;\n      \
    \  if (a1 === b1) {\n            return a - b;\n        }\n        return a1 -\
    \ b1;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin = a.toString(2).split('').filter(x\
    \ => x === '1').length;\n        let bBin = b.toString(2).split('').filter(x =>\
    \ x === '1').length;\n        if (aBin === bBin) {\n            return a - b;\n\
    \        }\n        return aBin - bBin;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aBin = a.toString(2);\n        let bBin = b.toString(2);\n\
    \        let aOnes = aBin.split('').filter(x => x === '1').length;\n        let\
    \ bOnes = bBin.split('').filter(x => x === '1').length;\n        if (aOnes ===\
    \ bOnes) {\n            return a - b;\n        }\n        return aOnes - bOnes;\n\
    \    });\n}\n", "    let ones = [];\n    let zeros = [];\n    let result = [];\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] < 0) {\n     \
    \       result.push(arr[i]);\n        } else {\n            let binary = arr[i].toString(2);\n\
    \            let count = 0;\n            for (let j = 0; j < binary.length; j++)\
    \ {\n                if (binary[j] === '1') {\n                    count++;\n\
    \                }\n            }\n            if (count === 0) {\n          \
    \      zeros.push(arr[i]);\n            } else {\n                ones.push([count,\
    \ arr[i]]);\n            }\n        }\n    }\n    ones.sort((a, b) => {\n    \
    \    if (a[0] === b[0]) {\n            return a[1] - b[1];\n        } else {\n\
    \            return a[0] - b[0];\n        }\n    });\n    for (let i = 0; i <\
    \ ones.length; i++) {\n        result.push(ones[i][1]);\n    }\n    for (let i\
    \ = 0; i < zeros.length; i++) {\n        result.push(zeros[i]);\n    }\n    return\
    \ result;\n}\n", "    return arr.sort((a, b) => {\n        let aOnes = a.toString(2).split('').filter(i\
    \ => i === '1').length;\n        let bOnes = b.toString(2).split('').filter(i\
    \ => i === '1').length;\n        if (aOnes === bOnes) {\n            return a\
    \ - b;\n        }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        const aBin = a.toString(2).split('').filter(x => x === '1').length;\n\
    \        const bBin = b.toString(2).split('').filter(x => x === '1').length;\n\
    \        if (aBin === bBin) {\n            return a - b;\n        }\n        return\
    \ aBin - bBin;\n    });\n}\n", "    return arr.sort((a, b) => {\n        let aBin\
    \ = a.toString(2).split('').filter(x => x === '1').length;\n        let bBin =\
    \ b.toString(2).split('').filter(x => x === '1').length;\n        if (aBin ===\
    \ bBin) {\n            return a - b;\n        }\n        return aBin - bBin;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        let aBinary = a.toString(2);\n\
    \        let bBinary = b.toString(2);\n        let aOnes = aBinary.split('').filter(x\
    \ => x === '1').length;\n        let bOnes = bBinary.split('').filter(x => x ===\
    \ '1').length;\n        if (aOnes === bOnes) {\n            return a - b;\n  \
    \      }\n        return aOnes - bOnes;\n    });\n}\n", "    return arr.sort((a,\
    \ b) => {\n        let aOnes = a.toString(2).match(/1/g) || [];\n        let bOnes\
    \ = b.toString(2).match(/1/g) || [];\n        if (aOnes.length === bOnes.length)\
    \ {\n            return a - b;\n        }\n        return aOnes.length - bOnes.length;\n\
    \    });\n}\n", "    return arr.sort((a, b) => {\n        return a.toString(2).split('1').length\
    \ - b.toString(2).split('1').length || a - b;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

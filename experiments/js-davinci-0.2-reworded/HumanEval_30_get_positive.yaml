name: HumanEval_30_get_positive
language: js
prompt: "//Return only positive numbers in the array.\n// >>> get_positive([-1, 2,\
  \ -4, 5, 6])\n// [2, 5, 6]\n// >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123,\
  \ 1, -10])\n// [5, 3, 2, 3, 9, 123, 1]\nfunction get_positive(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = get_positive;\n  assert.deepEqual(candidate([-1, -2, 4, 5, 6]),[4, 5, 6]);\n\
  \  assert.deepEqual(candidate([5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]),[5, 3, 2,\
  \ 3, 3, 9, 123, 1]);\n  assert.deepEqual(candidate([-1, -2]),[]);\n  assert.deepEqual(candidate([]),[]);\n\
  }\n\ntest();"
completions: ["    return l.filter(function(x){\n        return x > 0;\n    });\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return\
    \ l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return l.filter(function(num){\n\
    \        return num > 0;\n    });\n}\n", "    return l.filter(function(x){\n \
    \       return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n    \
    \    return x > 0;\n    });\n}\n", "    var new_list = [];\n    for (var i = 0;\
    \ i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}\n", "    return l.filter(function(n){\n\
    \        return n > 0;\n    });\n}\n", "    var new_list = [];\n    for (var i\
    \ = 0; i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n      \
    \  return x > 0;\n    });\n}\n", "    return l.filter(function(num){\n       \
    \ return num > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x >\
    \ 0;\n    });\n}\n", "    return l.filter(function(num){\n        return num >\
    \ 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x>0;\n\
    \    });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n   \
    \ });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n\
    }\n", "    var result = [];\n    for (var i = 0; i < l.length; i++){\n       \
    \ if (l[i] > 0){\n            result.push(l[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    return l.filter(function(x){\n        return x > 0;\n  \
    \  });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    return l.filter(function(x){return x>0;});\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "\tvar new_list = [];\n\tfor (var i = 0;\
    \ i < l.length; i++){\n\t\tif (l[i] > 0){\n\t\t\tnew_list.push(l[i]);\n\t\t}\n\
    \t}\n\treturn new_list;\n}\n", "    return l.filter(function(x){return x>0;});\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    return l.filter(function(x){return x > 0;});\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    var new_list = [];\n    for (var i\
    \ = 0; i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    var result = [];\n    for (var i = 0;\
    \ i < l.length; i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n      \
    \  return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(function(x){return x > 0;});\n}\n",
  "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    //\
    \ your code here\n    return l.filter(function(x){\n        return x > 0;\n  \
    \  });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n\
    }\n", "    var new_list = [];\n    for (var i = 0; i < l.length; i++){\n     \
    \   if (l[i] > 0){\n            new_list.push(l[i]);\n        }\n    }\n    return\
    \ new_list;\n}\n", "    return l.filter(function(x){\n        return x > 0;\n\
    \    });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n   \
    \ });\n}\n", "    return l.filter(function(x){\n        return x>0;\n    });\n\
    }\n", "    return l.filter(function(num){\n        return num > 0;\n    });\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    var\
    \ new_list = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] >\
    \ 0){\n            new_list.push(l[i]);\n        }\n    }\n    return new_list;\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return\
    \ l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(num){\n \
    \       return num > 0;\n    });\n}\n", "    return l.filter(function(x){return\
    \ x>0;});\n}\n", "    return l.filter(function(x){\n        return x > 0;\n  \
    \  });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return\
    \ l.filter(function(num){\n        return num > 0;\n    });\n}\n", "    var result\
    \ = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n   \
    \         result.push(l[i]);\n        }\n    }\n    return result;\n}\n", "  \
    \  return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return\
    \ l.filter(function(num){\n        return num > 0;\n    });\n}\n", "    var new_list\
    \ = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n   \
    \         new_list.push(l[i]);\n        }\n    }\n    return new_list;\n}\n",
  "    return l.filter(function(x){return x>0;});\n}\n", "    return l.filter(function(num){\n\
    \        return num > 0;\n    });\n}\n", "    return l.filter(function(x){\n \
    \       return x > 0;\n    });\n}\n", "    return l.filter(function(num){\n  \
    \      return num > 0;\n    });\n}\n", "  var new_list = [];\n  for (var i = 0;\
    \ i < l.length; i++){\n    if (l[i] > 0){\n      new_list.push(l[i]);\n    }\n\
    \  }\n  return new_list;\n}\n", "    var result = [];\n    for (var i = 0; i <\
    \ l.length; i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n  \
    \      }\n    }\n    return result;\n}\n", "    return l.filter(function(x){return\
    \ x > 0;});\n}\n", "    return l.filter(function(x){\n        return x > 0;\n\
    \    });\n}\n", "    var positive_numbers = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            positive_numbers.push(l[i]);\n  \
    \      }\n    }\n    return positive_numbers;\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    var new_list = [];\n    for (var i\
    \ = 0; i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}\n", "    var result = [];\n    for\
    \ (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var new_list = [];\n    for\
    \ (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n      \
    \  return x > 0;\n    });\n}\n", "    var result = [];\n    for (var i = 0; i\
    \ < l.length; i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var new_list = [];\n    for\
    \ (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n      \
    \  return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(x => x > 0);\n}\n", "    return\
    \ l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return l.filter(function(x){return\
    \ x>0;});\n}\n", "    return l.filter(function(x){\n        return x > 0;\n  \
    \  });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    var new_list = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i]\
    \ > 0){\n            new_list.push(l[i]);\n        }\n    }\n    return new_list;\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    var new_list = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i]\
    \ > 0){\n            new_list.push(l[i]);\n        }\n    }\n    return new_list;\n\
    }\n", "    var result = [];\n    for (var i = 0; i < l.length; i++){\n       \
    \ if (l[i] > 0){\n            result.push(l[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    return l.filter(function(x){\n        return x > 0;\n  \
    \  });\n}\n", "    var result = [];\n    for (var i = 0; i < l.length; i++){\n\
    \        if (l[i] > 0){\n            result.push(l[i]);\n        }\n    }\n  \
    \  return result;\n}\n", "    var result = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n        }\n \
    \   }\n    return result;\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x >\
    \ 0;\n    });\n}\n", "    return l.filter(function(x){return x>0;});\n}\n", " \
    \   return l.filter(function(x){return x>0;});\n}\n", "    var result = [];\n\
    \    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n           \
    \ result.push(l[i]);\n        }\n    }\n    return result;\n}\n", "    return\
    \ l.filter(function(n){\n        return n > 0;\n    });\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(num){\n \
    \       return num > 0;\n    });\n}\n", "    return l.filter(function(x){\n  \
    \      return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n     \
    \   return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x >\
    \ 0;\n    });\n}\n", "    return l.filter(function(num){\n        return num >\
    \ 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n\
    \    });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n   \
    \ });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n\
    }\n", "    var result = [];\n    for (var i = 0; i < l.length; i++){\n       \
    \ if (l[i] > 0){\n            result.push(l[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    var result = [];\n    for (var i = 0; i < l.length; i++){\n\
    \        if (l[i] > 0){\n            result.push(l[i]);\n        }\n    }\n  \
    \  return result;\n}\n", "    return l.filter(function(x){\n        return x >\
    \ 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n\
    \    });\n}\n", "    var new_list = [];\n    for (var i = 0; i < l.length; i++){\n\
    \        if (l[i] > 0){\n            new_list.push(l[i]);\n        }\n    }\n\
    \    return new_list;\n}\n", "    return l.filter(function(num){\n        return\
    \ num > 0;\n    });\n}\n", "    var result = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n        }\n \
    \   }\n    return result;\n}\n", "    return l.filter(function(x){return x > 0});\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    return l.filter(function(n){\n        return n > 0;\n    });\n}\n", "    return\
    \ l.filter(function(x){return x > 0;});\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n      \
    \  return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x>0;\n    });\n}\n", "    var result = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n        }\n \
    \   }\n    return result;\n}\n", "    return l.filter(function(x){return x>0;});\n\
    }\n", "    return l.filter(function(n){\n        return n > 0;\n    });\n}\n",
  "    return l.filter(function(num){\n        return num > 0;\n    });\n}\n", " \
    \   return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return\
    \ l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    var new_list\
    \ = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n   \
    \         new_list.push(l[i]);\n        }\n    }\n    return new_list;\n}\n",
  "    return l.filter(function(num){\n        return num > 0;\n    });\n}\n", " \
    \   var new_list = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i]\
    \ > 0){\n            new_list.push(l[i]);\n        }\n    }\n    return new_list;\n\
    }\n", "    var result = [];\n    for (var i = 0; i < l.length; i++){\n       \
    \ if (l[i] > 0){\n            result.push(l[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "    var pos = [];\n    for (var i = 0; i < l.length; i++){\n\
    \        if (l[i] > 0){\n            pos.push(l[i]);\n        }\n    }\n    return\
    \ pos;\n}\n", "    return l.filter(function(x){return x > 0;});\n}\n", "    return\
    \ l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    var newList = [];\n    for(var i = 0;\
    \ i < l.length; i++){\n        if(l[i] > 0){\n            newList.push(l[i]);\n\
    \        }\n    }\n    return newList;\n}\n", "    return l.filter(function(num){\n\
    \        return num > 0;\n    });\n}\n", "    return l.filter(function(x){\n \
    \       return x > 0;\n    });\n}\n", "    var result = [];\n    for (var i =\
    \ 0; i < l.length; i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    return l.filter(function(num){\n\
    \        return num > 0;\n    });\n}\n", "    return l.filter(function(num){\n\
    \        return num > 0;\n    });\n}\n", "    var new_list = [];\n    for (var\
    \ i = 0; i < l.length; i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n\
    \        }\n    }\n    return new_list;\n}\n", "    return l.filter(function(num){\n\
    \        return num > 0;\n    });\n}\n", "    return l.filter(function(x){\n \
    \       return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n    \
    \    return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n       \
    \ return x > 0;\n    });\n}\n", "    return l.filter(function(n){\n        return\
    \ n > 0;\n    });\n}\n", "    var new_list = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n        }\n\
    \    }\n    return new_list;\n}\n", "    return l.filter(function(x){\n      \
    \  return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x >\
    \ 0;\n    });\n}\n", "    var new_list = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            new_list.push(l[i]);\n        }\n\
    \    }\n    return new_list;\n}\n", "    return l.filter(function(x){\n      \
    \  return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x >\
    \ 0;\n    });\n}\n", "    var result = [];\n    for (var i = 0; i < l.length;\
    \ i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n        }\n \
    \   }\n    return result;\n}\n", "    return l.filter(function(x){return x>0});\n\
    }\n", "    return l.filter(function(n){\n        return n > 0;\n    });\n}\n",
  "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return\
    \ l.filter(function(x){return x>0;});\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(num){\n \
    \       return num > 0;\n    });\n}\n", "    return l.filter(function(x){\n  \
    \      return x > 0;\n    });\n}\n", "    var result = [];\n    for (var i = 0;\
    \ i < l.length; i++){\n        if (l[i] > 0){\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}", "    return l.filter(function(x){\n\
    \        return x>0;\n    });\n}\n", "    return l.filter(function(x){\n     \
    \   return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x>0;\n\
    \    });\n}\n", "    return l.filter(function(x){return x>0;});\n}\n", "    return\
    \ l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    var result\
    \ = [];\n    for (var i = 0; i < l.length; i++){\n        if (l[i] > 0){\n   \
    \         result.push(l[i]);\n        }\n    }\n    return result;\n}\n", "  \
    \  return l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return\
    \ l.filter(function(x){\n        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n\
    \        return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n   \
    \     return x > 0;\n    });\n}\n", "    return l.filter(function(x){\n      \
    \  return x > 0;\n    });\n}\n", "    return l.filter(function(num){\n       \
    \ return num > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return\
    \ x > 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x >\
    \ 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n\
    \    });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n   \
    \ });\n}\n", "    var result = [];\n    for (var i = 0; i < l.length; i++){\n\
    \        if (l[i] > 0){\n            result.push(l[i]);\n        }\n    }\n  \
    \  return result;\n}\n", "    return l.filter(function(x){\n        return x >\
    \ 0;\n    });\n}\n", "    return l.filter(function(x){\n        return x > 0;\n\
    \    });\n}\n", "    var pos = [];\n    for (var i = 0; i < l.length; i++){\n\
    \        if (l[i] > 0){\n            pos.push(l[i]);\n        }\n    }\n    return\
    \ pos;\n}\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n\
    }\n", "    return l.filter(function(x){\n        return x > 0;\n    });\n}\n",
  "    return l.filter(function(n){\n        return n > 0;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

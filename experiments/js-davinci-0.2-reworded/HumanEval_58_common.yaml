name: HumanEval_58_common
language: js
prompt: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1, l2){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = common;\n  assert.deepEqual(candidate([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5,\
  \ 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5, 3, 2, 8], [3, 2]),[2,\
  \ 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2, 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["    return l1.filter(function(item){\n        return l2.indexOf(item)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ index, array){\n        return array.indexOf(item) === index;\n    });\n}\n",
  "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n             \
    \   result.push(l1[i]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n             \
    \   l3.push(l1[i]);\n            }\n        }\n    }\n    return l3;\n}\n", " \
    \   var result = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n             \
    \   result.push(l1[i]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "    return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b) {\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l1.filter(function(x){\n        return l2.indexOf(x) != -1;\n    }).sort(function(a,\
    \ b){\n        return a - b;\n    }).filter(function(x, i, a){\n        return\
    \ a.indexOf(x) == i;\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i <\
    \ l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i]\
    \ == l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    let list = [];\n    for(let i = 0; i < l1.length; i++){\n\
    \        for(let j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                list.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ list.sort();\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n\
    \        for(let j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    let result = [];\n    for(let i = 0; i < l1.length; i++){\n\
    \        for(let j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result.sort((a, b) => a - b);\n}\n", "    var result = [];\n    for(var i =\
    \ 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n     \
    \       if(l1[i] == l2[j]){\n                result.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return result;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) != -1;\n    }).sort(function(a, b) {\n     \
    \   return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    return l1.filter(function(n) {\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    let result = [];\n    for(let i = 0; i\
    \ < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n          \
    \  if(l1[i] === l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result.sort();\n}\n", "    var result = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var l3 = l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) != -1;\n    });\n    return l3.filter(function(item,\
    \ pos) {\n        return l3.indexOf(item) == pos;\n    });\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < l1.length; i++){\n        if(l2.indexOf(l1[i])\
    \ > -1 && result.indexOf(l1[i]) == -1){\n            result.push(l1[i]);\n   \
    \     }\n    }\n    return result;\n}\n", "    var result = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                result.push(l1[i]);\n         \
    \   }\n        }\n    }\n    return result;\n}\n", "    var result = [];\n   \
    \ for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n\
    \            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                result.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var common = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                common.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return common;\n}\n", "    let result = [];\n \
    \   for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort();\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var common =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                common.push(l1[i]);\n\
    \            }\n        }\n    }\n    return common;\n}\n", "    var common =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                common.push(l1[i]);\n\
    \            }\n        }\n    }\n    return common;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                result.push(l1[i]);\n         \
    \   }\n        }\n    }\n    return result;\n}\n", "    var result = [];\n   \
    \ for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n\
    \            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result;\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let set1 = new\
    \ Set(l1);\n    let set2 = new Set(l2);\n    let common = new Set([...set1].filter(x\
    \ => set2.has(x)));\n    return [...common].sort();\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                result.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    let result = [];\n    let set1\
    \ = new Set(l1);\n    let set2 = new Set(l2);\n    set1.forEach(function(value){\n\
    \        if(set2.has(value)){\n            result.push(value);\n        }\n  \
    \  });\n    return result.sort();\n}\n", "    let result = [];\n    for(let i\
    \ = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] === l2[j]){\n                result.push(l1[i]);\n        \
    \    }\n        }\n    }\n    return result.sort();\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i=0; i<l1.length; i++){\n        for(var j=0; j<l2.length; j++){\n         \
    \   if(l1[i]==l2[j]){\n                l3.push(l1[i]);\n            }\n      \
    \  }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var i = 0; i\
    \ < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n          \
    \  if(l1[i] == l2[j]){\n                result.push(l1[i]);\n            }\n \
    \       }\n    }\n    return result;\n}\n", "    let result = [];\n    for(let\
    \ i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result.sort();\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    return l1.filter(function(n) {\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    let result = [];\n    for(let i = 0; i\
    \ < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n          \
    \  if(l1[i] === l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result.sort();\n}\n", "    let l3 = [];\n    for(let\
    \ i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n          \
    \  }\n        }\n    }\n    l3.sort();\n    for(let i = 0; i < l3.length; i++){\n\
    \        for(let j = i + 1; j < l3.length; j++){\n            if(l3[i] === l3[j]){\n\
    \                l3.splice(j, 1);\n                j--;\n            }\n     \
    \   }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n) {\n    \
    \    return l2.indexOf(n) != -1;\n    }).sort(function(a, b) {\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    let l3 = l1.filter(x => l2.includes(x));\n    return\
    \ Array.from(new Set(l3));\n}\n", "    let result = [];\n    for(let i = 0; i\
    \ < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n          \
    \  if(l1[i] === l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result.sort();\n}\n", "    let set1 = new Set(l1);\n\
    \    let set2 = new Set(l2);\n    let intersection = new Set([...set1].filter(x\
    \ => set2.has(x)));\n    return Array.from(intersection).sort();\n}\n", "    return\
    \ l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n    }).filter(function(elem,\
    \ pos, arr) {\n        return arr.indexOf(elem) == pos;\n    }).sort(function(a,\
    \ b){return a-b});\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var l3 = l1.filter(function(n) {\n        return l2.indexOf(n)\
    \ !== -1;\n    });\n    return l3.filter(function(item, pos) {\n        return\
    \ l3.indexOf(item) == pos;\n    })\n}\n", "    let l3 = [];\n    for(let i = 0;\
    \ i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n            }\n  \
    \      }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var i =\
    \ 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n     \
    \       if(l1[i] == l2[j]){\n                result.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n) {\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    var l3 = l1.filter(function(n) {\n   \
    \     return l2.indexOf(n) != -1;\n    });\n    return l3.filter(function(elem,\
    \ pos) {\n        return l3.indexOf(elem) == pos;\n    });\n}\n", "    var l3\
    \ = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n    for(var i =\
    \ 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n     \
    \       if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                result.push(l1[i]);\n         \
    \   }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                result.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    let result = [];\n \
    \   for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort();\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    let result = [];\n    l1.forEach(function(item){\n\
    \        if(l2.includes(item) && !result.includes(item)){\n            result.push(item);\n\
    \        }\n    });\n    return result.sort();\n}\n", "    return Array.from(new\
    \ Set(l1.filter(x => l2.includes(x))));\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) != -1;\n    });\n}\n", "    let l3 = [];\n \
    \   for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n \
    \           }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n   \
    \ for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n\
    \            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n          \
    \  }\n        }\n    }\n    return l3;\n}\n", "  var result = [];\n  for (var\
    \ i = 0; i < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n  \
    \    if (l1[i] === l2[j]) {\n        result.push(l1[i]);\n      }\n    }\n  }\n\
    \  return result;\n}\n", "    return l1.filter(item => l2.includes(item)).sort((a,\
    \ b) => a - b);\n}\n", "    return l1.filter(x => l2.includes(x)).sort((a, b)\
    \ => a - b).filter((x, i, a) => a.indexOf(x) === i);\n}\n", "    var common_list\
    \ = [];\n    for (var i = 0; i < l1.length; i++){\n        for (var j = 0; j <\
    \ l2.length; j++){\n            if (l1[i] == l2[j]){\n                common_list.push(l1[i]);\n\
    \            }\n        }\n    }\n    common_list.sort();\n    for (var i = 0;\
    \ i < common_list.length; i++){\n        for (var j = i + 1; j < common_list.length;\
    \ j++){\n            if (common_list[i] == common_list[j]){\n                common_list.splice(j,\
    \ 1);\n                j--;\n            }\n        }\n    }\n    return common_list;\n\
    }\n", "    return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b) {\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    let set1 = new Set(l1);\n\
    \    let set2 = new Set(l2);\n    let common = new Set([...set1].filter(x => set2.has(x)));\n\
    \    return [...common].sort();\n}\n", "    return l1.filter(x => l2.includes(x)).sort((a,\
    \ b) => a - b).filter((x, i, a) => a.indexOf(x) === i);\n}\n", "    var result\
    \ = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    let result = [];\n \
    \   for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort();\n}\n", "    var l3\
    \ = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n    for(var i =\
    \ 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n     \
    \       if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var i = 0;\
    \ i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n   \
    \     }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n        \
    \    if(l1[i] == l2[j]){\n                result.push(l1[i]);\n            }\n\
    \        }\n    }\n    return result;\n}\n", "    var result = [];\n    var i\
    \ = 0;\n    var j = 0;\n    while(i < l1.length && j < l2.length){\n        if(l1[i]\
    \ == l2[j]){\n            result.push(l1[i]);\n            i++;\n            j++;\n\
    \        }\n        else if(l1[i] < l2[j]){\n            i++;\n        }\n   \
    \     else{\n            j++;\n        }\n    }\n    return result;\n}\n", " \
    \   let set1 = new Set(l1);\n    let set2 = new Set(l2);\n    let intersection\
    \ = new Set([...set1].filter(x => set2.has(x)));\n    return Array.from(intersection).sort((a,\
    \ b) => a - b);\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    return [...new Set(l1.filter(x => l2.includes(x)))].sort((a,\
    \ b) => a - b);\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n    \
    \    for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n  \
    \              l3.push(l1[i]);\n            }\n        }\n    }\n    return l3;\n\
    }\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n       \
    \ for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n     \
    \           result.push(l1[i]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "    return l1.filter(function(item){\n        return l2.indexOf(item) !=\
    \ -1;\n    }).sort(function(a, b){\n        return a - b;\n    });\n}\n", "  \
    \  return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n    });\n\
    }\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n             \
    \   l3.push(l1[i]);\n            }\n        }\n    }\n    return l3;\n}\n", " \
    \   let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3.sort();\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    let set1 = new Set(l1);\n\
    \    let set2 = new Set(l2);\n    let set3 = new Set();\n    for (let item of\
    \ set1) {\n        if (set2.has(item)) {\n            set3.add(item);\n      \
    \  }\n    }\n    return Array.from(set3).sort();\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let result =\
    \ [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort((a, b) => a - b);\n}\n",
  "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    return l1.filter(function(n) {\n\
    \        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n        return\
    \ a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    let l1_set = new Set(l1);\n    let l2_set\
    \ = new Set(l2);\n    let common_set = new Set([...l1_set].filter(x => l2_set.has(x)));\n\
    \    return Array.from(common_set).sort();\n}\n", "    let result = [];\n    for(let\
    \ i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result.sort();\n}\n", "    let result =\
    \ [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] === l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result.sort();\n}\n", "    var l3\
    \ = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                result.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    let l3 = [];\n    for(let i\
    \ = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n) {\n\
    \        return l2.indexOf(n) !== -1;\n    }).filter(function(elem, pos, arr)\
    \ {\n        return arr.indexOf(elem) == pos;\n    }).sort(function(a, b){return\
    \ a-b});\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    var common = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                common.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ common;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    return l1.filter(function(n) {\n        return l2.indexOf(n)\
    \ !== -1;\n    }).filter(function(elem, pos, arr) {\n        return arr.indexOf(elem)\
    \ == pos;\n    }).sort(function(a, b){return a-b});\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    l3.sort(function(a, b){return a-b});\n   \
    \ var l4 = [];\n    for(var i = 0; i < l3.length; i++){\n        if(l3[i] != l3[i+1]){\n\
    \            l4.push(l3[i]);\n        }\n    }\n    return l4;\n}\n", "    let\
    \ l3 = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let j = 0; j\
    \ < l2.length; j++){\n            if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) != -1;\n    }).sort(function(a, b) {\n     \
    \   return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    let l3 = l1.filter(x => l2.includes(x));\n\
    \    return [...new Set(l3)];\n}\n", "    var result = [];\n    for(var i = 0;\
    \ i < l1.length; i++){\n        if(l2.indexOf(l1[i]) != -1){\n            result.push(l1[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  var l3 = [];\n  for (var i = 0;\
    \ i < l1.length; i++) {\n    for (var j = 0; j < l2.length; j++) {\n      if (l1[i]\
    \ === l2[j]) {\n        l3.push(l1[i]);\n      }\n    }\n  }\n  return l3;\n}\n",
  "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n             \
    \   result.push(l1[i]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n       \
    \ for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n     \
    \           result.push(l1[i]);\n            }\n        }\n    }\n    return result;\n\
    }\n", "    return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort().filter(function(item, pos, ary) {\n        return !pos || item\
    \ != ary[pos - 1];\n    });\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    l3.sort(function(a, b){return a-b});\n    var l4 = [];\n    for(var i = 0;\
    \ i < l3.length; i++){\n        if(l3[i] != l3[i+1]){\n            l4.push(l3[i]);\n\
    \        }\n    }\n    return l4;\n}\n", "    let result = [];\n    for(let i\
    \ = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] === l2[j]){\n                result.push(l1[i]);\n        \
    \    }\n        }\n    }\n    return result.sort();\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    let result = [];\n\
    \    for(let i = 0; i < l1.length; i++){\n        if(l2.includes(l1[i]) && !result.includes(l1[i])){\n\
    \            result.push(l1[i]);\n        }\n    }\n    return result.sort();\n\
    }\n", "    let l3 = [];\n    for(let i = 0; i < l1.length; i++){\n        for(let\
    \ j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n            \
    \    l3.push(l1[i]);\n            }\n        }\n    }\n    return l3;\n}\n", " \
    \   var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).filter(function(elem, pos, arr)\
    \ {\n        return arr.indexOf(elem) == pos;\n    }).sort(function(a, b){return\
    \ a-b});\n}\n", "    var common = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                common.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ common;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    let result = [];\n    for(let i = 0; i < l1.length; i++){\n\
    \        for(let j = 0; j < l2.length; j++){\n            if(l1[i] === l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result.sort();\n}\n", "    return l1.filter(function(n) {\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b) {\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var l3 = l1.filter(function(n) {\n        return l2.indexOf(n) != -1;\n  \
    \  });\n    return l3.filter(function(item, pos) {\n        return l3.indexOf(item)\
    \ == pos;\n    });\n}\n", "    let l3 = [];\n    for(let i = 0; i < l1.length;\
    \ i++){\n        for(let j = 0; j < l2.length; j++){\n            if(l1[i] ===\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    return l1.filter(function(n) {\n        return l2.indexOf(n)\
    \ !== -1;\n    }).filter(function(elem, pos, arr) {\n        return arr.indexOf(elem)\
    \ == pos;\n    }).sort();\n}\n", "    return l1.filter(function(n) {\n       \
    \ return l2.indexOf(n) !== -1;\n    });\n}\n", "    return l1.filter(function(n)\
    \ {\n        return l2.indexOf(n) !== -1;\n    }).sort(function(a, b) {\n    \
    \    return a - b;\n    }).filter(function(item, pos, ary) {\n        return !pos\
    \ || item != ary[pos - 1];\n    });\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                result.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    return [...new Set(l1.filter(x\
    \ => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                result.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    let l3 = [];\n    for(let\
    \ i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                l3.push(l1[i]);\n          \
    \  }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    l3.sort(function(a, b){return a-b});\n    for(var i = 0;\
    \ i < l3.length; i++){\n        for(var j = i+1; j < l3.length; j++){\n      \
    \      if(l3[i] == l3[j]){\n                l3.splice(j, 1);\n               \
    \ j--;\n            }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    let result = [];\n    for(let\
    \ i = 0; i < l1.length; i++){\n        for(let j = 0; j < l2.length; j++){\n \
    \           if(l1[i] === l2[j]){\n                result.push(l1[i]);\n      \
    \      }\n        }\n    }\n    return result.sort((a, b) => a - b);\n}\n", " \
    \   return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n   \
    \ }).sort(function(a, b) {\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n  \
    \  for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var result = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var i\
    \ = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n   \
    \         if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n            }\n\
    \        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var i=0; i<l1.length;\
    \ i++){\n        for(var j=0; j<l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                l3.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ l3;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length; i++){\n\
    \        for(var j = 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n\
    \                result.push(l1[i]);\n            }\n        }\n    }\n    return\
    \ result;\n}\n", "    return l1.filter(function(n) {\n        return l2.indexOf(n)\
    \ !== -1;\n    }).sort(function(a, b) {\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n   \
    \ }).filter(function(elem, pos, arr) {\n        return arr.indexOf(elem) == pos;\n\
    \    }).sort(function(a, b){return a-b});\n}\n", "    var result = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                result.push(l1[i]);\n       \
    \     }\n        }\n    }\n    return result;\n}\n", "    let set1 = new Set(l1);\n\
    \    let set2 = new Set(l2);\n    let common = new Set([...set1].filter(x => set2.has(x)));\n\
    \    return Array.from(common).sort((a, b) => a - b);\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var result =\
    \ [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                result.push(l1[i]);\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    var list = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                list.push(l1[i]);\n\
    \            }\n        }\n    }\n    return list;\n}\n", "    return [...new\
    \ Set(l1.filter(x => l2.includes(x)))].sort((a, b) => a - b);\n}\n", "    var\
    \ common = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j = 0;\
    \ j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                common.push(l1[i]);\n\
    \            }\n        }\n    }\n    return common;\n}\n", "    var l3 = [];\n\
    \    for(var i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length;\
    \ j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n  \
    \          }\n        }\n    }\n    return l3;\n}\n", "    var l3 = [];\n    for(var\
    \ i = 0; i < l1.length; i++){\n        for(var j = 0; j < l2.length; j++){\n \
    \           if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n           \
    \ }\n        }\n    }\n    return l3;\n}\n", "    var list1 = l1.sort();\n   \
    \ var list2 = l2.sort();\n    var commonList = [];\n    var i = 0;\n    var j\
    \ = 0;\n    while(i < list1.length && j < list2.length){\n        if(list1[i]\
    \ == list2[j]){\n            commonList.push(list1[i]);\n            i++;\n  \
    \          j++;\n        }\n        else if(list1[i] < list2[j]){\n          \
    \  i++;\n        }\n        else{\n            j++;\n        }\n    }\n    return\
    \ commonList;\n}\n", "    return l1.filter(function(item){\n        return l2.indexOf(item)\
    \ !== -1;\n    }).sort(function(a, b){\n        return a - b;\n    }).filter(function(item,\
    \ index, arr){\n        return arr.indexOf(item) === index;\n    });\n}\n", " \
    \   return [...new Set(l1.filter(x => l2.includes(x)))].sort((a, b) => a - b);\n\
    }\n", "    return l1.filter(function(n) {\n        return l2.indexOf(n) !== -1;\n\
    \    }).sort(function(a, b) {\n        return a - b;\n    }).filter(function(item,\
    \ pos, ary) {\n        return !pos || item != ary[pos - 1];\n    });\n}\n", " \
    \   var l3 = [];\n    for(var i = 0; i < l1.length; i++){\n        for(var j =\
    \ 0; j < l2.length; j++){\n            if(l1[i] == l2[j]){\n                l3.push(l1[i]);\n\
    \            }\n        }\n    }\n    return l3;\n}\n", "    return l1.filter(function(item){\n\
    \        return l2.indexOf(item) !== -1;\n    }).sort(function(a, b){\n      \
    \  return a - b;\n    }).filter(function(item, index, arr){\n        return arr.indexOf(item)\
    \ === index;\n    });\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n", "    var l3 = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                l3.push(l1[i]);\n            }\n        }\n    }\n\
    \    return l3;\n}\n", "    var result = [];\n    for(var i = 0; i < l1.length;\
    \ i++){\n        for(var j = 0; j < l2.length; j++){\n            if(l1[i] ==\
    \ l2[j]){\n                result.push(l1[i]);\n            }\n        }\n   \
    \ }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

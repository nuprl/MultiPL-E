name: HumanEval_145_order_by_points
language: js
results:
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        for(var j = 0; j < nums[i].toString().length; j++){\n            sum\
    \ += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n   \
    \     sum = 0;\n    }\n    var arr2 = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var min = Math.min.apply(null, arr);\n        var index = arr.indexOf(min);\n\
    \        arr2.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return arr2;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmphen6pt2l.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmphen6pt2l.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var new_nums = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    new_nums.push(sum);\n    }\n    var sorted_nums = [];\n    var min = Math.min.apply(null,\
    \ new_nums);\n    var min_index = new_nums.indexOf(min);\n    sorted_nums.push(nums[min_index]);\n\
    \    new_nums.splice(min_index, 1);\n    nums.splice(min_index, 1);\n    while(new_nums.length\
    \ > 0){\n        min = Math.min.apply(null, new_nums);\n        min_index = new_nums.indexOf(min);\n\
    \        sorted_nums.push(nums[min_index]);\n        new_nums.splice(min_index,\
    \ 1);\n        nums.splice(min_index, 1);\n    }\n    return sorted_nums;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined, 1, 11\
    \ ]\n\nshould equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpk8s65kml.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk8s65kml.js:49:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, 1, 11\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    var result2 = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    result.push(sum);\n    }\n    for(var i = 0; i < result.length; i++){\n \
    \       for(var j = i + 1; j < result.length; j++){\n            if(result[i]\
    \ > result[j]){\n                var temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                var temp2 =\
    \ nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp2;\n\
    \            }\n        }\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp60fudfk1.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp60fudfk1.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2_ehrz5s.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmp2_ehrz5s.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp2_ehrz5s.js:11:17)\n\
    \    at test (/tmp/tmp2_ehrz5s.js:21:20)\n    at Object.<anonymous> (/tmp/tmp2_ehrz5s.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp3h7xjzoa.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp3h7xjzoa.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp3h7xjzoa.js:11:17)\n\
    \    at test (/tmp/tmp3h7xjzoa.js:21:20)\n    at Object.<anonymous> (/tmp/tmp3h7xjzoa.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = sumDigits(a);\n    \
    \    var bSum = sumDigits(b);\n        if (aSum == bSum){\n            return\
    \ a - b;\n        }\n        return aSum - bSum;\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpg8igxe7p.js:12\n        var aSum = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpg8igxe7p.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpg8igxe7p.js:11:17)\n\
    \    at test (/tmp/tmpg8igxe7p.js:26:20)\n    at Object.<anonymous> (/tmp/tmpg8igxe7p.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    var sorted = [];\n    var sorted_nums = [];\n    for(var i = 0; i\
    \ < sums.length; i++){\n        var min = Math.min.apply(null, sums);\n      \
    \  sorted.push(min);\n        sums.splice(sums.indexOf(min), 1);\n    }\n    for(var\
    \ i = 0; i < sorted.length; i++){\n        for(var j = 0; j < nums.length; j++){\n\
    \            sum = 0;\n            for(var k = 0; k < nums[j].toString().length;\
    \ k++){\n                sum += parseInt(nums[j].toString()[k]);\n           \
    \ }\n            if(sum == sorted[i]){\n                sorted_nums.push(nums[j]);\n\
    \                nums.splice(j, 1);\n                break;\n            }\n \
    \       }\n    }\n    return sorted_nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ -1, -11, 1, -12,\
    \ 11 ]\n    at test (/tmp/tmpbjq3wsmc.js:48:10)\n    at Object.<anonymous> (/tmp/tmpbjq3wsmc.js:56:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [],\n  expected: [ -1, -11, 1, -12, 11 ],\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    for(var i = 0; i < sums.length; i++){\n        for(var j = i + 1;\
    \ j < sums.length; j++){\n            if(sums[i] > sums[j]){\n               \
    \ var temp = sums[i];\n                sums[i] = sums[j];\n                sums[j]\
    \ = temp;\n                temp = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp;\n            }\n        }\n    }\n    return\
    \ nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpdptpcuwb.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdptpcuwb.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let result = [];\n    let sum = 0;\n    let sum_arr = [];\n    for(let i\
    \ = 0; i < nums.length; i++){\n        let num = nums[i];\n        while(num >\
    \ 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        sum_arr.push(sum);\n        sum = 0;\n    }\n    for(let i\
    \ = 0; i < sum_arr.length; i++){\n        let min = Math.min(...sum_arr);\n  \
    \      let index = sum_arr.indexOf(min);\n        result.push(nums[index]);\n\
    \        sum_arr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n  \
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmpfmets_vv.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfmets_vv.js:46:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    var arr = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    arr.push(sum);\n    }\n    for(var i = 0; i < arr.length; i++){\n       \
    \ for(var j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             var temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                var temp2 = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n      \
    \  }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpbu72l1_w.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbu72l1_w.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sum_a = a.toString().split('').reduce(function(a,\
    \ b){\n            return parseInt(a) + parseInt(b);\n        });\n        var\
    \ sum_b = b.toString().split('').reduce(function(a, b){\n            return parseInt(a)\
    \ + parseInt(b);\n        });\n        return sum_a - sum_b;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpllv7wf1k.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpllv7wf1k.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpog8o6yjq.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmpog8o6yjq.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpog8o6yjq.js:11:17)\n\
    \    at test (/tmp/tmpog8o6yjq.js:21:20)\n    at Object.<anonymous> (/tmp/tmpog8o6yjq.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    var result = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        while(nums[i] > 0){\n    \
    \        sum += nums[i] % 10;\n            nums[i] = Math.floor(nums[i] / 10);\n\
    \        }\n        arr.push(sum);\n    }\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var min = Math.min.apply(null, arr);\n        var index = arr.indexOf(min);\n\
    \        result.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmpnmymopqo.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpnmymopqo.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqxov4oz8.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpqxov4oz8.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpqxov4oz8.js:11:17)\n\
    \    at test (/tmp/tmpqxov4oz8.js:21:20)\n    at Object.<anonymous> (/tmp/tmpqxov4oz8.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sumArr = [];\n    var result = [];\n    for(var i =\
    \ 0; i < nums.length; i++){\n        sum = 0;\n        var num = nums[i].toString();\n\
    \        for(var j = 0; j < num.length; j++){\n            sum += parseInt(num[j]);\n\
    \        }\n        sumArr.push(sum);\n    }\n    for(var i = 0; i < sumArr.length;\
    \ i++){\n        var min = Math.min.apply(null, sumArr);\n        var index =\
    \ sumArr.indexOf(min);\n        result.push(nums[index]);\n        sumArr.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpriptppvz.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpriptppvz.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6s7miq97.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp6s7miq97.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp6s7miq97.js:11:17)\n\
    \    at test (/tmp/tmp6s7miq97.js:21:20)\n    at Object.<anonymous> (/tmp/tmp6s7miq97.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n    \
    \    var sumB = sumDigits(b);\n        if(sumA === sumB){\n            return\
    \ a - b;\n        }\n        return sumA - sumB;\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2pioh2c5.js:12\n        var sumA = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp2pioh2c5.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp2pioh2c5.js:11:17)\n\
    \    at test (/tmp/tmp2pioh2c5.js:26:20)\n    at Object.<anonymous> (/tmp/tmp2pioh2c5.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var result = [];\n    var sum = 0;\n    var sum_array = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        var min = sum_array[i];\n        var min_index = i;\n       \
    \ for(var j = i + 1; j < sum_array.length; j++){\n            if(sum_array[j]\
    \ < min){\n                min = sum_array[j];\n                min_index = j;\n\
    \            }\n        }\n        var temp = sum_array[i];\n        sum_array[i]\
    \ = sum_array[min_index];\n        sum_array[min_index] = temp;\n        temp\
    \ = nums[i];\n        nums[i] = nums[min_index];\n        nums[min_index] = temp;\n\
    \    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpul6ib4g8.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpul6ib4g8.js:53:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if (nums.length == 0) {\n        return [];\n    }\n    var sum = 0;\n  \
    \  var sums = [];\n    for (var i = 0; i < nums.length; i++) {\n        sum =\
    \ 0;\n        for (var j = 0; j < nums[i].toString().length; j++) {\n        \
    \    sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    var result = [];\n    var min = Math.min.apply(null, sums);\n    var\
    \ index = sums.indexOf(min);\n    result.push(nums[index]);\n    sums.splice(index,\
    \ 1);\n    nums.splice(index, 1);\n    return result.concat(order_by_points(nums));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined, 1, 11\
    \ ]\n\nshould equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp25rgj6od.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmp25rgj6od.js:45:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, 1, 11\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    for(var i = 0; i < sums.length; i++){\n        for(var j = 0; j <\
    \ sums.length; j++){\n            if(sums[i] < sums[j]){\n                var\
    \ temp = sums[i];\n                sums[i] = sums[j];\n                sums[j]\
    \ = temp;\n                var temp = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp;\n            }\n        }\n    }\n    return\
    \ nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11,\
    \ -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp847prlb2.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp847prlb2.js:47:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    var sum = 0;\n   \
    \ var nums_sum = [];\n    for(var i = 0; i < nums.length; i++){\n        sum =\
    \ 0;\n        var num = nums[i];\n        while(num > 0){\n            sum +=\
    \ num % 10;\n            num = Math.floor(num / 10);\n        }\n        nums_sum.push([nums[i],\
    \ sum, i]);\n    }\n    nums_sum.sort(function(a, b){\n        if(a[1] === b[1]){\n\
    \            return a[2] - b[2];\n        }\n        return a[1] - b[1];\n   \
    \ });\n    var result = [];\n    for(var j = 0; j < nums_sum.length; j++){\n \
    \       result.push(nums_sum[j][0]);\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp42gd87j3.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp42gd87j3.js:51:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    var result = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        var min = Math.min.apply(null, sum_array);\n        var index\
    \ = sum_array.indexOf(min);\n        result.push(nums[index]);\n        sum_array.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpz87ipgk3.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz87ipgk3.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let result = [];\n    let sum_arr = [];\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(let i = 0; i < sum_arr.length; i++){\n\
    \        for(let j = 0; j < sum_arr.length; j++){\n            if(sum_arr[i] <\
    \ sum_arr[j]){\n                let temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpwyivkbxr.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwyivkbxr.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    // your code here\n    var result = [];\n    var sum = 0;\n    var index\
    \ = 0;\n    var nums_copy = nums.slice();\n    var nums_copy_2 = nums.slice();\n\
    \    var nums_copy_3 = nums.slice();\n    var nums_copy_4 = nums.slice();\n  \
    \  var nums_copy_5 = nums.slice();\n    var nums_copy_6 = nums.slice();\n    var\
    \ nums_copy_7 = nums.slice();\n    var nums_copy_8 = nums.slice();\n    var nums_copy_9\
    \ = nums.slice();\n    var nums_copy_10 = nums.slice();\n    var nums_copy_11\
    \ = nums.slice();\n    var nums_copy_12 = nums.slice();\n    var nums_copy_13\
    \ = nums.slice();\n    var nums_copy_14 = nums.slice();\n    var nums_copy_15\
    \ = nums.slice();\n    var nums_copy_16 = nums.slice();\n    var nums_copy_17\
    \ = nums.slice();\n    var nums_copy_18 = nums.slice();\n    var nums_copy_19\
    \ = nums.slice();\n    var nums_copy_20 = nums.slice();\n    var nums_copy_21\
    \ = nums.slice();\n    var nums_copy_22 = nums.slice();\n    var nums_copy_23\
    \ = nums.slice();\n    var nums_copy_24 = nums.slice();\n    var nums_copy_25\
    \ = nums.slice();\n    var nums_copy_26 = nums.slice();\n    var nums_copy_27\
    \ = nums.slice();\n    var nums_copy_28 = nums.slice();\n    var nums_copy_29\
    \ = nums.slice();\n    var nums_copy_30 = nums.slice();\n    var nums_copy_31\
    \ = nums.slice();\n    var nums_copy_32 = nums.slice();\n    var nums_copy_\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpi2pbc0eh.js:61\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpt4325d1w.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpt4325d1w.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpt4325d1w.js:11:17)\n\
    \    at test (/tmp/tmpt4325d1w.js:21:20)\n    at Object.<anonymous> (/tmp/tmpt4325d1w.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = 0;\n        var sumB\
    \ = 0;\n        var aStr = a.toString();\n        var bStr = b.toString();\n \
    \       for(var i = 0; i < aStr.length; i++){\n            sumA += parseInt(aStr[i]);\n\
    \        }\n        for(var j = 0; j < bStr.length; j++){\n            sumB +=\
    \ parseInt(bStr[j]);\n        }\n        if(sumA < sumB){\n            return\
    \ -1;\n        }\n        else if(sumA > sumB){\n            return 1;\n     \
    \   }\n        else{\n            return 0;\n        }\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpy3tz8m81.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy3tz8m81.js:47:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    var temp = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var\
    \ j = i + 1; j < arr.length; j++){\n            if(arr[i] > arr[j]){\n       \
    \         temp = arr[i];\n                arr[i] = arr[j];\n                arr[j]\
    \ = temp;\n                temp = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp;\n            }\n        }\n    }\n    return\
    \ nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11,\
    \ -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpb3_ggp7z.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpb3_ggp7z.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    var result = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sums.push(sum);\n    }\n    var sorted = sums.slice().sort(function(a,b){return\
    \ a-b});\n    for(var i = 0; i < sorted.length; i++){\n        for(var j = 0;\
    \ j < sums.length; j++){\n            if(sorted[i] == sums[j]){\n            \
    \    result.push(nums[j]);\n                sums[j] = -1;\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11 ]\n\nshould equal\n\n[ -1, -11,\
    \ 1, -12, 11 ]\n    at test (/tmp/tmpzy_0f7q_.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpzy_0f7q_.js:47:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11 ],\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzdy9q3ol.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmpzdy9q3ol.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpzdy9q3ol.js:11:17)\n\
    \    at test (/tmp/tmpzdy9q3ol.js:21:20)\n    at Object.<anonymous> (/tmp/tmpzdy9q3ol.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    var result = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        for(var j = 0; j < sum_array.length; j++){\n            if(sum_array[i]\
    \ < sum_array[j]){\n                var temp = sum_array[i];\n               \
    \ sum_array[i] = sum_array[j];\n                sum_array[j] = temp;\n       \
    \         var temp2 = nums[i];\n                nums[i] = nums[j];\n         \
    \       nums[j] = temp2;\n            }\n        }\n    }\n    return nums;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpqjpw49mq.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqjpw49mq.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        for(var j = i; j < sum_arr.length; j++){\n            if(sum_arr[i] >\
    \ sum_arr[j]){\n                var temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpz04_7oxt.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpz04_7oxt.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var a_sum = a.toString().split('').reduce(function(a,\
    \ b){\n            return parseInt(a) + parseInt(b);\n        });\n        var\
    \ b_sum = b.toString().split('').reduce(function(a, b){\n            return parseInt(a)\
    \ + parseInt(b);\n        });\n        if (a_sum > b_sum) {\n            return\
    \ 1;\n        } else if (a_sum < b_sum) {\n            return -1;\n        } else\
    \ {\n            return 0;\n        }\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp5fs_aiur.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5fs_aiur.js:41:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    var result = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        arr = nums[i].toString().split('');\n\
    \        for(var j = 0; j < arr.length; j++){\n            sum += parseInt(arr[j]);\n\
    \        }\n        result.push(sum);\n    }\n    for(var k = 0; k < result.length;\
    \ k++){\n        for(var l = k + 1; l < result.length; l++){\n            if(result[k]\
    \ > result[l]){\n                var temp = result[k];\n                result[k]\
    \ = result[l];\n                result[l] = temp;\n                var temp2 =\
    \ nums[k];\n                nums[k] = nums[l];\n                nums[l] = temp2;\n\
    \            }\n        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpi0y9oq7i.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpi0y9oq7i.js:50:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sum_a = a.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n        var\
    \ sum_b = b.toString().split('').reduce(function(sum, num){\n            return\
    \ sum + parseInt(num);\n        }, 0);\n        return sum_a - sum_b;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpq2r8a06e.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq2r8a06e.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    for(let i = 0; i < result.length; i++){\n        for(let j = i + 1;\
    \ j < result.length; j++){\n            if(result[i] > result[j]){\n         \
    \       let temp = result[i];\n                result[i] = result[j];\n      \
    \          result[j] = temp;\n                temp = nums[i];\n              \
    \  nums[i] = nums[j];\n                nums[j] = temp;\n            }\n      \
    \  }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpn0hc332d.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn0hc332d.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    var result = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        var min = Math.min.apply(null, sum_arr);\n        var index = sum_arr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum_arr.splice(index, 1);\n      \
    \  nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpprpq4y5s.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpprpq4y5s.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        var num = nums[i];\n        while(num > 0){\n     \
    \       sum += num % 10;\n            num = Math.floor(num / 10);\n        }\n\
    \        arr.push(sum);\n    }\n    for(var i = 0; i < arr.length; i++){\n   \
    \     for(var j = i + 1; j < arr.length; j++){\n            if(arr[i] > arr[j]){\n\
    \                var temp = arr[i];\n                arr[i] = arr[j];\n      \
    \          arr[j] = temp;\n                temp = nums[i];\n                nums[i]\
    \ = nums[j];\n                nums[j] = temp;\n            }\n        }\n    }\n\
    \    return nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp2y81y609.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp2y81y609.js:50:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    var arr2 = [];\n    var arr3 = [];\n    var arr4 = [];\n    for(var\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] < 0){\n            arr2.push(arr[i]);\n\
    \        }\n        else if(arr[i] > 0){\n            arr3.push(arr[i]);\n   \
    \     }\n        else{\n            arr4.push(arr[i]);\n        }\n    }\n   \
    \ arr2.sort(function(a, b){return a - b});\n    arr3.sort(function(a, b){return\
    \ a - b});\n    arr4.sort(function(a, b){return a - b});\n    var arr5 = arr2.concat(arr3);\n\
    \    var arr6 = arr5.concat(arr4);\n    var arr7 = [];\n    for(var i = 0; i <\
    \ arr6.length; i++){\n        for(var j = 0; j < arr.length; j++){\n         \
    \   if(arr6[i] == arr[j]){\n                arr7.push(nums[j]);\n            \
    \    arr[j] = null;\n            }\n        }\n    }\n    return arr7;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11 ]\n\nshould equal\n\n[ -1, -11,\
    \ 1, -12, 11 ]\n    at test (/tmp/tmpgrd41u7g.js:56:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgrd41u7g.js:64:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11 ],\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        var num = nums[i];\n        while(num > 0){\n     \
    \       sum += num % 10;\n            num = Math.floor(num / 10);\n        }\n\
    \        arr.push(sum);\n    }\n    var result = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var min = Math.min.apply(null, arr);\n        var index = arr.indexOf(min);\n\
    \        result.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmpgzy68krn.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgzy68krn.js:46:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sum_a = a.toString().split('').reduce(function(sum,\
    \ digit){\n            return sum + parseInt(digit);\n        }, 0);\n       \
    \ var sum_b = b.toString().split('').reduce(function(sum, digit){\n          \
    \  return sum + parseInt(digit);\n        }, 0);\n        if (sum_a > sum_b) {\n\
    \            return 1;\n        } else if (sum_a < sum_b) {\n            return\
    \ -1;\n        } else {\n            return 0;\n        }\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp6w5ic_x1.js:33:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6w5ic_x1.js:41:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvwi_ooea.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpvwi_ooea.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpvwi_ooea.js:11:17)\n\
    \    at test (/tmp/tmpvwi_ooea.js:21:20)\n    at Object.<anonymous> (/tmp/tmpvwi_ooea.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum = 0;\n   \
    \ let sumArr = [];\n    let result = [];\n    for(let i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        let num = nums[i].toString();\n        for(let\
    \ j = 0; j < num.length; j++){\n            sum += parseInt(num[j]);\n       \
    \ }\n        sumArr.push(sum);\n    }\n    for(let i = 0; i < sumArr.length; i++){\n\
    \        let min = Math.min(...sumArr);\n        let index = sumArr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sumArr.splice(index, 1);\n       \
    \ nums.splice(index, 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmputc7rk14.js:39:10)\n\
    \    at Object.<anonymous> (/tmp/tmputc7rk14.js:47:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    var sorted = [];\n    for(var i = 0; i < arr.length; i++){\n     \
    \   var min = Math.min.apply(null, arr);\n        var index = arr.indexOf(min);\n\
    \        sorted.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpuwwru8ut.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuwwru8ut.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl8m_fh4y.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmpl8m_fh4y.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpl8m_fh4y.js:11:17)\n\
    \    at test (/tmp/tmpl8m_fh4y.js:21:20)\n    at Object.<anonymous> (/tmp/tmpl8m_fh4y.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpz6fofw7r.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmpz6fofw7r.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpz6fofw7r.js:11:17)\n\
    \    at test (/tmp/tmpz6fofw7r.js:21:20)\n    at Object.<anonymous> (/tmp/tmpz6fofw7r.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n    \
    \    var sumB = sumDigits(b);\n        if(sumA == sumB){\n            return a\
    \ - b;\n        }\n        return sumA - sumB;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpno04vsqw.js:12\n        var sumA = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpno04vsqw.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpno04vsqw.js:11:17)\n\
    \    at test (/tmp/tmpno04vsqw.js:26:20)\n    at Object.<anonymous> (/tmp/tmpno04vsqw.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = a.toString().split('').reduce(function(a,\
    \ b){\n            return parseInt(a) + parseInt(b);\n        });\n        var\
    \ sumB = b.toString().split('').reduce(function(a, b){\n            return parseInt(a)\
    \ + parseInt(b);\n        });\n        return sumA - sumB;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp70c741uo.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp70c741uo.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = 0;\n        var bSum\
    \ = 0;\n        var aStr = a.toString();\n        var bStr = b.toString();\n \
    \       for(var i = 0; i < aStr.length; i++){\n            aSum += parseInt(aStr[i]);\n\
    \        }\n        for(var j = 0; j < bStr.length; j++){\n            bSum +=\
    \ parseInt(bStr[j]);\n        }\n        if(aSum === bSum){\n            return\
    \ a - b;\n        }\n        return aSum - bSum;\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp768bpcs8.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp768bpcs8.js:42:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        for(var j = 0; j < sum_arr.length; j++){\n            if(sum_arr[i] <\
    \ sum_arr[j]){\n                var temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                var temp2\
    \ = nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp2;\n\
    \            }\n        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmphyifvtp3.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmphyifvtp3.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = nums.map(function(num){\n        return num.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n    });\n  \
    \  var sorted = [];\n    for(var i = 0; i < sum.length; i++){\n        var min\
    \ = Math.min.apply(null, sum);\n        var index = sum.indexOf(min);\n      \
    \  sorted.push(nums[index]);\n        sum.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmptrdhor9u.js:32:10)\n\
    \    at Object.<anonymous> (/tmp/tmptrdhor9u.js:40:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum = 0;\n   \
    \ let arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        let str = nums[i].toString();\n        for(let j = 0; j < str.length;\
    \ j++){\n            sum += Number(str[j]);\n        }\n        arr.push([nums[i],\
    \ sum, i]);\n    }\n    arr.sort(function(a, b){\n        if(a[1] === b[1]){\n\
    \            return a[2] - b[2];\n        }\n        return a[1] - b[1];\n   \
    \ });\n    let result = [];\n    for(let i = 0; i < arr.length; i++){\n      \
    \  result.push(arr[i][0]);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp8qgp6mco.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8qgp6mco.js:50:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var result = [];\n    var sum = 0;\n    var sum_arr = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        var min = Math.min.apply(null, sum_arr);\n        var index = sum_arr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum_arr.splice(index, 1);\n      \
    \  nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmprke_50_h.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmprke_50_h.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var a_sum = a.toString().split('').reduce(function(acc,\
    \ curr){\n            return acc + parseInt(curr);\n        }, 0);\n        var\
    \ b_sum = b.toString().split('').reduce(function(acc, curr){\n            return\
    \ acc + parseInt(curr);\n        }, 0);\n        if(a_sum === b_sum){\n      \
    \      return a - b;\n        }\n        return a_sum - b_sum;\n    });\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpyejfgbll.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpyejfgbll.js:38:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var nums_sorted = nums.sort(function(a, b){\n        var a_sum = sum_digits(a);\n\
    \        var b_sum = sum_digits(b);\n        if (a_sum < b_sum){\n           \
    \ return -1;\n        }\n        else if (a_sum > b_sum){\n            return\
    \ 1;\n        }\n        else{\n            return 0;\n        }\n    });\n  \
    \  return nums_sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph3nb3cgl.js:12\n        var a_sum = sum_digits(a);\n          \
    \          ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmph3nb3cgl.js:12:21\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmph3nb3cgl.js:11:28)\n\
    \    at test (/tmp/tmph3nb3cgl.js:32:20)\n    at Object.<anonymous> (/tmp/tmph3nb3cgl.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    // your code here\n    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        let sumB = b.toString().split('').reduce((a,\
    \ b) => parseInt(a) + parseInt(b), 0);\n        return sumA - sumB;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpmsz640rp.js:24:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmsz640rp.js:32:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2p7txhnw.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp2p7txhnw.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp2p7txhnw.js:11:17)\n\
    \    at test (/tmp/tmp2p7txhnw.js:21:20)\n    at Object.<anonymous> (/tmp/tmp2p7txhnw.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpk2086iyc.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpk2086iyc.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpk2086iyc.js:11:17)\n\
    \    at test (/tmp/tmpk2086iyc.js:21:20)\n    at Object.<anonymous> (/tmp/tmpk2086iyc.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n    \
    \    var sumB = sumDigits(b);\n        if(sumA === sumB){\n            return\
    \ a - b;\n        }\n        return sumA - sumB;\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpezptelyk.js:12\n        var sumA = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpezptelyk.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpezptelyk.js:11:17)\n\
    \    at test (/tmp/tmpezptelyk.js:26:20)\n    at Object.<anonymous> (/tmp/tmpezptelyk.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        let num = nums[i];\n        while(num > 0){\n            sum += num %\
    \ 10;\n            num = Math.floor(num / 10);\n        }\n        result.push([sum,\
    \ i]);\n        sum = 0;\n    }\n    result.sort((a, b) => a[0] - b[0]);\n   \
    \ for(let i = 0; i < result.length; i++){\n        result[i] = nums[result[i][1]];\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpgtuionm4.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpgtuionm4.js:42:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    var temp;\n    for(var i = 0; i < sums.length; i++){\n        for(var\
    \ j = 0; j < sums.length - 1; j++){\n            if(sums[j] > sums[j + 1]){\n\
    \                temp = sums[j];\n                sums[j] = sums[j + 1];\n   \
    \             sums[j + 1] = temp;\n                temp = nums[j];\n         \
    \       nums[j] = nums[j + 1];\n                nums[j + 1] = temp;\n        \
    \    }\n        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpkx85wka1.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkx85wka1.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgspfyzya.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpgspfyzya.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpgspfyzya.js:11:17)\n\
    \    at test (/tmp/tmpgspfyzya.js:21:20)\n    at Object.<anonymous> (/tmp/tmpgspfyzya.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var num = nums[i];\n        while(num > 0){\n            sum\
    \ += num % 10;\n            num = Math.floor(num / 10);\n        }\n        sum_array.push(sum);\n\
    \        sum = 0;\n    }\n    for(var i = 0; i < sum_array.length; i++){\n   \
    \     for(var j = i + 1; j < sum_array.length; j++){\n            if(sum_array[i]\
    \ > sum_array[j]){\n                var temp = sum_array[i];\n               \
    \ sum_array[i] = sum_array[j];\n                sum_array[j] = temp;\n       \
    \         temp = nums[i];\n                nums[i] = nums[j];\n              \
    \  nums[j] = temp;\n            }\n        }\n    }\n    return nums;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpmeeykwc5.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmeeykwc5.js:50:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    // your code here\n    if(nums.length === 0){\n        return [];\n    }\n\
    \    var sum = [];\n    for(var i = 0; i < nums.length; i++){\n        sum.push(nums[i].toString().split('').reduce(function(a,b){\n\
    \            return parseInt(a) + parseInt(b);\n        }));\n    }\n    var result\
    \ = [];\n    for(var i = 0; i < sum.length; i++){\n        var min = Math.min.apply(null,\
    \ sum);\n        var index = sum.indexOf(min);\n        result.push(nums[index]);\n\
    \        sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp9fqse1sw.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9fqse1sw.js:45:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sumDigits(a) - sumDigits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp71b78w4z.js:12\n        return sumDigits(a) - sumDigits(b);\n \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmp71b78w4z.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp71b78w4z.js:11:17)\n\
    \    at test (/tmp/tmp71b78w4z.js:21:20)\n    at Object.<anonymous> (/tmp/tmp71b78w4z.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpip4mlxj0.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpip4mlxj0.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpip4mlxj0.js:11:17)\n\
    \    at test (/tmp/tmpip4mlxj0.js:21:20)\n    at Object.<anonymous> (/tmp/tmpip4mlxj0.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = a.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n        var\
    \ sumB = b.toString().split('').reduce(function(sum, num){\n            return\
    \ sum + parseInt(num);\n        }, 0);\n        return sumA - sumB;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp16ov1sjl.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp16ov1sjl.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum = [];\n  \
    \  for(let i = 0; i < nums.length; i++){\n        let total = 0;\n        let\
    \ num = nums[i].toString();\n        for(let j = 0; j < num.length; j++){\n  \
    \          total += parseInt(num[j]);\n        }\n        sum.push(total);\n \
    \   }\n    let result = [];\n    for(let i = 0; i < sum.length; i++){\n      \
    \  let index = sum.indexOf(Math.min(...sum));\n        result.push(nums[index]);\n\
    \        sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpbnpf1_nq.js:38:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbnpf1_nq.js:46:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpthcou11u.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmpthcou11u.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpthcou11u.js:11:17)\n\
    \    at test (/tmp/tmpthcou11u.js:21:20)\n    at Object.<anonymous> (/tmp/tmpthcou11u.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length; i++){\n\
    \        for(var j = 0; j < sum_array.length; j++){\n            if(sum_array[i]\
    \ < sum_array[j]){\n                var temp = sum_array[i];\n               \
    \ sum_array[i] = sum_array[j];\n                sum_array[j] = temp;\n       \
    \         var temp2 = nums[i];\n                nums[i] = nums[j];\n         \
    \       nums[j] = temp2;\n            }\n        }\n    }\n    return nums;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpkr7lunsj.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkr7lunsj.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length == 0){\n        return [];\n    }\n    var nums_sum = [];\n\
    \    for(var i = 0; i < nums.length; i++){\n        var sum = 0;\n        var\
    \ num = nums[i];\n        while(num > 0){\n            sum += num % 10;\n    \
    \        num = Math.floor(num / 10);\n        }\n        nums_sum.push(sum);\n\
    \    }\n    var nums_sum_sorted = nums_sum.slice().sort(function(a, b){return\
    \ a - b});\n    var result = [];\n    for(var i = 0; i < nums_sum_sorted.length;\
    \ i++){\n        var index = nums_sum.indexOf(nums_sum_sorted[i]);\n        result.push(nums[index]);\n\
    \        nums_sum[index] = -1;\n    }\n    return result;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpdy_2ux71.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdy_2ux71.js:47:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp98h2stsz.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmp98h2stsz.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp98h2stsz.js:11:17)\n\
    \    at test (/tmp/tmp98h2stsz.js:21:20)\n    at Object.<anonymous> (/tmp/tmp98h2stsz.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    var result = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        var min = Math.min.apply(null, sum_arr);\n        var index = sum_arr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum_arr.splice(index, 1);\n      \
    \  nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpowtcpma9.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpowtcpma9.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpq7agoy7z.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpq7agoy7z.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpq7agoy7z.js:11:17)\n\
    \    at test (/tmp/tmpq7agoy7z.js:21:20)\n    at Object.<anonymous> (/tmp/tmpq7agoy7z.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        while(nums[i] > 0){\n            sum += nums[i] % 10;\n\
    \            nums[i] = Math.floor(nums[i] / 10);\n        }\n        arr.push(sum);\n\
    \    }\n    var temp = 0;\n    for(var i = 0; i < arr.length; i++){\n        for(var\
    \ j = i + 1; j < arr.length; j++){\n            if(arr[i] > arr[j]){\n       \
    \         temp = arr[i];\n                arr[i] = arr[j];\n                arr[j]\
    \ = temp;\n                temp = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp;\n            }\n        }\n    }\n    return\
    \ nums;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11,\
    \ -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 0, 0 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp_r8zg6b4.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_r8zg6b4.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 0, 0 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpoxlx_go9.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpoxlx_go9.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpoxlx_go9.js:11:17)\n\
    \    at test (/tmp/tmpoxlx_go9.js:21:20)\n    at Object.<anonymous> (/tmp/tmpoxlx_go9.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sorted = nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n\
    \        var sumB = sumDigits(b);\n        if(sumA > sumB){\n            return\
    \ 1;\n        }\n        if(sumA < sumB){\n            return -1;\n        }\n\
    \        if(sumA === sumB){\n            return a - b;\n        }\n    });\n \
    \   return sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph9a4cajw.js:12\n        var sumA = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmph9a4cajw.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmph9a4cajw.js:11:23)\n\
    \    at test (/tmp/tmph9a4cajw.js:32:20)\n    at Object.<anonymous> (/tmp/tmph9a4cajw.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    var sum = 0;\n   \
    \ var sum_arr = [];\n    for(var i = 0; i < nums.length; i++){\n        sum =\
    \ 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n          \
    \  sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    for(var i = 0; i < sum_arr.length; i++){\n        for(var j = i +\
    \ 1; j < sum_arr.length; j++){\n            if(sum_arr[i] > sum_arr[j]){\n   \
    \             var temp = sum_arr[i];\n                sum_arr[i] = sum_arr[j];\n\
    \                sum_arr[j] = temp;\n                temp = nums[i];\n       \
    \         nums[i] = nums[j];\n                nums[j] = temp;\n            }\n\
    \        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmps7rwkjga.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmps7rwkjga.js:51:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let sumArr = [];\n    let result = [];\n    for(let i =\
    \ 0; i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += Number(nums[i].toString()[j]);\n        }\n      \
    \  sumArr.push(sum);\n    }\n    for(let i = 0; i < sumArr.length; i++){\n   \
    \     let min = Math.min(...sumArr);\n        let index = sumArr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sumArr.splice(index, 1);\n       \
    \ nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp0txvo7sg.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0txvo7sg.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4j3bjrfe.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmp4j3bjrfe.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp4j3bjrfe.js:11:17)\n\
    \    at test (/tmp/tmp4j3bjrfe.js:21:20)\n    at Object.<anonymous> (/tmp/tmp4j3bjrfe.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n    \
    \    var sumB = sumDigits(b);\n        if(sumA > sumB){\n            return 1;\n\
    \        }\n        else if(sumA < sumB){\n            return -1;\n        }\n\
    \        else{\n            return 0;\n        }\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxvp_kdsn.js:12\n        var sumA = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpxvp_kdsn.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpxvp_kdsn.js:11:17)\n\
    \    at test (/tmp/tmpxvp_kdsn.js:31:20)\n    at Object.<anonymous> (/tmp/tmpxvp_kdsn.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var nums_sorted = nums.sort(function(a, b){\n        return sum_digits(a)\
    \ - sum_digits(b);\n    });\n    return nums_sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpt565nx89.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpt565nx89.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpt565nx89.js:11:28)\n\
    \    at test (/tmp/tmpt565nx89.js:22:20)\n    at Object.<anonymous> (/tmp/tmpt565nx89.js:30:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var a_sum = 0;\n        var b_sum\
    \ = 0;\n        var a_str = a.toString();\n        var b_str = b.toString();\n\
    \        for(var i = 0; i < a_str.length; i++){\n            a_sum += parseInt(a_str[i]);\n\
    \        }\n        for(var j = 0; j < b_str.length; j++){\n            b_sum\
    \ += parseInt(b_str[j]);\n        }\n        if(a_sum > b_sum){\n            return\
    \ 1;\n        }\n        else if(a_sum < b_sum){\n            return -1;\n   \
    \     }\n        else{\n            return 0;\n        }\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp92z6vaer.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp92z6vaer.js:47:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpdpgpiuin.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpdpgpiuin.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpdpgpiuin.js:11:17)\n\
    \    at test (/tmp/tmpdpgpiuin.js:21:20)\n    at Object.<anonymous> (/tmp/tmpdpgpiuin.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = a.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n        var\
    \ bSum = b.toString().split('').reduce(function(sum, num){\n            return\
    \ sum + parseInt(num);\n        }, 0);\n        if(aSum === bSum){\n         \
    \   return a - b;\n        }\n        return aSum - bSum;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpxe5jkw0q.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxe5jkw0q.js:38:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var new_arr = [];\n    var new_arr2 = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        var num = nums[i];\n        while(num\
    \ > 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        new_arr.push(sum);\n        sum = 0;\n    }\n    for(var j\
    \ = 0; j < new_arr.length; j++){\n        var min = new_arr[j];\n        var index\
    \ = j;\n        for(var k = j; k < new_arr.length; k++){\n            if(new_arr[k]\
    \ < min){\n                min = new_arr[k];\n                index = k;\n   \
    \         }\n        }\n        var temp = new_arr[j];\n        new_arr[j] = min;\n\
    \        new_arr[index] = temp;\n        new_arr2.push(nums[index]);\n    }\n\
    \    return new_arr2;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, -12, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp1visy7vp.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1visy7vp.js:53:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, -12, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length == 0){\n        return [];\n    }\n    let sum = 0;\n    let\
    \ arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n   \
    \     let num = nums[i];\n        while(num > 0){\n            sum += num % 10;\n\
    \            num = Math.floor(num / 10);\n        }\n        arr.push([sum, i]);\n\
    \    }\n    arr.sort(function(a, b){\n        if(a[0] == b[0]){\n            return\
    \ a[1] - b[1];\n        }\n        return a[0] - b[0];\n    });\n    let res =\
    \ [];\n    for(let i = 0; i < arr.length; i++){\n        res.push(nums[arr[i][1]]);\n\
    \    }\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp6x15ggi1.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6x15ggi1.js:51:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    var sorted = [];\n    for(var i = 0; i < sums.length; i++){\n    \
    \    var min = Math.min.apply(null, sums);\n        sorted.push(nums[sums.indexOf(min)]);\n\
    \        sums[sums.indexOf(min)] = Infinity;\n    }\n    return sorted;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined, undefined,\
    \ undefined ]\n\nshould equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp4jvo59g1.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4jvo59g1.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined,\
    \ undefined ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var nums_sum = [];\n    for(var i = 0; i < nums.length; i++){\n        var\
    \ sum = 0;\n        var num = nums[i];\n        while(num > 0){\n            sum\
    \ += num % 10;\n            num = Math.floor(num / 10);\n        }\n        nums_sum.push([sum,\
    \ i]);\n    }\n    nums_sum.sort(function(a, b){\n        if(a[0] < b[0]){\n \
    \           return -1;\n        }\n        else if(a[0] > b[0]){\n           \
    \ return 1;\n        }\n        else{\n            if(a[1] < b[1]){\n        \
    \        return -1;\n            }\n            else if(a[1] > b[1]){\n      \
    \          return 1;\n            }\n            else{\n                return\
    \ 0;\n            }\n        }\n    });\n    var result = [];\n    for(var i =\
    \ 0; i < nums_sum.length; i++){\n        result.push(nums[nums_sum[i][1]]);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpwk99xw4z.js:52:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwk99xw4z.js:60:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sumDigits(a) - sumDigits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzoel0y8t.js:12\n        return sumDigits(a) - sumDigits(b);\n \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpzoel0y8t.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpzoel0y8t.js:11:17)\n\
    \    at test (/tmp/tmpzoel0y8t.js:21:20)\n    at Object.<anonymous> (/tmp/tmpzoel0y8t.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var nums_sorted = nums.sort(function(a, b){\n        var a_sum = sum_of_digits(a);\n\
    \        var b_sum = sum_of_digits(b);\n        if (a_sum < b_sum){\n        \
    \    return -1;\n        }\n        else if (a_sum > b_sum){\n            return\
    \ 1;\n        }\n        else{\n            return a - b;\n        }\n    });\n\
    \    return nums_sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8gh4vu_u.js:12\n        var a_sum = sum_of_digits(a);\n       \
    \             ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp8gh4vu_u.js:12:21\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp8gh4vu_u.js:11:28)\n\
    \    at test (/tmp/tmp8gh4vu_u.js:32:20)\n    at Object.<anonymous> (/tmp/tmp8gh4vu_u.js:40:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    var result = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sums.push(sum);\n    }\n    for(var i = 0; i < sums.length; i++){\n     \
    \   var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        result.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpf8zkoh1w.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf8zkoh1w.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n    \
    \    var sumB = sumDigits(b);\n        if(sumA > sumB){\n            return 1;\n\
    \        }\n        else if(sumA < sumB){\n            return -1;\n        }\n\
    \        else{\n            return 0;\n        }\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpuxqo662b.js:12\n        var sumA = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpuxqo662b.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpuxqo662b.js:11:17)\n\
    \    at test (/tmp/tmpuxqo662b.js:31:20)\n    at Object.<anonymous> (/tmp/tmpuxqo662b.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    var sumArr = [];\n    for(var i =\
    \ 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sumArr.push(sum);\n    }\n    for(var i = 0; i < sumArr.length; i++){\n \
    \       var min = Math.min.apply(null, sumArr);\n        var index = sumArr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sumArr.splice(index, 1);\n       \
    \ nums.splice(index, 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpz_ne4471.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz_ne4471.js:43:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    var result = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        var min = Math.min.apply(null, sum_array);\n        var index\
    \ = sum_array.indexOf(min);\n        result.push(nums[index]);\n        sum_array.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp7y6wn1eo.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7y6wn1eo.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    var new_nums = [];\n    for(var i =\
    \ 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sums.push(sum);\n    }\n    for(var i = 0; i < sums.length; i++){\n     \
    \   for(var j = 0; j < sums.length; j++){\n            if(sums[i] < sums[j]){\n\
    \                var temp = sums[i];\n                sums[i] = sums[j];\n   \
    \             sums[j] = temp;\n                temp = nums[i];\n             \
    \   nums[i] = nums[j];\n                nums[j] = temp;\n            }\n     \
    \   }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpevor46b9.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpevor46b9.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprmv22a89.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmprmv22a89.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmprmv22a89.js:11:17)\n\
    \    at test (/tmp/tmprmv22a89.js:21:20)\n    at Object.<anonymous> (/tmp/tmprmv22a89.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    let temp = 0;\n    for(let i = 0; i < arr.length; i++){\n        for(let\
    \ j = i + 1; j < arr.length; j++){\n            if(arr[i] > arr[j]){\n       \
    \         temp = arr[i];\n                arr[i] = arr[j];\n                arr[j]\
    \ = temp;\n                temp = nums[i];\n                nums[i] = nums[j];\n\
    \                nums[j] = temp;\n            }\n        }\n    }\n    return\
    \ nums;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpl9mcfr9k.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl9mcfr9k.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp2df3bam0.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp2df3bam0.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp2df3bam0.js:11:17)\n\
    \    at test (/tmp/tmp2df3bam0.js:21:20)\n    at Object.<anonymous> (/tmp/tmp2df3bam0.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sumArray = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sumArray.push(sum);\n    }\n    var temp;\n    for(var i = 0; i < sumArray.length;\
    \ i++){\n        for(var j = i + 1; j < sumArray.length; j++){\n            if(sumArray[i]\
    \ > sumArray[j]){\n                temp = sumArray[i];\n                sumArray[i]\
    \ = sumArray[j];\n                sumArray[j] = temp;\n                temp =\
    \ nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp;\n\
    \            }\n        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpsp83pbps.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpsp83pbps.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if (nums.length === 0) {\n        return [];\n    }\n    return nums.map(function(num,\
    \ index) {\n        return {\n            index: index,\n            sum: sum_digits(num)\n\
    \        };\n    }).sort(function(a, b) {\n        return a.sum - b.sum;\n   \
    \ }).map(function(item) {\n        return nums[item.index];\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpn9l1u2dj.js:17\n            sum: sum_digits(num)\n            \
    \     ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpn9l1u2dj.js:17:18\n\
    \    at Array.map (<anonymous>)\n    at order_by_points (/tmp/tmpn9l1u2dj.js:14:17)\n\
    \    at test (/tmp/tmpn9l1u2dj.js:31:20)\n    at Object.<anonymous> (/tmp/tmpn9l1u2dj.js:39:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sums = [];\n    var result = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var sum = 0;\n        var num = nums[i];\n        while(num >\
    \ 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        sums.push(sum);\n    }\n    for(var i = 0; i < sums.length;\
    \ i++){\n        var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        result.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmpmkeug89d.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmkeug89d.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = a.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n        var\
    \ sumB = b.toString().split('').reduce(function(sum, num){\n            return\
    \ sum + parseInt(num);\n        }, 0);\n        return sumA - sumB;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp79orbjkb.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp79orbjkb.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = sumDigits(a);\n    \
    \    var bSum = sumDigits(b);\n        if (aSum === bSum){\n            return\
    \ a - b;\n        }\n        return aSum - bSum;\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpj080mhj2.js:12\n        var aSum = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmpj080mhj2.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpj080mhj2.js:11:17)\n\
    \    at test (/tmp/tmpj080mhj2.js:26:20)\n    at Object.<anonymous> (/tmp/tmpj080mhj2.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1z4y_rsv.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp1z4y_rsv.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp1z4y_rsv.js:11:17)\n\
    \    at test (/tmp/tmp1z4y_rsv.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1z4y_rsv.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    var arr2 = [];\n    for(var i = 0; i < arr.length; i++){\n       \
    \ for(var j = 0; j < arr.length; j++){\n            if(arr[i] < arr[j]){\n   \
    \             var temp = arr[i];\n                arr[i] = arr[j];\n         \
    \       arr[j] = temp;\n                var temp2 = nums[i];\n               \
    \ nums[i] = nums[j];\n                nums[j] = temp2;\n            }\n      \
    \  }\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpn_thber7.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpn_thber7.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sumArr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    var sortedArr = [];\n    for(var i = 0; i < sumArr.length; i++){\n\
    \        var min = Math.min.apply(null, sumArr);\n        var index = sumArr.indexOf(min);\n\
    \        sortedArr.push(nums[index]);\n        sumArr.splice(index, 1);\n    \
    \    nums.splice(index, 1);\n    }\n    return sortedArr;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpt81gndm4.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt81gndm4.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    var temp = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        var num = nums[i];\n     \
    \   while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        temp.push(sum);\n    }\n    var min = temp[0];\n\
    \    var index = 0;\n    for(var i = 0; i < temp.length; i++){\n        min =\
    \ temp[i];\n        index = i;\n        for(var j = i + 1; j < temp.length; j++){\n\
    \            if(temp[j] < min){\n                min = temp[j];\n            \
    \    index = j;\n            }\n        }\n        var tempNum = nums[i];\n  \
    \      nums[i] = nums[index];\n        nums[index] = tempNum;\n        var tempSum\
    \ = temp[i];\n        temp[i] = temp[index];\n        temp[index] = tempSum;\n\
    \    }\n    return nums;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp6kt33d4s.js:48:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6kt33d4s.js:56:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpqh8mm0jb.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpqh8mm0jb.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpqh8mm0jb.js:11:17)\n\
    \    at test (/tmp/tmpqh8mm0jb.js:21:20)\n    at Object.<anonymous> (/tmp/tmpqh8mm0jb.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    var arr2 = [];\n    var arr3 = [];\n\
    \    var arr4 = [];\n    var arr5 = [];\n    var arr6 = [];\n    var arr7 = [];\n\
    \    var arr8 = [];\n    var arr9 = [];\n    var arr10 = [];\n    var arr11 =\
    \ [];\n    var arr12 = [];\n    var arr13 = [];\n    var arr14 = [];\n    var\
    \ arr15 = [];\n    var arr16 = [];\n    var arr17 = [];\n    var arr18 = [];\n\
    \    var arr19 = [];\n    var arr20 = [];\n    var arr21 = [];\n    var arr22\
    \ = [];\n    var arr23 = [];\n    var arr24 = [];\n    var arr25 = [];\n    var\
    \ arr26 = [];\n    var arr27 = [];\n    var arr28 = [];\n    var arr29 = [];\n\
    \    var arr30 = [];\n    var arr31 = [];\n    var arr32 = [];\n    var arr33\
    \ = [];\n    var arr34 = [];\n    var arr35 = [];\n    var arr36 = [];\n    var\
    \ arr37 = [];\n    var arr38 = [];\n    var arr39 = [];\n    var arr40 = [];\n\
    \    var arr41 = [];\n    var arr42 = [];\n    var arr43 = [];\n    var arr44\
    \ = [];\n    var arr45 = [];\n    var arr46 = [];\n    var arr47 = [];\n    var\
    \ arr48 = [];\n    var arr49 = [];\n    var arr50 = [];\n    var arr51 = [];\n\
    \    var arr52 = [];\n    var arr53 = [];\n    var arr54 = [];\n    var arr55\
    \ = [];\n    var arr56 = [];\n    var arr57 = [];\n    var arr58 = [];\n    var\
    \ arr59 = [];\n    var arr60 = [];\n    var arr61 = [];\n    var arr62 = [];\n\
    \    var arr63 = [];\n    var arr64 = [];\n    var arr65 = [];\n    var arr66\
    \ = [];\n    var arr67 = [];\n    var arr68 = [];\n    var arr69 = [];\n    var\
    \ arr70 = [];\n    var arr71 = [];\n    var arr72 = [];\n   \nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8c3m_wib.js:98\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        if(sum_digits(a) > sum_digits(b)){\n\
    \            return 1;\n        }\n        else if(sum_digits(a) < sum_digits(b)){\n\
    \            return -1;\n        }\n        else{\n            return 0;\n   \
    \     }\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpcaqb3db8.js:12\n        if(sum_digits(a) > sum_digits(b)){\n  \
    \      ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpcaqb3db8.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpcaqb3db8.js:11:17)\n\
    \    at test (/tmp/tmpcaqb3db8.js:29:20)\n    at Object.<anonymous> (/tmp/tmpcaqb3db8.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length == 0){\n        return [];\n    }\n    var sum = [];\n   \
    \ for(var i = 0; i < nums.length; i++){\n        var temp = 0;\n        var num\
    \ = nums[i];\n        while(num != 0){\n            temp += num % 10;\n      \
    \      num = Math.floor(num / 10);\n        }\n        sum.push(temp);\n    }\n\
    \    var result = [];\n    for(var i = 0; i < nums.length; i++){\n        var\
    \ min = sum[0];\n        var index = 0;\n        for(var j = 0; j < sum.length;\
    \ j++){\n            if(sum[j] < min){\n                min = sum[j];\n      \
    \          index = j;\n            }\n        }\n        result.push(nums[index]);\n\
    \        sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: -1
  status: Timeout
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmleujbn5.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpmleujbn5.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpmleujbn5.js:11:17)\n\
    \    at test (/tmp/tmpmleujbn5.js:21:20)\n    at Object.<anonymous> (/tmp/tmpmleujbn5.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        var num = nums[i];\n        while(num > 0){\n     \
    \       sum += num % 10;\n            num = Math.floor(num / 10);\n        }\n\
    \        arr.push(sum);\n    }\n    var sorted = [];\n    for(var i = 0; i < arr.length;\
    \ i++){\n        var min = Math.min.apply(null, arr);\n        var index = arr.indexOf(min);\n\
    \        sorted.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmp_1d98csy.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp_1d98csy.js:46:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum = 0;\n   \
    \ let arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        let num = nums[i].toString();\n        for(let j = 0; j < num.length;\
    \ j++){\n            sum += parseInt(num[j]);\n        }\n        arr.push([nums[i],\
    \ sum, i]);\n    }\n    arr.sort(function(a, b){\n        if(a[1] === b[1]){\n\
    \            return a[2] - b[2];\n        }\n        return a[1] - b[1];\n   \
    \ });\n    for(let i = 0; i < arr.length; i++){\n        arr[i] = arr[i][0];\n\
    \    }\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpcnnjlmli.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpcnnjlmli.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var result = [];\n    var sum = 0;\n    var sum_array = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        var min = Math.min.apply(null, sum_array);\n        var min_index\
    \ = sum_array.indexOf(min);\n        result.push(nums[min_index]);\n        sum_array[min_index]\
    \ = Infinity;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined, undefined,\
    \ undefined ]\n\nshould equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp_68xwr3c.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_68xwr3c.js:43:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, undefined,\
    \ undefined ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sumArr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    for(var i = 0; i < sumArr.length; i++){\n        for(var j = i + 1;\
    \ j < sumArr.length; j++){\n            if(sumArr[i] > sumArr[j]){\n         \
    \       var temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n      \
    \          sumArr[j] = temp;\n                temp = nums[i];\n              \
    \  nums[i] = nums[j];\n                nums[j] = temp;\n            }\n      \
    \  }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp8cuq7uv9.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8cuq7uv9.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = sum_of_digits(a);\n\
    \        var bSum = sum_of_digits(b);\n        if (aSum === bSum){\n         \
    \   return a - b;\n        }\n        return aSum - bSum;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp6pvle1xg.js:12\n        var aSum = sum_of_digits(a);\n        \
    \           ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp6pvle1xg.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp6pvle1xg.js:11:17)\n\
    \    at test (/tmp/tmp6pvle1xg.js:26:20)\n    at Object.<anonymous> (/tmp/tmp6pvle1xg.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = a.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n        var\
    \ bSum = b.toString().split('').reduce(function(sum, num){\n            return\
    \ sum + parseInt(num);\n        }, 0);\n        if(aSum === bSum){\n         \
    \   return a - b;\n        }\n        return aSum - bSum;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp6e286g9q.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp6e286g9q.js:38:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n    \
    \    var sumB = sumDigits(b);\n        if(sumA === sumB){\n            return\
    \ a - b;\n        }\n        return sumA - sumB;\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmps9rw9lv8.js:12\n        var sumA = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmps9rw9lv8.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmps9rw9lv8.js:11:17)\n\
    \    at test (/tmp/tmps9rw9lv8.js:26:20)\n    at Object.<anonymous> (/tmp/tmps9rw9lv8.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        var num = nums[i];\n        while(num > 0){\n            sum += num %\
    \ 10;\n            num = Math.floor(num / 10);\n        }\n        sums.push(sum);\n\
    \        sum = 0;\n    }\n    var sorted = [];\n    for(var i = 0; i < sums.length;\
    \ i++){\n        var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        sorted.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmp4w8igusr.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4w8igusr.js:46:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        for(var j = i + 1; j < sum_arr.length; j++){\n            if(sum_arr[i]\
    \ > sum_arr[j]){\n                var temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                temp = nums[i];\n\
    \                nums[i] = nums[j];\n                nums[j] = temp;\n       \
    \     }\n        }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmplz25n4h5.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplz25n4h5.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    var result = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length; i++){\n\
    \        for(var j = 0; j < sum_arr.length; j++){\n            if(sum_arr[i] <\
    \ sum_arr[j]){\n                var temp = sum_arr[i];\n                sum_arr[i]\
    \ = sum_arr[j];\n                sum_arr[j] = temp;\n                var temp2\
    \ = nums[i];\n                nums[i] = nums[j];\n                nums[j] = temp2;\n\
    \            }\n        }\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpafm_7gsc.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpafm_7gsc.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum = 0;\n   \
    \ let sumArr = [];\n    let result = [];\n    for(let i = 0; i < nums.length;\
    \ i++){\n        if(nums[i] < 0){\n            sum = nums[i] * -1;\n        }else{\n\
    \            sum = nums[i];\n        }\n        sumArr.push(sum);\n    }\n   \
    \ let sortedSumArr = sumArr.sort((a, b) => a - b);\n    for(let i = 0; i < sortedSumArr.length;\
    \ i++){\n        for(let j = 0; j < nums.length; j++){\n            if(sortedSumArr[i]\
    \ === nums[j]){\n                result.push(nums[j]);\n            }\n      \
    \  }\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 1, 11, 11 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmp5nap67lg.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5nap67lg.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 1, 11,\
    \ 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    let temp = 0;\n    for(let i = 0; i < result.length; i++){\n     \
    \   for(let j = i + 1; j < result.length; j++){\n            if(result[i] > result[j]){\n\
    \                temp = result[i];\n                result[i] = result[j];\n \
    \               result[j] = temp;\n                temp = nums[i];\n         \
    \       nums[i] = nums[j];\n                nums[j] = temp;\n            }\n \
    \       }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpic_thkxi.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpic_thkxi.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n        sums.push(sum_digits(nums[i]));\n\
    \    }\n    var sorted = [];\n    for(var i = 0; i < sums.length; i++){\n    \
    \    var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        sorted.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpwj7j0vya.js:13\n        sums.push(sum_digits(nums[i]));\n     \
    \        ^\n\nReferenceError: sum_digits is not defined\n    at order_by_points\
    \ (/tmp/tmpwj7j0vya.js:13:14)\n    at test (/tmp/tmpwj7j0vya.js:31:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpwj7j0vya.js:39:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        var num = nums[i];\n        var num_str = num.toString();\n        for(var\
    \ j = 0; j < num_str.length; j++){\n            sum += parseInt(num_str[j]);\n\
    \        }\n        result.push([sum, num]);\n        sum = 0;\n    }\n    result.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    var final_result = [];\n    for(var\
    \ k = 0; k < result.length; k++){\n        final_result.push(result[k][1]);\n\
    \    }\n    return final_result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpdgrrc9qj.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdgrrc9qj.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let result = [];\n\
    \    let sum = 0;\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n\
    \        let num = nums[i];\n        while(num > 0){\n            sum += num %\
    \ 10;\n            num = Math.floor(num / 10);\n        }\n        result.push({\n\
    \            index: i,\n            sum: sum,\n            num: nums[i]\n    \
    \    });\n    }\n    result.sort((a, b) => {\n        if(a.sum === b.sum){\n \
    \           return a.index - b.index;\n        }\n        return a.sum - b.sum;\n\
    \    });\n    let finalResult = [];\n    for(let i = 0; i < result.length; i++){\n\
    \        finalResult.push(result[i].num);\n    }\n    return finalResult;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp70uvaaj8.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp70uvaaj8.js:55:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var nums_sum = [];\n    var sum = 0;\n    var nums_sorted = [];\n    for\
    \ (var i = 0; i < nums.length; i++){\n        sum = 0;\n        for (var j = 0;\
    \ j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        nums_sum.push(sum);\n    }\n    for (var i = 0; i < nums.length;\
    \ i++){\n        var min = Math.min.apply(null, nums_sum);\n        var min_index\
    \ = nums_sum.indexOf(min);\n        nums_sorted.push(nums[min_index]);\n     \
    \   nums_sum.splice(min_index, 1);\n        nums.splice(min_index, 1);\n    }\n\
    \    return nums_sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpeojdlros.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpeojdlros.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    var newArr = [];\n    for(var i = 0; i < arr.length; i++){\n     \
    \   var min = Math.min.apply(null, arr);\n        var index = arr.indexOf(min);\n\
    \        newArr.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return newArr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpgvj4qd8c.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgvj4qd8c.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum = [];\n  \
    \  for(let i = 0; i < nums.length; i++){\n        let temp = nums[i];\n      \
    \  let total = 0;\n        while(temp > 0){\n            total += temp % 10;\n\
    \            temp = Math.floor(temp / 10);\n        }\n        sum.push(total);\n\
    \    }\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n    \
    \    let min = Math.min(...sum);\n        let index = sum.indexOf(min);\n    \
    \    result.push(nums[index]);\n        sum.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmpx0xbfc_d.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpx0xbfc_d.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum = [];\n  \
    \  for(let i = 0; i < nums.length; i++){\n        let total = 0;\n        let\
    \ num = nums[i].toString();\n        for(let j = 0; j < num.length; j++){\n  \
    \          total += parseInt(num[j]);\n        }\n        sum.push(total);\n \
    \   }\n    let result = [];\n    for(let i = 0; i < sum.length; i++){\n      \
    \  let min = Math.min(...sum);\n        let index = sum.indexOf(min);\n      \
    \  result.push(nums[index]);\n        sum.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpm6atz01v.js:39:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm6atz01v.js:47:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    var result = [];\n    for(var i = 0; i < sum_arr.length;\
    \ i++){\n        var min = Math.min.apply(null, sum_arr);\n        var index =\
    \ sum_arr.indexOf(min);\n        result.push(nums[index]);\n        sum_arr.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpd92ikn4u.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd92ikn4u.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    return nums.sort(function(a,\
    \ b){\n        var sumA = 0;\n        var sumB = 0;\n        var aStr = a.toString();\n\
    \        var bStr = b.toString();\n        for(var i = 0; i < aStr.length; i++){\n\
    \            sumA += parseInt(aStr[i]);\n        }\n        for(var j = 0; j <\
    \ bStr.length; j++){\n            sumB += parseInt(bStr[j]);\n        }\n    \
    \    if(sumA === sumB){\n            return a - b;\n        }\n        return\
    \ sumA - sumB;\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpq7sd9k6l.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpq7sd9k6l.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp72u0pg9a.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp72u0pg9a.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp72u0pg9a.js:11:17)\n\
    \    at test (/tmp/tmp72u0pg9a.js:21:20)\n    at Object.<anonymous> (/tmp/tmp72u0pg9a.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push(sum);\n\
    \    }\n    var temp;\n    for(var i = 0; i < result.length; i++){\n        for(var\
    \ j = i + 1; j < result.length; j++){\n            if(result[i] > result[j]){\n\
    \                temp = result[i];\n                result[i] = result[j];\n \
    \               result[j] = temp;\n                temp = nums[i];\n         \
    \       nums[i] = nums[j];\n                nums[j] = temp;\n            }\n \
    \       }\n    }\n    return nums;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmprf8ausjn.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprf8ausjn.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = a.toString().split('').reduce(function(a,\
    \ b){\n            return parseInt(a) + parseInt(b);\n        });\n        var\
    \ sumB = b.toString().split('').reduce(function(a, b){\n            return parseInt(a)\
    \ + parseInt(b);\n        });\n        return sumA - sumB;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp17zarvcq.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp17zarvcq.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = 0;\n        var sumB\
    \ = 0;\n        var aString = a.toString();\n        var bString = b.toString();\n\
    \        for(var i = 0; i < aString.length; i++){\n            sumA += parseInt(aString[i]);\n\
    \        }\n        for(var i = 0; i < bString.length; i++){\n            sumB\
    \ += parseInt(bString[i]);\n        }\n        if(sumA > sumB){\n            return\
    \ 1;\n        }\n        else if(sumA < sumB){\n            return -1;\n     \
    \   }\n        else{\n            return 0;\n        }\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp74hpmsoq.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp74hpmsoq.js:47:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var nums_sum = [];\n    var nums_sum_sorted = [];\n    var nums_sorted =\
    \ [];\n    var sum = 0;\n    var num = 0;\n    for (var i = 0; i < nums.length;\
    \ i++){\n        num = nums[i];\n        sum = 0;\n        while (num > 0){\n\
    \            sum += num % 10;\n            num = Math.floor(num / 10);\n     \
    \   }\n        nums_sum.push(sum);\n    }\n    nums_sum_sorted = nums_sum.slice().sort(function(a,\
    \ b){return a - b});\n    for (var i = 0; i < nums_sum_sorted.length; i++){\n\
    \        for (var j = 0; j < nums_sum.length; j++){\n            if (nums_sum_sorted[i]\
    \ == nums_sum[j]){\n                nums_sorted.push(nums[j]);\n             \
    \   nums_sum[j] = -1;\n                break;\n            }\n        }\n    }\n\
    \    return nums_sorted;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpplgcxinc.js:43:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpplgcxinc.js:51:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    // your code here\n    return nums.sort((a, b) => {\n        let sumA = a.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n        let sumB = b.toString().split('').reduce((acc,\
    \ cur) => acc + Number(cur), 0);\n        if (sumA === sumB) {\n            return\
    \ nums.indexOf(a) - nums.indexOf(b);\n        }\n        return sumA - sumB;\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmprvmtag_q.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmprvmtag_q.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push([sum,\
    \ nums[i]]);\n    }\n    result.sort(function(a, b){\n        if(a[0] < b[0]){\n\
    \            return -1;\n        }\n        if(a[0] > b[0]){\n            return\
    \ 1;\n        }\n        if(a[0] === b[0]){\n            if(a[1] < b[1]){\n  \
    \              return -1;\n            }\n            if(a[1] > b[1]){\n     \
    \           return 1;\n            }\n        }\n    });\n    for(let i = 0; i\
    \ < result.length; i++){\n        result[i] = result[i][1];\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmph7xt3tlk.js:47:10)\n    at Object.<anonymous>\
    \ (/tmp/tmph7xt3tlk.js:55:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let result = [];\n    let sum = 0;\n    let sum_arr = [];\n    for(let i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(let j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    for(let i = 0; i < sum_arr.length; i++){\n\
    \        let min = sum_arr[i];\n        let min_index = i;\n        for(let j\
    \ = i + 1; j < sum_arr.length; j++){\n            if(sum_arr[j] < min){\n    \
    \            min = sum_arr[j];\n                min_index = j;\n            }\n\
    \        }\n        let temp = sum_arr[i];\n        sum_arr[i] = sum_arr[min_index];\n\
    \        sum_arr[min_index] = temp;\n        temp = nums[i];\n        nums[i]\
    \ = nums[min_index];\n        nums[min_index] = temp;\n    }\n    return nums;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpjl1k6u5f.js:45:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpjl1k6u5f.js:53:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = nums.map(num => {\n        let sum = 0;\n        let num_str =\
    \ num.toString();\n        for (let i = 0; i < num_str.length; i++){\n       \
    \     sum += parseInt(num_str[i]);\n        }\n        return sum;\n    });\n\
    \    let result = [];\n    for (let i = 0; i < sum.length; i++){\n        let\
    \ min = Math.min(...sum);\n        let index = sum.indexOf(min);\n        result.push(nums[index]);\n\
    \        sum.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpo325d_r1.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo325d_r1.js:43:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_arr.push(sum);\n    }\n    var sorted_arr = [];\n    for(var i = 0; i\
    \ < sum_arr.length; i++){\n        var min = Math.min.apply(null, sum_arr);\n\
    \        var index = sum_arr.indexOf(min);\n        sorted_arr.push(nums[index]);\n\
    \        sum_arr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n  \
    \  return sorted_arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpnntep3k0.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnntep3k0.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    var newArr = [];\n    var min = Math.min.apply(null, arr);\n    var\
    \ index = arr.indexOf(min);\n    newArr.push(nums[index]);\n    arr.splice(index,\
    \ 1);\n    nums.splice(index, 1);\n    while(arr.length > 0){\n        min = Math.min.apply(null,\
    \ arr);\n        index = arr.indexOf(min);\n        newArr.push(nums[index]);\n\
    \        arr.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ newArr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined, 1, 11\
    \ ]\n\nshould equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp34pm8f56.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmp34pm8f56.js:49:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, 1, 11\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = 0;\n        var bSum\
    \ = 0;\n        var aString = a.toString();\n        var bString = b.toString();\n\
    \        for(var i = 0; i < aString.length; i++){\n            aSum += parseInt(aString[i]);\n\
    \        }\n        for(var j = 0; j < bString.length; j++){\n            bSum\
    \ += parseInt(bString[j]);\n        }\n        if(aSum < bSum){\n            return\
    \ -1;\n        }\n        else if(aSum > bSum){\n            return 1;\n     \
    \   }\n        else{\n            return 0;\n        }\n    });\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp0pf0gnj1.js:39:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0pf0gnj1.js:47:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sums = nums.map(function(num){\n        let sum = 0;\n        while(num\
    \ > 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        return sum;\n    });\n    let result = [];\n    for(let i\
    \ = 0; i < nums.length; i++){\n        let min = Math.min(...sums);\n        let\
    \ index = sums.indexOf(min);\n        result.push(nums[index]);\n        sums[index]\
    \ = Infinity;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp08rd1svh.js:34:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp08rd1svh.js:42:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    var result = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        var num = nums[i].toString();\n\
    \        for(var j = 0; j < num.length; j++){\n            sum += parseInt(num[j]);\n\
    \        }\n        sums.push(sum);\n    }\n    for(var i = 0; i < sums.length;\
    \ i++){\n        var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        result.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmparyepju_.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmparyepju_.js:45:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpik0wqmiq.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpik0wqmiq.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpik0wqmiq.js:11:17)\n\
    \    at test (/tmp/tmpik0wqmiq.js:21:20)\n    at Object.<anonymous> (/tmp/tmpik0wqmiq.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if (nums.length === 0) {\n        return [];\n    }\n    let result = [];\n\
    \    let sum = 0;\n    let nums_sum = [];\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        sum = 0;\n        for (let j = 0; j < nums[i].toString().length;\
    \ j++) {\n            sum += parseInt(nums[i].toString()[j]);\n        }\n   \
    \     nums_sum.push(sum);\n    }\n    let min = Math.min(...nums_sum);\n    let\
    \ index = nums_sum.indexOf(min);\n    result.push(nums[index]);\n    nums.splice(index,\
    \ 1);\n    nums_sum.splice(index, 1);\n    return result.concat(order_by_points(nums));\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined, 1, 11\
    \ ]\n\nshould equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp7o88k8wu.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7o88k8wu.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, 1, 11\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    var sum_array = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        var num = nums[i].toString();\n\
    \        for(var j = 0; j < num.length; j++){\n            sum += parseInt(num[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        var min = sum_array[i];\n        var index = i;\n        for(var\
    \ j = i; j < sum_array.length; j++){\n            if(sum_array[j] < min){\n  \
    \              min = sum_array[j];\n                index = j;\n            }\n\
    \        }\n        var temp = sum_array[i];\n        sum_array[i] = sum_array[index];\n\
    \        sum_array[index] = temp;\n        result.push(nums[index]);\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpp4bucve5.js:44:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpp4bucve5.js:52:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    var sumArr = [];\n    var indexArr\
    \ = [];\n    for(var i = 0; i < nums.length; i++){\n        sum = 0;\n       \
    \ var num = nums[i];\n        while(num > 0){\n            sum += num % 10;\n\
    \            num = Math.floor(num / 10);\n        }\n        sumArr.push(sum);\n\
    \        indexArr.push(i);\n    }\n    for(var i = 0; i < sumArr.length; i++){\n\
    \        for(var j = i + 1; j < sumArr.length; j++){\n            if(sumArr[i]\
    \ > sumArr[j]){\n                var temp = sumArr[i];\n                sumArr[i]\
    \ = sumArr[j];\n                sumArr[j] = temp;\n                temp = indexArr[i];\n\
    \                indexArr[i] = indexArr[j];\n                indexArr[j] = temp;\n\
    \            }\n        }\n    }\n    for(var i = 0; i < indexArr.length; i++){\n\
    \        result.push(nums[indexArr[i]]);\n    }\n    return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpqs372ek4.js:48:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqs372ek4.js:56:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpm5bhycsb.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpm5bhycsb.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpm5bhycsb.js:11:17)\n\
    \    at test (/tmp/tmpm5bhycsb.js:21:20)\n    at Object.<anonymous> (/tmp/tmpm5bhycsb.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = a.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n        var\
    \ bSum = b.toString().split('').reduce(function(sum, num){\n            return\
    \ sum + parseInt(num);\n        }, 0);\n        if(aSum === bSum){\n         \
    \   return a - b;\n        }\n        return aSum - bSum;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpj9dw5avg.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpj9dw5avg.js:38:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    var result = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        var num = nums[i];\n\
    \        while(num > 0){\n            sum += num % 10;\n            num = Math.floor(num\
    \ / 10);\n        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i\
    \ < sum_array.length; i++){\n        var min = Math.min.apply(null, sum_array);\n\
    \        var index = sum_array.indexOf(min);\n        result.push(nums[index]);\n\
    \        sum_array[index] = Infinity;\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpv338waiz.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpv338waiz.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = a.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n        var\
    \ bSum = b.toString().split('').reduce(function(sum, num){\n            return\
    \ sum + parseInt(num);\n        }, 0);\n        if(aSum === bSum){\n         \
    \   return a - b;\n        }\n        return aSum - bSum;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpuywwmf7s.js:30:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpuywwmf7s.js:38:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let new_nums = nums.map(function(num){\n\
    \        let sum = 0;\n        let num_str = num.toString();\n        for(let\
    \ i = 0; i < num_str.length; i++){\n            sum += parseInt(num_str[i]);\n\
    \        }\n        return [num, sum];\n    });\n    new_nums.sort(function(a,\
    \ b){\n        if(a[1] === b[1]){\n            return a[0] - b[0];\n        }\n\
    \        return a[1] - b[1];\n    });\n    return new_nums.map(function(num){\n\
    \        return num[0];\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpfl01nb9q.js:38:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfl01nb9q.js:46:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp_p_abk01.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmp_p_abk01.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp_p_abk01.js:11:17)\n\
    \    at test (/tmp/tmp_p_abk01.js:21:20)\n    at Object.<anonymous> (/tmp/tmp_p_abk01.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    var sum_array = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        var min = Math.min.apply(null, sum_array);\n        var index\
    \ = sum_array.indexOf(min);\n        result.push(nums[index]);\n        sum_array.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpmfic8toz.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmfic8toz.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sum_a = a.toString().split('').reduce(function(sum,\
    \ num){\n            return sum + parseInt(num);\n        }, 0);\n        var\
    \ sum_b = b.toString().split('').reduce(function(sum, num){\n            return\
    \ sum + parseInt(num);\n        }, 0);\n        return sum_a - sum_b;\n    });\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpr8pzbck4.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr8pzbck4.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpl7lflgtf.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpl7lflgtf.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpl7lflgtf.js:11:17)\n\
    \    at test (/tmp/tmpl7lflgtf.js:21:20)\n    at Object.<anonymous> (/tmp/tmpl7lflgtf.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    var result = [];\n    var min = Math.min.apply(null, sums);\n    var\
    \ index = sums.indexOf(min);\n    result.push(nums[index]);\n    sums.splice(index,\
    \ 1);\n    nums.splice(index, 1);\n    while(nums.length > 0){\n        min =\
    \ Math.min.apply(null, sums);\n        index = sums.indexOf(min);\n        result.push(nums[index]);\n\
    \        sums.splice(index, 1);\n        nums.splice(index, 1);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined, 1, 11\
    \ ]\n\nshould equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp97co9k42.js:41:10)\n\
    \    at Object.<anonymous> (/tmp/tmp97co9k42.js:49:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined, 1, 11\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum_of_digits\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        let sum = 0;\n   \
    \     let num = nums[i];\n        while(num > 0){\n            sum += num % 10;\n\
    \            num = Math.floor(num / 10);\n        }\n        sum_of_digits.push(sum);\n\
    \    }\n    for(let i = 0; i < nums.length; i++){\n        for(let j = i + 1;\
    \ j < nums.length; j++){\n            if(sum_of_digits[i] > sum_of_digits[j]){\n\
    \                let temp = sum_of_digits[i];\n                sum_of_digits[i]\
    \ = sum_of_digits[j];\n                sum_of_digits[j] = temp;\n            \
    \    temp = nums[i];\n                nums[i] = nums[j];\n                nums[j]\
    \ = temp;\n            }\n        }\n    }\n    return nums;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpwatalvpb.js:44:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwatalvpb.js:52:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sum_digits(a);\n   \
    \     var sumB = sum_digits(b);\n        if (sumA === sumB){\n            return\
    \ a - b;\n        }\n        return sumA - sumB;\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph0wfptv6.js:12\n        var sumA = sum_digits(a);\n           \
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmph0wfptv6.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmph0wfptv6.js:11:17)\n\
    \    at test (/tmp/tmph0wfptv6.js:26:20)\n    at Object.<anonymous> (/tmp/tmph0wfptv6.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length == 0){\n        return [];\n    }\n    var result = [];\n\
    \    var sum = 0;\n    var index = 0;\n    var num = 0;\n    for(var i = 0; i\
    \ < nums.length; i++){\n        num = nums[i];\n        sum = 0;\n        while(num\
    \ > 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        result.push([sum, i]);\n    }\n    result.sort(function(a,\
    \ b){\n        if(a[0] < b[0]){\n            return -1;\n        }\n        else\
    \ if(a[0] > b[0]){\n            return 1;\n        }\n        else if(a[1] < b[1]){\n\
    \            return -1;\n        }\n        else if(a[1] > b[1]){\n          \
    \  return 1;\n        }\n        else{\n            return 0;\n        }\n   \
    \ });\n    for(var i = 0; i < result.length; i++){\n        result[i] = nums[result[i][1]];\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp0p5f4e_g.js:55:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0p5f4e_g.js:63:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var result = [];\n    var sum = 0;\n    var sum_list = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_list.push(sum);\n    }\n    for(var i = 0; i < sum_list.length; i++){\n\
    \        var min = Math.min.apply(null, sum_list);\n        var index = sum_list.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum_list.splice(index, 1);\n     \
    \   nums.splice(index, 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp6d8i5o3u.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6d8i5o3u.js:43:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var num = nums[i];\n        while(num > 0){\n            sum\
    \ += num % 10;\n            num = Math.floor(num / 10);\n        }\n        sum_arr.push(sum);\n\
    \        sum = 0;\n    }\n    var result = [];\n    for(var i = 0; i < sum_arr.length;\
    \ i++){\n        var min = Math.min.apply(null, sum_arr);\n        var index =\
    \ sum_arr.indexOf(min);\n        result.push(nums[index]);\n        sum_arr[index]\
    \ = Infinity;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpdlycn337.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpdlycn337.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let sum = 0;\n   \
    \ let sum_arr = [];\n    for(let i = 0; i < nums.length; i++){\n        sum =\
    \ 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n          \
    \  sum += parseInt(nums[i].toString()[j]);\n        }\n        sum_arr.push(sum);\n\
    \    }\n    let temp = 0;\n    for(let i = 0; i < sum_arr.length; i++){\n    \
    \    for(let j = 0; j < sum_arr.length - 1; j++){\n            if(sum_arr[j] >\
    \ sum_arr[j + 1]){\n                temp = sum_arr[j];\n                sum_arr[j]\
    \ = sum_arr[j + 1];\n                sum_arr[j + 1] = temp;\n                temp\
    \ = nums[j];\n                nums[j] = nums[j + 1];\n                nums[j +\
    \ 1] = temp;\n            }\n        }\n    }\n    return nums;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpmckplnkw.js:44:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpmckplnkw.js:52:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1_gk6rze.js:12\n        return sum_of_digits(a) - sum_of_digits(b);\n\
    \        ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmp1_gk6rze.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp1_gk6rze.js:11:17)\n\
    \    at test (/tmp/tmp1_gk6rze.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1_gk6rze.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sums.push(sum);\n\
    \    }\n    var result = [];\n    for(var i = 0; i < sums.length; i++){\n    \
    \    var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        result.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpzzrxlnaa.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzzrxlnaa.js:43:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    var result = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sums.push(sum);\n    }\n    var sorted = sums.slice().sort();\n    for(var\
    \ i = 0; i < sorted.length; i++){\n        result.push(nums[sums.indexOf(sorted[i])]);\n\
    \        sums[sums.indexOf(sorted[i])] = -1;\n    }\n    return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, undefined, undefined, undefined\
    \ ]\n\nshould equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpk2e2b73t.js:34:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk2e2b73t.js:42:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, undefined, undefined, undefined\
    \ ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let result = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        result.push([nums[i],\
    \ sum]);\n    }\n    result.sort(function(a, b){\n        if(a[1] === b[1]){\n\
    \            return a[0] - b[0];\n        }\n        return a[1] - b[1];\n   \
    \ });\n    for(let i = 0; i < result.length; i++){\n        result[i] = result[i][0];\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpw0ehh56h.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpw0ehh56h.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    var result = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        for(var j = 0; j < sum_array.length; j++){\n            if(sum_array[i]\
    \ < sum_array[j]){\n                var temp = sum_array[i];\n               \
    \ sum_array[i] = sum_array[j];\n                sum_array[j] = temp;\n       \
    \         var temp2 = nums[i];\n                nums[i] = nums[j];\n         \
    \       nums[j] = temp2;\n            }\n        }\n    }\n    return nums;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpeg7z1gl4.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpeg7z1gl4.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    var result = [];\n    for(var\
    \ i = 0; i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j <\
    \ nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_array.push(sum);\n    }\n    for(var i = 0; i < sum_array.length;\
    \ i++){\n        var min = Math.min.apply(null, sum_array);\n        var index\
    \ = sum_array.indexOf(min);\n        result.push(nums[index]);\n        sum_array.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp4vgmewnb.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4vgmewnb.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var result = [];\n    var arr = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    result.push(sum);\n    }\n    for(var i = 0; i < result.length; i++){\n \
    \       arr.push([result[i], nums[i]]);\n    }\n    arr.sort(function(a, b){\n\
    \        return a[0] - b[0];\n    });\n    for(var i = 0; i < arr.length; i++){\n\
    \        arr[i] = arr[i][1];\n    }\n    return arr;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpr2j9urim.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpr2j9urim.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sum_digits(a);\n   \
    \     var sumB = sum_digits(b);\n        if (sumA > sumB) {\n            return\
    \ 1;\n        } else if (sumA < sumB) {\n            return -1;\n        } else\
    \ {\n            return 0;\n        }\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzwei9_07.js:12\n        var sumA = sum_digits(a);\n           \
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpzwei9_07.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpzwei9_07.js:11:17)\n\
    \    at test (/tmp/tmpzwei9_07.js:29:20)\n    at Object.<anonymous> (/tmp/tmpzwei9_07.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = sum_of_digits(a);\n\
    \        var bSum = sum_of_digits(b);\n        if (aSum < bSum) {\n          \
    \  return -1;\n        }\n        if (aSum > bSum) {\n            return 1;\n\
    \        }\n        return 0;\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplxnlnbrl.js:12\n        var aSum = sum_of_digits(a);\n        \
    \           ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmplxnlnbrl.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmplxnlnbrl.js:11:17)\n\
    \    at test (/tmp/tmplxnlnbrl.js:29:20)\n    at Object.<anonymous> (/tmp/tmplxnlnbrl.js:37:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    // your code here\n    let sum = 0;\n    let sum_arr = [];\n    let result\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n       \
    \ for(let j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_arr.push(sum);\n    }\n    for(let i = 0; i < sum_arr.length;\
    \ i++){\n        let min = Math.min(...sum_arr);\n        let index = sum_arr.indexOf(min);\n\
    \        result.push(nums[index]);\n        sum_arr.splice(index, 1);\n      \
    \  nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpsswxgqu6.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsswxgqu6.js:45:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    // your code here\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n[ -1, -11,\
    \ 1, -12, 11 ]\n    at test (/tmp/tmpl8k_ywrm.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpl8k_ywrm.js:27:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var aSum = a.toString().split('').reduce(function(a,\
    \ b){\n            return parseInt(a) + parseInt(b);\n        });\n        var\
    \ bSum = b.toString().split('').reduce(function(a, b){\n            return parseInt(a)\
    \ + parseInt(b);\n        });\n        return aSum - bSum;\n    });\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpwm64e3hi.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwm64e3hi.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if (nums.length === 0) {\n        return [];\n    }\n    let result = [];\n\
    \    let sum = [];\n    for (let i = 0; i < nums.length; i++) {\n        let temp\
    \ = 0;\n        let num = nums[i];\n        while (num > 0) {\n            temp\
    \ += num % 10;\n            num = Math.floor(num / 10);\n        }\n        sum.push(temp);\n\
    \    }\n    let min = sum[0];\n    let index = 0;\n    for (let i = 0; i < sum.length;\
    \ i++) {\n        if (sum[i] < min) {\n            min = sum[i];\n           \
    \ index = i;\n        }\n    }\n    result.push(nums[index]);\n    nums.splice(index,\
    \ 1);\n    sum.splice(index, 1);\n    return result.concat(order_by_points(nums));\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpy83bco9n.js:44:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpy83bco9n.js:52:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpe4l8nzix.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpe4l8nzix.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpe4l8nzix.js:11:17)\n\
    \    at test (/tmp/tmpe4l8nzix.js:21:20)\n    at Object.<anonymous> (/tmp/tmpe4l8nzix.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        var num = nums[i];\n        while(num > 0){\n            sum += num %\
    \ 10;\n            num = Math.floor(num / 10);\n        }\n        sums.push(sum);\n\
    \        sum = 0;\n    }\n    var sorted = [];\n    var sorted_nums = [];\n  \
    \  for(var i = 0; i < sums.length; i++){\n        var min = Math.min.apply(null,\
    \ sums);\n        var index = sums.indexOf(min);\n        sorted.push(min);\n\
    \        sorted_nums.push(nums[index]);\n        sums.splice(index, 1);\n    \
    \    nums.splice(index, 1);\n    }\n    return sorted_nums;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -1, -11, -12 ]\n\nshould equal\n\n[ -1,\
    \ -11, 1, -12, 11 ]\n    at test (/tmp/tmp4d_dtv73.js:40:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp4d_dtv73.js:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -1, -11,\
    \ -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpxbb_kt0d.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpxbb_kt0d.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpxbb_kt0d.js:11:17)\n\
    \    at test (/tmp/tmpxbb_kt0d.js:21:20)\n    at Object.<anonymous> (/tmp/tmpxbb_kt0d.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0g34q3_w.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmp0g34q3_w.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmp0g34q3_w.js:11:17)\n\
    \    at test (/tmp/tmp0g34q3_w.js:21:20)\n    at Object.<anonymous> (/tmp/tmp0g34q3_w.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let result = [];\n    let sum = 0;\n    let index = 0;\n    let sum_index\
    \ = [];\n    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n       \
    \ for(let j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        sum_index.push([sum, i]);\n    }\n    sum_index.sort(function(a,\
    \ b){\n        return a[0] - b[0];\n    });\n    for(let i = 0; i < sum_index.length;\
    \ i++){\n        result.push(nums[sum_index[i][1]]);\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp9967q054.js:36:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9967q054.js:44:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptursnfal.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmptursnfal.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmptursnfal.js:11:17)\n\
    \    at test (/tmp/tmptursnfal.js:21:20)\n    at Object.<anonymous> (/tmp/tmptursnfal.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var result = [];\n    var sums = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sums.push(sum_digits(nums[i]));\n    }\n    for(var i = 0; i\
    \ < nums.length; i++){\n        var min = Math.min.apply(null, sums);\n      \
    \  var index = sums.indexOf(min);\n        result.push(nums[index]);\n       \
    \ sums[index] = Infinity;\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpd1czkwv4.js:14\n        sums.push(sum_digits(nums[i]));\n     \
    \        ^\n\nReferenceError: sum_digits is not defined\n    at order_by_points\
    \ (/tmp/tmpd1czkwv4.js:14:14)\n    at test (/tmp/tmpd1czkwv4.js:30:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpd1czkwv4.js:38:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        var sumA = sumDigits(a);\n    \
    \    var sumB = sumDigits(b);\n        if(sumA === sumB){\n            return\
    \ a - b;\n        }\n        return sumA - sumB;\n    });\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmptmqdn33m.js:12\n        var sumA = sumDigits(a);\n            \
    \       ^\n\nReferenceError: sumDigits is not defined\n    at /tmp/tmptmqdn33m.js:12:20\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmptmqdn33m.js:11:17)\n\
    \    at test (/tmp/tmptmqdn33m.js:26:20)\n    at Object.<anonymous> (/tmp/tmptmqdn33m.js:34:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    return nums.sort(function(a, b){\n        return sum_digits(a) - sum_digits(b);\n\
    \    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpw61nygn2.js:12\n        return sum_digits(a) - sum_digits(b);\n\
    \        ^\n\nReferenceError: sum_digits is not defined\n    at /tmp/tmpw61nygn2.js:12:9\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmpw61nygn2.js:11:17)\n\
    \    at test (/tmp/tmpw61nygn2.js:21:20)\n    at Object.<anonymous> (/tmp/tmpw61nygn2.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sums = nums.map(num => {\n        let sum = 0;\n        let numString\
    \ = num.toString();\n        for (let i = 0; i < numString.length; i++){\n   \
    \         sum += parseInt(numString[i]);\n        }\n        return sum;\n   \
    \ });\n    let sortedNums = [];\n    for (let i = 0; i < sums.length; i++){\n\
    \        let min = Math.min(...sums);\n        let index = sums.indexOf(min);\n\
    \        sortedNums.push(nums[index]);\n        sums.splice(index, 1);\n     \
    \   nums.splice(index, 1);\n    }\n    return sortedNums;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpl5o5jlhg.js:35:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl5o5jlhg.js:43:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let sumArr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        sumArr.push(sum);\n\
    \    }\n    let temp = 0;\n    for(let i = 0; i < sumArr.length; i++){\n     \
    \   for(let j = 0; j < sumArr.length; j++){\n            if(sumArr[i] < sumArr[j]){\n\
    \                temp = sumArr[i];\n                sumArr[i] = sumArr[j];\n \
    \               sumArr[j] = temp;\n                temp = nums[i];\n         \
    \       nums[i] = nums[j];\n                nums[j] = temp;\n            }\n \
    \       }\n    }\n    return nums;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpkl7fzdxs.js:41:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpkl7fzdxs.js:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    if(nums.length === 0){\n        return [];\n    }\n    let result = [];\n\
    \    let sum = 0;\n    let nums_copy = nums.slice();\n    let nums_copy_2 = nums.slice();\n\
    \    for(let i = 0; i < nums.length; i++){\n        sum = 0;\n        for(let\
    \ j = 0; j < nums[i].toString().length; j++){\n            sum += parseInt(nums[i].toString()[j]);\n\
    \        }\n        result.push(sum);\n    }\n    for(let i = 0; i < result.length;\
    \ i++){\n        for(let j = i + 1; j < result.length; j++){\n            if(result[i]\
    \ > result[j]){\n                let temp = result[i];\n                result[i]\
    \ = result[j];\n                result[j] = temp;\n                let temp_2\
    \ = nums_copy[i];\n                nums_copy[i] = nums_copy[j];\n            \
    \    nums_copy[j] = temp_2;\n            }\n        }\n    }\n    for(let i =\
    \ 0; i < nums_copy.length; i++){\n        for(let j = 0; j < nums_copy_2.length;\
    \ j++){\n            if(nums_copy[i] === nums_copy_2[j]){\n                nums_copy_2[j]\
    \ = null;\n                break;\n            }\n        }\n    }\n    for(let\
    \ i = 0; i < nums_copy_2.length; i++){\n        if(nums_copy_2[i] !== null){\n\
    \            nums_copy.push(nums_copy_2[i]);\n        }\n    }\n    return nums_copy;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp5w12htog.js:57:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp5w12htog.js:65:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sums = [];\n    var result = [];\n    for(var i = 0;\
    \ i < nums.length; i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sums.push(sum);\n    }\n    for(var i = 0; i < sums.length; i++){\n     \
    \   var min = Math.min.apply(null, sums);\n        var index = sums.indexOf(min);\n\
    \        result.push(nums[index]);\n        sums.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpibt64o5j.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpibt64o5j.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var sum_array = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        sum = 0;\n        for(var j = 0; j < nums[i].toString().length;\
    \ j++){\n            sum += parseInt(nums[i].toString()[j]);\n        }\n    \
    \    sum_array.push(sum);\n    }\n    var new_array = [];\n    var index = 0;\n\
    \    var min = sum_array[0];\n    for(var i = 0; i < sum_array.length; i++){\n\
    \        min = sum_array[0];\n        for(var j = 0; j < sum_array.length; j++){\n\
    \            if(sum_array[j] < min){\n                min = sum_array[j];\n  \
    \              index = j;\n            }\n        }\n        new_array.push(nums[index]);\n\
    \        sum_array[index] = Infinity;\n    }\n    return new_array;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, 11, 11, 11 ]\n\nshould equal\n\n\
    [ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpfx1tx_e_.js:42:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfx1tx_e_.js:50:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, 11,\
    \ 11, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var result = [];\n    var sum = 0;\n    var sum_arr = [];\n    for(var i\
    \ = 0; i < nums.length; i++){\n        sum = 0;\n        var num = nums[i].toString();\n\
    \        for(var j = 0; j < num.length; j++){\n            sum += parseInt(num[j]);\n\
    \        }\n        sum_arr.push(sum);\n    }\n    for(var i = 0; i < sum_arr.length;\
    \ i++){\n        var min = Math.min.apply(null, sum_arr);\n        var index =\
    \ sum_arr.indexOf(min);\n        result.push(nums[index]);\n        sum_arr.splice(index,\
    \ 1);\n        nums.splice(index, 1);\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = order_by_points;\n\
    \  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n\
    \  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, -11,\
    \ -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp90bnr26x.js:37:10)\n\
    \    at Object.<anonymous> (/tmp/tmp90bnr26x.js:45:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \  return nums.sort(function(a, b){\n    return sum_of_digits(a) - sum_of_digits(b);\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11,\
    \ -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmprp6swljn.js:12\n    return sum_of_digits(a) - sum_of_digits(b);\n\
    \    ^\n\nReferenceError: sum_of_digits is not defined\n    at /tmp/tmprp6swljn.js:12:5\n\
    \    at Array.sort (<anonymous>)\n    at order_by_points (/tmp/tmprp6swljn.js:11:15)\n\
    \    at test (/tmp/tmprp6swljn.js:21:20)\n    at Object.<anonymous> (/tmp/tmprp6swljn.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var result = [];\n    var arr = [];\n    for(var i = 0; i < nums.length;\
    \ i++){\n        var sum = 0;\n        var num = nums[i];\n        while(num >\
    \ 0){\n            sum += num % 10;\n            num = Math.floor(num / 10);\n\
    \        }\n        arr.push([sum, nums[i]]);\n    }\n    arr.sort(function(a,\
    \ b){\n        if(a[0] < b[0]){\n            return -1;\n        }\n        else\
    \ if(a[0] > b[0]){\n            return 1;\n        }\n        else{\n        \
    \    if(a[1] < b[1]){\n                return -1;\n            }\n           \
    \ else if(a[1] > b[1]){\n                return 1;\n            }\n          \
    \  else{\n                return 0;\n            }\n        }\n    });\n    for(var\
    \ i = 0; i < arr.length; i++){\n        result.push(arr[i][1]);\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1,\
    \ -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -12, -11, -1, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmplhezywcg.js:52:10)\n    at Object.<anonymous>\
    \ (/tmp/tmplhezywcg.js:60:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ -1, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push(sum);\n\
    \    }\n    var sorted = [];\n    for(var i = 0; i < arr.length; i++){\n     \
    \   var min = Math.min.apply(null, arr);\n        var index = arr.indexOf(min);\n\
    \        sorted.push(nums[index]);\n        arr.splice(index, 1);\n        nums.splice(index,\
    \ 1);\n    }\n    return sorted;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1,\
    \ 11, -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ undefined, undefined, undefined ]\n\n\
    should equal\n\n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpznn13oak.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmpznn13oak.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ undefined, undefined, undefined ],\n  expected:\
    \ [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    var sum = 0;\n    var arr = [];\n    for(var i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(var j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push([nums[i],\
    \ sum]);\n    }\n    arr.sort(function(a, b){\n        if(a[1] > b[1]){\n    \
    \        return 1;\n        }\n        else if(a[1] < b[1]){\n            return\
    \ -1;\n        }\n        else{\n            if(a[0] > b[0]){\n              \
    \  return 1;\n            }\n            else if(a[0] < b[0]){\n             \
    \   return -1;\n            }\n            else{\n                return 0;\n\
    \            }\n        }\n    });\n    var result = [];\n    for(var i = 0; i\
    \ < arr.length; i++){\n        result.push(arr[i][0]);\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = order_by_points;\n  assert.deepEqual(candidate([1, 11, -1, -11, -12]),[-1,\
    \ -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98, -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ -12, -11, -1, 1, 11 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmpubukhyp_.js:51:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpubukhyp_.js:59:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ -12, -11,\
    \ -1, 1, 11 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function which sorts the given array of integers\n// in ascending\
    \ order according to the sum of their digits.\n// Note: if there are several items\
    \ with similar sum of their digits,\n// order them based on their index in original\
    \ array.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\n// [-1,\
    \ -11, 1, -12, 11]\n// >>> order_by_points([])\n// []\nfunction order_by_points(nums){\n\
    \    let sum = 0;\n    let arr = [];\n    for(let i = 0; i < nums.length; i++){\n\
    \        sum = 0;\n        for(let j = 0; j < nums[i].toString().length; j++){\n\
    \            sum += parseInt(nums[i].toString()[j]);\n        }\n        arr.push([nums[i],\
    \ sum]);\n    }\n    arr.sort(function(a, b){\n        if(a[1] === b[1]){\n  \
    \          return a[0] - b[0];\n        }\n        return a[1] - b[1];\n    });\n\
    \    for(let i = 0; i < arr.length; i++){\n        arr[i] = arr[i][0];\n    }\n\
    \    return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = order_by_points;\n  assert.deepEqual(candidate([1, 11,\
    \ -1, -11, -12]),[-1, -11, 1, -12, 11]);\n  assert.deepEqual(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]),[0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]);\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, -11, -32, 43, 54, -98, 2, -3]),[-3, -32, -98,\
    \ -11, 1, 2, 43, 54]);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11]),[1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]);\n  assert.deepEqual(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]),[-76, -21, 0, 4, 23, 6, 6]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 11, -1, -11, -12 ]\n\nshould equal\n\
    \n[ -1, -11, 1, -12, 11 ]\n    at test (/tmp/tmp8f0oyqmo.js:37:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp8f0oyqmo.js:45:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 1, 11, -1,\
    \ -11, -12 ],\n  expected: [ -1, -11, 1, -12, 11 ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

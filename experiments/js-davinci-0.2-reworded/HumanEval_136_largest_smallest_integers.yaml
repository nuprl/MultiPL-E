name: HumanEval_136_largest_smallest_integers
language: js
prompt: "//Create a function that returns an array (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in an array.\n\
  // If there is no negative or positive integers, return them as undefined.\n// Examples:\n\
  // >>> largest_smallest_integers([2, 4, 1, 3, 5, 7])\n// [undefined, 1]\n// >>>\
  \ largest_smallest_integers([])\n// [undefined, undefined]\n// >>> largest_smallest_integers([0])\n\
  // [undefined, undefined]\nfunction largest_smallest_integers(lst){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = largest_smallest_integers;\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7]),[undefined,\
  \ 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5, 7, 0]),[undefined, 1]);\n \
  \ assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2, 1]);\n  assert.deepEqual(candidate([4,\
  \ 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7, 3, 8, 4, 9, 2,\
  \ 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined, undefined]);\n\
  \  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["    var largest = undefined;\n    var smallest = undefined;\n    for\
    \ (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if\
    \ (largest == undefined){\n                largest = lst[i];\n            }\n\
    \            else if (lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (smallest\
    \ == undefined){\n                smallest = lst[i];\n            }\n        \
    \    else if (lst[i] < smallest){\n                smallest = lst[i];\n      \
    \      }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            if (largest === undefined){\n \
    \               largest = lst[i];\n            }\n            else if (lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        }\n \
    \       else if (lst[i] > 0){\n            if (smallest === undefined){\n    \
    \            smallest = lst[i];\n            }\n            else if (lst[i] <\
    \ smallest){\n                smallest = lst[i];\n            }\n        }\n \
    \   }\n    return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n      \
    \      largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n            largest\
    \ = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i]\
    \ < smallest)){\n            smallest = lst[i];\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            if (largest == undefined){\n                largest = lst[i];\n\
    \            }\n            else if (lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n       \
    \     if (smallest == undefined){\n                smallest = lst[i];\n      \
    \      }\n            else if (lst[i] < smallest){\n                smallest =\
    \ lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest_negative = undefined;\n    var smallest_positive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (largest_negative == undefined){\n                largest_negative =\
    \ lst[i];\n            }\n            else if (lst[i] > largest_negative){\n \
    \               largest_negative = lst[i];\n            }\n        }\n       \
    \ else if (lst[i] > 0){\n            if (smallest_positive == undefined){\n  \
    \              smallest_positive = lst[i];\n            }\n            else if\
    \ (lst[i] < smallest_positive){\n                smallest_positive = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ === undefined){\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0){\n            if (smallest === undefined){\n               \
    \ smallest = lst[i];\n            } else if (lst[i] < smallest){\n           \
    \     smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var a = undefined;\n    var b = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (a ===\
    \ undefined){\n                a = lst[i];\n            }\n            else if\
    \ (lst[i] > a){\n                a = lst[i];\n            }\n        }\n     \
    \   else if (lst[i] > 0){\n            if (b === undefined){\n               \
    \ b = lst[i];\n            }\n            else if (lst[i] < b){\n            \
    \    b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n}\n", " \
    \   var largest = undefined;\n    var smallest = undefined;\n    for (var i =\
    \ 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else if (lst[i] > largest){\n                largest = lst[i];\n        \
    \    }\n        }\n        else if (lst[i] > 0){\n            if (smallest ===\
    \ undefined){\n                smallest = lst[i];\n            }\n           \
    \ else if (lst[i] < smallest){\n                smallest = lst[i];\n         \
    \   }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largest_negative\
    \ = undefined;\n    var smallest_positive = undefined;\n    for (var i = 0; i\
    \ < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest_negative\
    \ == undefined){\n                largest_negative = lst[i];\n            }\n\
    \            else if (lst[i] > largest_negative){\n                largest_negative\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n       \
    \     if (smallest_positive == undefined){\n                smallest_positive\
    \ = lst[i];\n            }\n            else if (lst[i] < smallest_positive){\n\
    \                smallest_positive = lst[i];\n            }\n        }\n    }\n\
    \    return [largest_negative, smallest_positive];\n}\n", "    var max = undefined;\n\
    \    var min = undefined;\n    for (var i = 0; i < lst.length; i++){\n       \
    \ if (lst[i] < 0){\n            if (max === undefined){\n                max =\
    \ lst[i];\n            }\n            else if (lst[i] > max){\n              \
    \  max = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n  \
    \          if (min === undefined){\n                min = lst[i];\n          \
    \  }\n            else if (lst[i] < min){\n                min = lst[i];\n   \
    \         }\n        }\n    }\n    return [max, min];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largestNegative === undefined\
    \ || lst[i] > largestNegative)){\n            largestNegative = lst[i];\n    \
    \    }\n        if (lst[i] > 0 && (smallestPositive === undefined || lst[i] <\
    \ smallestPositive)){\n            smallestPositive = lst[i];\n        }\n   \
    \ }\n    return [largestNegative, smallestPositive];\n}\n", "    var neg = [];\n\
    \    var pos = [];\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            neg.push(lst[i]);\n        }\n        else if (lst[i] > 0){\n\
    \            pos.push(lst[i]);\n        }\n    }\n    if (neg.length == 0){\n\
    \        neg.push(undefined);\n    }\n    if (pos.length == 0){\n        pos.push(undefined);\n\
    \    }\n    return [Math.max.apply(null, neg), Math.min.apply(null, pos)];\n}\n",
  "    var max = 0;\n    var min = 0;\n    var max_neg = 0;\n    var min_pos = 0;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > max){\n     \
    \       max = lst[i];\n        }\n        if (lst[i] < min){\n            min\
    \ = lst[i];\n        }\n        if (lst[i] < 0 && lst[i] > max_neg){\n       \
    \     max_neg = lst[i];\n        }\n        if (lst[i] > 0 && lst[i] < min_pos){\n\
    \            min_pos = lst[i];\n        }\n    }\n    if (min_pos == 0){\n   \
    \     min_pos = undefined;\n    }\n    if (max_neg == 0){\n        max_neg = undefined;\n\
    \    }\n    return [max_neg, min_pos];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n      \
    \      largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n            largest\
    \ = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i]\
    \ < smallest)){\n            smallest = lst[i];\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var smallest = undefined;\n    var largest\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ > 0){\n            if (smallest == undefined){\n                smallest = lst[i];\n\
    \            }\n            else if (lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] < 0){\n       \
    \     if (largest == undefined){\n                largest = lst[i];\n        \
    \    }\n            else if (lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largest_neg = undefined;\n    var smallest_pos = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest_neg\
    \ === undefined){\n                largest_neg = lst[i];\n            }\n    \
    \        else if (lst[i] > largest_neg){\n                largest_neg = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (smallest_pos\
    \ === undefined){\n                smallest_pos = lst[i];\n            }\n   \
    \         else if (lst[i] < smallest_pos){\n                smallest_pos = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_neg, smallest_pos];\n}\n",
  "    var largest_negative = undefined;\n    var smallest_positive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest_negative\
    \ == undefined || lst[i] > largest_negative)){\n            largest_negative =\
    \ lst[i];\n        }\n        if (lst[i] > 0 && (smallest_positive == undefined\
    \ || lst[i] < smallest_positive)){\n            smallest_positive = lst[i];\n\
    \        }\n    }\n    return [largest_negative, smallest_positive];\n}\n", " \
    \   var largestNegative = undefined;\n    var smallestPositive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largestNegative\
    \ === undefined || lst[i] > largestNegative)){\n            largestNegative =\
    \ lst[i];\n        }\n        if (lst[i] > 0 && (smallestPositive === undefined\
    \ || lst[i] < smallestPositive)){\n            smallestPositive = lst[i];\n  \
    \      }\n    }\n    return [largestNegative, smallestPositive];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined || lst[i]\
    \ > largest)){\n            largest = lst[i];\n        }\n        if (lst[i] >\
    \ 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest =\
    \ lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "  var max\
    \ = undefined;\n  var min = undefined;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < 0 && (max === undefined || lst[i] > max)){\n      max = lst[i];\n\
    \    }\n    if (lst[i] > 0 && (min === undefined || lst[i] < min)){\n      min\
    \ = lst[i];\n    }\n  }\n  return [max, min];\n}\n", "  var largest = undefined;\n\
    \  var smallest = undefined;\n  for (var i = 0; i < lst.length; i++){\n    if\
    \ (lst[i] < 0){\n      if (largest === undefined || lst[i] > largest){\n     \
    \   largest = lst[i];\n      }\n    }\n    else if (lst[i] > 0){\n      if (smallest\
    \ === undefined || lst[i] < smallest){\n        smallest = lst[i];\n      }\n\
    \    }\n  }\n  return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n      \
    \      largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0){\n            if (largest === undefined){\n                largest\
    \ = lst[i];\n            }\n            else if (lst[i] > largest){\n        \
    \        largest = lst[i];\n            }\n        }\n        else if (lst[i]\
    \ > 0){\n            if (smallest === undefined){\n                smallest =\
    \ lst[i];\n            }\n            else if (lst[i] < smallest){\n         \
    \       smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}", "    var largest_negative = undefined;\n    var smallest_positive\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (largest_negative == undefined || lst[i] > largest_negative)){\n    \
    \        largest_negative = lst[i];\n        }\n        if (lst[i] > 0 && (smallest_positive\
    \ == undefined || lst[i] < smallest_positive)){\n            smallest_positive\
    \ = lst[i];\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    var max = lst[0];\n    var min = lst[0];\n    for(var i = 0; i < lst.length;\
    \ i++){\n        if(lst[i] > max){\n            max = lst[i];\n        }\n   \
    \     if(lst[i] < min){\n            min = lst[i];\n        }\n    }\n    return\
    \ [max, min];\n}\n", "    var min = undefined;\n    var max = undefined;\n   \
    \ for(var i = 0; i < lst.length; i++){\n        if(lst[i] < 0){\n            if(max\
    \ == undefined || lst[i] > max){\n                max = lst[i];\n            }\n\
    \        }\n        else if(lst[i] > 0){\n            if(min == undefined || lst[i]\
    \ < min){\n                min = lst[i];\n            }\n        }\n    }\n  \
    \  return [max, min];\n}\n", "    var largest = undefined;\n    var smallest =\
    \ undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] <\
    \ 0){\n            if (largest === undefined){\n                largest = lst[i];\n\
    \            }\n            else if (lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n       \
    \     if (smallest === undefined){\n                smallest = lst[i];\n     \
    \       }\n            else if (lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ == undefined || lst[i] > largest){\n                largest = lst[i];\n    \
    \        }\n        }\n        else if (lst[i] > 0){\n            if (smallest\
    \ == undefined || lst[i] < smallest){\n                smallest = lst[i];\n  \
    \          }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largest == undefined){\n\
    \                largest = lst[i];\n            } else if (lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        } else if (lst[i] >\
    \ 0){\n            if (smallest == undefined){\n                smallest = lst[i];\n\
    \            } else if (lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largest_neg = undefined;\n    var smallest_pos = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest_neg == undefined\
    \ || lst[i] > largest_neg)){\n            largest_neg = lst[i];\n        }\n \
    \       if (lst[i] > 0 && (smallest_pos == undefined || lst[i] < smallest_pos)){\n\
    \            smallest_pos = lst[i];\n        }\n    }\n    return [largest_neg,\
    \ smallest_pos];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest\
    \ == undefined || lst[i] > largest)){\n            largest = lst[i];\n       \
    \ }\n        if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ == undefined){\n                largest = lst[i];\n            }\n         \
    \   else if (lst[i] > largest){\n                largest = lst[i];\n         \
    \   }\n        }\n        else if (lst[i] > 0){\n            if (smallest == undefined){\n\
    \                smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var smallest_positive = undefined;\n\
    \    var largest_negative = undefined;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] > 0){\n            if(smallest_positive === undefined){\n \
    \               smallest_positive = lst[i];\n            }\n            else if(lst[i]\
    \ < smallest_positive){\n                smallest_positive = lst[i];\n       \
    \     }\n        }\n        else if(lst[i] < 0){\n            if(largest_negative\
    \ === undefined){\n                largest_negative = lst[i];\n            }\n\
    \            else if(lst[i] > largest_negative){\n                largest_negative\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    var a = undefined;\n    var b = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] > 0 && (b == undefined || lst[i] < b)){\n\
    \            b = lst[i];\n        }\n        if (lst[i] < 0 && (a == undefined\
    \ || lst[i] > a)){\n            a = lst[i];\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    var max = lst[0];\n    var min = lst[0];\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] > max){\n            max = lst[i];\n\
    \        }\n        if(lst[i] < min){\n            min = lst[i];\n        }\n\
    \    }\n    return [max, min];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (largest == undefined || lst[i] > largest)){\n            largest = lst[i];\n\
    \        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var min = undefined;\n    var max = undefined;\n    for(var i = 0;\
    \ i < lst.length; i++){\n        if(lst[i] > 0){\n            if(min === undefined){\n\
    \                min = lst[i];\n            }\n            else if(lst[i] < min){\n\
    \                min = lst[i];\n            }\n        }\n        else if(lst[i]\
    \ < 0){\n            if(max === undefined){\n                max = lst[i];\n \
    \           }\n            else if(lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    var max =\
    \ Math.max.apply(null, lst);\n    var min = Math.min.apply(null, lst);\n    var\
    \ maxNeg = -Infinity;\n    var minPos = Infinity;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0 && lst[i] > maxNeg){\n            maxNeg = lst[i];\n\
    \        }\n        if (lst[i] > 0 && lst[i] < minPos){\n            minPos =\
    \ lst[i];\n        }\n    }\n    if (maxNeg === -Infinity){\n        maxNeg =\
    \ undefined;\n    }\n    if (minPos === Infinity){\n        minPos = undefined;\n\
    \    }\n    return [maxNeg, minPos];\n}\n", "    var largestNegative = undefined;\n\
    \    var smallestPositive = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0 && (largestNegative === undefined || lst[i] > largestNegative)){\n\
    \            largestNegative = lst[i];\n        }\n        if (lst[i] > 0 && (smallestPositive\
    \ === undefined || lst[i] < smallestPositive)){\n            smallestPositive\
    \ = lst[i];\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largest_neg = undefined;\n    var smallest_pos = undefined;\n \
    \   for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n        \
    \    if (largest_neg === undefined || lst[i] > largest_neg){\n               \
    \ largest_neg = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n\
    \            if (smallest_pos === undefined || lst[i] < smallest_pos){\n     \
    \           smallest_pos = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest_neg, smallest_pos];\n}\n", "    var largestNegative = undefined;\n\
    \    var smallestPositive = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0){\n            if (largestNegative === undefined){\n \
    \               largestNegative = lst[i];\n            }\n            else if\
    \ (lst[i] > largestNegative){\n                largestNegative = lst[i];\n   \
    \         }\n        }\n        else if (lst[i] > 0){\n            if (smallestPositive\
    \ === undefined){\n                smallestPositive = lst[i];\n            }\n\
    \            else if (lst[i] < smallestPositive){\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var neg = undefined;\n    var pos = undefined;\n    for (var i = 0;\
    \ i < lst.length; i++){\n        if (lst[i] < 0 && (neg == undefined || lst[i]\
    \ > neg)){\n            neg = lst[i];\n        }\n        if (lst[i] > 0 && (pos\
    \ == undefined || lst[i] < pos)){\n            pos = lst[i];\n        }\n    }\n\
    \    return [neg, pos];\n}\n", "    var largest_neg = undefined;\n    var smallest_pos\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            if (largest_neg === undefined){\n                largest_neg\
    \ = lst[i];\n            }\n            else if (lst[i] > largest_neg){\n    \
    \            largest_neg = lst[i];\n            }\n        }\n        else if\
    \ (lst[i] > 0){\n            if (smallest_pos === undefined){\n              \
    \  smallest_pos = lst[i];\n            }\n            else if (lst[i] < smallest_pos){\n\
    \                smallest_pos = lst[i];\n            }\n        }\n    }\n   \
    \ return [largest_neg, smallest_pos];\n}\n", "    var largest_negative = undefined;\n\
    \    var smallest_positive = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0 && (largest_negative == undefined || lst[i] > largest_negative)){\n\
    \            largest_negative = lst[i];\n        }\n        if (lst[i] > 0 &&\
    \ (smallest_positive == undefined || lst[i] < smallest_positive)){\n         \
    \   smallest_positive = lst[i];\n        }\n    }\n    return [largest_negative,\
    \ smallest_positive];\n}\n", "    var max = undefined;\n    var min = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (max ==\
    \ undefined || lst[i] > max)){\n            max = lst[i];\n        }\n       \
    \ if (lst[i] > 0 && (min == undefined || lst[i] < min)){\n            min = lst[i];\n\
    \        }\n    }\n    return [max, min];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0){\n            if (largest == undefined || lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n        else if\
    \ (lst[i] > 0){\n            if (smallest == undefined || lst[i] < smallest){\n\
    \                smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var max = undefined;\n    var min = undefined;\n\
    \    for (var i = 0; i < lst.length; i++) {\n        if (lst[i] < 0 && (max ===\
    \ undefined || lst[i] > max)) {\n            max = lst[i];\n        }\n      \
    \  if (lst[i] > 0 && (min === undefined || lst[i] < min)) {\n            min =\
    \ lst[i];\n        }\n    }\n    return [max, min];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largestNegative\
    \ === undefined){\n                largestNegative = lst[i];\n            }\n\
    \            else if (lst[i] > largestNegative){\n                largestNegative\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n       \
    \     if (smallestPositive === undefined){\n                smallestPositive =\
    \ lst[i];\n            }\n            else if (lst[i] < smallestPositive){\n \
    \               smallestPositive = lst[i];\n            }\n        }\n    }\n\
    \    return [largestNegative, smallestPositive];\n}\n", "    var a = undefined;\n\
    \    var b = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0){\n            if (a == undefined){\n                a = lst[i];\n\
    \            }\n            else if (lst[i] > a){\n                a = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (b ==\
    \ undefined){\n                b = lst[i];\n            }\n            else if\
    \ (lst[i] < b){\n                b = lst[i];\n            }\n        }\n    }\n\
    \    return [a, b];\n}\n", "    var max = undefined;\n    var min = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (max === undefined){\n                max = lst[i];\n            }\n\
    \            else if (lst[i] > max){\n                max = lst[i];\n        \
    \    }\n        }\n        else if (lst[i] > 0){\n            if (min === undefined){\n\
    \                min = lst[i];\n            }\n            else if (lst[i] < min){\n\
    \                min = lst[i];\n            }\n        }\n    }\n    return [max,\
    \ min];\n}\n", "    var largestNegative = undefined;\n    var smallestPositive\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (largestNegative === undefined || lst[i] > largestNegative)){\n     \
    \       largestNegative = lst[i];\n        }\n        if (lst[i] > 0 && (smallestPositive\
    \ === undefined || lst[i] < smallestPositive)){\n            smallestPositive\
    \ = lst[i];\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largestNeg = undefined;\n    var smallestPos = undefined;\n   \
    \ for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largestNeg\
    \ == undefined || lst[i] > largestNeg)){\n            largestNeg = lst[i];\n \
    \       }\n        if (lst[i] > 0 && (smallestPos == undefined || lst[i] < smallestPos)){\n\
    \            smallestPos = lst[i];\n        }\n    }\n    return [largestNeg,\
    \ smallestPos];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (largest === undefined){\n                largest = lst[i];\n       \
    \     }\n            else if (lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (smallest\
    \ === undefined){\n                smallest = lst[i];\n            }\n       \
    \     else if (lst[i] < smallest){\n                smallest = lst[i];\n     \
    \       }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n\
    \            largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest\
    \ == undefined || lst[i] < smallest)){\n            smallest = lst[i];\n     \
    \   }\n    }\n    return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n      \
    \      largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0){\n            if (largest === undefined){\n                largest\
    \ = lst[i];\n            }\n            else if (lst[i] > largest){\n        \
    \        largest = lst[i];\n            }\n        }\n        else if (lst[i]\
    \ > 0){\n            if (smallest === undefined){\n                smallest =\
    \ lst[i];\n            }\n            else if (lst[i] < smallest){\n         \
    \       smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (largest === undefined){\n                largest = lst[i];\n       \
    \     }\n            else if (lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (smallest\
    \ === undefined){\n                smallest = lst[i];\n            }\n       \
    \     else if (lst[i] < smallest){\n                smallest = lst[i];\n     \
    \       }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var max\
    \ = undefined;\n    var min = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            if (max === undefined){\n     \
    \           max = lst[i];\n            }\n            else if (lst[i] > max){\n\
    \                max = lst[i];\n            }\n        }\n        else if (lst[i]\
    \ > 0){\n            if (min === undefined){\n                min = lst[i];\n\
    \            }\n            else if (lst[i] < min){\n                min = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largestNegative === undefined\
    \ || lst[i] > largestNegative)){\n            largestNegative = lst[i];\n    \
    \    }\n        if (lst[i] > 0 && (smallestPositive === undefined || lst[i] <\
    \ smallestPositive)){\n            smallestPositive = lst[i];\n        }\n   \
    \ }\n    return [largestNegative, smallestPositive];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largestNegative === undefined\
    \ || lst[i] > largestNegative)){\n            largestNegative = lst[i];\n    \
    \    }\n        if (lst[i] > 0 && (smallestPositive === undefined || lst[i] <\
    \ smallestPositive)){\n            smallestPositive = lst[i];\n        }\n   \
    \ }\n    return [largestNegative, smallestPositive];\n}\n", "    var largest =\
    \ undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++) {\n        if (lst[i] < 0 && (largest == undefined || lst[i] > largest))\
    \ {\n            largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest\
    \ == undefined || lst[i] < smallest)) {\n            smallest = lst[i];\n    \
    \    }\n    }\n    return [largest, smallest];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largestNegative === undefined\
    \ || lst[i] > largestNegative)){\n            largestNegative = lst[i];\n    \
    \    }\n        if (lst[i] > 0 && (smallestPositive === undefined || lst[i] <\
    \ smallestPositive)){\n            smallestPositive = lst[i];\n        }\n   \
    \ }\n    return [largestNegative, smallestPositive];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++) {\n        if (lst[i] < 0 && (largestNegative === undefined\
    \ || lst[i] > largestNegative)) {\n            largestNegative = lst[i];\n   \
    \     }\n        if (lst[i] > 0 && (smallestPositive === undefined || lst[i] <\
    \ smallestPositive)) {\n            smallestPositive = lst[i];\n        }\n  \
    \  }\n    return [largestNegative, smallestPositive];\n}\n", "    var neg = [];\n\
    \    var pos = [];\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            neg.push(lst[i]);\n        }\n        else if (lst[i] > 0){\n\
    \            pos.push(lst[i]);\n        }\n    }\n    if (neg.length == 0){\n\
    \        neg.push(undefined);\n    }\n    if (pos.length == 0){\n        pos.push(undefined);\n\
    \    }\n    return [Math.max.apply(null, neg), Math.min.apply(null, pos)];\n}",
  "    var largestNegative = undefined;\n    var smallestPositive = undefined;\n \
    \   for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largestNegative\
    \ === undefined || lst[i] > largestNegative)){\n            largestNegative =\
    \ lst[i];\n        }\n        if (lst[i] > 0 && (smallestPositive === undefined\
    \ || lst[i] < smallestPositive)){\n            smallestPositive = lst[i];\n  \
    \      }\n    }\n    return [largestNegative, smallestPositive];\n}\n", "    var\
    \ max = undefined;\n    var min = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0 && (max == undefined || lst[i] > max)){\n    \
    \        max = lst[i];\n        }\n        if (lst[i] > 0 && (min == undefined\
    \ || lst[i] < min)){\n            min = lst[i];\n        }\n    }\n    return\
    \ [max, min];\n}\n", "    var smallest = undefined;\n    var largest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > 0){\n       \
    \     if (smallest === undefined){\n                smallest = lst[i];\n     \
    \       }\n            else if (lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] < 0){\n       \
    \     if (largest === undefined){\n                largest = lst[i];\n       \
    \     }\n            else if (lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largest = undefined;\n    var smallest = undefined;\n    for (var i = 0;\
    \ i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest ==\
    \ undefined){\n                largest = lst[i];\n            }\n            else\
    \ if (lst[i] > largest){\n                largest = lst[i];\n            }\n \
    \       }\n        else if (lst[i] > 0){\n            if (smallest == undefined){\n\
    \                smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n      \
    \      largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest = undefined;\n    var\
    \ smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n            largest\
    \ = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i]\
    \ < smallest)){\n            smallest = lst[i];\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (largest == undefined || lst[i] > largest)){\n            largest = lst[i];\n\
    \        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest_negative = undefined;\n    var smallest_positive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (largest_negative == undefined){\n                largest_negative =\
    \ lst[i];\n            }\n            else if (lst[i] > largest_negative){\n \
    \               largest_negative = lst[i];\n            }\n        }\n       \
    \ else if (lst[i] > 0){\n            if (smallest_positive == undefined){\n  \
    \              smallest_positive = lst[i];\n            }\n            else if\
    \ (lst[i] < smallest_positive){\n                smallest_positive = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ smallest = undefined;\n    var largest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] > 0){\n            if (smallest === undefined\
    \ || lst[i] < smallest){\n                smallest = lst[i];\n            }\n\
    \        }\n        else if (lst[i] < 0){\n            if (largest === undefined\
    \ || lst[i] > largest){\n                largest = lst[i];\n            }\n  \
    \      }\n    }\n    return [largest, smallest];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largestNegative === undefined\
    \ || lst[i] > largestNegative)){\n            largestNegative = lst[i];\n    \
    \    }\n        if (lst[i] > 0 && (smallestPositive === undefined || lst[i] <\
    \ smallestPositive)){\n            smallestPositive = lst[i];\n        }\n   \
    \ }\n    return [largestNegative, smallestPositive];\n}\n", "    var a = undefined;\n\
    \    var b = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0 && (a == undefined || lst[i] > a)){\n            a = lst[i];\n \
    \       }\n        if (lst[i] > 0 && (b == undefined || lst[i] < b)){\n      \
    \      b = lst[i];\n        }\n    }\n    return [a, b];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largestNegative === undefined\
    \ || lst[i] > largestNegative)){\n            largestNegative = lst[i];\n    \
    \    }\n        if (lst[i] > 0 && (smallestPositive === undefined || lst[i] <\
    \ smallestPositive)){\n            smallestPositive = lst[i];\n        }\n   \
    \ }\n    return [largestNegative, smallestPositive];\n}\n", "    var max_neg =\
    \ undefined;\n    var min_pos = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            if (max_neg === undefined || lst[i]\
    \ > max_neg){\n                max_neg = lst[i];\n            }\n        }\n \
    \       else if (lst[i] > 0){\n            if (min_pos === undefined || lst[i]\
    \ < min_pos){\n                min_pos = lst[i];\n            }\n        }\n \
    \   }\n    return [max_neg, min_pos];\n}\n", "    let a = undefined;\n    let\
    \ b = undefined;\n    for (let i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (a === undefined || lst[i] > a)){\n            a = lst[i];\n        }\n\
    \        if (lst[i] > 0 && (b === undefined || lst[i] < b)){\n            b =\
    \ lst[i];\n        }\n    }\n    return [a, b];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n      \
    \      largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var max = Math.max.apply(null, lst);\n\
    \    var min = Math.min.apply(null, lst);\n    var new_lst = [];\n    if (max\
    \ < 0){\n        new_lst.push(max);\n    }\n    else{\n        new_lst.push(undefined);\n\
    \    }\n    if (min > 0){\n        new_lst.push(min);\n    }\n    else{\n    \
    \    new_lst.push(undefined);\n    }\n    return new_lst;\n}\n", "    var max\
    \ = undefined;\n    var min = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] > 0){\n            if (min === undefined || lst[i]\
    \ < min){\n                min = lst[i];\n            }\n        }\n        else\
    \ if (lst[i] < 0){\n            if (max === undefined || lst[i] > max){\n    \
    \            max = lst[i];\n            }\n        }\n    }\n    return [max,\
    \ min];\n}\n", "    var max = undefined;\n    var min = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (max\
    \ === undefined){\n                max = lst[i];\n            }\n            else\
    \ if (lst[i] > max){\n                max = lst[i];\n            }\n        }\n\
    \        else if (lst[i] > 0){\n            if (min === undefined){\n        \
    \        min = lst[i];\n            }\n            else if (lst[i] < min){\n \
    \               min = lst[i];\n            }\n        }\n    }\n    return [max,\
    \ min];\n}\n", "    var smallest = undefined;\n    var largest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > 0){\n       \
    \     if (smallest === undefined){\n                smallest = lst[i];\n     \
    \       }\n            else if (lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] < 0){\n       \
    \     if (largest === undefined){\n                largest = lst[i];\n       \
    \     }\n            else if (lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var largestNeg = undefined;\n    var smallestPos = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largestNeg == undefined\
    \ || lst[i] > largestNeg)){\n            largestNeg = lst[i];\n        }\n   \
    \     if (lst[i] > 0 && (smallestPos == undefined || lst[i] < smallestPos)){\n\
    \            smallestPos = lst[i];\n        }\n    }\n    return [largestNeg,\
    \ smallestPos];\n}\n", "    var max = undefined;\n    var min = undefined;\n \
    \   for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (max == undefined\
    \ || lst[i] > max)){\n            max = lst[i];\n        }\n        if (lst[i]\
    \ > 0 && (min == undefined || lst[i] < min)){\n            min = lst[i];\n   \
    \     }\n    }\n    return [max, min];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0){\n            if (largest == undefined){\n            \
    \    largest = lst[i];\n            }\n            else if (lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n        else if\
    \ (lst[i] > 0){\n            if (smallest == undefined){\n                smallest\
    \ = lst[i];\n            }\n            else if (lst[i] < smallest){\n       \
    \         smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var a = undefined;\n    var b = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (a == undefined || lst[i]\
    \ > a)){\n            a = lst[i];\n        }\n        if (lst[i] > 0 && (b ==\
    \ undefined || lst[i] < b)){\n            b = lst[i];\n        }\n    }\n    return\
    \ [a, b];\n}\n", "    var largestNegative = undefined;\n    var smallestPositive\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (largestNegative === undefined || lst[i] > largestNegative)){\n     \
    \       largestNegative = lst[i];\n        }\n        if (lst[i] > 0 && (smallestPositive\
    \ === undefined || lst[i] < smallestPositive)){\n            smallestPositive\
    \ = lst[i];\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largestNegative = undefined;\n    var smallestPositive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largestNegative\
    \ === undefined || lst[i] > largestNegative)){\n            largestNegative =\
    \ lst[i];\n        }\n        if (lst[i] > 0 && (smallestPositive === undefined\
    \ || lst[i] < smallestPositive)){\n            smallestPositive = lst[i];\n  \
    \      }\n    }\n    return [largestNegative, smallestPositive];\n}\n", "    var\
    \ max = undefined;\n    var min = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            if (max === undefined){\n     \
    \           max = lst[i];\n            }\n            else if (lst[i] > max){\n\
    \                max = lst[i];\n            }\n        }\n        else if (lst[i]\
    \ > 0){\n            if (min === undefined){\n                min = lst[i];\n\
    \            }\n            else if (lst[i] < min){\n                min = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n\
    \            largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest\
    \ == undefined || lst[i] < smallest)){\n            smallest = lst[i];\n     \
    \   }\n    }\n    return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] > 0 && (smallest === undefined || lst[i] < smallest)){\n   \
    \         smallest = lst[i];\n        }\n        if (lst[i] < 0 && (largest ===\
    \ undefined || lst[i] > largest)){\n            largest = lst[i];\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var largestNegative = undefined;\n\
    \    var smallestPositive = undefined;\n    for (var i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] < 0 && (largestNegative === undefined || lst[i] > largestNegative))\
    \ {\n            largestNegative = lst[i];\n        }\n        if (lst[i] > 0\
    \ && (smallestPositive === undefined || lst[i] < smallestPositive)) {\n      \
    \      smallestPositive = lst[i];\n        }\n    }\n    return [largestNegative,\
    \ smallestPositive];\n}\n", "    var largest = undefined;\n    var smallest =\
    \ undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] <\
    \ 0 && (largest == undefined || lst[i] > largest)){\n            largest = lst[i];\n\
    \        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ === undefined || lst[i] > largest){\n                largest = lst[i];\n   \
    \         }\n        }\n        else if (lst[i] > 0){\n            if (smallest\
    \ === undefined || lst[i] < smallest){\n                smallest = lst[i];\n \
    \           }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largest == undefined){\n\
    \                largest = lst[i];\n            }\n            else if (lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        }\n \
    \       else if (lst[i] > 0){\n            if (smallest == undefined){\n     \
    \           smallest = lst[i];\n            }\n            else if (lst[i] < smallest){\n\
    \                smallest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (largest == undefined || lst[i] > largest)){\n            largest = lst[i];\n\
    \        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ == undefined){\n                largest = lst[i];\n            }\n         \
    \   else if (lst[i] > largest){\n                largest = lst[i];\n         \
    \   }\n        }\n        else if (lst[i] > 0){\n            if (smallest == undefined){\n\
    \                smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var largestNegative = undefined;\n\
    \    var smallestPositive = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0 && (largestNegative === undefined || lst[i] > largestNegative)){\n\
    \            largestNegative = lst[i];\n        }\n        if (lst[i] > 0 && (smallestPositive\
    \ === undefined || lst[i] < smallestPositive)){\n            smallestPositive\
    \ = lst[i];\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ smallest = undefined;\n    var largest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] > 0){\n            if (smallest == undefined){\n\
    \                smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \        else if (lst[i] < 0){\n            if (largest == undefined){\n     \
    \           largest = lst[i];\n            }\n            else if (lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (largest == undefined || lst[i] > largest)){\n            largest = lst[i];\n\
    \        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else if (lst[i] > largest){\n                largest = lst[i];\n        \
    \    }\n        }\n        else if (lst[i] > 0){\n            if (smallest ===\
    \ undefined){\n                smallest = lst[i];\n            }\n           \
    \ else if (lst[i] < smallest){\n                smallest = lst[i];\n         \
    \   }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n\
    \            largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest\
    \ == undefined || lst[i] < smallest)){\n            smallest = lst[i];\n     \
    \   }\n    }\n    return [largest, smallest];\n}\n", "    var max = undefined;\n\
    \    var min = undefined;\n    for (var i = 0; i < lst.length; i++){\n       \
    \ if (lst[i] < 0 && (max == undefined || lst[i] > max)){\n            max = lst[i];\n\
    \        }\n        if (lst[i] > 0 && (min == undefined || lst[i] < min)){\n \
    \           min = lst[i];\n        }\n    }\n    return [max, min];\n}\n", " \
    \   var a = undefined;\n    var b = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0 && (a == undefined || lst[i] > a)){\n        \
    \    a = lst[i];\n        }\n        if (lst[i] > 0 && (b == undefined || lst[i]\
    \ < b)){\n            b = lst[i];\n        }\n    }\n    return [a, b];\n}\n",
  "    var largest = undefined;\n    var smallest = undefined;\n    for (var i = 0;\
    \ i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest ===\
    \ undefined){\n                largest = lst[i];\n            }\n            else\
    \ if (lst[i] > largest){\n                largest = lst[i];\n            }\n \
    \       }\n        else if (lst[i] > 0){\n            if (smallest === undefined){\n\
    \                smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var largestNegative = undefined;\n\
    \    var smallestPositive = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0){\n            if (largestNegative == undefined){\n  \
    \              largestNegative = lst[i];\n            }\n            else if (lst[i]\
    \ > largestNegative){\n                largestNegative = lst[i];\n           \
    \ }\n        }\n        else if (lst[i] > 0){\n            if (smallestPositive\
    \ == undefined){\n                smallestPositive = lst[i];\n            }\n\
    \            else if (lst[i] < smallestPositive){\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ neg = [];\n    var pos = [];\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0){\n            neg.push(lst[i]);\n        }\n        else\
    \ if (lst[i] > 0){\n            pos.push(lst[i]);\n        }\n    }\n    if (neg.length\
    \ == 0){\n        neg.push(undefined);\n    }\n    if (pos.length == 0){\n   \
    \     pos.push(undefined);\n    }\n    return [Math.max.apply(null, neg), Math.min.apply(null,\
    \ pos)];\n}\n", "    var negative = [];\n    var positive = [];\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            negative.push(lst[i]);\n\
    \        }\n        else if (lst[i] > 0){\n            positive.push(lst[i]);\n\
    \        }\n    }\n    if (negative.length == 0){\n        negative.push(undefined);\n\
    \    }\n    if (positive.length == 0){\n        positive.push(undefined);\n  \
    \  }\n    return [Math.max.apply(null, negative), Math.min.apply(null, positive)];\n\
    }\n", "    var largestNegative = undefined;\n    var smallestPositive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (largestNegative === undefined){\n                largestNegative = lst[i];\n\
    \            } else if (lst[i] > largestNegative){\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0){\n            if (smallestPositive\
    \ === undefined){\n                smallestPositive = lst[i];\n            } else\
    \ if (lst[i] < smallestPositive){\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n       \
    \ if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n           \
    \ largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n",
  "    var largest = undefined;\n    var smallest = undefined;\n    for (var i = 0;\
    \ i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest ===\
    \ undefined){\n                largest = lst[i];\n            }\n            else\
    \ if (lst[i] > largest){\n                largest = lst[i];\n            }\n \
    \       }\n        else if (lst[i] > 0){\n            if (smallest === undefined){\n\
    \                smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var a = undefined;\n    var\
    \ b = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            if (a === undefined){\n                a = lst[i];\n    \
    \        }\n            else if (lst[i] > a){\n                a = lst[i];\n \
    \           }\n        }\n        else if (lst[i] > 0){\n            if (b ===\
    \ undefined){\n                b = lst[i];\n            }\n            else if\
    \ (lst[i] < b){\n                b = lst[i];\n            }\n        }\n    }\n\
    \    return [a, b];\n}\n", "    var max = undefined;\n    var min = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (max ==\
    \ undefined || lst[i] > max)){\n            max = lst[i];\n        }\n       \
    \ if (lst[i] > 0 && (min == undefined || lst[i] < min)){\n            min = lst[i];\n\
    \        }\n    }\n    return [max, min];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0){\n            if (largest === undefined){\n           \
    \     largest = lst[i];\n            } else if (lst[i] > largest){\n         \
    \       largest = lst[i];\n            }\n        } else if (lst[i] > 0){\n  \
    \          if (smallest === undefined){\n                smallest = lst[i];\n\
    \            } else if (lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "  var\
    \ a = undefined;\n  var b = undefined;\n  for (var i = 0; i < lst.length; i++){\n\
    \    if (lst[i] < 0){\n      if (a == undefined){\n        a = lst[i];\n     \
    \ }\n      else if (lst[i] > a){\n        a = lst[i];\n      }\n    }\n    else\
    \ if (lst[i] > 0){\n      if (b == undefined){\n        b = lst[i];\n      }\n\
    \      else if (lst[i] < b){\n        b = lst[i];\n      }\n    }\n  }\n  return\
    \ [a, b];\n}\n", "    var max = undefined;\n    var min = undefined;\n    for\
    \ (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (max == undefined\
    \ || lst[i] > max)){\n            max = lst[i];\n        }\n        if (lst[i]\
    \ > 0 && (min == undefined || lst[i] < min)){\n            min = lst[i];\n   \
    \     }\n    }\n    return [max, min];\n}\n", "    var a = undefined;\n    var\
    \ b = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (a == undefined || lst[i] > a)){\n            a = lst[i];\n        }\n\
    \        if (lst[i] > 0 && (b == undefined || lst[i] < b)){\n            b = lst[i];\n\
    \        }\n    }\n    return [a, b];\n}\n", "    var largest = undefined;\n \
    \   var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n   \
    \     if (lst[i] < 0){\n            if (largest == undefined){\n             \
    \   largest = lst[i];\n            }\n            else if (lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n        else if\
    \ (lst[i] > 0){\n            if (smallest == undefined){\n                smallest\
    \ = lst[i];\n            }\n            else if (lst[i] < smallest){\n       \
    \         smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (largest === undefined){\n                largest = lst[i];\n       \
    \     }\n            else if (lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (smallest\
    \ === undefined){\n                smallest = lst[i];\n            }\n       \
    \     else if (lst[i] < smallest){\n                smallest = lst[i];\n     \
    \       }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var neg\
    \ = [];\n    var pos = [];\n    for (var i = 0; i < lst.length; i++){\n      \
    \  if (lst[i] < 0){\n            neg.push(lst[i]);\n        }\n        else if\
    \ (lst[i] > 0){\n            pos.push(lst[i]);\n        }\n    }\n    if (neg.length\
    \ == 0){\n        neg.push(undefined);\n    }\n    if (pos.length == 0){\n   \
    \     pos.push(undefined);\n    }\n    return [Math.max.apply(null, neg), Math.min.apply(null,\
    \ pos)];\n}\n", "    var largestNegative = undefined;\n    var smallestPositive\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            if (largestNegative === undefined){\n                largestNegative\
    \ = lst[i];\n            }\n            else if (lst[i] > largestNegative){\n\
    \                largestNegative = lst[i];\n            }\n        }\n       \
    \ else if (lst[i] > 0){\n            if (smallestPositive === undefined){\n  \
    \              smallestPositive = lst[i];\n            }\n            else if\
    \ (lst[i] < smallestPositive){\n                smallestPositive = lst[i];\n \
    \           }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largest_negative = undefined;\n    var smallest_positive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest_negative\
    \ == undefined || lst[i] > largest_negative)){\n            largest_negative =\
    \ lst[i];\n        }\n        if (lst[i] > 0 && (smallest_positive == undefined\
    \ || lst[i] < smallest_positive)){\n            smallest_positive = lst[i];\n\
    \        }\n    }\n    return [largest_negative, smallest_positive];\n}\n", " \
    \   var largestNegative = undefined;\n    var smallestPositive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largestNegative\
    \ === undefined || lst[i] > largestNegative)){\n            largestNegative =\
    \ lst[i];\n        }\n        if (lst[i] > 0 && (smallestPositive === undefined\
    \ || lst[i] < smallestPositive)){\n            smallestPositive = lst[i];\n  \
    \      }\n    }\n    return [largestNegative, smallestPositive];\n}\n", "    var\
    \ smallest = undefined;\n    var largest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] > 0){\n            if (smallest === undefined){\n\
    \                smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \        else if (lst[i] < 0){\n            if (largest === undefined){\n    \
    \            largest = lst[i];\n            }\n            else if (lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n        if (lst[i] < 0 && (largest == undefined || lst[i]\
    \ > largest)){\n            largest = lst[i];\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var largestNegative = undefined;\n    var smallestPositive\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            if (largestNegative === undefined){\n                largestNegative\
    \ = lst[i];\n            }\n            else if (lst[i] > largestNegative){\n\
    \                largestNegative = lst[i];\n            }\n        }\n       \
    \ else if (lst[i] > 0){\n            if (smallestPositive === undefined){\n  \
    \              smallestPositive = lst[i];\n            }\n            else if\
    \ (lst[i] < smallestPositive){\n                smallestPositive = lst[i];\n \
    \           }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest_neg = undefined;\n    var smallest_pos = undefined;\n    for (var i\
    \ = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest_neg == undefined\
    \ || lst[i] > largest_neg)){\n            largest_neg = lst[i];\n        }\n \
    \       if (lst[i] > 0 && (smallest_pos == undefined || lst[i] < smallest_pos)){\n\
    \            smallest_pos = lst[i];\n        }\n    }\n    return [largest_neg,\
    \ smallest_pos];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest\
    \ == undefined || lst[i] > largest)){\n            largest = lst[i];\n       \
    \ }\n        if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ === undefined){\n                largest = lst[i];\n            } else if (lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        } else\
    \ if (lst[i] > 0){\n            if (smallest === undefined){\n               \
    \ smallest = lst[i];\n            } else if (lst[i] < smallest){\n           \
    \     smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var smallest = undefined;\n    var largest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > 0 && (smallest\
    \ == undefined || lst[i] < smallest)){\n            smallest = lst[i];\n     \
    \   }\n        if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n\
    \            largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largestNegative = undefined;\n    var smallestPositive = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (largestNegative == undefined){\n                largestNegative = lst[i];\n\
    \            } else if (lst[i] > largestNegative){\n                largestNegative\
    \ = lst[i];\n            }\n        } else if (lst[i] > 0){\n            if (smallestPositive\
    \ == undefined){\n                smallestPositive = lst[i];\n            } else\
    \ if (lst[i] < smallestPositive){\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ === undefined){\n                largest = lst[i];\n            }\n        \
    \    else if (lst[i] > largest){\n                largest = lst[i];\n        \
    \    }\n        }\n        else if (lst[i] > 0){\n            if (smallest ===\
    \ undefined){\n                smallest = lst[i];\n            }\n           \
    \ else if (lst[i] < smallest){\n                smallest = lst[i];\n         \
    \   }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            if (largest === undefined || lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        }\n \
    \       else if (lst[i] > 0){\n            if (smallest === undefined || lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var max = 0;\n    var min\
    \ = 0;\n    for(var i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n\
    \            max = lst[i];\n        }\n        if(lst[i] < min){\n           \
    \ min = lst[i];\n        }\n    }\n    return [max, min];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largestNegative\
    \ === undefined){\n                largestNegative = lst[i];\n            } else\
    \ if (lst[i] > largestNegative){\n                largestNegative = lst[i];\n\
    \            }\n        } else if (lst[i] > 0){\n            if (smallestPositive\
    \ === undefined){\n                smallestPositive = lst[i];\n            } else\
    \ if (lst[i] < smallestPositive){\n                smallestPositive = lst[i];\n\
    \            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest\
    \ == undefined){\n                largest = lst[i];\n            }\n         \
    \   else if (lst[i] > largest){\n                largest = lst[i];\n         \
    \   }\n        }\n        else if (lst[i] > 0){\n            if (smallest == undefined){\n\
    \                smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var smallest_positive = undefined;\n\
    \    var largest_negative = undefined;\n    for(var i = 0; i < lst.length; i++){\n\
    \        if(lst[i] < 0){\n            if(largest_negative == undefined){\n   \
    \             largest_negative = lst[i];\n            }\n            else if(lst[i]\
    \ > largest_negative){\n                largest_negative = lst[i];\n         \
    \   }\n        }\n        else if(lst[i] > 0){\n            if(smallest_positive\
    \ == undefined){\n                smallest_positive = lst[i];\n            }\n\
    \            else if(lst[i] < smallest_positive){\n                smallest_positive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    var a = undefined;\n    var b = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (a == undefined || lst[i] > a)){\n\
    \            a = lst[i];\n        }\n        if (lst[i] > 0 && (b == undefined\
    \ || lst[i] < b)){\n            b = lst[i];\n        }\n    }\n    return [a,\
    \ b];\n}\n", "    var max = undefined;\n    var min = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (max == undefined ||\
    \ lst[i] > max)){\n            max = lst[i];\n        }\n        if (lst[i] >\
    \ 0 && (min == undefined || lst[i] < min)){\n            min = lst[i];\n     \
    \   }\n    }\n    return [max, min];\n}\n", "    var largest = undefined;\n  \
    \  var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n    \
    \    if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n        \
    \    largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var max = undefined;\n    var min\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0){\n            if (max === undefined){\n                max = lst[i];\n\
    \            }\n            else if (lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (min\
    \ === undefined){\n                min = lst[i];\n            }\n            else\
    \ if (lst[i] < min){\n                min = lst[i];\n            }\n        }\n\
    \    }\n    return [max, min];\n}\n", "    var largest = undefined;\n    var smallest\
    \ = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (largest == undefined || lst[i] > largest)){\n            largest = lst[i];\n\
    \        }\n        if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n\
    \            smallest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined || lst[i]\
    \ > largest)){\n            largest = lst[i];\n        }\n        if (lst[i] >\
    \ 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest =\
    \ lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            if (largest === undefined){\n \
    \               largest = lst[i];\n            } else if (lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        } else if (lst[i] >\
    \ 0){\n            if (smallest === undefined){\n                smallest = lst[i];\n\
    \            } else if (lst[i] < smallest){\n                smallest = lst[i];\n\
    \            }\n        }\n    }\n    return [largest, smallest];\n}\n", "   \
    \ var smallest = undefined;\n    var largest = undefined;\n    for (var i = 0;\
    \ i < lst.length; i++){\n        if (lst[i] > 0 && (smallest == undefined || lst[i]\
    \ < smallest)){\n            smallest = lst[i];\n        }\n        if (lst[i]\
    \ < 0 && (largest == undefined || lst[i] > largest)){\n            largest = lst[i];\n\
    \        }\n    }\n    return [largest, smallest];\n}\n", "    var max = undefined;\n\
    \    var min = undefined;\n    for (var i = 0; i < lst.length; i++){\n       \
    \ if (lst[i] > 0){\n            if (min === undefined){\n                min =\
    \ lst[i];\n            }\n            else if (lst[i] < min){\n              \
    \  min = lst[i];\n            }\n        }\n        else if (lst[i] < 0){\n  \
    \          if (max === undefined){\n                max = lst[i];\n          \
    \  }\n            else if (lst[i] > max){\n                max = lst[i];\n   \
    \         }\n        }\n    }\n    return [max, min];\n}\n", "    var a = undefined;\n\
    \    var b = undefined;\n    for (var i = 0; i < lst.length; i++) {\n        if\
    \ (lst[i] < 0) {\n            if (a === undefined) {\n                a = lst[i];\n\
    \            } else if (lst[i] > a) {\n                a = lst[i];\n         \
    \   }\n        } else if (lst[i] > 0) {\n            if (b === undefined) {\n\
    \                b = lst[i];\n            } else if (lst[i] < b) {\n         \
    \       b = lst[i];\n            }\n        }\n    }\n    return [a, b];\n}\n",
  "    var largest_neg = undefined;\n    var smallest_pos = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n            if (largest_neg\
    \ == undefined){\n                largest_neg = lst[i];\n            }\n     \
    \       else if (lst[i] > largest_neg){\n                largest_neg = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (smallest_pos\
    \ == undefined){\n                smallest_pos = lst[i];\n            }\n    \
    \        else if (lst[i] < smallest_pos){\n                smallest_pos = lst[i];\n\
    \            }\n        }\n    }\n    return [largest_neg, smallest_pos];\n}\n",
  "    var a = undefined;\n    var b = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            if (a === undefined){\n       \
    \         a = lst[i];\n            }\n            else if (lst[i] > a){\n    \
    \            a = lst[i];\n            }\n        }\n        else if (lst[i] >\
    \ 0){\n            if (b === undefined){\n                b = lst[i];\n      \
    \      }\n            else if (lst[i] < b){\n                b = lst[i];\n   \
    \         }\n        }\n    }\n    return [a, b];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n    \
    \        smallest = lst[i];\n        }\n        if (lst[i] < 0 && (largest ==\
    \ undefined || lst[i] > largest)){\n            largest = lst[i];\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var a = undefined;\n    var\
    \ b = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ < 0 && (a == undefined || lst[i] > a)){\n            a = lst[i];\n        }\n\
    \        if (lst[i] > 0 && (b == undefined || lst[i] < b)){\n            b = lst[i];\n\
    \        }\n    }\n    return [a, b];\n}\n", "    var max = undefined;\n    var\
    \ min = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i]\
    \ > 0 && (min == undefined || lst[i] < min)){\n            min = lst[i];\n   \
    \     }\n        if (lst[i] < 0 && (max == undefined || lst[i] > max)){\n    \
    \        max = lst[i];\n        }\n    }\n    return [max, min];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largest === undefined){\n\
    \                largest = lst[i];\n            }\n            else if (lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        }\n \
    \       else if (lst[i] > 0){\n            if (smallest === undefined){\n    \
    \            smallest = lst[i];\n            }\n            else if (lst[i] <\
    \ smallest){\n                smallest = lst[i];\n            }\n        }\n \
    \   }\n    return [largest, smallest];\n}\n", "    var largest_neg = undefined;\n\
    \    var smallest_pos = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0){\n            if (largest_neg === undefined){\n     \
    \           largest_neg = lst[i];\n            }\n            else if (lst[i]\
    \ > largest_neg){\n                largest_neg = lst[i];\n            }\n    \
    \    }\n        else if (lst[i] > 0){\n            if (smallest_pos === undefined){\n\
    \                smallest_pos = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest_pos){\n                smallest_pos = lst[i];\n            }\n  \
    \      }\n    }\n    return [largest_neg, smallest_pos];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largestNegative\
    \ === undefined){\n                largestNegative = lst[i];\n            }\n\
    \            else if (lst[i] > largestNegative){\n                largestNegative\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n       \
    \     if (smallestPositive === undefined){\n                smallestPositive =\
    \ lst[i];\n            }\n            else if (lst[i] < smallestPositive){\n \
    \               smallestPositive = lst[i];\n            }\n        }\n    }\n\
    \    return [largestNegative, smallestPositive];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n      \
    \      largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largestNegative = undefined;\n\
    \    var smallestPositive = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0){\n            if (largestNegative === undefined){\n \
    \               largestNegative = lst[i];\n            }\n            else if\
    \ (lst[i] > largestNegative){\n                largestNegative = lst[i];\n   \
    \         }\n        }\n        else if (lst[i] > 0){\n            if (smallestPositive\
    \ === undefined){\n                smallestPositive = lst[i];\n            }\n\
    \            else if (lst[i] < smallestPositive){\n                smallestPositive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largestNegative, smallestPositive];\n\
    }\n", "    var max = undefined;\n    var min = undefined;\n    for (var i = 0;\
    \ i < lst.length; i++){\n        if (lst[i] < 0){\n            if (max === undefined){\n\
    \                max = lst[i];\n            }\n            else if (lst[i] > max){\n\
    \                max = lst[i];\n            }\n        }\n        else if (lst[i]\
    \ > 0){\n            if (min === undefined){\n                min = lst[i];\n\
    \            }\n            else if (lst[i] < min){\n                min = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    var a = undefined;\n\
    \    var b = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] > 0 && (b == undefined || lst[i] < b)){\n            b = lst[i];\n \
    \       }\n        if (lst[i] < 0 && (a == undefined || lst[i] > a)){\n      \
    \      a = lst[i];\n        }\n    }\n    return [a, b];\n}\n", "    var smallest\
    \ = undefined;\n    var largest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] > 0){\n            if (smallest == undefined){\n \
    \               smallest = lst[i];\n            }\n            else if (lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \        else if (lst[i] < 0){\n            if (largest == undefined){\n     \
    \           largest = lst[i];\n            }\n            else if (lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n    }\n    return\
    \ [largest, smallest];\n}\n", "    var largest_negative = undefined;\n    var\
    \ smallest_positive = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0){\n            if (largest_negative == undefined){\n \
    \               largest_negative = lst[i];\n            }\n            else if\
    \ (lst[i] > largest_negative){\n                largest_negative = lst[i];\n \
    \           }\n        }\n        else if (lst[i] > 0){\n            if (smallest_positive\
    \ == undefined){\n                smallest_positive = lst[i];\n            }\n\
    \            else if (lst[i] < smallest_positive){\n                smallest_positive\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest_negative, smallest_positive];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largest === undefined){\n\
    \                largest = lst[i];\n            }\n            else if (lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        }\n \
    \       else if (lst[i] > 0){\n            if (smallest === undefined){\n    \
    \            smallest = lst[i];\n            }\n            else if (lst[i] <\
    \ smallest){\n                smallest = lst[i];\n            }\n        }\n \
    \   }\n    return [largest, smallest];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0){\n            if (largest == undefined){\n            \
    \    largest = lst[i];\n            }\n            else if (lst[i] > largest){\n\
    \                largest = lst[i];\n            }\n        }\n        else if\
    \ (lst[i] > 0){\n            if (smallest == undefined){\n                smallest\
    \ = lst[i];\n            }\n            else if (lst[i] < smallest){\n       \
    \         smallest = lst[i];\n            }\n        }\n    }\n    return [largest,\
    \ smallest];\n}\n", "    var smallest = undefined;\n    var largest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (smallest\
    \ == undefined || lst[i] > smallest)){\n            smallest = lst[i];\n     \
    \   }\n        if (lst[i] > 0 && (largest == undefined || lst[i] < largest)){\n\
    \            largest = lst[i];\n        }\n    }\n    return [smallest, largest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined || lst[i]\
    \ > largest)){\n            largest = lst[i];\n        }\n        if (lst[i] >\
    \ 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest =\
    \ lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var a\
    \ = undefined;\n    var b = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] > 0){\n            if (b == undefined){\n                b\
    \ = lst[i];\n            }\n            else if (lst[i] < b){\n              \
    \  b = lst[i];\n            }\n        }\n        else if (lst[i] < 0){\n    \
    \        if (a == undefined){\n                a = lst[i];\n            }\n  \
    \          else if (lst[i] > a){\n                a = lst[i];\n            }\n\
    \        }\n    }\n    return [a, b];\n}\n", "    var neg = [];\n    var pos =\
    \ [];\n    var result = [];\n    for (var i = 0; i < lst.length; i++){\n     \
    \   if (lst[i] < 0){\n            neg.push(lst[i]);\n        }\n        else if\
    \ (lst[i] > 0){\n            pos.push(lst[i]);\n        }\n    }\n    if (neg.length\
    \ == 0){\n        result.push(undefined);\n    }\n    else{\n        result.push(Math.max.apply(null,\
    \ neg));\n    }\n    if (pos.length == 0){\n        result.push(undefined);\n\
    \    }\n    else{\n        result.push(Math.min.apply(null, pos));\n    }\n  \
    \  return result;\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] < 0){\n       \
    \     if (largest == undefined){\n                largest = lst[i];\n        \
    \    }\n            else if (lst[i] > largest){\n                largest = lst[i];\n\
    \            }\n        }\n        else if (lst[i] > 0){\n            if (smallest\
    \ == undefined){\n                smallest = lst[i];\n            }\n        \
    \    else if (lst[i] < smallest){\n                smallest = lst[i];\n      \
    \      }\n        }\n    }\n    return [largest, smallest];\n}\n", "    var a\
    \ = undefined;\n    var b = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0 && (a == undefined || lst[i] > a)){\n            a = lst[i];\n\
    \        }\n        if (lst[i] > 0 && (b == undefined || lst[i] < b)){\n     \
    \       b = lst[i];\n        }\n    }\n    return [a, b];\n}\n", "    var largest\
    \ = undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] > 0){\n            if (smallest == undefined || lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \        else if (lst[i] < 0){\n            if (largest == undefined || lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        }\n \
    \   }\n    return [largest, smallest];\n}\n", "    var largestNegative = undefined;\n\
    \    var smallestPositive = undefined;\n    for (var i = 0; i < lst.length; i++)\
    \ {\n        if (lst[i] < 0 && (largestNegative === undefined || lst[i] > largestNegative))\
    \ {\n            largestNegative = lst[i];\n        }\n        if (lst[i] > 0\
    \ && (smallestPositive === undefined || lst[i] < smallestPositive)) {\n      \
    \      smallestPositive = lst[i];\n        }\n    }\n    return [largestNegative,\
    \ smallestPositive];\n}\n", "    var max = lst[0];\n    var min = lst[0];\n  \
    \  for(var i = 0; i < lst.length; i++){\n        if(lst[i] > max){\n         \
    \   max = lst[i];\n        }\n        if(lst[i] < min){\n            min = lst[i];\n\
    \        }\n    }\n    return [max, min];\n}\n", "    var max = undefined;\n \
    \   var min = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] > 0){\n            if (min == undefined || lst[i] < min){\n        \
    \        min = lst[i];\n            }\n        }\n        else if (lst[i] < 0){\n\
    \            if (max == undefined || lst[i] > max){\n                max = lst[i];\n\
    \            }\n        }\n    }\n    return [max, min];\n}\n", "    var a = undefined;\n\
    \    var b = undefined;\n    for (var i = 0; i < lst.length; i++){\n        if\
    \ (lst[i] < 0 && (a == undefined || lst[i] > a)){\n            a = lst[i];\n \
    \       }\n        if (lst[i] > 0 && (b == undefined || lst[i] < b)){\n      \
    \      b = lst[i];\n        }\n    }\n    return [a, b];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largestNegative === undefined\
    \ || lst[i] > largestNegative)){\n            largestNegative = lst[i];\n    \
    \    }\n        if (lst[i] > 0 && (smallestPositive === undefined || lst[i] <\
    \ smallestPositive)){\n            smallestPositive = lst[i];\n        }\n   \
    \ }\n    return [largestNegative, smallestPositive];\n}\n", "    var largest =\
    \ undefined;\n    var smallest = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0){\n            if (largest == undefined || lst[i]\
    \ > largest){\n                largest = lst[i];\n            }\n        }\n \
    \       else if (lst[i] > 0){\n            if (smallest == undefined || lst[i]\
    \ < smallest){\n                smallest = lst[i];\n            }\n        }\n\
    \    }\n    return [largest, smallest];\n}\n", "    var largest_negative = undefined;\n\
    \    var smallest_positive = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0 && (largest_negative == undefined || lst[i] > largest_negative)){\n\
    \            largest_negative = lst[i];\n        }\n        if (lst[i] > 0 &&\
    \ (smallest_positive == undefined || lst[i] < smallest_positive)){\n         \
    \   smallest_positive = lst[i];\n        }\n    }\n    return [largest_negative,\
    \ smallest_positive];\n}\n", "    var largest = undefined;\n    var smallest =\
    \ undefined;\n    for (var i = 0; i < lst.length; i++){\n        if (lst[i] <\
    \ 0){\n            if (largest === undefined){\n                largest = lst[i];\n\
    \            }\n            else if (lst[i] > largest){\n                largest\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n       \
    \     if (smallest === undefined){\n                smallest = lst[i];\n     \
    \       }\n            else if (lst[i] < smallest){\n                smallest\
    \ = lst[i];\n            }\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined || lst[i]\
    \ > largest)){\n            largest = lst[i];\n        }\n        if (lst[i] >\
    \ 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest =\
    \ lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largestNegative\
    \ === undefined){\n                largestNegative = lst[i];\n            }\n\
    \            else if (lst[i] > largestNegative){\n                largestNegative\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n       \
    \     if (smallestPositive === undefined){\n                smallestPositive =\
    \ lst[i];\n            }\n            else if (lst[i] < smallestPositive){\n \
    \               smallestPositive = lst[i];\n            }\n        }\n    }\n\
    \    return [largestNegative, smallestPositive];\n}\n", "    var largestNegative\
    \ = undefined;\n    var smallestPositive = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0){\n            if (largestNegative\
    \ === undefined || lst[i] > largestNegative){\n                largestNegative\
    \ = lst[i];\n            }\n        }\n        else if (lst[i] > 0){\n       \
    \     if (smallestPositive === undefined || lst[i] < smallestPositive){\n    \
    \            smallestPositive = lst[i];\n            }\n        }\n    }\n   \
    \ return [largestNegative, smallestPositive];\n}\n", "    var largest = undefined;\n\
    \    var smallest = undefined;\n    for (var i = 0; i < lst.length; i++){\n  \
    \      if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n      \
    \      largest = lst[i];\n        }\n        if (lst[i] > 0 && (smallest == undefined\
    \ || lst[i] < smallest)){\n            smallest = lst[i];\n        }\n    }\n\
    \    return [largest, smallest];\n}\n", "    var largest_neg = undefined;\n  \
    \  var smallest_pos = undefined;\n    for (var i = 0; i < lst.length; i++){\n\
    \        if (lst[i] < 0 && (largest_neg == undefined || lst[i] > largest_neg)){\n\
    \            largest_neg = lst[i];\n        }\n        if (lst[i] > 0 && (smallest_pos\
    \ == undefined || lst[i] < smallest_pos)){\n            smallest_pos = lst[i];\n\
    \        }\n    }\n    return [largest_neg, smallest_pos];\n}\n", "    var largest_neg\
    \ = undefined;\n    var smallest_pos = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0 && (largest_neg == undefined || lst[i] > largest_neg)){\n\
    \            largest_neg = lst[i];\n        }\n        if (lst[i] > 0 && (smallest_pos\
    \ == undefined || lst[i] < smallest_pos)){\n            smallest_pos = lst[i];\n\
    \        }\n    }\n    return [largest_neg, smallest_pos];\n}\n", "    var largest_neg\
    \ = undefined;\n    var smallest_pos = undefined;\n    for (var i = 0; i < lst.length;\
    \ i++){\n        if (lst[i] < 0 && (largest_neg == undefined || lst[i] > largest_neg)){\n\
    \            largest_neg = lst[i];\n        }\n        if (lst[i] > 0 && (smallest_pos\
    \ == undefined || lst[i] < smallest_pos)){\n            smallest_pos = lst[i];\n\
    \        }\n    }\n    return [largest_neg, smallest_pos];\n}\n", "    var neg\
    \ = [];\n    var pos = [];\n    for (var i = 0; i < lst.length; i++){\n      \
    \  if (lst[i] < 0){\n            neg.push(lst[i]);\n        }\n        else if\
    \ (lst[i] > 0){\n            pos.push(lst[i]);\n        }\n    }\n    if (neg.length\
    \ == 0){\n        neg.push(undefined);\n    }\n    if (pos.length == 0){\n   \
    \     pos.push(undefined);\n    }\n    return [Math.max.apply(null, neg), Math.min.apply(null,\
    \ pos)];\n}\n", "    var largest = undefined;\n    var smallest = undefined;\n\
    \    for (var i = 0; i < lst.length; i++){\n        if (lst[i] > 0 && (smallest\
    \ == undefined || lst[i] < smallest)){\n            smallest = lst[i];\n     \
    \   }\n        if (lst[i] < 0 && (largest == undefined || lst[i] > largest)){\n\
    \            largest = lst[i];\n        }\n    }\n    return [largest, smallest];\n\
    }\n", "    var largest = undefined;\n    var smallest = undefined;\n    for (var\
    \ i = 0; i < lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined\
    \ || lst[i] > largest)){\n            largest = lst[i];\n        }\n        if\
    \ (lst[i] > 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest\
    \ = lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n", "    var\
    \ largest = undefined;\n    var smallest = undefined;\n    for (var i = 0; i <\
    \ lst.length; i++){\n        if (lst[i] < 0 && (largest == undefined || lst[i]\
    \ > largest)){\n            largest = lst[i];\n        }\n        if (lst[i] >\
    \ 0 && (smallest == undefined || lst[i] < smallest)){\n            smallest =\
    \ lst[i];\n        }\n    }\n    return [largest, smallest];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

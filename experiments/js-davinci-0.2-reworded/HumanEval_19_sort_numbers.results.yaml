name: HumanEval_19_sort_numbers
language: js
results:
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sort = nums.sort(function(a, b){\n\
    \    return nums_map[a] - nums_map[b];\n  });\n  return nums_sort.join(\" \");\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp4g246cmb.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_numbers[a] -\
    \ nums_to_numbers[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpvgi2jh_1.js:9\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpvgi2jh_1.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpvgi2jh_1.js:8:28)\n\
    \    at test (/tmp/tmpvgi2jh_1.js:21:20)\n    at Object.<anonymous> (/tmp/tmpvgi2jh_1.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpofiko9lf.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpcf_acjgc.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_sorted_str_final = \"\";\n\
    \  var nums_sorted_str_final_final = \"\";\n  for (var i = 0; i < nums.length;\
    \ i++) {\n    if (nums[i] === \"zero\") {\n      nums_sorted.push(0);\n    }\n\
    \    else if (nums[i] === \"one\") {\n      nums_sorted.push(1);\n    }\n    else\
    \ if (nums[i] === \"two\") {\n      nums_sorted.push(2);\n    }\n    else if (nums[i]\
    \ === \"three\") {\n      nums_sorted.push(3);\n    }\n    else if (nums[i] ===\
    \ \"four\") {\n      nums_sorted.push(4);\n    }\n    else if (nums[i] === \"\
    five\") {\n      nums_sorted.push(5);\n    }\n    else if (nums[i] === \"six\"\
    ) {\n      nums_sorted.push(6);\n    }\n    else if (nums[i] === \"seven\") {\n\
    \      nums_sorted.push(7);\n    }\n    else if (nums[i] === \"eight\") {\n  \
    \    nums_sorted.push(8);\n    }\n    else if (nums[i] === \"nine\") {\n     \
    \ nums_sorted.push(9);\n    }\n  }\n  nums_sorted.sort(function(a, b){return a-b});\n\
    \  for (var i = 0; i < nums_sorted.length; i++) {\n    if (nums_sorted[i] ===\
    \ 0) {\n      nums_sorted_str += \"zero \";\n    }\n    else if (nums_sorted[i]\
    \ === 1) {\n      nums_sorted_str += \"one \";\n    }\n    else if (nums_sorted[i]\
    \ ===\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpgh31bf8b.js:53\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpw5v10fxq.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp_fsap663.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp_fsap663.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp_fsap663.js:8:26)\n\
    \    at test (/tmp/tmp_fsap663.js:21:20)\n    at Object.<anonymous> (/tmp/tmp_fsap663.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var number_map = {\n        'zero': 0,\n\
    \        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var sorted_numbers = numbers.split(' ').sort(function(a,\
    \ b){\n        return number_map[a] - number_map[b];\n    });\n    return sorted_numbers.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var numeral_map = {\n        'zero': 0,\n\
    \        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var nums_array = numbers.split(' ');\n  \
    \  var nums_array_int = [];\n    for (var i = 0; i < nums_array.length; i++){\n\
    \        nums_array_int.push(numeral_map[nums_array[i]]);\n    }\n    nums_array_int.sort(function(a,\
    \ b){return a-b});\n    var nums_array_str = [];\n    for (var i = 0; i < nums_array_int.length;\
    \ i++){\n        for (var key in numeral_map){\n            if (numeral_map[key]\
    \ === nums_array_int[i]){\n                nums_array_str.push(key);\n       \
    \     }\n        }\n    }\n    return nums_array_str.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_to_sort\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    switch(nums[i]){\n    \
    \  case \"zero\":\n        nums_to_sort.push(0);\n        break;\n      case \"\
    one\":\n        nums_to_sort.push(1);\n        break;\n      case \"two\":\n \
    \       nums_to_sort.push(2);\n        break;\n      case \"three\":\n       \
    \ nums_to_sort.push(3);\n        break;\n      case \"four\":\n        nums_to_sort.push(4);\n\
    \        break;\n      case \"five\":\n        nums_to_sort.push(5);\n       \
    \ break;\n      case \"six\":\n        nums_to_sort.push(6);\n        break;\n\
    \      case \"seven\":\n        nums_to_sort.push(7);\n        break;\n      case\
    \ \"eight\":\n        nums_to_sort.push(8);\n        break;\n      case \"nine\"\
    :\n        nums_to_sort.push(9);\n        break;\n    }\n  }\n  nums_to_sort.sort(function(a,\
    \ b){return a-b});\n  var sorted_nums = [];\n  for (var i = 0; i < nums_to_sort.length;\
    \ i++){\n    switch(nums_to_sort[i]){\n      case 0:\n        sorted_nums.push(\"\
    zero\");\n        break;\n      case 1:\n        sorted_nums.push(\"one\");\n\
    \        break;\n      case 2:\n        sorted_nums.push(\"two\");\n        break;\n\
    \      case 3:\n        sorted_nums.push(\"three\");\n        break;\n      case\
    \ 4:\n        sorted_nums.push(\"four\");\n        break;\n      case 5:\n   \
    \     sorted_nums.push(\"five\");\n        break;\n      case 6:\n        sorted_nums.push(\"\
    six\");\n        break;\n      case 7:\n        sorted_nums.push(\"seven\");\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp0_5wc2j6.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpjf6u0gnx.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpjf6u0gnx.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpjf6u0gnx.js:8:28)\n\
    \    at test (/tmp/tmpjf6u0gnx.js:21:20)\n    at Object.<anonymous> (/tmp/tmpjf6u0gnx.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var num_hash = {\n    'zero': 0,\n    'one':\
    \ 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n    'six':\
    \ 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  var num_arr = numbers.split('\
    \ ');\n  var num_arr_sorted = num_arr.sort(function(a, b){\n    return num_hash[a]\
    \ - num_hash[b];\n  });\n  return num_arr_sorted.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    switch(nums[i]){\n    \
    \  case \"zero\":\n        nums_int.push(0);\n        break;\n      case \"one\"\
    :\n        nums_int.push(1);\n        break;\n      case \"two\":\n        nums_int.push(2);\n\
    \        break;\n      case \"three\":\n        nums_int.push(3);\n        break;\n\
    \      case \"four\":\n        nums_int.push(4);\n        break;\n      case \"\
    five\":\n        nums_int.push(5);\n        break;\n      case \"six\":\n    \
    \    nums_int.push(6);\n        break;\n      case \"seven\":\n        nums_int.push(7);\n\
    \        break;\n      case \"eight\":\n        nums_int.push(8);\n        break;\n\
    \      case \"nine\":\n        nums_int.push(9);\n        break;\n    }\n  }\n\
    \  nums_int.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_int.length;\
    \ i++){\n    switch(nums_int[i]){\n      case 0:\n        nums_int[i] = \"zero\"\
    ;\n        break;\n      case 1:\n        nums_int[i] = \"one\";\n        break;\n\
    \      case 2:\n        nums_int[i] = \"two\";\n        break;\n      case 3:\n\
    \        nums_int[i] = \"three\";\n        break;\n      case 4:\n        nums_int[i]\
    \ = \"four\";\n        break;\n      case 5:\n        nums_int[i] = \"five\";\n\
    \        break;\n      case 6:\n        nums_int[i] = \"six\";\n        break;\n\
    \      case 7:\n        nums_int[i] = \"seven\";\n        break;\n      case 8:\n\
    \        nums_int[i] = \"eight\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp2b5ro7ne.js:71\n        nums_int[i] = \"eight\n               \
    \       ^^^^^^\n\nSyntaxError: Invalid or unexpected token\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    var nums_sorted = [];\n    for (var\
    \ i = 0; i < nums.length; i++){\n        if (nums[i] == \"zero\"){\n         \
    \   nums_int.push(0);\n        }\n        else if (nums[i] == \"one\"){\n    \
    \        nums_int.push(1);\n        }\n        else if (nums[i] == \"two\"){\n\
    \            nums_int.push(2);\n        }\n        else if (nums[i] == \"three\"\
    ){\n            nums_int.push(3);\n        }\n        else if (nums[i] == \"four\"\
    ){\n            nums_int.push(4);\n        }\n        else if (nums[i] == \"five\"\
    ){\n            nums_int.push(5);\n        }\n        else if (nums[i] == \"six\"\
    ){\n            nums_int.push(6);\n        }\n        else if (nums[i] == \"seven\"\
    ){\n            nums_int.push(7);\n        }\n        else if (nums[i] == \"eight\"\
    ){\n            nums_int.push(8);\n        }\n        else if (nums[i] == \"nine\"\
    ){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        if\
    \ (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n        }\n     \
    \   else if (nums_int[i] == 1){\n            nums_str.push(\"one\");\n       \
    \ }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"two\");\n\
    \        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp7bs6kcxa.js:58\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_dict\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_int = [];\n  for (var i = 0; i\
    \ < nums.length; i++){\n    nums_int.push(nums_dict[nums[i]]);\n  }\n  nums_int.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_int.length; i++){\n    for (var\
    \ key in nums_dict){\n      if (nums_dict[key] === nums_int[i]){\n        nums_int[i]\
    \ = key;\n      }\n    }\n  }\n  return nums_int.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp8ju816bj.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp8iw81r35.js:9\n    return num_to_int(a) - num_to_int(b);\n    ^\n\
    \nReferenceError: num_to_int is not defined\n    at /tmp/tmp8iw81r35.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp8iw81r35.js:8:26)\n\
    \    at test (/tmp/tmp8iw81r35.js:21:20)\n    at Object.<anonymous> (/tmp/tmp8iw81r35.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    let nums_int = [];\n    for (let i = 0; i < nums.length; i++){\n\
    \        nums_int.push(nums_dict[nums[i]]);\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    let nums_str = [];\n    for (let i = 0; i < nums_int.length;\
    \ i++){\n        for (let key in nums_dict){\n            if (nums_dict[key] ===\
    \ nums_int[i]){\n                nums_str.push(key);\n            }\n        }\n\
    \    }\n    return nums_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpcha55syk.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_dict = {\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in nums_dict){\n            if (nums_dict[key] == nums_sorted[i]){\n\
    \                nums_sorted[i] = key;\n            }\n        }\n    }\n    return\
    \ nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_sorted = [];\n    let nums_dict = {\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    };\n    for (let i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (let i = 0; i < nums_sorted.length; i++){\n      \
    \  for (let key in nums_dict){\n            if (nums_dict[key] === nums_sorted[i]){\n\
    \                nums_sorted[i] = key;\n            }\n        }\n    }\n    return\
    \ nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    num_array.sort(function(a, b){\n        return num_map[a] - num_map[b];\n\
    \    });\n    return num_array.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_array_sorted = num_array.sort(function(a, b){\n        return numeral_to_number(a)\
    \ - numeral_to_number(b);\n    });\n    return num_array_sorted.join(\" \");\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmphxoh_fel.js:9\n        return numeral_to_number(a) - numeral_to_number(b);\n\
    \        ^\n\nReferenceError: numeral_to_number is not defined\n    at /tmp/tmphxoh_fel.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmphxoh_fel.js:8:38)\n\
    \    at test (/tmp/tmphxoh_fel.js:21:20)\n    at Object.<anonymous> (/tmp/tmphxoh_fel.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpmb7y2mlv.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_numbers[a] -\
    \ nums_to_numbers[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpjxdv86g9.js:9\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpjxdv86g9.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpjxdv86g9.js:8:28)\n\
    \    at test (/tmp/tmpjxdv86g9.js:21:20)\n    at Object.<anonymous> (/tmp/tmpjxdv86g9.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_ints[a] - nums_to_ints[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp82ufxgp9.js:9\n        return nums_to_ints[a] - nums_to_ints[b];\n\
    \        ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmp82ufxgp9.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp82ufxgp9.js:8:28)\n\
    \    at test (/tmp/tmp82ufxgp9.js:21:20)\n    at Object.<anonymous> (/tmp/tmp82ufxgp9.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\":\
    \ 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n\
    \    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\": 9\n  };\n  for (var i = 0;\
    \ i < nums.length; i++) {\n    nums_sorted.push(nums_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_sorted.length; i++) {\n    for\
    \ (var key in nums_dict) {\n      if (nums_dict[key] === nums_sorted[i]) {\n \
    \       nums_sorted[i] = key;\n      }\n    }\n  }\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var num_map = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++) {\n    nums_sorted.push(num_map[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++) {\n    for (var key in num_map) {\n      if (num_map[key] === nums_sorted[i])\
    \ {\n        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp1wbl7h0t.js:9\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \        ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmp1wbl7h0t.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp1wbl7h0t.js:8:28)\n\
    \    at test (/tmp/tmp1wbl7h0t.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1wbl7h0t.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_nums = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_nums.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_nums.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_nums.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_nums.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_nums.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_nums.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_nums.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_nums.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_nums.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_nums.push(9);\n        }\n    }\n    nums_nums.sort(function(a,\
    \ b){return a-b});\n    var nums_words = [];\n    for (var i = 0; i < nums_nums.length;\
    \ i++){\n        if (nums_nums[i] == 0){\n            nums_words.push(\"zero\"\
    );\n        }\n        else if (nums_nums[i] == 1){\n            nums_words.push(\"\
    one\");\n        }\n        else if (nums_nums[i] == 2){\n            nums_words.push(\"\
    two\");\n        }\n        else if (nums_nums[i] == 3){\n            nums_words.push(\"\
    three\");\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpo28br0nj.js:68\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_dict = {\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  nums_sorted[i] = nums[nums_sorted[i]];\n    }\n    return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n''\n\nshould equal\n\n'three'\n    at test\
    \ (/tmp/tmpmmtx7gea.js:37:10)\n    at Object.<anonymous> (/tmp/tmpmmtx7gea.js:43:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: '',\n  expected: 'three',\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpvevvggnj.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_array_int[i]){\n                num_array_str.push(key);\n            }\n\
    \        }\n    }\n    return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var number_map = {\n        'zero': 0,\n\
    \        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_array = numbers.split(' ');\n   \
    \ var num_array_sorted = num_array.sort(function(a, b){\n        return number_map[a]\
    \ - number_map[b];\n    });\n    return num_array_sorted.join(' ');\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var number_map = {\n        'zero': 0,\n\
    \        'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_array = numbers.split(' ');\n   \
    \ var sorted_array = num_array.sort(function(a, b){\n        return number_map[a]\
    \ - number_map[b];\n    });\n    return sorted_array.join(' ');\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp1kqgpo_x.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp1kqgpo_x.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp1kqgpo_x.js:8:28)\n\
    \    at test (/tmp/tmp1kqgpo_x.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1kqgpo_x.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpxxa_s4rb.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sorted = nums.sort(function(a,\
    \ b){\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp5ut9c88e.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp5ut9c88e.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp5ut9c88e.js:8:28)\n\
    \    at test (/tmp/tmp5ut9c88e.js:21:20)\n    at Object.<anonymous> (/tmp/tmp5ut9c88e.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = [];\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_map[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in nums_map){\n            if (nums_map[key] === nums_sorted[i]){\n\
    \                nums_sorted[i] = key;\n            }\n        }\n    }\n    return\
    \ nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sorted = nums.sort(function(a,\
    \ b){\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\":\
    \ 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n\
    \    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\": 9\n  };\n  for (var i = 0;\
    \ i < nums.length; i++) {\n    nums_sorted.push(nums_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_sorted.length; i++) {\n    for\
    \ (var key in nums_dict) {\n      if (nums_dict[key] === nums_sorted[i]) {\n \
    \       nums_sorted[i] = key;\n      }\n    }\n  }\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_string = \"\";\n    var nums_sorted_string_final\
    \ = \"\";\n    var nums_sorted_string_final_final = \"\";\n    for (var i = 0;\
    \ i < nums.length; i++){\n        if (nums[i] == \"zero\"){\n            nums_sorted.push(0);\n\
    \        }\n        else if (nums[i] == \"one\"){\n            nums_sorted.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_sorted.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_sorted.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_sorted.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_sorted.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_sorted.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_sorted.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_sorted.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_sorted.push(9);\n\
    \        }\n    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for\
    \ (var i = 0; i < nums_sorted.length; i++){\n        if (nums_sorted[i] == 0){\n\
    \            nums_sorted_string += \"zero \";\n        }\n        else if (nums_sorted[i]\
    \ == 1){\n            nums_sorted_string += \"one \";\n        }\n        else\
    \ if (nums_sorted[i] == 2){\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpa7n4pozy.js:65\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp5gnfnj7q.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp5gnfnj7q.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp5gnfnj7q.js:8:28)\n\
    \    at test (/tmp/tmp5gnfnj7q.js:21:20)\n    at Object.<anonymous> (/tmp/tmp5gnfnj7q.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp7md7m2g5.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp7md7m2g5.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp7md7m2g5.js:8:26)\n\
    \    at test (/tmp/tmp7md7m2g5.js:21:20)\n    at Object.<anonymous> (/tmp/tmp7md7m2g5.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sort = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sort.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpc_zouyef.js:9\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \    ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmpc_zouyef.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpc_zouyef.js:8:26)\n\
    \    at test (/tmp/tmpc_zouyef.js:21:20)\n    at Object.<anonymous> (/tmp/tmpc_zouyef.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        if\
    \ (nums_int[i] == 0){\n            nums_int[i] = \"zero\";\n        }\n      \
    \  else if (nums_int[i] == 1){\n            nums_int[i] = \"one\";\n        }\n\
    \        else if (nums_int[i] == 2){\n            nums_int[i] = \"two\";\n   \
    \     }\n        else if (nums_int[i] == 3){\n            nums_int[i] = \"three\"\
    ;\n        }\n        else if (nums_int[i] == 4){\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp6pkkhkr_.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_numbers[a] -\
    \ nums_to_numbers[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpupw5morg.js:9\n        return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \        ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpupw5morg.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpupw5morg.js:8:28)\n\
    \    at test (/tmp/tmpupw5morg.js:21:20)\n    at Object.<anonymous> (/tmp/tmpupw5morg.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {'zero':0, 'one':1, 'two':2,\
    \ 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9};\n \
    \   var num_list = numbers.split(' ');\n    var num_list_int = [];\n    for (var\
    \ i = 0; i < num_list.length; i++){\n        num_list_int.push(num_dict[num_list[i]]);\n\
    \    }\n    num_list_int.sort(function(a, b){return a-b});\n    var num_list_str\
    \ = [];\n    for (var i = 0; i < num_list_int.length; i++){\n        for (var\
    \ key in num_dict){\n            if (num_dict[key] == num_list_int[i]){\n    \
    \            num_list_str.push(key);\n            }\n        }\n    }\n    return\
    \ num_list_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp8lkyhz4n.js:9\n        return num_to_numeral(a) - num_to_numeral(b);\n\
    \        ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmp8lkyhz4n.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp8lkyhz4n.js:8:28)\n\
    \    at test (/tmp/tmp8lkyhz4n.js:21:20)\n    at Object.<anonymous> (/tmp/tmp8lkyhz4n.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        'zero': 0,\n  \
    \      'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_list = numbers.split(' ');\n    var\
    \ num_list_int = [];\n    for (var i = 0; i < num_list.length; i++){\n       \
    \ num_list_int.push(num_dict[num_list[i]]);\n    }\n    num_list_int.sort(function(a,\
    \ b){return a-b});\n    var num_list_str = [];\n    for (var i = 0; i < num_list_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_list_int[i]){\n                num_list_str.push(key);\n            }\n\
    \        }\n    }\n    return num_list_str.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    var nums_dict = {\n      \"zero\": 0,\n    \
    \  \"one\": 1,\n      \"two\": 2,\n      \"three\": 3,\n      \"four\": 4,\n \
    \     \"five\": 5,\n      \"six\": 6,\n      \"seven\": 7,\n      \"eight\": 8,\n\
    \      \"nine\": 9\n    };\n    return nums_dict[a] - nums_dict[b];\n  });\n \
    \ return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n   \
    \     'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ nums_sorted = nums.sort(function(a, b){\n        return nums_map[a] - nums_map[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpxuqqf78r.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpxuqqf78r.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpxuqqf78r.js:8:26)\n\
    \    at test (/tmp/tmpxuqqf78r.js:21:20)\n    at Object.<anonymous> (/tmp/tmpxuqqf78r.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] == \"zero\"){\n            nums_int.push(0);\n  \
    \      }\n        else if (nums[i] == \"one\"){\n            nums_int.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var\
    \ i = 0; i < nums_int.length; i++){\n        if (nums_int[i] == 0){\n        \
    \    nums_str.push(\"zero\");\n        }\n        else if (nums_int[i] == 1){\n\
    \            nums_str.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2){\n            nums_str.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3){\n            nums_str.push(\"three\");\n        }\n        else if (nums_int[i]\
    \ == 4){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4boi9q5h.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\":\
    \ 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n\
    \    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\": 9\n  };\n  for (var i = 0;\
    \ i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_sorted.length; i++){\n    for (var\
    \ key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n        nums_sorted[i]\
    \ = key;\n      }\n    }\n  }\n  return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpq30a2l8e.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpfrcm4mih.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var num_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var num_arr = [];\n  for (var i = 0; i <\
    \ nums.length; i++) {\n    num_arr.push(num_map[nums[i]]);\n  }\n  num_arr.sort(function(a,\
    \ b){return a-b});\n  var num_str = \"\";\n  for (var i = 0; i < num_arr.length;\
    \ i++) {\n    for (var key in num_map) {\n      if (num_map[key] === num_arr[i])\
    \ {\n        num_str += key + \" \";\n      }\n    }\n  }\n  return num_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_map = {\n        'zero': 0,\n   \
    \     'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_array = numbers.split(' ');\n   \
    \ var num_array_int = [];\n    for (var i = 0; i < num_array.length; i++){\n \
    \       num_array_int.push(num_map[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < num_array_int.length; i++){\n    \
    \    for (var key in num_map){\n            if (num_map[key] === num_array_int[i]){\n\
    \                num_array[i] = key;\n            }\n        }\n    }\n    return\
    \ num_array.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpgcgvmpiy.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpgcgvmpiy.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpgcgvmpiy.js:8:28)\n\
    \    at test (/tmp/tmpgcgvmpiy.js:21:20)\n    at Object.<anonymous> (/tmp/tmpgcgvmpiy.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar nums = numbers.split(\" \");\n\tvar num_map\
    \ = {\n\t\t\"zero\": 0,\n\t\t\"one\": 1,\n\t\t\"two\": 2,\n\t\t\"three\": 3,\n\
    \t\t\"four\": 4,\n\t\t\"five\": 5,\n\t\t\"six\": 6,\n\t\t\"seven\": 7,\n\t\t\"\
    eight\": 8,\n\t\t\"nine\": 9\n\t};\n\tnums.sort(function(a, b){\n\t\treturn num_map[a]\
    \ - num_map[b];\n\t});\n\treturn nums.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  for (var i = 0; i < nums.length; i++) {\n    nums_sorted.push(nums[i]);\n\
    \  }\n  nums_sorted.sort(function(a, b){\n    return nums.indexOf(a) - nums.indexOf(b);\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmps5hul9ew.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmps5hul9ew.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpx2jjgbyr.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpx2jjgbyr.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpx2jjgbyr.js:8:26)\n\
    \    at test (/tmp/tmpx2jjgbyr.js:21:20)\n    at Object.<anonymous> (/tmp/tmpx2jjgbyr.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp08ahl9pd.js:9\n        return nums_dict[a] - nums_dict[b];\n  \
    \      ^\n\nReferenceError: nums_dict is not defined\n    at /tmp/tmp08ahl9pd.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp08ahl9pd.js:8:28)\n\
    \    at test (/tmp/tmp08ahl9pd.js:21:20)\n    at Object.<anonymous> (/tmp/tmp08ahl9pd.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_int.push(nums_map[nums[i]]);\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        for (var key in nums_map){\n            if (nums_map[key] ==\
    \ nums_int[i]){\n                nums_str.push(key);\n            }\n        }\n\
    \    }\n    return nums_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort();\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpfi90s2l4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpfi90s2l4.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n   \
    \     'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ nums_sorted = nums.sort(function(a, b){\n        return nums_map[a] - nums_map[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpjmrv_o4k.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpjdnwntyj.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpi07ixsbq.js:9\n    return num_to_int(a) - num_to_int(b);\n    ^\n\
    \nReferenceError: num_to_int is not defined\n    at /tmp/tmpi07ixsbq.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpi07ixsbq.js:8:26)\n\
    \    at test (/tmp/tmpi07ixsbq.js:21:20)\n    at Object.<anonymous> (/tmp/tmpi07ixsbq.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var num_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(num_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var j = 0; j < nums_sorted.length;\
    \ j++){\n    for (var key in num_dict){\n      if (num_dict[key] === nums_sorted[j]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpnqq2cwj2.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp4w1qu6ax.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var num_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(num_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in num_dict){\n      if (num_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_str = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] == \"zero\"){\n            nums_int.push(0);\n  \
    \      }\n        else if (nums[i] == \"one\"){\n            nums_int.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var\
    \ i = 0; i < nums_int.length; i++){\n        if (nums_int[i] == 0){\n        \
    \    nums_str.push(\"zero\");\n        }\n        else if (nums_int[i] == 1){\n\
    \            nums_str.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2){\n            nums_str.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3){\n            nums_str.push(\"three\");\n        }\n        else if (nums_int[i]\
    \ == 4){\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpogjq0267.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmps6j5jpfx.js:9\n    return num_to_int(a) - num_to_int(b);\n    ^\n\
    \nReferenceError: num_to_int is not defined\n    at /tmp/tmps6j5jpfx.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmps6j5jpfx.js:8:26)\n\
    \    at test (/tmp/tmps6j5jpfx.js:21:20)\n    at Object.<anonymous> (/tmp/tmps6j5jpfx.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_array\
    \ = [];\n  for (var i = 0; i < nums.length; i++) {\n    if (nums[i] === \"zero\"\
    ) {\n      nums_array.push(0);\n    } else if (nums[i] === \"one\") {\n      nums_array.push(1);\n\
    \    } else if (nums[i] === \"two\") {\n      nums_array.push(2);\n    } else\
    \ if (nums[i] === \"three\") {\n      nums_array.push(3);\n    } else if (nums[i]\
    \ === \"four\") {\n      nums_array.push(4);\n    } else if (nums[i] === \"five\"\
    ) {\n      nums_array.push(5);\n    } else if (nums[i] === \"six\") {\n      nums_array.push(6);\n\
    \    } else if (nums[i] === \"seven\") {\n      nums_array.push(7);\n    } else\
    \ if (nums[i] === \"eight\") {\n      nums_array.push(8);\n    } else if (nums[i]\
    \ === \"nine\") {\n      nums_array.push(9);\n    }\n  }\n  nums_array.sort(function(a,\
    \ b){return a-b});\n  var nums_string = \"\";\n  for (var i = 0; i < nums_array.length;\
    \ i++) {\n    if (nums_array[i] === 0) {\n      nums_string += \"zero \";\n  \
    \  } else if (nums_array[i] === 1) {\n      nums_string += \"one \";\n    } else\
    \ if (nums_array[i] === 2) {\n      nums_string += \"two \";\n    } else if (nums_array[i]\
    \ === 3) {\n      nums_string += \"three \";\n    } else if (nums_array[i] ===\
    \ 4) {\n      nums_string += \"four \";\n    } else if (nums_\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpnmygxiha.js:46\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var num_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var num_array = [];\n  for (var i = 0; i\
    \ < nums.length; i++) {\n    num_array.push(num_map[nums[i]]);\n  }\n  num_array.sort(function(a,\
    \ b){return a-b});\n  var num_string = \"\";\n  for (var i = 0; i < num_array.length;\
    \ i++) {\n    for (var key in num_map) {\n      if (num_map[key] === num_array[i])\
    \ {\n        num_string += key + \" \";\n      }\n    }\n  }\n  return num_string.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp3wktbvps.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_map = {\n        'zero': 0,\n   \
    \     'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var nums = numbers.split(' ');\n    var nums_sorted\
    \ = nums.sort(function(a, b){\n        return num_map[a] - num_map[b];\n    });\n\
    \    return nums_sorted.join(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpyvcybn73.js:9\n    return num_to_int(a) - num_to_int(b);\n    ^\n\
    \nReferenceError: num_to_int is not defined\n    at /tmp/tmpyvcybn73.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpyvcybn73.js:8:26)\n\
    \    at test (/tmp/tmpyvcybn73.js:21:20)\n    at Object.<anonymous> (/tmp/tmpyvcybn73.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar num_array = numbers.split(\" \");\n\tvar\
    \ num_dict = {\n\t\t\"zero\": 0,\n\t\t\"one\": 1,\n\t\t\"two\": 2,\n\t\t\"three\"\
    : 3,\n\t\t\"four\": 4,\n\t\t\"five\": 5,\n\t\t\"six\": 6,\n\t\t\"seven\": 7,\n\
    \t\t\"eight\": 8,\n\t\t\"nine\": 9\n\t};\n\tvar num_array_int = [];\n\tfor (var\
    \ i = 0; i < num_array.length; i++) {\n\t\tnum_array_int.push(num_dict[num_array[i]]);\n\
    \t}\n\tnum_array_int.sort(function(a, b){return a-b});\n\tvar num_array_str =\
    \ [];\n\tfor (var i = 0; i < num_array_int.length; i++) {\n\t\tfor (var key in\
    \ num_dict) {\n\t\t\tif (num_dict[key] == num_array_int[i]) {\n\t\t\t\tnum_array_str.push(key);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpjcppbm_5.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpcx2axdy9.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    switch(nums[i]){\n    \
    \  case \"zero\":\n        nums_int.push(0);\n        break;\n      case \"one\"\
    :\n        nums_int.push(1);\n        break;\n      case \"two\":\n        nums_int.push(2);\n\
    \        break;\n      case \"three\":\n        nums_int.push(3);\n        break;\n\
    \      case \"four\":\n        nums_int.push(4);\n        break;\n      case \"\
    five\":\n        nums_int.push(5);\n        break;\n      case \"six\":\n    \
    \    nums_int.push(6);\n        break;\n      case \"seven\":\n        nums_int.push(7);\n\
    \        break;\n      case \"eight\":\n        nums_int.push(8);\n        break;\n\
    \      case \"nine\":\n        nums_int.push(9);\n        break;\n    }\n  }\n\
    \  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for (var\
    \ i = 0; i < nums_int.length; i++){\n    switch(nums_int[i]){\n      case 0:\n\
    \        nums_str.push(\"zero\");\n        break;\n      case 1:\n        nums_str.push(\"\
    one\");\n        break;\n      case 2:\n        nums_str.push(\"two\");\n    \
    \    break;\n      case 3:\n        nums_str.push(\"three\");\n        break;\n\
    \      case 4:\n        nums_str.push(\"four\");\n        break;\n      case 5:\n\
    \        nums_str.push(\"five\");\n        break;\n      case 6:\n        nums_str.push(\"\
    six\");\n        break;\n      case 7:\n        nums_str.push(\"seven\");\n  \
    \      break;\n      case 8:\n        nums_str.push(\"eight\");\n        break;\n\
    \      case 9\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpbfx9r9tz.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpnz_p8tgl.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_to_sort = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_to_sort.push(0);\n        }\n        else if\
    \ (nums[i] == \"one\"){\n            nums_to_sort.push(1);\n        }\n      \
    \  else if (nums[i] == \"two\"){\n            nums_to_sort.push(2);\n        }\n\
    \        else if (nums[i] == \"three\"){\n            nums_to_sort.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_to_sort.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_to_sort.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_to_sort.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_to_sort.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_to_sort.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_to_sort.push(9);\n\
    \        }\n    }\n    nums_to_sort.sort(function(a, b){return a-b});\n    var\
    \ sorted_nums = [];\n    for (var i = 0; i < nums_to_sort.length; i++){\n    \
    \    if (nums_to_sort[i] == 0){\n            sorted_nums.push(\"zero\");\n   \
    \     }\n        else if (nums_to_sort[i] == 1){\n            sorted_nums.push(\"\
    one\");\n        }\n        else if (nums_to_sort[i] == 2){\n            sorted_nums.push(\"\
    two\");\n        }\n        else if (nums_to_sort[\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpfkik69yu.js:54\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    var nums_sorted = [];\n    for (var i = 0; i < nums.length;\
    \ i++){\n        if (nums[i] == \"zero\"){\n            nums_int.push(0);\n  \
    \      }\n        else if (nums[i] == \"one\"){\n            nums_int.push(1);\n\
    \        }\n        else if (nums[i] == \"two\"){\n            nums_int.push(2);\n\
    \        }\n        else if (nums[i] == \"three\"){\n            nums_int.push(3);\n\
    \        }\n        else if (nums[i] == \"four\"){\n            nums_int.push(4);\n\
    \        }\n        else if (nums[i] == \"five\"){\n            nums_int.push(5);\n\
    \        }\n        else if (nums[i] == \"six\"){\n            nums_int.push(6);\n\
    \        }\n        else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        }\n        else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n\
    \        }\n        else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n\
    \        }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var\
    \ i = 0; i < nums_int.length; i++){\n        if (nums_int[i] == 0){\n        \
    \    nums_sorted.push(\"zero\");\n        }\n        else if (nums_int[i] == 1){\n\
    \            nums_sorted.push(\"one\");\n        }\n        else if (nums_int[i]\
    \ == 2){\n            nums_sorted.push(\"two\");\n        }\n        else if (nums_int[i]\
    \ == 3){\n            nums_sorted.push(\"three\");\n        }\n        else if\
    \ (nums_int[\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n\
    \  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpgwfbhge0.js:57\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var numbers_array = numbers.split(\" \");\n\
    \    var numbers_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n       \
    \ \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\":\
    \ 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n    \
    \    \"nine\": 9\n    };\n    var sorted_numbers = numbers_array.sort(function(a,\
    \ b){\n        return numbers_dict[a] - numbers_dict[b];\n    });\n    return\
    \ sorted_numbers.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpm5joqwji.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpfcidz2ls.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var num_map = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++) {\n    nums_sorted.push(num_map[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++) {\n    for (var key in num_map) {\n      if (num_map[key] === nums_sorted[i])\
    \ {\n        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_dict = {\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_sorted.length; i++){\n      \
    \  for (var key in nums_dict){\n            if (nums_dict[key] == nums_sorted[i]){\n\
    \                nums_sorted[i] = key;\n            }\n        }\n    }\n    return\
    \ nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmppqs1uvsd.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        nums_int.push(numeral_to_int(nums[i]));\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var i = 0; i\
    \ < nums_int.length; i++){\n        nums_int[i] = int_to_numeral(nums_int[i]);\n\
    \    }\n    return nums_int.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpxqs7aitm.js:10\n        nums_int.push(numeral_to_int(nums[i]));\n\
    \                 ^\n\nReferenceError: numeral_to_int is not defined\n    at sort_numbers\
    \ (/tmp/tmpxqs7aitm.js:10:18)\n    at test (/tmp/tmpxqs7aitm.js:24:20)\n    at\
    \ Object.<anonymous> (/tmp/tmpxqs7aitm.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_list = numbers.split(\" \");\n  \
    \  var num_dict = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n\
    \        'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ num_list_int = [];\n    for (var i = 0; i < num_list.length; i++){\n       \
    \ num_list_int.push(num_dict[num_list[i]]);\n    }\n    num_list_int.sort(function(a,\
    \ b){return a-b});\n    var num_list_str = [];\n    for (var i = 0; i < num_list_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_list_int[i]){\n                num_list_str.push(key);\n            }\n\
    \        }\n    }\n    return num_list_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_obj = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_obj[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_obj){\n            if (num_obj[key] === num_array_int[i]){\n\
    \                num_array_str.push(key);\n            }\n        }\n    }\n \
    \   return num_array_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpgq4828k1.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmptri6oqh_.js:9\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmptri6oqh_.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmptri6oqh_.js:8:26)\n\
    \    at test (/tmp/tmptri6oqh_.js:21:20)\n    at Object.<anonymous> (/tmp/tmptri6oqh_.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    let nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n\
    \    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var num_map\
    \ = {\n    'zero': 0,\n    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four':\
    \ 4,\n    'five': 5,\n    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine':\
    \ 9\n  };\n  var num_arr = [];\n  for (var i = 0; i < nums.length; i++) {\n  \
    \  num_arr.push(num_map[nums[i]]);\n  }\n  num_arr.sort(function(a, b){return\
    \ a-b});\n  for (var i = 0; i < num_arr.length; i++) {\n    for (var key in num_map)\
    \ {\n      if (num_map[key] === num_arr[i]) {\n        num_arr[i] = key;\n   \
    \   }\n    }\n  }\n  return num_arr.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpri3dq7bv.js:9\n    return num_to_numeral(a) - num_to_numeral(b);\n\
    \    ^\n\nReferenceError: num_to_numeral is not defined\n    at /tmp/tmpri3dq7bv.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpri3dq7bv.js:8:26)\n\
    \    at test (/tmp/tmpri3dq7bv.js:21:20)\n    at Object.<anonymous> (/tmp/tmpri3dq7bv.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums.indexOf(a) - nums.indexOf(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five zero four seven nine eight'\n\nshould\
    \ equal\n\n'zero four five seven eight nine'\n    at test (/tmp/tmpzcgcn5vy.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzcgcn5vy.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'five zero four seven nine eight',\n  expected:\
    \ 'zero four five seven eight nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar nums = numbers.split(\" \");\n\tvar nums_sorted\
    \ = [];\n\tvar nums_sorted_str = \"\";\n\tvar nums_dict = {\n\t\t\"zero\": 0,\n\
    \t\t\"one\": 1,\n\t\t\"two\": 2,\n\t\t\"three\": 3,\n\t\t\"four\": 4,\n\t\t\"\
    five\": 5,\n\t\t\"six\": 6,\n\t\t\"seven\": 7,\n\t\t\"eight\": 8,\n\t\t\"nine\"\
    : 9\n\t};\n\tfor (var i = 0; i < nums.length; i++){\n\t\tnums_sorted.push(nums_dict[nums[i]]);\n\
    \t}\n\tnums_sorted.sort(function(a, b){return a-b});\n\tfor (var i = 0; i < nums_sorted.length;\
    \ i++){\n\t\tfor (var key in nums_dict){\n\t\t\tif (nums_dict[key] == nums_sorted[i]){\n\
    \t\t\t\tnums_sorted_str += key + \" \";\n\t\t\t}\n\t\t}\n\t}\n\treturn nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return num_to_int(a) - num_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp34_hi1ew.js:9\n    return num_to_int(a) - num_to_int(b);\n    ^\n\
    \nReferenceError: num_to_int is not defined\n    at /tmp/tmp34_hi1ew.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp34_hi1ew.js:8:26)\n\
    \    at test (/tmp/tmp34_hi1ew.js:21:20)\n    at Object.<anonymous> (/tmp/tmp34_hi1ew.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp_bwak_ld.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp_bwak_ld.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp_bwak_ld.js:8:26)\n\
    \    at test (/tmp/tmp_bwak_ld.js:21:20)\n    at Object.<anonymous> (/tmp/tmp_bwak_ld.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_int.push(nums_map[nums[i]]);\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        for\
    \ (var key in nums_map){\n            if (nums_map[key] == nums_int[i]){\n   \
    \             nums_int[i] = key;\n            }\n        }\n    }\n    return\
    \ nums_int.join(\" \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp0zutrdzm.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpujsg9s6f.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sorted = nums.sort(function(a,\
    \ b){\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpg_i0w511.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_string = \"\";\n  var nums_sorted_string_final = \"\
    \";\n  var nums_sorted_string_final_final = \"\";\n  var nums_sorted_string_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final = \"\";\n  var nums_sorted_string_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final = \"\"\
    ;\n  var nums_sorted_string_final_final_final_final_final_final_final = \"\";\n\
    \  var nums_sorted_string_final_final_final_final_final_final_final_final = \"\
    \";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpbsv_s9l7.js:38\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ num_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var num_arr = [];\n    for (var i = 0; i < nums.length; i++){\n \
    \       num_arr.push(num_map[nums[i]]);\n    }\n    num_arr.sort(function(a, b){return\
    \ a-b});\n    var num_str = \"\";\n    for (var j = 0; j < num_arr.length; j++){\n\
    \        for (var key in num_map){\n            if (num_map[key] === num_arr[j]){\n\
    \                num_str += key + \" \";\n            }\n        }\n    }\n  \
    \  return num_str.trim();\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_obj\
    \ = {};\n  var nums_sorted = [];\n  for (var i = 0; i < nums.length; i++) {\n\
    \    nums_obj[nums[i]] = nums[i];\n  }\n  for (var key in nums_obj) {\n    nums_sorted.push(nums_obj[key]);\n\
    \  }\n  nums_sorted.sort();\n  return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmpqgwtlrzr.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpqgwtlrzr.js:32:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpwcx_kf03.js:9\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \    ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmpwcx_kf03.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpwcx_kf03.js:8:26)\n\
    \    at test (/tmp/tmpwcx_kf03.js:21:20)\n    at Object.<anonymous> (/tmp/tmpwcx_kf03.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpz7o8l8n9.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmponyk79cv.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    let nums_int = [];\n    for (let i = 0; i < nums.length; i++){\n\
    \        nums_int.push(nums_dict[nums[i]]);\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    let nums_str = [];\n    for (let i = 0; i < nums_int.length;\
    \ i++){\n        for (let key in nums_dict){\n            if (nums_dict[key] ===\
    \ nums_int[i]){\n                nums_str.push(key);\n            }\n        }\n\
    \    }\n    return nums_str.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_sorted_str_final = \"\";\n\
    \  var nums_sorted_str_final_final = \"\";\n  var nums_sorted_str_final_final_final\
    \ = \"\";\n  var nums_sorted_str_final_final_final_final = \"\";\n  var nums_sorted_str_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_str_final_final_final_final_final_final = \"\";\n\
    \  var nums_sorted_str_final_final_final_final_final_final_final = \"\";\n  var\
    \ nums_sorted_str_final_final_final_final_final_final_final_final = \"\";\n  var\
    \ nums_sorted_str_final_final_final_final_final_final_final_final_final = \"\"\
    ;\n  var nums_sorted_str_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmph2h796gn.js:38\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp89_cn6uw.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpfi2x3p7d.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar nums = numbers.split(\" \");\n\tvar nums_int\
    \ = [];\n\tfor (var i = 0; i < nums.length; i++){\n\t\tif (nums[i] == \"zero\"\
    ){\n\t\t\tnums_int.push(0);\n\t\t}\n\t\telse if (nums[i] == \"one\"){\n\t\t\t\
    nums_int.push(1);\n\t\t}\n\t\telse if (nums[i] == \"two\"){\n\t\t\tnums_int.push(2);\n\
    \t\t}\n\t\telse if (nums[i] == \"three\"){\n\t\t\tnums_int.push(3);\n\t\t}\n\t\
    \telse if (nums[i] == \"four\"){\n\t\t\tnums_int.push(4);\n\t\t}\n\t\telse if\
    \ (nums[i] == \"five\"){\n\t\t\tnums_int.push(5);\n\t\t}\n\t\telse if (nums[i]\
    \ == \"six\"){\n\t\t\tnums_int.push(6);\n\t\t}\n\t\telse if (nums[i] == \"seven\"\
    ){\n\t\t\tnums_int.push(7);\n\t\t}\n\t\telse if (nums[i] == \"eight\"){\n\t\t\t\
    nums_int.push(8);\n\t\t}\n\t\telse if (nums[i] == \"nine\"){\n\t\t\tnums_int.push(9);\n\
    \t\t}\n\t}\n\tnums_int.sort(function(a, b){return a-b});\n\tvar nums_str = [];\n\
    \tfor (var i = 0; i < nums_int.length; i++){\n\t\tif (nums_int[i] == 0){\n\t\t\
    \tnums_str.push(\"zero\");\n\t\t}\n\t\telse if (nums_int[i] == 1){\n\t\t\tnums_str.push(\"\
    one\");\n\t\t}\n\t\telse if (nums_int[i] == 2){\n\t\t\tnums_str.\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpo9gci674.js:52\nconst assert = require('node:assert');\n      ^^^^^^\n\
    \nSyntaxError: Unexpected identifier\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpj074vs8z.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpj074vs8z.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpj074vs8z.js:8:26)\n\
    \    at test (/tmp/tmpj074vs8z.js:21:20)\n    at Object.<anonymous> (/tmp/tmpj074vs8z.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_arr = [];\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_arr.push(nums_map[nums[i]]);\n    }\n    nums_arr.sort(function(a,\
    \ b){return a-b});\n    var nums_str = \"\";\n    for (var i = 0; i < nums_arr.length;\
    \ i++){\n        for (var key in nums_map){\n            if (nums_map[key] ===\
    \ nums_arr[i]){\n                nums_str += key + \" \";\n            }\n   \
    \     }\n    }\n    return nums_str.trim();\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmputxvxiug.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_sorted_str_final\
    \ = \"\";\n    var nums_sorted_str_final_final = \"\";\n    var nums_sorted_str_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final = \"\";\n    var nums_sorted_str_final_final_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final_final_final = \"\"\
    ;\n    var nums_sorted_str_final_final_final_final_final_final_final = \"\";\n\
    \    var nums_sorted_str_final_final_final_final_final_final_final_final = \"\"\
    ;\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n    var nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpzg1s1uxf.js:38\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sort = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sort.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpkcayppjr.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpkcayppjr.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpkcayppjr.js:8:26)\n\
    \    at test (/tmp/tmpkcayppjr.js:21:20)\n    at Object.<anonymous> (/tmp/tmpkcayppjr.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return num_to_int(a) - num_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpe3sc8ogt.js:9\n        return num_to_int(a) - num_to_int(b);\n\
    \        ^\n\nReferenceError: num_to_int is not defined\n    at /tmp/tmpe3sc8ogt.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpe3sc8ogt.js:8:28)\n\
    \    at test (/tmp/tmpe3sc8ogt.js:21:20)\n    at Object.<anonymous> (/tmp/tmpe3sc8ogt.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp1_fw0uao.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp1_fw0uao.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp1_fw0uao.js:8:28)\n\
    \    at test (/tmp/tmp1_fw0uao.js:21:20)\n    at Object.<anonymous> (/tmp/tmp1_fw0uao.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpjtm_uc6i.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpjtm_uc6i.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpjtm_uc6i.js:8:28)\n\
    \    at test (/tmp/tmpjtm_uc6i.js:21:20)\n    at Object.<anonymous> (/tmp/tmpjtm_uc6i.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_dict = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6,\
    \ 'seven':7, 'eight':8, 'nine':9};\n    var nums_int = [];\n    for (var i = 0;\
    \ i < nums.length; i++){\n        nums_int.push(nums_dict[nums[i]]);\n    }\n\
    \    nums_int.sort(function(a, b){return a-b});\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        for (var key in nums_dict){\n            if (nums_dict[key] ==\
    \ nums_int[i]){\n                nums_int[i] = key;\n            }\n        }\n\
    \    }\n    return nums_int.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_sorted = nums.sort(function(a, b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpzahe17s5.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpzahe17s5.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpzahe17s5.js:8:28)\n\
    \    at test (/tmp/tmpzahe17s5.js:21:20)\n    at Object.<anonymous> (/tmp/tmpzahe17s5.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums2\
    \ = [];\n  var nums3 = [];\n  var nums4 = [];\n  var nums5 = [];\n  var nums6\
    \ = [];\n  var nums7 = [];\n  var nums8 = [];\n  var nums9 = [];\n  var nums10\
    \ = [];\n  var nums11 = [];\n  var nums12 = [];\n  var nums13 = [];\n  var nums14\
    \ = [];\n  var nums15 = [];\n  var nums16 = [];\n  var nums17 = [];\n  var nums18\
    \ = [];\n  var nums19 = [];\n  var nums20 = [];\n  var nums21 = [];\n  var nums22\
    \ = [];\n  var nums23 = [];\n  var nums24 = [];\n  var nums25 = [];\n  var nums26\
    \ = [];\n  var nums27 = [];\n  var nums28 = [];\n  var nums29 = [];\n  var nums30\
    \ = [];\n  var nums31 = [];\n  var nums32 = [];\n  var nums33 = [];\n  var nums34\
    \ = [];\n  var nums35 = [];\n  var nums36 = [];\n  var nums37 = [];\n  var nums38\
    \ = [];\n  var nums39 = [];\n  var nums40 = [];\n  var nums41 = [];\n  var nums42\
    \ = [];\n  var nums43 = [];\n  var nums44 = [];\n  var nums45 = [];\n  var nums46\
    \ = [];\n  var nums47 = [];\n  var nums48 = [];\n  var nums49 = [];\n  var nums50\
    \ = [];\n  var nums51 = [];\n  var nums52 = [];\n  var nums53 = [];\n  var nums54\
    \ = [];\n  var nums55 = [];\n  var nums56 = [];\n  var nums57 = [];\n  var nums58\
    \ = [];\n  var nums59 = [];\n  var nums60 = [];\n  var nums61 = [];\n  var nums62\
    \ = [];\n  var nums63 = [];\n  var num\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp1fys_jl8.js:83\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    } else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    } else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    } else if (nums[i]\
    \ == \"three\"){\n      nums_int.push(3);\n    } else if (nums[i] == \"four\"\
    ){\n      nums_int.push(4);\n    } else if (nums[i] == \"five\"){\n      nums_int.push(5);\n\
    \    } else if (nums[i] == \"six\"){\n      nums_int.push(6);\n    } else if (nums[i]\
    \ == \"seven\"){\n      nums_int.push(7);\n    } else if (nums[i] == \"eight\"\
    ){\n      nums_int.push(8);\n    } else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n\
    \    }\n  }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n\
    \  for (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n  \
    \    nums_str.push(\"zero\");\n    } else if (nums_int[i] == 1){\n      nums_str.push(\"\
    one\");\n    } else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  } else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    } else\
    \ if (nums_int[i] == 4){\n      nums_str.push(\"four\");\n    } else if (nums_int[i]\
    \ == 5\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpiop2pisj.js:46\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_array_sorted = num_array.sort(function(a, b){\n        return numbers_to_numbers(a)\
    \ - numbers_to_numbers(b);\n    });\n    return num_array_sorted.join(\" \");\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmlq8ozfd.js:9\n        return numbers_to_numbers(a) - numbers_to_numbers(b);\n\
    \        ^\n\nReferenceError: numbers_to_numbers is not defined\n    at /tmp/tmpmlq8ozfd.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpmlq8ozfd.js:8:38)\n\
    \    at test (/tmp/tmpmlq8ozfd.js:21:20)\n    at Object.<anonymous> (/tmp/tmpmlq8ozfd.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_array = numbers.split(\" \");\n \
    \   var num_dict = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    };\n    var num_array_int = [];\n    for (var i = 0; i < num_array.length;\
    \ i++){\n        num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    var num_array_str = [];\n    for (var i = 0; i < num_array_int.length;\
    \ i++){\n        for (var key in num_dict){\n            if (num_dict[key] ==\
    \ num_array_int[i]){\n                num_array_str.push(key);\n            }\n\
    \        }\n    }\n    return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp6npioexp.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp6npioexp.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp6npioexp.js:8:28)\n\
    \    at test (/tmp/tmp6npioexp.js:21:20)\n    at Object.<anonymous> (/tmp/tmp6npioexp.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmphtl61tgy.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var num_dict = {\n        'zero': 0,\n  \
    \      'one': 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n\
    \        'five': 5,\n        'six': 6,\n        'seven': 7,\n        'eight':\
    \ 8,\n        'nine': 9\n    };\n    var num_array = numbers.split(' ');\n   \
    \ var num_array_int = [];\n    for (var i = 0; i < num_array.length; i++){\n \
    \       num_array_int.push(num_dict[num_array[i]]);\n    }\n    num_array_int.sort(function(a,\
    \ b){return a-b});\n    for (var i = 0; i < num_array_int.length; i++){\n    \
    \    for (var key in num_dict){\n            if (num_dict[key] === num_array_int[i]){\n\
    \                num_array[i] = key;\n            }\n        }\n    }\n    return\
    \ num_array.join(' ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"\
    ),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        } else if (nums[i] ==\
    \ \"one\"){\n            nums_int.push(1);\n        } else if (nums[i] == \"two\"\
    ){\n            nums_int.push(2);\n        } else if (nums[i] == \"three\"){\n\
    \            nums_int.push(3);\n        } else if (nums[i] == \"four\"){\n   \
    \         nums_int.push(4);\n        } else if (nums[i] == \"five\"){\n      \
    \      nums_int.push(5);\n        } else if (nums[i] == \"six\"){\n          \
    \  nums_int.push(6);\n        } else if (nums[i] == \"seven\"){\n            nums_int.push(7);\n\
    \        } else if (nums[i] == \"eight\"){\n            nums_int.push(8);\n  \
    \      } else if (nums[i] == \"nine\"){\n            nums_int.push(9);\n     \
    \   }\n    }\n    nums_int.sort(function(a, b){return a-b});\n    var nums_str\
    \ = [];\n    for (var i = 0; i < nums_int.length; i++){\n        if (nums_int[i]\
    \ == 0){\n            nums_str.push(\"zero\");\n        } else if (nums_int[i]\
    \ == 1){\n            nums_str.push(\"one\");\n        } else if (nums_int[i]\
    \ == 2){\n            nums_str.push(\"two\");\n        } else if (nums_int[i]\
    \ == 3){\n            nums_str.push(\"three\");\n        } else if (nums_int[i]\
    \ == 4){\n            nums_str.push(\"four\");\n        } else if (nums_int[i]\
    \ == 5\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp1ot6d36q.js:46\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpy9umks83.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_dict = {\n    'zero': 0,\n\
    \    'one': 1,\n    'two': 2,\n    'three': 3,\n    'four': 4,\n    'five': 5,\n\
    \    'six': 6,\n    'seven': 7,\n    'eight': 8,\n    'nine': 9\n  };\n  for (var\
    \ i = 0; i < nums.length; i++) {\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++) {\n    for (var key in nums_dict) {\n      if (nums_dict[key] === nums_sorted[i])\
    \ {\n        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort();\n    return nums_sorted.join(\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp0xkc9muw.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp0xkc9muw.js:24:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_map\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sorted = nums.sort(function(a,\
    \ b){\n    return nums_map[a] - nums_map[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_hash\
    \ = {};\n  var sorted_nums = [];\n  var sorted_nums_str = \"\";\n  for (var i\
    \ = 0; i < nums.length; i++) {\n    nums_hash[nums[i]] = nums[i];\n  }\n  sorted_nums\
    \ = Object.keys(nums_hash).sort();\n  for (var i = 0; i < sorted_nums.length;\
    \ i++) {\n    sorted_nums_str += sorted_nums[i] + \" \";\n  }\n  return sorted_nums_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'five nine three'\n\nshould equal\n\n'three\
    \ five nine'\n    at test (/tmp/tmp9tb28u42.js:28:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9tb28u42.js:33:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 'five nine\
    \ three',\n  expected: 'three five nine',\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    let nums = numbers.split(\" \");\n    let\
    \ nums_sorted = nums.sort(function(a, b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpht1t5n92.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpht1t5n92.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpht1t5n92.js:8:28)\n\
    \    at test (/tmp/tmpht1t5n92.js:21:20)\n    at Object.<anonymous> (/tmp/tmpht1t5n92.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n   \
    \     'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ nums_sorted = nums.sort(function(a, b){\n        return nums_map[a] - nums_map[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\":\
    \ 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n\
    \    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\": 9\n  };\n  for (var i = 0;\
    \ i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n  }\n  nums_sorted.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_sorted.length; i++){\n    for (var\
    \ key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n        nums_sorted[i]\
    \ = key;\n      }\n    }\n  }\n  return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var j = 0; j < nums_int.length;\
    \ j++){\n        if (nums_int[j] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[j] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[j] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[j] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[j] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp3u10e1cf.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_dict\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var nums_sorted = nums.sort(function(a,\
    \ b){\n    return nums_dict[a] - nums_dict[b];\n  });\n  return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmppduxhjy0.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpkhn1f6wd.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpxwskkm4c.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpxwskkm4c.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpxwskkm4c.js:8:26)\n\
    \    at test (/tmp/tmpxwskkm4c.js:21:20)\n    at Object.<anonymous> (/tmp/tmpxwskkm4c.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_ints[a] - nums_to_ints[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpzubcvkpl.js:9\n        return nums_to_ints[a] - nums_to_ints[b];\n\
    \        ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmpzubcvkpl.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpzubcvkpl.js:8:28)\n\
    \    at test (/tmp/tmpzubcvkpl.js:21:20)\n    at Object.<anonymous> (/tmp/tmpzubcvkpl.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var num_array = numbers.split(\" \");\n  var\
    \ num_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\"\
    : 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n\
    \    \"eight\": 8,\n    \"nine\": 9\n  };\n  var num_array_int = [];\n  for (var\
    \ i = 0; i < num_array.length; i++) {\n    num_array_int.push(num_dict[num_array[i]]);\n\
    \  }\n  num_array_int.sort(function(a, b){return a-b});\n  var num_array_string\
    \ = [];\n  for (var i = 0; i < num_array_int.length; i++) {\n    for (var key\
    \ in num_dict) {\n      if (num_dict[key] === num_array_int[i]) {\n        num_array_string.push(key);\n\
    \      }\n    }\n  }\n  return num_array_string.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    const nums = numbers.split(' ');\n    const\
    \ nums_map = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n   \
    \     'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    const\
    \ nums_sorted = nums.sort((a, b) => nums_map[a] - nums_map[b]);\n    return nums_sorted.join('\
    \ ');\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpe3uujva1.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length; i++){\n\
    \        switch (nums_int[i]){\n            case 0:\n                nums_str.push(\"\
    zero\");\n                break;\n            case 1:\n                nums_str.push(\"\
    one\");\n                break;\n            case 2:\n                nums_str.push(\"\
    two\");\n                break;\n            case 3:\n                nums_str.push(\"\
    three\");\n                break;\n            case 4:\n                nums_str.push(\"\
    four\");\n                break;\n            case 5:\n                nums_str.push(\"\
    five\");\n                break;\n            case 6:\n                nums_str.push(\"\
    six\");\n                break;\n            case 7:\n                nums_str.push(\"\
    seven\");\n                break;\n            case 8:\n                nums_str.push(\"\
    eight\");\n                break;\n            case 9\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpjjc6xtig.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sort = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sort.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_str = \"\";\n  var nums_dict = {\n    \"zero\": 0,\n\
    \    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n    \"four\": 4,\n    \"\
    five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"eight\": 8,\n    \"nine\"\
    : 9\n  };\n  for (var i = 0; i < nums.length; i++){\n    nums_sorted.push(nums_dict[nums[i]]);\n\
    \  }\n  nums_sorted.sort(function(a, b){return a-b});\n  for (var i = 0; i < nums_sorted.length;\
    \ i++){\n    for (var key in nums_dict){\n      if (nums_dict[key] === nums_sorted[i]){\n\
    \        nums_sorted_str += key + \" \";\n      }\n    }\n  }\n  return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpxyicprh_.js:9\n        return nums_dict[a] - nums_dict[b];\n  \
    \      ^\n\nReferenceError: nums_dict is not defined\n    at /tmp/tmpxyicprh_.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpxyicprh_.js:8:28)\n\
    \    at test (/tmp/tmpxyicprh_.js:21:20)\n    at Object.<anonymous> (/tmp/tmpxyicprh_.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n\tvar nums = numbers.split(\" \");\n\tvar nums_sorted\
    \ = [];\n\tvar num_map = {\n\t\t'zero': 0,\n\t\t'one': 1,\n\t\t'two': 2,\n\t\t\
    'three': 3,\n\t\t'four': 4,\n\t\t'five': 5,\n\t\t'six': 6,\n\t\t'seven': 7,\n\t\
    \t'eight': 8,\n\t\t'nine': 9\n\t};\n\tfor (var i = 0; i < nums.length; i++) {\n\
    \t\tnums_sorted.push(num_map[nums[i]]);\n\t}\n\tnums_sorted.sort(function(a, b){return\
    \ a-b});\n\tfor (var i = 0; i < nums_sorted.length; i++) {\n\t\tfor (var key in\
    \ num_map) {\n\t\t\tif (num_map[key] === nums_sorted[i]) {\n\t\t\t\tnums_sorted[i]\
    \ = key;\n\t\t\t}\n\t\t}\n\t}\n\treturn nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var num_dict\
    \ = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\": 3,\n\
    \    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n    \"\
    eight\": 8,\n    \"nine\": 9\n  };\n  var num_arr = [];\n  for (var i = 0; i <\
    \ nums.length; i++){\n    num_arr.push(num_dict[nums[i]]);\n  }\n  num_arr.sort(function(a,\
    \ b){return a-b});\n  var num_str = \"\";\n  for (var i = 0; i < num_arr.length;\
    \ i++){\n    for (var key in num_dict){\n      if (num_dict[key] === num_arr[i]){\n\
    \        num_str += key + \" \";\n      }\n    }\n  }\n  return num_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_to_sort = [];\n    for (var i = 0; i < nums.length; i++){\n        switch\
    \ (nums[i]){\n            case \"zero\":\n                nums_to_sort.push(0);\n\
    \                break;\n            case \"one\":\n                nums_to_sort.push(1);\n\
    \                break;\n            case \"two\":\n                nums_to_sort.push(2);\n\
    \                break;\n            case \"three\":\n                nums_to_sort.push(3);\n\
    \                break;\n            case \"four\":\n                nums_to_sort.push(4);\n\
    \                break;\n            case \"five\":\n                nums_to_sort.push(5);\n\
    \                break;\n            case \"six\":\n                nums_to_sort.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_to_sort.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_to_sort.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_to_sort.push(9);\n\
    \                break;\n        }\n    }\n    nums_to_sort.sort(function(a, b){return\
    \ a-b});\n    var sorted_nums = [];\n    for (var i = 0; i < nums_to_sort.length;\
    \ i++){\n        switch (nums_to_sort[i]){\n            case 0:\n            \
    \    sorted_nums.push(\"zero\");\n                break;\n            case 1:\n\
    \                sorted_nums.push(\"one\");\n                break;\n        \
    \    case 2:\n                sorted_nums.push(\"two\");\n                break;\n\
    \            case 3:\n                sorted_nums.push(\"three\");\n         \
    \       break;\n            case 4:\n                sorted_nums.push(\"four\"\
    );\n                break;\n            case 5:\n                sorted_nums.push(\"\
    five\");\n                break;\n            case 6:\n                sorted_nums.push(\"\
    six\");\n                break;\n            case 7:\n                sorted_nums.push(\"\
    seven\");\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp85w_yebp.js:82\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var num_dict = {\n \
    \       \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(num_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in num_dict){\n        \
    \    if (num_dict[key] == nums_sorted[i]){\n                nums_sorted_str +=\
    \ key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_dict = {\n        \"zero\": 0,\n        \"one\"\
    : 1,\n        \"two\": 2,\n        \"three\": 3,\n        \"four\": 4,\n     \
    \   \"five\": 5,\n        \"six\": 6,\n        \"seven\": 7,\n        \"eight\"\
    : 8,\n        \"nine\": 9\n    };\n    for (var i = 0; i < nums.length; i++){\n\
    \        nums_sorted.push(nums_dict[nums[i]]);\n    }\n    nums_sorted.sort(function(a,\
    \ b){return a-b});\n    var nums_sorted_string = [];\n    for (var j = 0; j <\
    \ nums_sorted.length; j++){\n        for (var key in nums_dict){\n           \
    \ if (nums_dict[key] === nums_sorted[j]){\n                nums_sorted_string.push(key);\n\
    \            }\n        }\n    }\n    return nums_sorted_string.join(\" \");\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpd2nj5oug.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        switch (nums[i]){\n\
    \            case \"zero\":\n                nums_int.push(0);\n             \
    \   break;\n            case \"one\":\n                nums_int.push(1);\n   \
    \             break;\n            case \"two\":\n                nums_int.push(2);\n\
    \                break;\n            case \"three\":\n                nums_int.push(3);\n\
    \                break;\n            case \"four\":\n                nums_int.push(4);\n\
    \                break;\n            case \"five\":\n                nums_int.push(5);\n\
    \                break;\n            case \"six\":\n                nums_int.push(6);\n\
    \                break;\n            case \"seven\":\n                nums_int.push(7);\n\
    \                break;\n            case \"eight\":\n                nums_int.push(8);\n\
    \                break;\n            case \"nine\":\n                nums_int.push(9);\n\
    \                break;\n        }\n    }\n    nums_int.sort(function(a, b){return\
    \ a-b});\n    for (var i = 0; i < nums_int.length; i++){\n        switch (nums_int[i]){\n\
    \            case 0:\n                nums[i] = \"zero\";\n                break;\n\
    \            case 1:\n                nums[i] = \"one\";\n                break;\n\
    \            case 2:\n                nums[i] = \"two\";\n                break;\n\
    \            case 3:\n                nums[i] = \"three\";\n                break;\n\
    \            case 4:\n                nums[i] = \"four\";\n                break;\n\
    \            case 5:\n                nums[i] = \"five\";\n                break;\n\
    \            case 6:\n                nums[i] = \"six\";\n                break;\n\
    \            case 7:\n                nums[i] = \"seven\";\n                break;\n\
    \            case 8:\n                nums[i] = \"eight\";\n                break;\n\
    \            case 9:\n                nums[i] =\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp75bths49.js:75\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpjksh8m18.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = [];\n  var nums_sorted_string = \"\";\n  var nums_sorted_string_final = \"\
    \";\n  var nums_sorted_string_final_final = \"\";\n  var nums_sorted_string_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final = \"\";\n  var nums_sorted_string_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final = \"\"\
    ;\n  var nums_sorted_string_final_final_final_final_final_final_final = \"\";\n\
    \  var nums_sorted_string_final_final_final_final_final_final_final_final = \"\
    \";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = \"\";\n  var nums_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpoygxa6p8.js:38\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums2\
    \ = [];\n  for (var i = 0; i < nums.length; i++) {\n    if (nums[i] === \"zero\"\
    ) {\n      nums2.push(0);\n    }\n    else if (nums[i] === \"one\") {\n      nums2.push(1);\n\
    \    }\n    else if (nums[i] === \"two\") {\n      nums2.push(2);\n    }\n   \
    \ else if (nums[i] === \"three\") {\n      nums2.push(3);\n    }\n    else if\
    \ (nums[i] === \"four\") {\n      nums2.push(4);\n    }\n    else if (nums[i]\
    \ === \"five\") {\n      nums2.push(5);\n    }\n    else if (nums[i] === \"six\"\
    ) {\n      nums2.push(6);\n    }\n    else if (nums[i] === \"seven\") {\n    \
    \  nums2.push(7);\n    }\n    else if (nums[i] === \"eight\") {\n      nums2.push(8);\n\
    \    }\n    else if (nums[i] === \"nine\") {\n      nums2.push(9);\n    }\n  }\n\
    \  nums2.sort(function(a, b){return a-b});\n  var nums3 = [];\n  for (var i =\
    \ 0; i < nums2.length; i++) {\n    if (nums2[i] === 0) {\n      nums3.push(\"\
    zero\");\n    }\n    else if (nums2[i] === 1) {\n      nums3.push(\"one\");\n\
    \    }\n    else if (nums2[i] === 2) {\n      nums3.push(\"two\");\n    }\n  \
    \  else if (nums2[i] === 3) {\n      nums3.push(\"three\");\n    }\n    else if\
    \ (nums2[i] === 4) {\n      nums3.push(\"four\");\n    }\n    else if (\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmplujnwtzk.js:60\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  var nums_str = [];\n  var nums_sorted = [];\n  for (var i = 0; i <\
    \ nums.length; i++){\n    if (nums[i] == \"zero\"){\n      nums_int.push(0);\n\
    \    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n    }\n  \
    \  else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n    else if\
    \ (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if (nums[i]\
    \ == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i] == \"five\"\
    ){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"){\n      nums_int.push(6);\n\
    \    }\n    else if (nums[i] == \"seven\"){\n      nums_int.push(7);\n    }\n\
    \    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n    }\n    else\
    \ if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n  }\n  nums_int.sort(function(a,\
    \ b){return a-b});\n  for (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i]\
    \ == 0){\n      nums_str.push(\"zero\");\n    }\n    else if (nums_int[i] == 1){\n\
    \      nums_str.push(\"one\");\n    }\n    else if (nums_int[i] == 2){\n     \
    \ nums_str.push(\"two\");\n    }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"\
    three\");\n    }\n    else if (\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmplva_5cbv.js:58\nconst assert = require('node:assert');\n^^^^^\n\
    \nSyntaxError: Unexpected token 'const'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_map = {\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n\
    \        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"\
    six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n\
    \    };\n    var nums_sorted = nums.sort(function(a, b){\n        return nums_map[a]\
    \ - nums_map[b];\n    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpfurm1qz6.js:9\n    return nums_to_numbers[a] - nums_to_numbers[b];\n\
    \    ^\n\nReferenceError: nums_to_numbers is not defined\n    at /tmp/tmpfurm1qz6.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpfurm1qz6.js:8:26)\n\
    \    at test (/tmp/tmpfurm1qz6.js:21:20)\n    at Object.<anonymous> (/tmp/tmpfurm1qz6.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var num_array = numbers.split(\" \");\n  var\
    \ num_dict = {\n    \"zero\": 0,\n    \"one\": 1,\n    \"two\": 2,\n    \"three\"\
    : 3,\n    \"four\": 4,\n    \"five\": 5,\n    \"six\": 6,\n    \"seven\": 7,\n\
    \    \"eight\": 8,\n    \"nine\": 9\n  };\n  var num_array_int = [];\n  for (var\
    \ i = 0; i < num_array.length; i++) {\n    num_array_int.push(num_dict[num_array[i]]);\n\
    \  }\n  num_array_int.sort(function(a, b){return a-b});\n  var num_array_str =\
    \ [];\n  for (var i = 0; i < num_array_int.length; i++) {\n    for (var key in\
    \ num_dict) {\n      if (num_dict[key] === num_array_int[i]) {\n        num_array_str.push(key);\n\
    \      }\n    }\n  }\n  return num_array_str.join(\" \");\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = sort_numbers;\n\
    \  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"three\"\
    ),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three five\
    \ nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"),\"\
    zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five four\
    \ three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \  });\n  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpi7cn1nr7.js:9\n    return nums_to_ints[a] - nums_to_ints[b];\n\
    \    ^\n\nReferenceError: nums_to_ints is not defined\n    at /tmp/tmpi7cn1nr7.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpi7cn1nr7.js:8:26)\n\
    \    at test (/tmp/tmpi7cn1nr7.js:21:20)\n    at Object.<anonymous> (/tmp/tmpi7cn1nr7.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        nums_int.push(convert_to_int(nums[i]));\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    for (var i = 0; i\
    \ < nums_int.length; i++){\n        nums_int[i] = convert_to_string(nums_int[i]);\n\
    \    }\n    return nums_int.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp19zf3rd8.js:10\n        nums_int.push(convert_to_int(nums[i]));\n\
    \                 ^\n\nReferenceError: convert_to_int is not defined\n    at sort_numbers\
    \ (/tmp/tmp19zf3rd8.js:10:18)\n    at test (/tmp/tmp19zf3rd8.js:24:20)\n    at\
    \ Object.<anonymous> (/tmp/tmp19zf3rd8.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpxd8i17c3.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_int\
    \ = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] == \"zero\"\
    ){\n      nums_int.push(0);\n    }\n    else if (nums[i] == \"one\"){\n      nums_int.push(1);\n\
    \    }\n    else if (nums[i] == \"two\"){\n      nums_int.push(2);\n    }\n  \
    \  else if (nums[i] == \"three\"){\n      nums_int.push(3);\n    }\n    else if\
    \ (nums[i] == \"four\"){\n      nums_int.push(4);\n    }\n    else if (nums[i]\
    \ == \"five\"){\n      nums_int.push(5);\n    }\n    else if (nums[i] == \"six\"\
    ){\n      nums_int.push(6);\n    }\n    else if (nums[i] == \"seven\"){\n    \
    \  nums_int.push(7);\n    }\n    else if (nums[i] == \"eight\"){\n      nums_int.push(8);\n\
    \    }\n    else if (nums[i] == \"nine\"){\n      nums_int.push(9);\n    }\n \
    \ }\n  nums_int.sort(function(a, b){return a-b});\n  var nums_str = [];\n  for\
    \ (var i = 0; i < nums_int.length; i++){\n    if (nums_int[i] == 0){\n      nums_str.push(\"\
    zero\");\n    }\n    else if (nums_int[i] == 1){\n      nums_str.push(\"one\"\
    );\n    }\n    else if (nums_int[i] == 2){\n      nums_str.push(\"two\");\n  \
    \  }\n    else if (nums_int[i] == 3){\n      nums_str.push(\"three\");\n    }\n\
    \    else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpw35q7ag7.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_dict = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n  \
    \      'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    };\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        nums_int.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_int.sort(function(a, b){return a-b});\n    var nums_sorted =\
    \ [];\n    for (var i = 0; i < nums_int.length; i++){\n        for (var key in\
    \ nums_dict){\n            if (nums_dict[key] == nums_int[i]){\n             \
    \   nums_sorted.push(key);\n            }\n        }\n    }\n    return nums_sorted.join(\"\
    \ \");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n \
    \ assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_dict[a] - nums_dict[b];\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpl5uhmtbw.js:9\n        return nums_dict[a] - nums_dict[b];\n  \
    \      ^\n\nReferenceError: nums_dict is not defined\n    at /tmp/tmpl5uhmtbw.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpl5uhmtbw.js:8:28)\n\
    \    at test (/tmp/tmpl5uhmtbw.js:21:20)\n    at Object.<anonymous> (/tmp/tmpl5uhmtbw.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = [];\n    var nums_sorted_str = \"\";\n    var nums_dict = {\n\
    \        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n        \"three\"\
    : 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\": 6,\n      \
    \  \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    };\n    for\
    \ (var i = 0; i < nums.length; i++){\n        nums_sorted.push(nums_dict[nums[i]]);\n\
    \    }\n    nums_sorted.sort(function(a, b){return a-b});\n    for (var i = 0;\
    \ i < nums_sorted.length; i++){\n        for (var key in nums_dict){\n       \
    \     if (nums_dict[key] == nums_sorted[i]){\n                nums_sorted_str\
    \ += key + \" \";\n            }\n        }\n    }\n    return nums_sorted_str.trim();\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = sort_numbers;\n  assert.deepEqual(candidate(\"\"),\"\");\n  assert.deepEqual(candidate(\"\
    three\"),\"three\");\n  assert.deepEqual(candidate(\"three five nine\"),\"three\
    \ five nine\");\n  assert.deepEqual(candidate(\"five zero four seven nine eight\"\
    ),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"six five\
    \ four three two one zero\"),\"zero one two three four five six\");\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpdkbcw48d.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpdkbcw48d.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpdkbcw48d.js:8:26)\n\
    \    at test (/tmp/tmpdkbcw48d.js:21:20)\n    at Object.<anonymous> (/tmp/tmpdkbcw48d.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_sorted = nums.sort(function(a,b){\n        return nums_to_int(a) - nums_to_int(b);\n\
    \    });\n    return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp_oje_q2e.js:9\n        return nums_to_int(a) - nums_to_int(b);\n\
    \        ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmp_oje_q2e.js:9:9\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmp_oje_q2e.js:8:28)\n\
    \    at test (/tmp/tmp_oje_q2e.js:21:20)\n    at Object.<anonymous> (/tmp/tmp_oje_q2e.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n  var nums = numbers.split(\" \");\n  var nums_sorted\
    \ = nums.sort(function(a,b){\n    return nums_to_int(a) - nums_to_int(b);\n  });\n\
    \  return nums_sorted.join(\" \");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpzb_ohvrd.js:9\n    return nums_to_int(a) - nums_to_int(b);\n  \
    \  ^\n\nReferenceError: nums_to_int is not defined\n    at /tmp/tmpzb_ohvrd.js:9:5\n\
    \    at Array.sort (<anonymous>)\n    at sort_numbers (/tmp/tmpzb_ohvrd.js:8:26)\n\
    \    at test (/tmp/tmpzb_ohvrd.js:21:20)\n    at Object.<anonymous> (/tmp/tmpzb_ohvrd.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n"
  exit_code: 1
  status: ReferenceError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmpx8dgw_q7.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight' and 'nine'.\n// Return the string with numbers sorted from smallest\
    \ to largest\n// >>> sort_numbers(\"three one five\")\n// \"one three five\"\n\
    function sort_numbers(numbers){\n    var nums = numbers.split(\" \");\n    var\
    \ nums_int = [];\n    for (var i = 0; i < nums.length; i++){\n        if (nums[i]\
    \ == \"zero\"){\n            nums_int.push(0);\n        }\n        else if (nums[i]\
    \ == \"one\"){\n            nums_int.push(1);\n        }\n        else if (nums[i]\
    \ == \"two\"){\n            nums_int.push(2);\n        }\n        else if (nums[i]\
    \ == \"three\"){\n            nums_int.push(3);\n        }\n        else if (nums[i]\
    \ == \"four\"){\n            nums_int.push(4);\n        }\n        else if (nums[i]\
    \ == \"five\"){\n            nums_int.push(5);\n        }\n        else if (nums[i]\
    \ == \"six\"){\n            nums_int.push(6);\n        }\n        else if (nums[i]\
    \ == \"seven\"){\n            nums_int.push(7);\n        }\n        else if (nums[i]\
    \ == \"eight\"){\n            nums_int.push(8);\n        }\n        else if (nums[i]\
    \ == \"nine\"){\n            nums_int.push(9);\n        }\n    }\n    nums_int.sort(function(a,\
    \ b){return a-b});\n    var nums_str = [];\n    for (var i = 0; i < nums_int.length;\
    \ i++){\n        if (nums_int[i] == 0){\n            nums_str.push(\"zero\");\n\
    \        }\n        else if (nums_int[i] == 1){\n            nums_str.push(\"\
    one\");\n        }\n        else if (nums_int[i] == 2){\n            nums_str.push(\"\
    two\");\n        }\n        else if (nums_int[i] == 3){\n            nums_str.push(\"\
    three\");\n        }\n        else if (nums_int[i] == 4){\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = sort_numbers;\n  assert.deepEqual(candidate(\"\
    \"),\"\");\n  assert.deepEqual(candidate(\"three\"),\"three\");\n  assert.deepEqual(candidate(\"\
    three five nine\"),\"three five nine\");\n  assert.deepEqual(candidate(\"five\
    \ zero four seven nine eight\"),\"zero four five seven eight nine\");\n  assert.deepEqual(candidate(\"\
    six five four three two one zero\"),\"zero one two three four five six\");\n}\n\
    \ntest();"
  stdout: ''
  stderr: "/tmp/tmp7r8e1wfd.js:69\ntest();\n       \n\nSyntaxError: Unexpected end\
    \ of input\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError

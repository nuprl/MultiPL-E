name: HumanEval_146_specialFilter
language: js
results:
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpt15t3la1.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt15t3la1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp2ao9v5xa.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2ao9v5xa.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpapjl2dmv.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpapjl2dmv.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpuotz8vf6.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuotz8vf6.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmphhoy5rjq.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmphhoy5rjq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp6srd3dmn.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6srd3dmn.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpvfw5893s.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvfw5893s.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp2gs6or4d.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2gs6or4d.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmposm8bwhb.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmposm8bwhb.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpefw60a5n.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpefw60a5n.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpwx5i1blh.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwx5i1blh.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp3srq9_fw.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3srq9_fw.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp68qq0xjc.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp68qq0xjc.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpflzo_9p8.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpflzo_9p8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp408otu_7.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp408otu_7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 !== 0 && num % 10 % 2 !== 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp4eiahwm6.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4eiahwm6.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp9smatkso.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9smatkso.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpdt75efkt.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdt75efkt.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpj5t_ud73.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpj5t_ud73.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpm33nus4r.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm33nus4r.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp_a3utglq.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_a3utglq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpvik26val.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvik26val.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpwywfumlb.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwywfumlb.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpbyw4_s8u.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbyw4_s8u.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp7pnn1vp6.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7pnn1vp6.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    return nums.filter(function(num){\n\
    \        return num > 10 && num % 2 === 1 && num % 10 === 1;\n    }).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
    \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
    \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
    \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp53xfhuhs.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp53xfhuhs.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 !== 0 && num % 10 % 2 !== 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpmk5_7t4k.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmk5_7t4k.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    return nums.filter(function(num){\n\
    \        return num > 10 && num % 2 === 1 && (num % 10) % 2 === 1;\n    }).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
    \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
    \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
    \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpx_yh394w.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx_yh394w.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp26c2bbtl.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp26c2bbtl.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpy2io49rj.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy2io49rj.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpem6078i1.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpem6078i1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpvnc6hc69.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvnc6hc69.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmphdln8mc4.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmphdln8mc4.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp1sushp47.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1sushp47.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp7m7h3q9_.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7m7h3q9_.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpfq05xljt.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfq05xljt.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpk_bozba6.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk_bozba6.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmph_98z1sj.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmph_98z1sj.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp7vy3epvw.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7vy3epvw.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpt3kgsm07.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt3kgsm07.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpaujua5p1.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpaujua5p1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpay2goclq.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpay2goclq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmplg5d_aeo.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmplg5d_aeo.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpz5rl7cr1.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz5rl7cr1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        var num = nums[i];\n     \
    \   if(num > 10 && num % 2 == 1 && (num % 10) % 2 == 1){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp0dd_za61.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0dd_za61.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpd6unkutp.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd6unkutp.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpqt6c4293.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqt6c4293.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpjdajyb30.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjdajyb30.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp0meim7du.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0meim7du.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpwmk0rom0.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwmk0rom0.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpol26a8y5.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpol26a8y5.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpia_udzw9.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpia_udzw9.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpltenokyu.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpltenokyu.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpfgfjdjiq.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfgfjdjiq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpuc10qn7t.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuc10qn7t.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpxxrcz3ji.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxxrcz3ji.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp_ukkyk3p.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_ukkyk3p.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp_xpkxm89.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_xpkxm89.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpdr1m2syh.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdr1m2syh.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp5v47n25t.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5v47n25t.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 !== 0 && num % 10 % 2 !== 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpo60xyzj4.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo60xyzj4.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmprhnguirn.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmprhnguirn.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp5jzo053k.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5jzo053k.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpm3p_pgt0.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm3p_pgt0.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpqevmjh2q.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqevmjh2q.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    return nums.filter(function(num){\n\
    \        return num > 10 && num % 2 == 1 && num % 10 == 1;\n    }).length;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
    \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
    \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
    \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpmsz5cnlf.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmsz5cnlf.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 !== 0 && num % 10 % 2 !== 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp29z8x0yz.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp29z8x0yz.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpsogdf5la.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsogdf5la.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp6qnjlxk7.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6qnjlxk7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp5u5q84bc.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5u5q84bc.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmph2mie8sz.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmph2mie8sz.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    return nums.filter(function(num){\n\
    \        return num > 10 && num % 2 == 1 && num % 10 == 1;\n    }).length;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
    \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
    \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
    \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpqt_cwv_x.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqt_cwv_x.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpbk4qkvid.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbk4qkvid.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpelduy0vx.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpelduy0vx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp2pe1r5z5.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2pe1r5z5.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpn6tqn0o8.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn6tqn0o8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    return nums.filter(function(num){\n\
    \        return num > 10 && num % 2 === 1 && num % 10 === 1;\n    }).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
    \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
    \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
    \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp_lxff44_.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_lxff44_.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpmeykt_ro.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmeykt_ro.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp8v8hm0gp.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8v8hm0gp.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpmnhaol4x.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmnhaol4x.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    return nums.filter(function(num){\n\
    \        return num > 10 && num % 2 !== 0 && num % 10 % 2 !== 0;\n    }).length;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
    \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
    \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
    \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpxr3_enhb.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxr3_enhb.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpp3h0hqd8.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp3h0hqd8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpe0lgvise.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe0lgvise.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmptcz9id4a.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmptcz9id4a.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpdf4tulya.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdf4tulya.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpo8lbdp1o.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo8lbdp1o.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpigzy3gwv.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpigzy3gwv.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpdq9ekcsd.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdq9ekcsd.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpnmwtq90l.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnmwtq90l.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpauolt1hb.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpauolt1hb.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]%2\
    \ != 0 && nums[i]%10 != 0){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n\
    \  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpdmae0ie7.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdmae0ie7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let counter = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[0] % 2 != 0 && nums[nums.length - 1] % 2 != 0){\n         \
    \   counter++;\n        }\n    }\n    return counter;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpcem266_6.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcem266_6.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp38jzkao9.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp38jzkao9.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpi61tfjze.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi61tfjze.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmps2ezjhmp.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmps2ezjhmp.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp2xgu3svq.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2xgu3svq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 != 0 && num % 10 % 2 != 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpbr_pvow_.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbr_pvow_.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpkqligtkk.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpkqligtkk.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpno207ezk.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpno207ezk.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp9nly12hx.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9nly12hx.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpvf5r5rut.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvf5r5rut.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpoz4qpss3.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpoz4qpss3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpxsv5g6n9.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxsv5g6n9.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp4v5h2w8s.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4v5h2w8s.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp8q37qcbd.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8q37qcbd.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpwinqttbi.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwinqttbi.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpu_vdhy1u.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu_vdhy1u.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp5ijrbzlj.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5ijrbzlj.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpgf8d3ffv.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgf8d3ffv.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpnamik7d8.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnamik7d8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpbll_43zi.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbll_43zi.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpf4udogb3.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf4udogb3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp9wuy52_s.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9wuy52_s.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpr_gjl6da.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr_gjl6da.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmptw6bazyu.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmptw6bazyu.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpfnix2dxi.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfnix2dxi.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpbla5ohfk.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbla5ohfk.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpwna0n5nw.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwna0n5nw.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmphcxeb8bd.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmphcxeb8bd.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpo3vy7f_y.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo3vy7f_y.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 !== 0 && num % 10 % 2 !== 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp_f6d4ng6.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_f6d4ng6.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpk6x4sxhs.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk6x4sxhs.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpp5pxvnju.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpp5pxvnju.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpe6leay83.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe6leay83.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpi81ir4z_.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi81ir4z_.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpd97lbjzz.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd97lbjzz.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpgxbcwo4h.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgxbcwo4h.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp3cuxi11p.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3cuxi11p.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpozkdjsqa.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpozkdjsqa.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmppwj7ohpk.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmppwj7ohpk.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpy72n7ov5.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpy72n7ov5.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpyvpdqaxc.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyvpdqaxc.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpwhv5my4t.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwhv5my4t.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpegex0zlq.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpegex0zlq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpn0xipc4j.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn0xipc4j.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp22drszpe.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp22drszpe.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpgbxgcxv8.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgbxgcxv8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmph8z86paw.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmph8z86paw.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp_2ooi_m2.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_2ooi_m2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp5boaomnh.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5boaomnh.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpdifpt8dn.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdifpt8dn.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpczu0ixfq.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpczu0ixfq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpijrjdxf3.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpijrjdxf3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpa2iqao27.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpa2iqao27.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp_ndsoc7s.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_ndsoc7s.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmputp2oqyb.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmputp2oqyb.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp7vxy5fyw.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7vxy5fyw.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp4m47qnc4.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4m47qnc4.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpdey2_uj1.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdey2_uj1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp21lt_79l.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp21lt_79l.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpuvasdi25.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuvasdi25.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp7f4qxzm3.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7f4qxzm3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmptszhyeaw.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmptszhyeaw.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmp5qkkk2nu.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp5qkkk2nu.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpxk781_4o.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxk781_4o.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp1y1h63nu.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1y1h63nu.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpoaxfq718.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpoaxfq718.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[0] % 2 !== 0 && nums[nums.length - 1] % 2 !== 0){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpbqbzrs7c.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbqbzrs7c.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   let firstDigit = num % 10;\n        let lastDigit = num;\n        while(lastDigit\
    \ >= 10){\n            lastDigit = Math.floor(lastDigit / 10);\n        }\n  \
    \      if(num > 10 && firstDigit % 2 === 1 && lastDigit % 2 === 1){\n        \
    \    count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpu_bwjrid.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu_bwjrid.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpnt06qwro.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnt06qwro.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpvz0rjukh.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvz0rjukh.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpgni383el.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgni383el.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpx_q3_lkr.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx_q3_lkr.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp12chxags.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp12chxags.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp_ubwapp1.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_ubwapp1.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmp34xkvejf.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp34xkvejf.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpwpvelchl.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwpvelchl.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpngu07ora.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpngu07ora.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpbk2qigsk.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbk2qigsk.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp4h2mpnu7.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4h2mpnu7.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpzgb0j9s7.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzgb0j9s7.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp28vg4qsy.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp28vg4qsy.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpruz7hqfp.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpruz7hqfp.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpsca9piuk.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsca9piuk.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpgy759hni.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgy759hni.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp05oj0hop.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp05oj0hop.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpg0pa89ro.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg0pa89ro.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpe47iouoa.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe47iouoa.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp9vc8n5k2.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9vc8n5k2.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1 || nums[i] % 10 === 3 || nums[i] % 10 === 5\
    \ || nums[i] % 10 === 7 || nums[i] % 10 === 9){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpe5s8y07n.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe5s8y07n.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp6rfnbhle.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6rfnbhle.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 == 1 && nums[i] % 10 == 1 || nums[i] % 10 == 3 || nums[i] % 10 == 5 || nums[i]\
    \ % 10 == 7 || nums[i] % 10 == 9){\n            count++;\n        }\n    }\n \
    \   return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n1\n\nshould equal\n\n0\n    at test (/tmp/tmpsdbmfmv_.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsdbmfmv_.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected: 0,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpyd3wed7e.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyd3wed7e.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmps4z0xn03.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmps4z0xn03.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpuqtcrqdq.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuqtcrqdq.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    return nums.filter(function(num){\n\
    \        var numString = num.toString();\n        var firstDigit = numString[0];\n\
    \        var lastDigit = numString[numString.length - 1];\n        return num\
    \ > 10 && firstDigit % 2 !== 0 && lastDigit % 2 !== 0;\n    }).length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
    \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
    \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
    \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpbi_lej2t.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbi_lej2t.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpffa5zsxj.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpffa5zsxj.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[0] % 2 === 1 && nums[nums.length - 1] % 2 === 1){\n      \
    \      count++;\n        }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpyiwgrhgp.js:25:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyiwgrhgp.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmptbmucp6a.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmptbmucp6a.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    var count = 0;\n\
    \    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp4xe8_x8h.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4xe8_x8h.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpbwom7g98.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbwom7g98.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp2f8odcpu.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2f8odcpu.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        let num = nums[i];\n     \
    \   if(num > 10 && num % 2 === 1 && num % 10 === 1){\n            count++;\n \
    \       }\n    }\n    return count;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n0\n\nshould equal\n\n1\n    at test (/tmp/tmpbo13puyw.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbo13puyw.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected: 1,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 % 2 !== 0){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp0vz66yv3.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0vz66yv3.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmp2cgfpnr8.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmp2cgfpnr8.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 !== 0 && nums[i] % 10 !== 0){\n            count++;\n        }\n    }\n\
    \    return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5,\
    \ -2, 1, -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmps4dnix6s.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmps4dnix6s.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpk0scu81p.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpk0scu81p.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//Write a function that takes an array of numbers as input and returns\
    \ \n// the number of elements in the array that are greater than 10 and both \n\
    // first and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n\
    // >>> specialFilter([15, -73, 14, -15])\n// 1\n// >>> specialFilter([33, -2,\
    \ -3, 45, 21, 109])\n// 2\nfunction specialFilter(nums){\n    let count = 0;\n\
    \    for(let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]\
    \ % 2 != 0 && nums[i] % 10 != 0){\n            count++;\n        }\n    }\n  \
    \  return count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1,\
    \ -5]),0);\n  assert.deepEqual(candidate([15, -73, 14, -15]),1);\n  assert.deepEqual(candidate([33,\
    \ -2, -3, 45, 21, 109]),2);\n  assert.deepEqual(candidate([43, -12, 93, 125, 121,\
    \ 109]),4);\n  assert.deepEqual(candidate([71, -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n\
    \  assert.deepEqual(candidate([]),0);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n4\n\nshould equal\n\n2\n    at test (/tmp/tmpx3d2q_ik.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx3d2q_ik.js:33:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected: 2,\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError

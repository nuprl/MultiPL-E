name: HumanEval_47_median
language: js
prompt: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4, 5])\n\
  // 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
  \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
  \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
completions: ["    var sorted = l.sort(function(a, b){return a-b});\n    var len =\
    \ sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n",
  "    var med = 0;\n    var len = l.length;\n    var half = Math.floor(len/2);\n\
    \    l.sort(function(a,b){return a-b});\n    if (len % 2 == 0){\n        med =\
    \ (l[half-1] + l[half])/2;\n    }\n    else{\n        med = l[half];\n    }\n\
    \    return med;\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n\
    \    var half = Math.floor(sorted.length/2);\n    if(sorted.length % 2){\n   \
    \     return sorted[half];\n    }\n    else{\n        return (sorted[half-1] +\
    \ sorted[half]) / 2.0;\n    }\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar mid = Math.floor(sorted.length/2);\n\tif (sorted.length % 2 ==\
    \ 0){\n\t\treturn (sorted[mid] + sorted[mid-1])/2;\n\t}\n\telse{\n\t\treturn sorted[mid];\n\
    \t}\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1]\
    \ + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n",
  "    var sum = 0;\n    for(var i = 0; i < l.length; i++){\n        sum += l[i];\n\
    \    }\n    return sum / l.length;\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if (l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length %\
    \ 2)\n        return sorted[half];\n    else\n        return (sorted[half-1] +\
    \ sorted[half]) / 2.0;\n}\n", "    //YOUR CODE HERE\n    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "  var sorted = l.sort(function(a,b){return\
    \ a-b});\n  var len = sorted.length;\n  if (len % 2 == 0){\n    return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n  }\n  else{\n    return sorted[Math.floor(len/2)];\n\
    \  }\n}\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n   \
    \ }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2.0;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n  \
    \  }\n}\n", "    var len = l.length;\n    var mid = Math.floor(len/2);\n    if(len%2\
    \ == 0){\n        return (l[mid-1] + l[mid])/2;\n    }\n    else{\n        return\
    \ l[mid];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n\
    \    var half = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n    \
    \    return sorted[half];\n    else\n        return (sorted[half-1] + sorted[half])\
    \ / 2.0;\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var\
    \ len = sorted.length;\n    if (len % 2 === 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort();\n    var middle = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n\
    \    } else {\n        return sorted[middle];\n    }\n}\n", "    var m = l.length/2;\n\
    \    if(l.length%2==0){\n        return (l[m-1]+l[m])/2;\n    }\n    else{\n \
    \       return l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    var mid = Math.floor(len/2);\n\
    \    if (len % 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n   \
    \ }\n    else{\n        return sorted[mid];\n    }\n}\n", "  var m = l.length\
    \ / 2;\n  if (l.length % 2 == 0){\n    return (l[m] + l[m-1]) / 2;\n  } else {\n\
    \    return l[Math.floor(m)];\n  }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    var mid = Math.floor(len/2);\n\
    \    if (len % 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n   \
    \ }\n    else{\n        return sorted[mid];\n    }\n}\n", "  var sorted = l.sort(function(a,b){return\
    \ a-b});\n  var half = Math.floor(sorted.length/2);\n  if(sorted.length % 2){\n\
    \    return sorted[half];\n  }\n  else{\n    return (sorted[half-1] + sorted[half])\
    \ / 2.0;\n  }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n \
    \   var length = sorted.length;\n    if (length % 2 === 0){\n        return (sorted[length/2]\
    \ + sorted[length/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(length/2)];\n\
    \    }\n}\n", "    var l = l.sort(function(a, b){return a-b});\n    var mid =\
    \ Math.floor(l.length/2);\n    if (l.length % 2 === 0){\n        return (l[mid]\
    \ + l[mid-1])/2;\n    }\n    else{\n        return l[mid];\n    }\n}\n", "   \
    \ var sorted = l.sort(function(a, b){return a-b});\n    var length = sorted.length;\n\
    \    if (length % 2 == 0){\n        return (sorted[length/2] + sorted[length/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[(length-1)/2];\n    }\n}\n",
  "    var l2 = l.sort(function(a,b){return a-b});\n    var len = l2.length;\n   \
    \ var half = Math.floor(len/2);\n    if(len % 2){\n        return l2[half];\n\
    \    }else{\n        return (l2[half-1] + l2[half]) / 2.0;\n    }\n}\n", "\tvar\
    \ sorted = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\t\
    if(len % 2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2 - 1])/2;\n\t}\n\t\
    else{\n\t\treturn sorted[(len-1)/2];\n\t}\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length\
    \ % 2){\n        return sorted[half];\n    }\n    else{\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "  var sorted = l.sort(function(a,b){return a-b});\n  var mid =\
    \ Math.floor(sorted.length/2);\n  if (sorted.length % 2 == 0){\n    return (sorted[mid]\
    \ + sorted[mid-1])/2;\n  }\n  else{\n    return sorted[mid];\n  }\n}\n", "   \
    \ let sorted = l.sort(function(a, b){return a-b});\n    let mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 === 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "\tl.sort(function(a,b){return\
    \ a-b});\n\tvar n = l.length;\n\tif(n%2==0){\n\t\treturn (l[n/2-1]+l[n/2])/2;\n\
    \t}\n\telse{\n\t\treturn l[Math.floor(n/2)];\n\t}\n}\n", "    var l = l.sort(function(a,\
    \ b){return a-b});\n    var l_len = l.length;\n    if(l_len % 2 == 0){\n     \
    \   return (l[l_len/2] + l[l_len/2 - 1])/2;\n    }\n    else{\n        return\
    \ l[Math.floor(l_len/2)];\n    }\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if (l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "    var m = l.length / 2;\n    if (l.length\
    \ % 2 == 0){\n        return (l[m] + l[m-1]) / 2;\n    }\n    else {\n       \
    \ return l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length\
    \ % 2){\n        return sorted[half];\n    }\n    else{\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[(len\
    \ - 1)/2];\n    }\n}\n", "    var sorted = l.sort();\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1]) /\
    \ 2;\n    }\n    else{\n        return sorted[(len - 1) / 2];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a, b){return a-b});\n    var length = sorted.length;\n\
    \    var middle = Math.floor(length/2);\n    if (length % 2 == 0){\n        return\
    \ (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n\
    \    }\n}\n", "    var l = l.sort(function(a, b){return a-b});\n    var m = l.length;\n\
    \    if (m%2 == 0){\n        return (l[m/2-1]+l[m/2])/2;\n    }\n    else{\n \
    \       return l[(m-1)/2];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n\
    \        return (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n\
    \        return sorted[Math.floor(length/2)];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a, b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 === 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var l = l.sort(function(a,\
    \ b){return a-b});\n    var mid = Math.floor(l.length/2);\n    if (l.length %\
    \ 2 == 0){\n        return (l[mid] + l[mid-1])/2;\n    }\n    else{\n        return\
    \ l[mid];\n    }\n}\n", "    var median = 0;\n    var len = l.length;\n    var\
    \ half = Math.floor(len/2);\n    if (len % 2 == 0){\n        median = (l[half-1]\
    \ + l[half])/2;\n    }\n    else{\n        median = l[half];\n    }\n    return\
    \ median;\n}\n", "    //YOUR CODE HERE\n    var sum = 0;\n    var count = 0;\n\
    \    for (var i = 0; i < l.length; i++){\n        sum += l[i];\n        count\
    \ += 1;\n    }\n    return sum/count;\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n\
    \        return (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n\
    \        return sorted[Math.floor(length/2)];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n    var mid\
    \ = Math.floor(len/2);\n    if (len % 2 == 0){\n        return (sorted[mid] +\
    \ sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n    }\n}\n",
  "    var sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a, b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    let sorted =\
    \ l.sort(function(a, b){return a-b});\n    let len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n \
    \   else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n    if\
    \ (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n   \
    \ }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var\
    \ sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a, b){return a-b});\n    var length = sorted.length;\n   \
    \ var middle = Math.floor(length/2);\n    if (length % 2 == 0){\n        return\
    \ (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n        return sorted[middle];\n\
    \    }\n}\n", "    var m = 0;\n    var n = l.length;\n    var s = 0;\n    for(var\
    \ i = 0; i < n; i++){\n        s += l[i];\n    }\n    m = s / n;\n    return m;\n\
    }\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n \
    \   else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n    if\
    \ (len % 2 == 0){\n        return (sorted[len/2 - 1] + sorted[len/2]) / 2;\n \
    \   }\n    else{\n        return sorted[(len - 1) / 2];\n    }\n}\n", "    var\
    \ sorted = l.sort(function(a, b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var m = l.length;\n    var\
    \ n = Math.floor(m/2);\n    if (m % 2 == 0){\n        return (l[n-1] + l[n])/2;\n\
    \    }\n    else{\n        return l[n];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2 - 1] + sorted[len/2]) / 2.0;\n    }\n    else{\n  \
    \      return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2 - 1] + sorted[len/2]) / 2;\n    }\n    else{\n    \
    \    return sorted[Math.floor(len/2)];\n    }\n}\n", "    var median = 0;\n  \
    \  var length = l.length;\n    var sorted = l.sort(function(a, b){return a-b});\n\
    \    if(length % 2 === 0){\n        median = (sorted[length/2] + sorted[length/2\
    \ - 1])/2;\n    }\n    else{\n        median = sorted[Math.floor(length/2)];\n\
    \    }\n    return median;\n}\n", "    var m = 0;\n    var n = 0;\n    var o =\
    \ 0;\n    var p = 0;\n    var q = 0;\n    var r = 0;\n    var s = 0;\n    var\
    \ t = 0;\n    var u = 0;\n    var v = 0;\n    var w = 0;\n    var x = 0;\n   \
    \ var y = 0;\n    var z = 0;\n    var aa = 0;\n    var ab = 0;\n    var ac = 0;\n\
    \    var ad = 0;\n    var ae = 0;\n    var af = 0;\n    var ag = 0;\n    var ah\
    \ = 0;\n    var ai = 0;\n    var aj = 0;\n    var ak = 0;\n    var al = 0;\n \
    \   var am = 0;\n    var an = 0;\n    var ao = 0;\n    var ap = 0;\n    var aq\
    \ = 0;\n    var ar = 0;\n    var as = 0;\n    var at = 0;\n    var au = 0;\n \
    \   var av = 0;\n    var aw = 0;\n    var ax = 0;\n    var ay = 0;\n    var az\
    \ = 0;\n    var ba = 0;\n    var bb = 0;\n    var bc = 0;\n    var bd = 0;\n \
    \   var be = 0;\n    var bf = 0;\n    var bg = 0;\n    var bh = 0;\n    var bi\
    \ = 0;\n    var bj = 0;\n    var bk = 0;\n    var bl = 0;\n    var bm = 0;\n \
    \   var bn = 0;\n    var bo = 0;\n    var bp = 0;\n    var bq = 0;\n    var br\
    \ = 0;\n    var bs = 0;\n    var bt = 0;\n    var bu = 0;\n    var bv = 0;\n \
    \   var bw = 0;\n    var bx = 0;\n    var by = 0;\n    var bz = 0;\n    var ca\
    \ = 0;\n    var cb = 0;\n    var cc = 0;\n    var cd =", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length\
    \ % 2)\n        return sorted[half];\n    else\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n       \
    \ return (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n    \
    \    return sorted[Math.floor(length/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var m = l.length/2;\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    //YOUR CODE HERE\n    var\
    \ m = l.length/2;\n    if (l.length%2 == 0){\n        return (l[m-1] + l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var m =\
    \ l.length;\n    var n = m/2;\n    if (m%2 == 0){\n        return (l[n-1] + l[n])/2;\n\
    \    }\n    else{\n        return l[Math.floor(n)];\n    }\n}\n", "    //YOUR\
    \ CODE HERE\n    var len = l.length;\n    var mid = Math.floor(len/2);\n    if(len\
    \ % 2 == 0){\n        return (l[mid] + l[mid-1])/2;\n    }\n    else{\n      \
    \  return l[mid];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var median = 0;\n    var length = l.length;\n    var sorted\
    \ = l.sort(function(a, b){return a-b});\n    if(length % 2 == 0){\n        median\
    \ = (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n        median\
    \ = sorted[Math.floor(length/2)];\n    }\n    return median;\n}\n", "\tvar sorted\
    \ = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\tif(len %\
    \ 2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2 - 1])/2;\n\t}\n\telse{\n\t\
    \treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    } else {\n        return\
    \ sorted[(len - 1)/2];\n    }\n}\n", "    var len = l.length;\n    var mid = len/2;\n\
    \    var sorted = l.sort(function(a,b){return a-b});\n    if(len%2==0){\n    \
    \    return (sorted[mid-1]+sorted[mid])/2;\n    }else{\n        return sorted[Math.floor(mid)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var middle\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[middle] + sorted[middle-1])/2;\n    } else {\n        return sorted[middle];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var length\
    \ = sorted.length;\n    if (length % 2 == 0){\n        return (sorted[length/2]\
    \ + sorted[length/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(length/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var half\
    \ = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n\
    \    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n", "    var len\
    \ = l.length;\n    var mid = Math.floor(len/2);\n    if(len % 2 == 0){\n     \
    \   return (l[mid-1] + l[mid])/2;\n    }\n    else{\n        return l[mid];\n\
    \    }\n}\n", "  var sorted = l.sort(function(a,b){return a-b});\n  var len =\
    \ sorted.length;\n  if (len % 2 == 0){\n    return (sorted[len/2] + sorted[len/2\
    \ - 1])/2.0;\n  }\n  else{\n    return sorted[(len-1)/2];\n  }\n}\n", "    var\
    \ sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a, b){return a-b});\n    var length = sorted.length;\n\
    \    if (length % 2 == 0){\n        return (sorted[length/2] + sorted[length/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(length/2)];\n \
    \   }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid\
    \ = sorted.length/2;\n    if (sorted.length % 2 == 0){\n        return (sorted[mid]\
    \ + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[Math.floor(mid)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var l = l.sort(function(a, b){return a-b});\n    var half =\
    \ Math.floor(l.length/2);\n    if(l.length % 2)\n        return l[half];\n   \
    \ else\n        return (l[half-1] + l[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2 - 1] + sorted[len/2]) / 2;\n    }\n    else{\n    \
    \    return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length\
    \ % 2){\n        return sorted[half];\n    }\n    else{\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n    }\n}\n", "    var m = l.length/2;\n    if(l.length\
    \ % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return\
    \ l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n       \
    \ return (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n    \
    \    return sorted[(length-1)/2];\n    }\n}\n", "  var sorted = l.sort(function(a,b){return\
    \ a-b});\n  var mid = Math.floor(sorted.length/2);\n  if (sorted.length % 2 ===\
    \ 0){\n    return (sorted[mid] + sorted[mid-1])/2;\n  } else {\n    return sorted[mid];\n\
    \  }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var half\
    \ = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ sorted = l.sort();\n    var length = sorted.length;\n    var middle = Math.floor(length/2);\n\
    \    if (length % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n\
    \    }\n    else{\n        return sorted[middle];\n    }\n}\n", "    var m = Math.floor(l.length/2);\n\
    \    if (l.length % 2 == 0){\n        return (l[m] + l[m-1])/2;\n    }\n    else{\n\
    \        return l[m];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    var mid = Math.floor(len/2);\n   \
    \ if (len % 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n\
    \    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length\
    \ % 2)\n        return sorted[half];\n    else\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n}\n", "    var m = l.length/2;\n    if(l.length % 2\
    \ == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n        return\
    \ l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length %\
    \ 2)\n        return sorted[half];\n    else\n        return (sorted[half-1] +\
    \ sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 === 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort();\n    var len = sorted.length;\n    if\
    \ (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1]) / 2;\n \
    \   }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "  \
    \  var sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2 - 1] + sorted[len/2]) /\
    \ 2;\n    }\n    else{\n        return sorted[(len - 1) / 2];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a, b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var m = l.length/2;\n\
    \    if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    if(l.length % 2 == 0){\n\
    \        return (l[Math.floor(l.length/2)] + l[Math.floor(l.length/2) - 1])/2;\n\
    \    }\n    else{\n        return l[Math.floor(l.length/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a, b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var m = l.length/2;\n   \
    \ if(l.length % 2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var middle = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[middle-1] + sorted[middle])/2;\n    }\n \
    \   else{\n        return sorted[middle];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2-1])/2;\n    }\n    else{\n        return\
    \ sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n\
    \        return (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n\
    \        return sorted[Math.floor(length/2)];\n    }\n}\n", "    var median =\
    \ 0;\n    var sorted = l.sort(function(a, b){return a-b});\n    var length = sorted.length;\n\
    \    if(length % 2 == 0){\n        median = (sorted[length/2 - 1] + sorted[length/2])/2;\n\
    \    }\n    else{\n        median = sorted[(length - 1)/2];\n    }\n    return\
    \ median;\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var\
    \ len = sorted.length;\n    var mid = Math.floor(len/2);\n    if (len % 2 == 0){\n\
    \        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return\
    \ sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n\
    \    var mid = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n\
    \        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return\
    \ sorted[mid];\n    }\n}\n", "\tvar l = l.sort(function(a,b){return a-b;});\n\t\
    var len = l.length;\n\tif(len % 2 == 0){\n\t\treturn (l[len/2] + l[len/2-1])/2;\n\
    \t}else{\n\t\treturn l[(len-1)/2];\n\t}\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tif(len % 2 == 0){\n\t\treturn (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n\t}\n\telse{\n\t\treturn sorted[Math.floor(len/2)];\n\
    \t}\n}\n", "    var m = l.length / 2;\n    if (l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m]) / 2;\n    }\n    else{\n        return l[Math.floor(m)];\n \
    \   }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2.0;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n  \
    \  }\n}\n", "\tvar m = l.length;\n\tvar n = m/2;\n\tvar o = Math.floor(n);\n\t\
    var p = Math.ceil(n);\n\tif (m % 2 === 0){\n\t\treturn (l[o] + l[p])/2;\n\t} else\
    \ {\n\t\treturn l[o];\n\t}\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var length = sorted.length;\n    var mid = Math.floor(length/2);\n\
    \    if (length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort();\n    var middle = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n \
    \   else{\n        return sorted[middle];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var middle = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[middle] + sorted[middle-1])/2;\n    }\n \
    \   else{\n        return sorted[middle];\n    }\n}\n", "    //YOUR CODE HERE\n\
    \    var sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var m = l.length / 2;\n    if (l.length % 2 == 0){\n        return (l[m] +\
    \ l[m-1]) / 2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n",
  "    var sorted = l.sort(function(a, b){return a-b});\n    var length = sorted.length;\n\
    \    if (length % 2 == 0){\n        return (sorted[length/2] + sorted[length/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(length/2)];\n \
    \   }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    var mid = Math.floor(len/2);\n    if (len % 2 == 0){\n\
    \        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return\
    \ sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "\tvar sum = 0;\n\tvar count = 0;\n\tfor(var i = 0; i < l.length;\
    \ i++){\n\t\tsum += l[i];\n\t\tcount++;\n\t}\n\treturn sum/count;\n}\n", "   \
    \ var sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2.0;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort();\n    var len = sorted.length;\n    if (len % 2 == 0){\n\
    \        return (sorted[len/2] + sorted[len/2 - 1]) / 2;\n    }\n    else{\n \
    \       return sorted[Math.floor(len/2)];\n    }\n}\n", "    var l = l.sort(function(a,\
    \ b){return a-b});\n    var len = l.length;\n    if (len % 2 == 0){\n        return\
    \ (l[len/2] + l[len/2 - 1])/2;\n    }\n    else{\n        return l[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var half\
    \ = Math.floor(sorted.length/2);\n    if(sorted.length % 2)\n        return sorted[half];\n\
    \    else\n        return (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var\
    \ sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 === 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", " \
    \   var sorted = l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n\
    \    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n\
    \    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n", "    var sorted\
    \ = l.sort(function(a, b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n \
    \   else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "\tvar sorted\
    \ = l.sort(function(a,b){return a-b});\n\tvar len = sorted.length;\n\tif(len %\
    \ 2 == 0){\n\t\treturn (sorted[len/2] + sorted[len/2 - 1])/2;\n\t}\n\telse{\n\t\
    \treturn sorted[Math.floor(len/2)];\n\t}\n}\n", "    var m = l.sort();\n    var\
    \ n = m.length;\n    var mid = n/2;\n    if (n%2 == 0){\n        return (m[mid]\
    \ + m[mid-1])/2;\n    }\n    else{\n        return m[Math.floor(mid)];\n    }\n\
    }\n", "    //YOUR CODE HERE\n    var sorted = l.sort(function(a, b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 === 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var len = l.length;\n    var sorted = l.sort();\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2 - 1] + sorted[len/2]) / 2;\n    }\n\
    \    else{\n        return sorted[(len - 1) / 2];\n    }\n}\n", "    var m = l.length/2;\n\
    \    if(l.length%2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    if (l.length % 2 == 0){\n\
    \        return (l[l.length/2] + l[l.length/2 - 1])/2;\n    }\n    else{\n   \
    \     return l[Math.floor(l.length/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length\
    \ % 2){\n        return sorted[half];\n    }\n    else{\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length\
    \ % 2){\n        return sorted[half];\n    }\n    else{\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n    }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2 - 1] + sorted[len/2]) / 2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return\
    \ (l[m-1] + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n   \
    \ }\n}\n", "    var len = l.length;\n    var mid = Math.floor(len/2);\n    var\
    \ sorted = l.sort(function(a,b){return a-b});\n    if(len % 2 == 0){\n       \
    \ return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid-1] + sorted[mid])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[(len-1)/2];\n    }\n}\n",
  "    var sorted = l.sort(function(a, b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "    var sorted =\
    \ l.sort(function(a, b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var m = l.length/2;\n   \
    \ if(l.length%2 == 0){\n        return (l[m-1] + l[m])/2;\n    }\n    else{\n\
    \        return l[Math.floor(m)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2 - 1] + sorted[len/2]) / 2;\n    }\n    else{\n    \
    \    return sorted[(len-1)/2];\n    }\n}\n", "  var sorted = l.sort(function(a,b){return\
    \ a-b});\n  var len = sorted.length;\n  var mid = Math.floor(len/2);\n  if (len\
    \ % 2 === 0){\n    return (sorted[mid-1] + sorted[mid])/2;\n  }\n  else{\n   \
    \ return sorted[mid];\n  }\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n       \
    \ return (sorted[length/2-1] + sorted[length/2])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(length/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var half = Math.floor(sorted.length/2);\n    if(sorted.length\
    \ % 2)\n        return sorted[half];\n    else\n        return (sorted[half-1]\
    \ + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid\
    \ = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n        return\
    \ (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var length\
    \ = sorted.length;\n    if (length % 2 == 0){\n        return (sorted[length/2]\
    \ + sorted[length/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(length/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[(len - 1)/2];\n    }\n}\n",
  "    var sorted = l.sort(function(a, b){return a-b});\n    var half = Math.floor(sorted.length/2);\n\
    \    if(sorted.length % 2)\n        return sorted[half];\n    else\n        return\
    \ (sorted[half-1] + sorted[half]) / 2.0;\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n\
    \        return (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n\
    \        return sorted[Math.floor(length/2)];\n    }\n}\n", "    var sorted =\
    \ l.sort();\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "  var sorted = l.sort(function(a,b){return\
    \ a-b});\n  var len = sorted.length;\n  if (len % 2 == 0){\n    return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n  } else {\n    return sorted[Math.floor(len/2)];\n\
    \  }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "    var m = l.length/2;\n    if(l.length % 2 == 0){\n        return (l[m-1]\
    \ + l[m])/2;\n    }\n    else{\n        return l[Math.floor(m)];\n    }\n}\n",
  "    var len = l.length;\n    var mid = Math.floor(len/2);\n    var median = 0;\n\
    \    if(len % 2 == 0){\n        median = (l[mid-1] + l[mid])/2;\n    }\n    else{\n\
    \        median = l[mid];\n    }\n    return median;\n}\n", "    var sorted =\
    \ l.sort(function(a, b){return a-b});\n    var len = sorted.length;\n    if (len\
    \ % 2 == 0){\n        return (sorted[len/2] + sorted[len/2 - 1])/2.0;\n    }\n\
    \    else{\n        return sorted[Math.floor(len/2)];\n    }\n}\n", "\tvar l =\
    \ l.sort(function(a,b){return a-b});\n\tvar l_len = l.length;\n\tif(l_len % 2\
    \ == 0){\n\t\treturn (l[l_len/2] + l[l_len/2 - 1])/2;\n\t}\n\telse{\n\t\treturn\
    \ l[Math.floor(l_len/2)];\n\t}\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length %\
    \ 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    //YOUR CODE HERE\n    var median\
    \ = 0;\n    var length = l.length;\n    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    if (length % 2 == 0){\n        median = (sorted[length/2] + sorted[length/2\
    \ - 1])/2;\n    }\n    else{\n        median = sorted[(length - 1)/2];\n    }\n\
    \    return median;\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n\
    \    var middle = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n\
    \        return (sorted[middle] + sorted[middle-1])/2;\n    }\n    else{\n   \
    \     return sorted[middle];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2-1])/2;\n    }\n    else{\n        return\
    \ sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n   \
    \     return (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n      \
    \  return sorted[Math.floor(len/2)];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n    if (sorted.length\
    \ % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n\
    \        return sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a,\
    \ b){return a-b});\n    var length = sorted.length;\n    if (length % 2 == 0){\n\
    \        return (sorted[length/2] + sorted[length/2 - 1])/2;\n    }\n    else{\n\
    \        return sorted[(length-1)/2];\n    }\n}\n", "    var sorted = l.sort();\n\
    \    var mid = Math.floor(sorted.length/2);\n    if (sorted.length % 2 == 0){\n\
    \        return (sorted[mid] + sorted[mid-1])/2;\n    }\n    else{\n        return\
    \ sorted[mid];\n    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n\
    \    var len = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2]\
    \ + sorted[len/2 - 1])/2;\n    } else {\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort();\n    var len = sorted.length;\n    var\
    \ mid = Math.floor(len/2);\n    if (len % 2 === 0){\n        return (sorted[mid]\
    \ + sorted[mid-1])/2;\n    }\n    else{\n        return sorted[mid];\n    }\n\
    }\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var mid = Math.floor(sorted.length/2);\n\
    \    if (sorted.length % 2 == 0){\n        return (sorted[mid] + sorted[mid-1])/2;\n\
    \    }\n    else{\n        return sorted[mid];\n    }\n}\n", "\tvar sorted = l.sort(function(a,b){return\
    \ a-b});\n\tvar len = sorted.length;\n\tvar mid = Math.floor(len/2);\n\tif(len\
    \ % 2 == 0){\n\t\treturn (sorted[mid] + sorted[mid-1])/2;\n\t}\n\telse{\n\t\t\
    return sorted[mid];\n\t}\n}\n", "    var sorted = l.sort(function(a, b){return\
    \ a-b});\n    var len = sorted.length;\n    if (len % 2 == 0){\n        return\
    \ (sorted[len/2] + sorted[len/2 - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n\
    \    }\n}\n", "    var sorted = l.sort(function(a, b){return a-b});\n    var len\
    \ = sorted.length;\n    if (len % 2 == 0){\n        return (sorted[len/2] + sorted[len/2\
    \ - 1])/2;\n    }\n    else{\n        return sorted[Math.floor(len/2)];\n    }\n\
    }\n", "  var m = l.length/2;\n  if(l.length % 2 == 0){\n    return (l[m-1] + l[m])/2;\n\
    \  }\n  else{\n    return l[Math.floor(m)];\n  }\n}\n", "    var len = l.length;\n\
    \    var mid = Math.floor(len/2);\n    var med = 0;\n    if(len % 2 == 0){\n \
    \       med = (l[mid-1] + l[mid])/2;\n    }\n    else{\n        med = l[mid];\n\
    \    }\n    return med;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

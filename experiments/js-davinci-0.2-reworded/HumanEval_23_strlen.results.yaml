name: HumanEval_23_strlen
language: js
results:
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    while(string[len]\
    \ != undefined){\n        len++;\n    }\n    return len;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ !== undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ !== undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ !== undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  var count = 0;\n  for(var i = 0; i <\
    \ string.length; i++){\n    count++;\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    while(string[len]\
    \ !== undefined){\n        len++;\n    }\n    return len;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\tvar length = 0;\n\twhile(string[length]\
    \ != undefined){\n\t\tlength++;\n\t}\n\treturn length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ != undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  var length = 0;\n  while(string[length]\
    \ !== undefined){\n    length++;\n  }\n  return length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ != undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ !== undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ !== undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ !== undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ != undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        length++;\n    }\n    return length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    while(string[len]\
    \ != undefined){\n        len++;\n    }\n    return len;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        length++;\n    }\n    return length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  var i = 0;\n  while(string[i] !== undefined){\n\
    \    i++;\n  }\n  return i;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\"\
    ),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var counter = 0;\n    for(var i =\
    \ 0; i < string.length; i++){\n        counter++;\n    }\n    return counter;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    while(string[len]\
    \ != undefined){\n        len++;\n    }\n    return len;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ != undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    for(var i = 0; i\
    \ < string.length; i++){\n        len++;\n    }\n    return len;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    while(string[len]\
    \ != undefined){\n        len++;\n    }\n    return len;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  var count = 0;\n  for(var i = 0; i <\
    \ string.length; i++){\n    count++;\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  var length = 0;\n  while(string[length]\
    \ !== undefined){\n    length++;\n  }\n  return length;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    while(string[count]\
    \ != undefined){\n        count++;\n    }\n    return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !==\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\tvar len = 0;\n\twhile(string[len] !=\
    \ undefined){\n\t\tlen++;\n\t}\n\treturn len;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ != undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\tvar count = 0;\n\tfor(var i = 0; i <\
    \ string.length; i++){\n\t\tcount++;\n\t}\n\treturn count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n\treturn string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var len = 0;\n    for(var i = 0; i\
    \ < string.length; i++){\n        len++;\n    }\n    return len;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    while(string[length]\
    \ !== undefined){\n        length++;\n    }\n    return length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var i = 0;\n    while(string[i] !=\
    \ undefined){\n        i++;\n    }\n    return i;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = strlen;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n  assert.deepEqual(candidate(\"\
    asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var count = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        count++;\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  return string.length;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n  var count = 0;\n  var i = 0;\n  while(string[i]\
    \ != undefined){\n    count++;\n    i++;\n  }\n  return count;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    return string.length;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = strlen;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"x\"),1);\n\
    \  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//Return length of given string\n// >>> strlen(\"\")\n// 0\n// >>> strlen(\"\
    abc\")\n// 3\nfunction strlen(string){\n    var length = 0;\n    for(var i = 0;\
    \ i < string.length; i++){\n        length++;\n    }\n    return length;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = strlen;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    x\"),1);\n  assert.deepEqual(candidate(\"asdasnakj\"),9);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

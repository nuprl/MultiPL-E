name: HumanEval_26_remove_duplicates
language: js
results:
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfc39io9k.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfc39io9k.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp51ims8hk.js:22:10)\n    at Object.<anonymous> (/tmp/tmp51ims8hk.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp66gvia6g.js:22:10)\n    at Object.<anonymous> (/tmp/tmp66gvia6g.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxf76f_u6.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxf76f_u6.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp20yezvff.js:21:10)\n    at Object.<anonymous> (/tmp/tmp20yezvff.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxmazorar.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxmazorar.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpjov4g_u9.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjov4g_u9.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmps4k3f0cx.js:22:10)\n    at Object.<anonymous> (/tmp/tmps4k3f0cx.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpaswo7hdk.js:22:10)\n    at Object.<anonymous> (/tmp/tmpaswo7hdk.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpvn7wgntp.js:21:10)\n    at Object.<anonymous> (/tmp/tmpvn7wgntp.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpg7nao0c1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpg7nao0c1.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp4r2mn6jm.js:22:10)\n    at Object.<anonymous> (/tmp/tmp4r2mn6jm.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpcpgwo10i.js:21:10)\n    at Object.<anonymous> (/tmp/tmpcpgwo10i.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpwfupexff.js:22:10)\n    at Object.<anonymous> (/tmp/tmpwfupexff.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp5902yrxo.js:22:10)\n    at Object.<anonymous> (/tmp/tmp5902yrxo.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpnog945b8.js:21:10)\n    at Object.<anonymous> (/tmp/tmpnog945b8.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxnipdk8n.js:21:10)\n    at Object.<anonymous> (/tmp/tmpxnipdk8n.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6xmqs8wa.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6xmqs8wa.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpuwznlawi.js:21:10)\n    at Object.<anonymous> (/tmp/tmpuwznlawi.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp2_qc45x_.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2_qc45x_.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpv5ejy0su.js:22:10)\n    at Object.<anonymous> (/tmp/tmpv5ejy0su.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpocpql2nk.js:22:10)\n    at Object.<anonymous> (/tmp/tmpocpql2nk.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzpepm1nf.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzpepm1nf.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgeo5nf2n.js:22:10)\n    at Object.<anonymous> (/tmp/tmpgeo5nf2n.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp0kwo9pb8.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0kwo9pb8.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqunf9u2w.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqunf9u2w.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqwrwwef1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqwrwwef1.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpwc18rbz_.js:22:10)\n    at Object.<anonymous> (/tmp/tmpwc18rbz_.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpaisoyn8b.js:22:10)\n    at Object.<anonymous> (/tmp/tmpaisoyn8b.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp44kw6k2b.js:21:10)\n    at Object.<anonymous> (/tmp/tmp44kw6k2b.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp8ymffb3i.js:21:10)\n    at Object.<anonymous> (/tmp/tmp8ymffb3i.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzltmjj93.js:21:10)\n    at Object.<anonymous> (/tmp/tmpzltmjj93.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmph8xgjyy8.js:22:10)\n    at Object.<anonymous> (/tmp/tmph8xgjyy8.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpiribkt42.js:22:10)\n    at Object.<anonymous> (/tmp/tmpiribkt42.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp44_j8n56.js:22:10)\n    at Object.<anonymous> (/tmp/tmp44_j8n56.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmps8gm26xt.js:22:10)\n    at Object.<anonymous> (/tmp/tmps8gm26xt.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var newArray\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(newArray.indexOf(numbers[i])\
    \ === -1){\n            newArray.push(numbers[i]);\n        }\n    }\n    return\
    \ newArray;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp1chanx6b.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1chanx6b.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp74sn2tjk.js:21:10)\n    at Object.<anonymous> (/tmp/tmp74sn2tjk.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp0kxyg2h_.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0kxyg2h_.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpz52cj32q.js:22:10)\n    at Object.<anonymous> (/tmp/tmpz52cj32q.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n  var result\
    \ = [];\n  for (var i = 0; i < numbers.length; i++) {\n    if (result.indexOf(numbers[i])\
    \ === -1) {\n      result.push(numbers[i]);\n    }\n  }\n  return result;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpyp40t8i1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyp40t8i1.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpq3nakb3i.js:22:10)\n    at Object.<anonymous> (/tmp/tmpq3nakb3i.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp2a16zvz6.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2a16zvz6.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqf3agadr.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqf3agadr.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpmf1i4l76.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmf1i4l76.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp600z0pca.js:22:10)\n    at Object.<anonymous> (/tmp/tmp600z0pca.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpsvpzl5xz.js:21:10)\n    at Object.<anonymous> (/tmp/tmpsvpzl5xz.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ === -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgcvydver.js:22:10)\n    at Object.<anonymous> (/tmp/tmpgcvydver.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpow_x6p71.js:21:10)\n    at Object.<anonymous> (/tmp/tmpow_x6p71.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmprc8sttxi.js:21:10)\n    at Object.<anonymous> (/tmp/tmprc8sttxi.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphtyfm6ie.js:22:10)\n    at Object.<anonymous> (/tmp/tmphtyfm6ie.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp3jufrk4j.js:21:10)\n    at Object.<anonymous> (/tmp/tmp3jufrk4j.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpufohwxct.js:22:10)\n    at Object.<anonymous> (/tmp/tmpufohwxct.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let newArray\
    \ = [];\n    for(let i = 0; i < numbers.length; i++){\n        if(newArray.indexOf(numbers[i])\
    \ === -1){\n            newArray.push(numbers[i]);\n        }\n    }\n    return\
    \ newArray;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp23o9_q_g.js:21:10)\n    at Object.<anonymous> (/tmp/tmp23o9_q_g.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp73wll_ak.js:21:10)\n    at Object.<anonymous> (/tmp/tmp73wll_ak.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp8abggz4n.js:22:10)\n    at Object.<anonymous> (/tmp/tmp8abggz4n.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpmujqnskf.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmujqnskf.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp8y0jw7eq.js:22:10)\n    at Object.<anonymous> (/tmp/tmp8y0jw7eq.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    var obj = {};\n    for(var i = 0; i < numbers.length; i++){\n   \
    \     if(!obj[numbers[i]]){\n            obj[numbers[i]] = true;\n           \
    \ result.push(numbers[i]);\n        }\n    }\n    return result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = remove_duplicates;\n\
    \  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1, 2, 3,\
    \ 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp8iwajjas.js:24:10)\n    at Object.<anonymous> (/tmp/tmp8iwajjas.js:27:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers.indexOf(numbers[i])\
    \ === i){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpx9k5z93t.js:21:10)\n    at Object.<anonymous> (/tmp/tmpx9k5z93t.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpel9s4izy.js:22:10)\n    at Object.<anonymous> (/tmp/tmpel9s4izy.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpn5alh7mx.js:22:10)\n    at Object.<anonymous> (/tmp/tmpn5alh7mx.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6fgtz_nr.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6fgtz_nr.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgw2n9dbh.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgw2n9dbh.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ === -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpag0c5zg4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpag0c5zg4.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpews_j97z.js:22:10)\n    at Object.<anonymous> (/tmp/tmpews_j97z.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpk73zsgfx.js:22:10)\n    at Object.<anonymous> (/tmp/tmpk73zsgfx.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var newArray\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(newArray.indexOf(numbers[i])\
    \ === -1){\n            newArray.push(numbers[i]);\n        }\n    }\n    return\
    \ newArray;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp0jqspxh8.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0jqspxh8.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ === -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxwb85t75.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxwb85t75.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var new_array\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(new_array.indexOf(numbers[i])\
    \ === -1){\n            new_array.push(numbers[i]);\n        }\n    }\n    return\
    \ new_array;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpugjyuks3.js:21:10)\n    at Object.<anonymous> (/tmp/tmpugjyuks3.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ === -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp0duu0qbo.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0duu0qbo.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp8w1au569.js:22:10)\n    at Object.<anonymous> (/tmp/tmp8w1au569.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp0eflj8zw.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0eflj8zw.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmplrxlta3v.js:22:10)\n    at Object.<anonymous> (/tmp/tmplrxlta3v.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpmurr7tk4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmurr7tk4.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxyz7v8c7.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxyz7v8c7.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ == -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n  \
    \  return unique_numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpl1seof5z.js:21:10)\n    at Object.<anonymous> (/tmp/tmpl1seof5z.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqc9jpct0.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqc9jpct0.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpazfoqv71.js:22:10)\n    at Object.<anonymous> (/tmp/tmpazfoqv71.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp3da5cfau.js:22:10)\n    at Object.<anonymous> (/tmp/tmp3da5cfau.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp8aru3h09.js:21:10)\n    at Object.<anonymous> (/tmp/tmp8aru3h09.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmppxzf3c5l.js:21:10)\n    at Object.<anonymous> (/tmp/tmppxzf3c5l.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ == -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpjfg7hhni.js:22:10)\n    at Object.<anonymous> (/tmp/tmpjfg7hhni.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpn0sdq4ta.js:22:10)\n    at Object.<anonymous> (/tmp/tmpn0sdq4ta.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpmy0ogarh.js:22:10)\n    at Object.<anonymous> (/tmp/tmpmy0ogarh.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpkoktncts.js:22:10)\n    at Object.<anonymous> (/tmp/tmpkoktncts.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpvy5okzkm.js:22:10)\n    at Object.<anonymous> (/tmp/tmpvy5okzkm.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzw9cbwn4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzw9cbwn4.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp477fy4ar.js:22:10)\n    at Object.<anonymous> (/tmp/tmp477fy4ar.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpq8_02g4q.js:21:10)\n    at Object.<anonymous> (/tmp/tmpq8_02g4q.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmptmexyu0w.js:21:10)\n    at Object.<anonymous> (/tmp/tmptmexyu0w.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfoclzten.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfoclzten.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ == -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n  \
    \  return unique_numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp560a9fx9.js:21:10)\n    at Object.<anonymous> (/tmp/tmp560a9fx9.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpr1ve_3b4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpr1ve_3b4.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphgvfzzp2.js:21:10)\n    at Object.<anonymous> (/tmp/tmphgvfzzp2.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpwm4fdk2q.js:22:10)\n    at Object.<anonymous> (/tmp/tmpwm4fdk2q.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpa18q731q.js:22:10)\n    at Object.<anonymous> (/tmp/tmpa18q731q.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp79f8bavh.js:22:10)\n    at Object.<anonymous> (/tmp/tmp79f8bavh.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp7xh6dyan.js:22:10)\n    at Object.<anonymous> (/tmp/tmp7xh6dyan.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzzhv465l.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzzhv465l.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ === -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqqhoh0tp.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqqhoh0tp.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpyjj6btf0.js:21:10)\n    at Object.<anonymous> (/tmp/tmpyjj6btf0.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpmmv7klwl.js:21:10)\n    at Object.<anonymous> (/tmp/tmpmmv7klwl.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp7s2r9nz8.js:22:10)\n    at Object.<anonymous> (/tmp/tmp7s2r9nz8.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    numbers.forEach(function(number){\n        if(unique.indexOf(number)\
    \ === -1){\n            unique.push(number);\n        }\n    });\n    return unique;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1, 2, 3, 2, 4, 3, 5]),[1,\
    \ 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxhw0v96p.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxhw0v96p.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpj1zushqa.js:22:10)\n    at Object.<anonymous> (/tmp/tmpj1zushqa.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpalxzdyj0.js:22:10)\n    at Object.<anonymous> (/tmp/tmpalxzdyj0.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp11ylnxam.js:21:10)\n    at Object.<anonymous> (/tmp/tmp11ylnxam.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp7s4_gqx7.js:21:10)\n    at Object.<anonymous> (/tmp/tmp7s4_gqx7.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzf5y57bf.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzf5y57bf.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpggdgk9pr.js:22:10)\n    at Object.<anonymous> (/tmp/tmpggdgk9pr.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfw3uzuik.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfw3uzuik.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpm2cqtpu1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpm2cqtpu1.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxujywlff.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxujywlff.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgr8c1h5y.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgr8c1h5y.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ == -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n  \
    \  return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp4wr7m9uj.js:22:10)\n    at Object.<anonymous> (/tmp/tmp4wr7m9uj.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpy7_txnq9.js:22:10)\n    at Object.<anonymous> (/tmp/tmpy7_txnq9.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp150_j5xk.js:22:10)\n    at Object.<anonymous> (/tmp/tmp150_j5xk.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpl3ri4bm0.js:22:10)\n    at Object.<anonymous> (/tmp/tmpl3ri4bm0.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp0yrsy78f.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0yrsy78f.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpz5jcqn1t.js:22:10)\n    at Object.<anonymous> (/tmp/tmpz5jcqn1t.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpeag1cgi6.js:22:10)\n    at Object.<anonymous> (/tmp/tmpeag1cgi6.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpe3mu542n.js:22:10)\n    at Object.<anonymous> (/tmp/tmpe3mu542n.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqrtrssmz.js:21:10)\n    at Object.<anonymous> (/tmp/tmpqrtrssmz.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpwfwqx7sr.js:22:10)\n    at Object.<anonymous> (/tmp/tmpwfwqx7sr.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp7s8xh3qb.js:22:10)\n    at Object.<anonymous> (/tmp/tmp7s8xh3qb.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpg37ajo_v.js:22:10)\n    at Object.<anonymous> (/tmp/tmpg37ajo_v.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmprw_37va4.js:22:10)\n    at Object.<anonymous> (/tmp/tmprw_37va4.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp3e92aizd.js:22:10)\n    at Object.<anonymous> (/tmp/tmp3e92aizd.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp1n8ohr2l.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1n8ohr2l.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpz88_cpbc.js:22:10)\n    at Object.<anonymous> (/tmp/tmpz88_cpbc.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpowxa9uqx.js:22:10)\n    at Object.<anonymous> (/tmp/tmpowxa9uqx.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp0ixjwpgi.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0ixjwpgi.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpq5bepihv.js:22:10)\n    at Object.<anonymous> (/tmp/tmpq5bepihv.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp1d98zt0z.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1d98zt0z.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpbeizyyf2.js:21:10)\n    at Object.<anonymous> (/tmp/tmpbeizyyf2.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var newArray\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(newArray.indexOf(numbers[i])\
    \ === -1){\n            newArray.push(numbers[i]);\n        }\n    }\n    return\
    \ newArray;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpoy0r68mo.js:21:10)\n    at Object.<anonymous> (/tmp/tmpoy0r68mo.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ === -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp3fg75e3j.js:21:10)\n    at Object.<anonymous> (/tmp/tmp3fg75e3j.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp971yj8zp.js:22:10)\n    at Object.<anonymous> (/tmp/tmp971yj8zp.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpg4ct_pzf.js:22:10)\n    at Object.<anonymous> (/tmp/tmpg4ct_pzf.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9r78r73z.js:21:10)\n    at Object.<anonymous> (/tmp/tmp9r78r73z.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp1a1iss24.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1a1iss24.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_268k_1a.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_268k_1a.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp9ovurgco.js:22:10)\n    at Object.<anonymous> (/tmp/tmp9ovurgco.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmptjbus4hy.js:22:10)\n    at Object.<anonymous> (/tmp/tmptjbus4hy.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ == -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n  \
    \  return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6uocebgk.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6uocebgk.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmph6_a3zjk.js:22:10)\n    at Object.<anonymous> (/tmp/tmph6_a3zjk.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgi7a__5h.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgi7a__5h.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp91fyuxo1.js:22:10)\n    at Object.<anonymous> (/tmp/tmp91fyuxo1.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpdssc6ber.js:22:10)\n    at Object.<anonymous> (/tmp/tmpdssc6ber.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpwld0vu2s.js:22:10)\n    at Object.<anonymous> (/tmp/tmpwld0vu2s.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfy07qber.js:21:10)\n    at Object.<anonymous> (/tmp/tmpfy07qber.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpd0ohh0vi.js:22:10)\n    at Object.<anonymous> (/tmp/tmpd0ohh0vi.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var new_array\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(new_array.indexOf(numbers[i])\
    \ == -1){\n            new_array.push(numbers[i]);\n        }\n    }\n    return\
    \ new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp0qawnq74.js:22:10)\n    at Object.<anonymous> (/tmp/tmp0qawnq74.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpb1zbnoc1.js:22:10)\n    at Object.<anonymous> (/tmp/tmpb1zbnoc1.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var newArray\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(newArray.indexOf(numbers[i])\
    \ === -1){\n            newArray.push(numbers[i]);\n        }\n    }\n    return\
    \ newArray;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp65c5gg6d.js:21:10)\n    at Object.<anonymous> (/tmp/tmp65c5gg6d.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpuyids29u.js:21:10)\n    at Object.<anonymous> (/tmp/tmpuyids29u.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpxpdplpg9.js:22:10)\n    at Object.<anonymous> (/tmp/tmpxpdplpg9.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpnbkim2nn.js:22:10)\n    at Object.<anonymous> (/tmp/tmpnbkim2nn.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpueyviafb.js:21:10)\n    at Object.<anonymous> (/tmp/tmpueyviafb.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var new_numbers\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(new_numbers.indexOf(numbers[i])\
    \ == -1){\n            new_numbers.push(numbers[i]);\n        }\n    }\n    return\
    \ new_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp5o9ic7li.js:22:10)\n    at Object.<anonymous> (/tmp/tmp5o9ic7li.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var new_array\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(new_array.indexOf(numbers[i])\
    \ == -1){\n            new_array.push(numbers[i]);\n        }\n    }\n    return\
    \ new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpt939rzms.js:22:10)\n    at Object.<anonymous> (/tmp/tmpt939rzms.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpkimyvs32.js:21:10)\n    at Object.<anonymous> (/tmp/tmpkimyvs32.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp24ffaq9a.js:22:10)\n    at Object.<anonymous> (/tmp/tmp24ffaq9a.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var new_array\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(new_array.indexOf(numbers[i])\
    \ === -1){\n            new_array.push(numbers[i]);\n        }\n    }\n    return\
    \ new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp83j4b5cu.js:22:10)\n    at Object.<anonymous> (/tmp/tmp83j4b5cu.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp57jhdezi.js:22:10)\n    at Object.<anonymous> (/tmp/tmp57jhdezi.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpgbloo8p4.js:21:10)\n    at Object.<anonymous> (/tmp/tmpgbloo8p4.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpf7941kft.js:22:10)\n    at Object.<anonymous> (/tmp/tmpf7941kft.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqc4in60g.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqc4in60g.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp1gxitqho.js:22:10)\n    at Object.<anonymous> (/tmp/tmp1gxitqho.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpx4yvohqe.js:22:10)\n    at Object.<anonymous> (/tmp/tmpx4yvohqe.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqdt_rrpm.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqdt_rrpm.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_qvekccd.js:21:10)\n    at Object.<anonymous> (/tmp/tmp_qvekccd.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpnh9b2jtf.js:22:10)\n    at Object.<anonymous> (/tmp/tmpnh9b2jtf.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var newArr\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(numbers.indexOf(numbers[i])\
    \ === i){\n            newArr.push(numbers[i]);\n        }\n    }\n    return\
    \ newArr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp2nqoedwy.js:21:10)\n    at Object.<anonymous> (/tmp/tmp2nqoedwy.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp8bxa_yh9.js:22:10)\n    at Object.<anonymous> (/tmp/tmp8bxa_yh9.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ == -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpu7bgxdvq.js:22:10)\n    at Object.<anonymous> (/tmp/tmpu7bgxdvq.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpe2dlwuaa.js:21:10)\n    at Object.<anonymous> (/tmp/tmpe2dlwuaa.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpq5u_gdca.js:21:10)\n    at Object.<anonymous> (/tmp/tmpq5u_gdca.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let result\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (result.indexOf(numbers[i])\
    \ === -1) {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpahzxrh51.js:22:10)\n    at Object.<anonymous> (/tmp/tmpahzxrh51.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpyh2oripu.js:22:10)\n    at Object.<anonymous> (/tmp/tmpyh2oripu.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var newArr\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(newArr.indexOf(numbers[i])\
    \ === -1){\n            newArr.push(numbers[i]);\n        }\n    }\n    return\
    \ newArr;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpjdnpbt3r.js:21:10)\n    at Object.<anonymous> (/tmp/tmpjdnpbt3r.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique_numbers\
    \ = [];\n    for (let i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ === -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n \
    \   return unique_numbers;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp1lglo6go.js:21:10)\n    at Object.<anonymous> (/tmp/tmp1lglo6go.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp61ao_w8f.js:21:10)\n    at Object.<anonymous> (/tmp/tmp61ao_w8f.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique_numbers\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (unique_numbers.indexOf(numbers[i])\
    \ == -1){\n            unique_numbers.push(numbers[i]);\n        }\n    }\n  \
    \  return unique_numbers;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp6btrwm1n.js:22:10)\n    at Object.<anonymous> (/tmp/tmp6btrwm1n.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpfljao1ix.js:22:10)\n    at Object.<anonymous> (/tmp/tmpfljao1ix.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var new_array\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(new_array.indexOf(numbers[i])\
    \ === -1){\n            new_array.push(numbers[i]);\n        }\n    }\n    return\
    \ new_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpm5v_uhfl.js:22:10)\n    at Object.<anonymous> (/tmp/tmpm5v_uhfl.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpty2kdnj4.js:22:10)\n    at Object.<anonymous> (/tmp/tmpty2kdnj4.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpqk5kx4sa.js:22:10)\n    at Object.<anonymous> (/tmp/tmpqk5kx4sa.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphmoxak2s.js:22:10)\n    at Object.<anonymous> (/tmp/tmphmoxak2s.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmplv4hkc5j.js:21:10)\n    at Object.<anonymous> (/tmp/tmplv4hkc5j.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var result\
    \ = [];\n    for (var i = 0; i < numbers.length; i++){\n        if (result.indexOf(numbers[i])\
    \ === -1){\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpon01cw_v.js:22:10)\n    at Object.<anonymous> (/tmp/tmpon01cw_v.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpimnyz3i7.js:22:10)\n    at Object.<anonymous> (/tmp/tmpimnyz3i7.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmphwsuo9p3.js:21:10)\n    at Object.<anonymous> (/tmp/tmphwsuo9p3.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp2ai_q26f.js:22:10)\n    at Object.<anonymous> (/tmp/tmp2ai_q26f.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmp_epf0a5c.js:22:10)\n    at Object.<anonymous> (/tmp/tmp_epf0a5c.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ === -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpq9bs8djp.js:22:10)\n    at Object.<anonymous> (/tmp/tmpq9bs8djp.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmppiketzjn.js:22:10)\n    at Object.<anonymous> (/tmp/tmppiketzjn.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    let unique\
    \ = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (unique.indexOf(numbers[i])\
    \ === -1) {\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzmwu4uur.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzmwu4uur.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//From an array of integers, remove all elements that occur more than\
    \ once.\n// Keep order of elements left the same as in the input.\n// >>> remove_duplicates([1,\
    \ 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates(numbers){\n    var unique\
    \ = [];\n    for(var i = 0; i < numbers.length; i++){\n        if(unique.indexOf(numbers[i])\
    \ == -1){\n            unique.push(numbers[i]);\n        }\n    }\n    return\
    \ unique;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = remove_duplicates;\n  assert.deepEqual(candidate([]),[]);\n\
    \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([1,\
    \ 2, 3, 2, 4, 3, 5]),[1, 4, 5]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 1, 2, 3, 4, 5 ]\n\nshould equal\n\n[ 1,\
    \ 4, 5 ]\n    at test (/tmp/tmpzxs6bqqx.js:22:10)\n    at Object.<anonymous> (/tmp/tmpzxs6bqqx.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 1, 2, 3, 4, 5 ],\n  expected: [ 1, 4, 5\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError

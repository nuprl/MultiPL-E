name: HumanEval_147_get_max_triples
language: js
results:
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n  let a = [];\n\
    \  for(let i = 1; i <= n; i++){\n    a.push(i * i - i + 1);\n  }\n  let count\
    \ = 0;\n  for(let i = 0; i < a.length; i++){\n    for(let j = i + 1; j < a.length;\
    \ j++){\n      for(let k = j + 1; k < a.length; k++){\n        if((a[i] + a[j]\
    \ + a[k]) % 3 === 0){\n          count++;\n        }\n      }\n    }\n  }\n  return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let arr\
    \ = [];\n    for(let i = 1; i <= n; i++){\n        arr.push(i * i - i + 1);\n\
    \    }\n    let count = 0;\n    for(let i = 0; i < arr.length; i++){\n       \
    \ for(let j = i + 1; j < arr.length; j++){\n            for(let k = j + 1; k <\
    \ arr.length; k++){\n                if((arr[i] + arr[j] + arr[k]) % 3 === 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \   }\n    return count;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n\
    \  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [],\n        count = 0;\n    for(let i = 1; i <= n; i++){\n        a.push(i\
    \ * i - i + 1);\n    }\n    for(let i = 0; i < a.length; i++){\n        for(let\
    \ j = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length;\
    \ k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n               \
    \     count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    var a =\
    \ [];\n    var count = 0;\n    for(var i = 1; i <= n; i++){\n        a.push(i\
    \ * i - i + 1);\n    }\n    for(var i = 0; i < a.length; i++){\n        for(var\
    \ j = i + 1; j < a.length; j++){\n            for(var k = j + 1; k < a.length;\
    \ k++){\n                if((a[i] + a[j] + a[k]) % 3 === 0){\n               \
    \     count++;\n                }\n            }\n        }\n    }\n    return\
    \ count;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = get_max_triples;\n  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n\
    \  assert.deepEqual(candidate(10),36);\n  assert.deepEqual(candidate(100),53361);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You are given a positive integer n. You have to create an integer array\
    \ a of length n.\n// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n// Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n// and a[i] + a[j] + a[k] is a multiple of 3.\n// Example :\n// >>>\
    \ get_max_triples(5)\n// 1\n// Explanation: \n// a = [1, 3, 7, 13, 21]\n// The\
    \ only valid triple is (1, 7, 13).\nfunction get_max_triples(n){\n    let a =\
    \ [];\n    for(let i = 1; i <= n; i++){\n        a.push(i * i - i + 1);\n    }\n\
    \    let count = 0;\n    for(let i = 0; i < a.length; i++){\n        for(let j\
    \ = i + 1; j < a.length; j++){\n            for(let k = j + 1; k < a.length; k++){\n\
    \                if((a[i] + a[j] + a[k]) % 3 === 0){\n                    count++;\n\
    \                }\n            }\n        }\n    }\n    return count;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = get_max_triples;\n\
    \  assert.deepEqual(candidate(5),1);\n  assert.deepEqual(candidate(6),4);\n  assert.deepEqual(candidate(10),36);\n\
    \  assert.deepEqual(candidate(100),53361);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_24_largest_divisor
language: js
results:
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor -= 1;\n  }\n\
    \  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n - 1;\n    while (i > 0){\n        if (n % i == 0){\n          \
    \  return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var largest = 0;\n    for(var i = 1; i < n; i++){\n        if(n % i === 0){\n\
    \            largest = i;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var largest = 0;\n    for(var i = 0; i < n; i++){\n        if(n % i === 0){\n\
    \            largest = i;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor--;\n  }\n \
    \ return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var largest = 0;\n  for(var i = 1; i < n; i++){\n    if(n % i === 0){\n   \
    \   largest = i;\n    }\n  }\n  return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(divisor > 0){\n        if(n % divisor == 0){\n\
    \            return divisor;\n        }\n        divisor--;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n-1;\n  while(n%divisor !== 0){\n    divisor--;\n  }\n  return\
    \ divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(let i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(let i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (divisor > 0){\n        if (n % divisor ==\
    \ 0){\n            return divisor;\n        }\n        divisor -= 1;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(divisor > 0){\n        if(n % divisor == 0){\n\
    \            return divisor;\n        }\n        divisor--;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var i = n-1;\n  while(i>0){\n    if(n%i === 0){\n      return i;\n    }\n \
    \   i--;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor -= 1;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor -= 1;\n  }\n\
    \  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    let i = n - 1;\n    while(i > 0){\n        if(n % i === 0){\n           \
    \ return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \tvar divisor = n-1;\n\twhile(n%divisor !== 0){\n\t\tdivisor--;\n\t}\n\treturn\
    \ divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var largest = 0;\n    for(var i = 1; i < n; i++){\n        if(n % i === 0){\n\
    \            largest = i;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(let i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(divisor > 0){\n        if(n % divisor == 0){\n\
    \            return divisor;\n        }\n        divisor--;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor -= 1;\n  }\n\
    \  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var largest = 0;\n    for(var i = 1; i < n; i++){\n        if(n % i === 0){\n\
    \            largest = i;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var largest = 0;\n    for(var i = 1; i < n; i++){\n        if(n % i === 0){\n\
    \            largest = i;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i>0){\n        if(n%i===0){\n            return i;\n\
    \        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(divisor > 0){\n        if(n % divisor == 0){\n\
    \            return divisor;\n        }\n        divisor -= 1;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor--;\n  }\n \
    \ return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i>0){\n        if(n%i===0){\n            return i;\n\
    \        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0) {\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n - 1;\n    while (i > 0){\n        if (n % i == 0){\n          \
    \  return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor -= 1;\n  }\n\
    \  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor -= 1;\n  }\n\
    \  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n - 1;\n    while (i > 0){\n        if (n % i == 0){\n          \
    \  return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n - 1;\n    while (i > 0){\n        if (n % i == 0){\n          \
    \  return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var i = n-1;\n  while(i > 0){\n    if(n % i === 0){\n      return i;\n    }\n\
    \    i--;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor -= 1;\n  }\n\
    \  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (divisor > 0){\n    if (n % divisor === 0){\n\
    \      return divisor;\n    }\n    divisor--;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n - 1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n  \
    \  }\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor--;\n  }\n \
    \ return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n - 1;\n    while (i > 0){\n        if (n % i == 0){\n          \
    \  return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var largest = 0;\n  for(var i = 1; i < n; i++){\n    if(n % i === 0){\n   \
    \   largest = i;\n    }\n  }\n  return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    let divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    let divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    let divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    // your code here\n    var divisor = n - 1;\n    while (n % divisor !== 0){\n\
    \        divisor--;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (divisor > 0){\n    if (n % divisor === 0){\n\
    \      return divisor;\n    }\n    divisor--;\n  }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor -= 1;\n  }\n\
    \  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i>0){\n        if(n%i===0){\n            return i;\n\
    \        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var i = n - 1;\n  while (i > 0){\n    if (n % i === 0){\n      return i;\n\
    \    }\n    i--;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var i = n-1;\n  while(n%i !== 0){\n    i--;\n  }\n  return i;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \tvar i = 1;\n\twhile (i < n){\n\t\tif (n % i === 0){\n\t\t\tvar largest = i;\n\
    \t\t}\n\t\ti++;\n\t}\n\treturn largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var i = n - 1;\n  while (i > 0){\n    if (n % i === 0){\n      return i;\n\
    \    }\n    i--;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var largest = 0;\n    for(var i = 1; i < n; i++){\n        if(n % i === 0){\n\
    \            largest = i;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n-1;\n    while(i > 0){\n        if(n % i == 0){\n            return\
    \ i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var i = n - 1;\n  while (i > 0){\n    if (n % i === 0){\n      return i;\n\
    \    }\n    i--;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(divisor > 0){\n        if(n % divisor == 0){\n\
    \            return divisor;\n        }\n        divisor -= 1;\n    }\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor != 0){\n        divisor--;\n    }\n\
    \    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n - 1;\n    while (i > 0){\n        if (n % i == 0){\n          \
    \  return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor--;\n  }\n \
    \ return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n-1;\n    while(n%divisor !== 0){\n        divisor--;\n   \
    \ }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor--;\n  }\n \
    \ return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n - 1;\n    while (i > 0){\n        if (n % i == 0){\n          \
    \  return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (divisor > 0){\n        if (n % divisor ==\
    \ 0){\n            return divisor;\n        }\n        divisor -= 1;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var largest = 0;\n  for(var i = 1; i < n; i++){\n    if(n % i === 0){\n   \
    \   largest = i;\n    }\n  }\n  return largest;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (divisor > 0){\n        if (n % divisor ==\
    \ 0){\n            return divisor;\n        }\n        divisor -= 1;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var i = n - 1;\n    while (i > 0){\n        if (n % i == 0){\n          \
    \  return i;\n        }\n        i--;\n    }\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var i = n - 1;\n  while (i > 0){\n    if (n % i === 0){\n      return i;\n\
    \    }\n    i--;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n - 1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    for(var i = n-1; i > 0; i--){\n        if(n % i === 0){\n            return\
    \ i;\n        }\n    }\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var largest = 0;\n    for(var i = 1; i < n; i++){\n        if(n % i === 0){\n\
    \            largest = i;\n        }\n    }\n    return largest;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (divisor > 0){\n        if (n % divisor ==\
    \ 0){\n            return divisor;\n        }\n        divisor -= 1;\n    }\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = 1;\n    for(var i = 2; i < n; i++){\n        if(n % i == 0){\n\
    \            divisor = i;\n        }\n    }\n    return divisor;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = largest_divisor;\n\
    \  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n\
    \  assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor--;\n\
    \    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \    var divisor = n - 1;\n    while (n % divisor !== 0){\n        divisor -=\
    \ 1;\n    }\n    return divisor;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  for(var i = n-1; i > 0; i--){\n    if(n % i === 0){\n      return i;\n    }\n\
    \  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n  assert.deepEqual(candidate(7),1);\n\
    \  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
    \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var divisor = n - 1;\n  while (n % divisor !== 0){\n    divisor -= 1;\n  }\n\
    \  return divisor;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n){\n\
    \  var i = n-1;\n  while(i > 0){\n    if(n % i === 0){\n      return i;\n    }\n\
    \    i--;\n  }\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
    \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n \
    \ assert.deepEqual(candidate(100),50);\n  assert.deepEqual(candidate(49),7);\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

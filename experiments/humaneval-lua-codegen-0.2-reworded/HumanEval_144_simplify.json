{
  "name": "HumanEval_144_simplify",
  "language": "lua",
  "prompt": "-- Your task is to implement a function that will simplify the expression\n-- x * n. The function returns true if x * n evaluates to a whole number and false\n-- otherwise. Both x and n, are string representation of a fraction, and have the following format,\n-- <numerator>/<denominator> where both numerator and denominator are positive whole numbers.\n-- You can assume that x, and n are valid fractions, and do not have zero as denominator.\n-- >>> simplify(\"1/5\", \"5/1\")\n-- True\n-- >>> simplify(\"1/6\", \"2/1\")\n-- False\n-- >>> simplify(\"7/10\", \"10/2\")\n-- False\nlocal function simplify(x, n)\n",
  "tests": "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = simplify\n    lu.assertEquals(candidate('1/5', '5/1'), true)\n    lu.assertEquals(candidate('1/6', '2/1'), false)\n    lu.assertEquals(candidate('5/1', '3/1'), true)\n    lu.assertEquals(candidate('7/10', '10/2'), false)\n    lu.assertEquals(candidate('2/10', '50/10'), true)\n    lu.assertEquals(candidate('7/2', '4/2'), true)\n    lu.assertEquals(candidate('11/6', '6/1'), true)\n    lu.assertEquals(candidate('2/3', '5/2'), false)\n    lu.assertEquals(candidate('5/2', '3/5'), false)\n    lu.assertEquals(candidate('2/4', '8/4'), true)\n    lu.assertEquals(candidate('2/4', '4/2'), true)\n    lu.assertEquals(candidate('1/5', '5/1'), true)\n    lu.assertEquals(candidate('1/5', '1/5'), false)\nend\n\nos.exit(lu.LuaUnit.run())",
  "completions": [
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \"/\" .. tostring(n)\n    local xn_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_n_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_n_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_d_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_n_d_n = tostring(x) .. \"/\" .. tostring(n",
    "    local xn = math.floor(math.toFloat(x) * math.toFloat(n))\n    return xn == math.toFloat(x) * math.toFloat(n)\nend",
    "    local x, n = tostring(x), tostring(n)\n    local x_n = tostring(x * n)\n    if x_n == \"0\" then return true\n    elseif x_n == \"1\" then return false\n    elseif x_n[1] == \"0\" then return false\n    elseif x_n[2] == \"0\" then return false\n    elseif x_n[3] == \"0\" then return false\n    elseif x_n[4] == \"0\" then return false\n    elseif x_n[5] == \"0\" then return false\n    elseif x_n[6] == \"0\" then return false\n    elseif x_n[7] == \"0\" then return false\n    elseif x_n[8] == \"0\" then return false\n    elseif x_n[9] == \"0\" then return false\n    elseif x_n[10] == \"0\" then return false\n    elseif x_n[11] == \"0\" then return false\n    elseif x_n[12] == \"0\" then return false\n    elseif x_n[13] == \"0\" then return false\n    elseif x_n[14] == \"0\" then return false\n    elseif x_n[15] == \"0\" then return false\n    elseif x_n[16] == \"0\" then return false\n    elseif x_n[17] == \"0\" then return false\n    elseif x_n[18] == \"0\" then return false\n    elseif x_n[19] == \"0\" then return false\n    elseif x_n[20] == \"0\" then return false\n    elseif x_n[21] == \"0\" then return false\n    elseif x_n[22] == \"0\" then return false\n    elseif x_n[23] == \"0\" then return false\n    elseif x_n[24] == \"0\" then return false\n    elseif x_n[25] == \"0\" then return false\n    elseif x_n[26] == \"0\" then return false\n    elseif x_n[27] == \"0",
    "    local xn = math.floor(x * n)\n    return xn == math.floor(xn / n)\nend",
    "    local x, n = tostring(x), tostring(n)\n    local xn, nx, nn, xd, nd = math.tonumber(x), math.tonumber(n), 1, 1, 1\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    if x == \"1\" then return true end\n    if n == \"1\" then return false end\n    if x == \"-\" then return false end\n    if n == \"-\" then return false end\n    if x == \".\" then return false end\n    if n == \".\" then return false end\n    if x == \"/\" then return false end\n    if n == \"/\" then return false end\n    if x == \"*\" then return false end\n    if n == \"*\" then return false end\n    if x == \"**\" then return false end\n    if n == \"**\" then return false end\n    if x == \"-\" then xn, nx = -xn, -nx end\n    if n == \"-\" then nn, nd = -nn, -nd end\n    if xn == 0 then return false end\n    if nn == 0 then return false end\n    if xn < 0 then return false end\n    if nn < 0 then return false end\n    if xd == 0 then return false end\n    if nd == 0 then return false end\n    if xd < 0 then return false end\n    if nd < 0 then return false end\n    if xn == nn then return true end\n    if xn == nd then return true end\n    if nn == nd then return true end\n    if xn < nn then return true end\n    if xn > nn then return true end\n    if nn < nd then return true end\n    if nn > nd then return true end\n    if xn == xd then return true end\n    if xn == nd then return true end\n    if nn == nd then return true end\n    if xn < xd then return true end\n    if xn > xd then return true end\n    if nn < nd then return true end\n    if nn > nd then return true",
    "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    if x == \"1\" then return true end\n    if n == \"1\" then return false end\n    if x == \"2\" then return true end\n    if n == \"2\" then return false end\n    if x == \"3\" then return true end\n    if n == \"3\" then return false end\n    if x == \"4\" then return true end\n    if n == \"4\" then return false end\n    if x == \"5\" then return true end\n    if n == \"5\" then return false end\n    if x == \"6\" then return true end\n    if n == \"6\" then return false end\n    if x == \"7\" then return true end\n    if n == \"7\" then return false end\n    if x == \"8\" then return true end\n    if n == \"8\" then return false end\n    if x == \"9\" then return true end\n    if n == \"9\" then return false end\n    if x == \"10\" then return true end\n    if n == \"10\" then return false end\n    if x == \"11\" then return true end\n    if n == \"11\" then return false end\n    if x == \"12\" then return true end\n    if n == \"12\" then return false end\n    if x == \"13\" then return true end\n    if n == \"13\" then return false end\n    if x == \"14\" then return true end\n    if n == \"14\" then return false end\n    if x == \"15\" then return true end\n    if n == \"15\" then return false end\n    if x == \"16\" then return true end\n    if n == \"16\" then return false end\n    if x == \"17\" then return true end\n    if n == \"17\" then return false end\n    if x == \"18\" then return true end\n    if n == \"18\" then return false end\n    if x == \"19\" then return true end\n    if n == \"19\" then return false end\n    if x == \"20\" then return true end\n    if n == \"20\" then return false end\n    if",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.gsub(xn, \"/\", \"\") .. \".\")\n    local nd = math.floor(string.gsub(n, \"/\", \"\") .. \".\")\n    return xd == nd\nend",
    "    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"^-\", \"\")\n    n = n:gsub(\"^-\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"/\", \"\")\n    n = n:gsub(\"/\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"^0\", \"\")\n    n = n:gsub(\"^0\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"^1\", \"\")\n    n = n:gsub(\"^1\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"^2\", \"\")\n    n = n:gsub(\"^2\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"^3\", \"\")\n    n = n:gsub(\"^3\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"^4\", \"\")\n    n = n:gsub(\"^4\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"^5\", \"\")\n    n = n:gsub(\"^5\", \"\")\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    x = x:gsub(\"^6\", \"\")\n    n = n:gsub(\"^6\", \"\")\n    if x ==",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = tostring(x)\n    local nn = tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn) / tonumber(nn)))\n    if xd == 0 then\n        return true\n    else\n        return false\n    end\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = math.floor(x_n)\n    local n_x_d = math.floor(n_x)\n    if x_n_d / n_x_d == x_n / n_x then\n        return true\n    end\n    return false\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \"/\" .. tostring(n)\n    local xn_int = tostring(x) .. \".\" .. tostring(n)\n    local xd_int = tostring(x) .. \".\" .. tostring(n)\n    if xn == xd then\n        return true\n    else\n        return false\n    end\nend",
    "    local xn = tostring(x)\n    local nn = tostring(n)\n    local xd = math.floor(math.log(xn, 2))\n    local nd = math.floor(math.log(nn, 2))\n    local xnumerator = math.floor(math.pow(2, xd))\n    local xdenominator = math.pow(2, xd - 1)\n    local nnumerator = math.floor(math.pow(2, nd))\n    local ndenominator = math.pow(2, nd - 1)\n    if xnumerator == nnumerator and xdenominator == ndenominator then\n        return true\n    else\n        return false\nend",
    "    local x, n\n    if x == \"0\" then\n        return true\n    elseif n == \"0\" then\n        return false\n    elseif x == \"1\" then\n        return true\n    elseif n == \"1\" then\n        return false\n    elseif x == \"2\" then\n        return true\n    elseif n == \"2\" then\n        return false\n    elseif x == \"3\" then\n        return true\n    elseif n == \"3\" then\n        return false\n    elseif x == \"4\" then\n        return true\n    elseif n == \"4\" then\n        return false\n    elseif x == \"5\" then\n        return true\n    elseif n == \"5\" then\n        return false\n    elseif x == \"6\" then\n        return true\n    elseif n == \"6\" then\n        return false\n    elseif x == \"7\" then\n        return true\n    elseif n == \"7\" then\n        return false\n    elseif x == \"8\" then\n        return true\n    elseif n == \"8\" then\n        return false\n    elseif x == \"9\" then\n        return true\n    elseif n == \"9\" then\n        return false\n    else\n        return false\nend",
    "    local xn = math.floor(x * n)\n    return xn == math.floor(xn / n)\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = tonumber(x)\n    x_den = tonumber(x)\n    n_num = tonumber(n)\n    n_den = tonumber(n)\n    if x_num == 0 or n_num == 0 then\n        return false\n    end\n    return x_num * n_den == x_den * n_num\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn)))\n    local nd = math.floor(math.abs(tonumber(n)))\n    if xd == 0 or nd == 0 then\n        return true\n    elseif xd == nd then\n        return true\n    else\n        return false\nend",
    "    local xn = math.floor(math.toFloat(x) * math.toFloat(n))\n    return xn == math.toFloat(x) * math.toFloat(n)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.gsub(xn, \"/\", \"\"))\n    local nd = math.floor(string.gsub(n, \"/\", \"\"))\n    return xd == nd\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = x:match(\"^([0-9]+)/([0-9]+)$\")\n    x_den = x:match(\"^([0-9]+)/([0-9]+)$\")\n    n_num = n:match(\"^([0-9]+)/([0-9]+)$\")\n    n_den = n:match(\"^([0-9]+)/([0-9]+)$\")\n    if x_num and x_den and n_num and n_den then\n        if x_num[1] == n_num[1] and x_den[1] == n_den[1] then\n            return true\n        else\n            return false\n    else\n        return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == x_n / n_x\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.sqrt(math.pow(tonumber(xn), 2) + 1))\n    if xd == 0 then return false end\n    return xn .. \"=\" .. xd .. \"/\" .. n\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_den = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_num = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_den = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    if x_num and x_den and n_num and n_den then\n        if x_num[1] == n_num[1] and x_den[1] == n_den[1] then\n            return true\n        else\n            return false\n    else\n        return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.sqrt(math.pow(tonumber(xn), 2) + 1))\n    if xd == 0 or xd == 1 then\n        return true\n    else\n        return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    elseif x_n == 1 or n_x == 1 then\n        return false\n    else\n        return simplify(x_n * n_x, n_x / x_n)\n    end\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn)))\n    local nd = math.floor(math.abs(tonumber(n)))\n    if xd == 0 or nd == 0 then\n        return true\n    elseif xd == nd then\n        return true\n    else\n        return false\nend\n\"\"\"",
    "    local x_n = string.gsub(x, \"^-\", \"\")\n    local n_x = string.gsub(n, \"^-\", \"\")\n    if x_n == \"0\" or n_x == \"0\" then\n        return true\n    end\n    local x_n_num = string.gsub(x_n, \"/\", \"\")\n    local n_x_num = string.gsub(n_x, \"/\", \"\")\n    if x_n_num == \"0\" or n_x_num == \"0\" then\n        return false\n    end\n    local x_n_denom = string.gsub(x_n, \"^\", \"\")\n    local n_x_denom = string.gsub(n_x, \"^\", \"\")\n    if x_n_denom == \"0\" or n_x_denom == \"0\" then\n        return false\n    end\n    local x_n_num_denom = string.gsub(x_n_num, \"^\", \"\")\n    local n_x_num_denom = string.gsub(n_x_num, \"^\", \"\")\n    if x_n_num_denom == \"0\" or n_x_num_denom == \"0\" then\n        return false\n    end\n    if x_n_num_denom == n_x_num_denom then\n        return true\n    end\n    return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    if x == \"1\" then return true end\n    if n == \"1\" then return false end\n    if x == \"2\" then return true end\n    if n == \"2\" then return false end\n    if x == \"3\" then return true end\n    if n == \"3\" then return false end\n    if x == \"4\" then return true end\n    if n == \"4\" then return false end\n    if x == \"5\" then return true end\n    if n == \"5\" then return false end\n    if x == \"6\" then return true end\n    if n == \"6\" then return false end\n    if x == \"7\" then return true end\n    if n == \"7\" then return false end\n    if x == \"8\" then return true end\n    if n == \"8\" then return false end\n    if x == \"9\" then return true end\n    if n == \"9\" then return false end\n    if x == \"10\" then return true end\n    if n == \"10\" then return false end\n    if x == \"11\" then return true end\n    if n == \"11\" then return false end\n    if x == \"12\" then return true end\n    if n == \"12\" then return false end\n    if x == \"13\" then return true end\n    if n == \"13\" then return false end\n    if x == \"14\" then return true end\n    if n == \"14\" then return false end\n    if x == \"15\" then return true end\n    if n == \"15\" then return false end\n    if x == \"16\" then return true end\n    if n == \"16\" then return false end\n    if x == \"17\" then return true end\n    if n == \"17\" then return false end\n    if x == \"18\" then return true end\n    if n == \"18\" then return false end\n    if x == \"19\" then return true end\n    if n == \"19\" then return false end\n    if x == \"20\" then return true end\n    if n == \"20\" then return false end\n    if",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == x_n / n_x\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn / nn == xn / nn\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = tostring(x)\n    local nn = tostring(n)\n    local xd = math.floor(math.log(xn, 10))\n    local nd = math.floor(math.log(nn, 10))\n    if xd < nd then\n        return false\n    end\n    return xn == nn\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_den = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_num = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_den = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    if x_num and x_den and n_num and n_den then\n        if x_num[1] == n_num[1] and x_den[1] == n_den[1] then\n            return true\n        else\n            return false\n    else\n        return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \".\" .. tostring(n)\n    if xn == xd then\n        return true\n    else\n        return false\nend",
    "    local x, n = tostring(x), tostring(n)\n    local x_n = tostring(x / n)\n    if x_n == \"0\" or x_n == \"1\" then return true\n    else return false\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn * nn == math.floor(xn * nn)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    elseif x_n == 1 or n_x == 1 then\n        return false\n    else\n        return simplify(x_n / n_x, n_x)\n    end\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    if x == \"1\" then return true end\n    if n == \"1\" then return false end\n    if x == \"2\" then return true end\n    if n == \"2\" then return false end\n    if x == \"3\" then return true end\n    if n == \"3\" then return false end\n    if x == \"4\" then return true end\n    if n == \"4\" then return false end\n    if x == \"5\" then return true end\n    if n == \"5\" then return false end\n    if x == \"6\" then return true end\n    if n == \"6\" then return false end\n    if x == \"7\" then return true end\n    if n == \"7\" then return false end\n    if x == \"8\" then return true end\n    if n == \"8\" then return false end\n    if x == \"9\" then return true end\n    if n == \"9\" then return false end\n    if x == \"10\" then return true end\n    if n == \"10\" then return false end\n    if x == \"11\" then return true end\n    if n == \"11\" then return false end\n    if x == \"12\" then return true end\n    if n == \"12\" then return false end\n    if x == \"13\" then return true end\n    if n == \"13\" then return false end\n    if x == \"14\" then return true end\n    if n == \"14\" then return false end\n    if x == \"15\" then return true end\n    if n == \"15\" then return false end\n    if x == \"16\" then return true end\n    if n == \"16\" then return false end\n    if x == \"17\" then return true end\n    if n == \"17\" then return false end\n    if x == \"18\" then return true end\n    if n == \"18\" then return false end\n    if x == \"19\" then return true end\n    if n == \"19\" then return false end\n    if x == \"20\" then return true end\n    if n == \"20\" then return false end\n    if",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.gsub(xn, \"/\", \"\") .. \".\")\n    local nd = math.floor(string.gsub(n, \"/\", \"\") .. \".\")\n    return xd == nd and true or false\nend",
    "    local x, n = tostring(x), tostring(n)\n    local xn, nx, nn, nnn, nnnn, nnnnn, nnnnnn, nnnnnnn, nnnnnnnn, nnnnnnnnn, nnnnnnnnnn, nnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnnnnn, nnnnnnnnn",
    "    local x, n = tostring(x), tostring(n)\n    local x_n = tostring(x * n)\n    if x_n == \"0\" then return true\n    elseif x_n == \"1\" then return false\n    elseif x_n[1] == \"0\" then return false\n    elseif x_n[2] == \"0\" then return false\n    elseif x_n[3] == \"0\" then return false\n    elseif x_n[4] == \"0\" then return false\n    elseif x_n[5] == \"0\" then return false\n    elseif x_n[6] == \"0\" then return false\n    elseif x_n[7] == \"0\" then return false\n    elseif x_n[8] == \"0\" then return false\n    elseif x_n[9] == \"0\" then return false\n    elseif x_n[10] == \"0\" then return false\n    elseif x_n[11] == \"0\" then return false\n    elseif x_n[12] == \"0\" then return false\n    elseif x_n[13] == \"0\" then return false\n    elseif x_n[14] == \"0\" then return false\n    elseif x_n[15] == \"0\" then return false\n    elseif x_n[16] == \"0\" then return false\n    elseif x_n[17] == \"0\" then return false\n    elseif x_n[18] == \"0\" then return false\n    elseif x_n[19] == \"0\" then return false\n    elseif x_n[20] == \"0\" then return false\n    elseif x_n[21] == \"0\" then return false\n    elseif x_n[22] == \"0\" then return false\n    elseif x_n[23] == \"0\" then return false\n    elseif x_n[24] == \"0\" then return false\n    elseif x_n[25] == \"0\" then return false\n    elseif x_n[26] == \"0\" then return false\n    elseif x_n[27] == \"0",
    "    local x, n = tostring(x), tostring(n)\n    local a, b = math.floor(string.gmatch(x, \"%d/%d\")[1]), math.floor(string.gmatch(n, \"%d/%d\")[1])\n    if a == 0 or b == 0 then return false end\n    return a * b == math.floor(a * b)\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.abs(tonumber(xn)))\n    local nd = math.floor(math.abs(tonumber(n)))\n    if xd == 0 or nd == 0 then return false end\n    if xd == nd then return true end\n    return false\nend",
    "    local xn = tostring(x)\n    local nn = tostring(n)\n    local xd = math.floor(math.log(xn, 10))\n    local nd = math.floor(math.log(nn, 10))\n    if xd < nd then\n        return false\n    end\n    return true\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn / nn == xn / nn\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn / nn == xn / nn\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \"/\" .. tostring(n)\n    local xn_int = tonumber(xn)\n    local xd_int = tonumber(xd)\n    if xn_int == xd_int then\n        return true\n    else\n        return false\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = tonumber(x)\n    x_den = tonumber(x_num)\n    n_num = tonumber(n)\n    n_den = tonumber(n_num)\n    if x_den == 0 or n_den == 0 then\n        return false\n    else\n        return x_num * n_den == x_den * n_num\n    end\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \".\" .. tostring(n)\n    local xn_d = tostring(x) .. \"/\" .. tostring(n) .. \".\" .. tostring(n)\n    local xd_n = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n)\n    local xd_n_d = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n)\n    local xn_d_n = tostring(x) .. \"/\" .. tostring(n) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d_n = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n)\n    local xn_n_d_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_n_d_n = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    return (xn_d == xd_n) or (xn_n == xd_d) or (xn_d == xd_n_d) or (xn_n == xd_d_n) or (xn_d == xd_n_d_n) or (xn_",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(tonumber(xn) / tonumber(n))\n    return xd == tostring(xd)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn / nn == xn / nn\nend",
    "    local xn = math.floor(x * n)\n    if xn == 0 then\n        return true\n    else\n        return false\n    end\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = tonumber(x)\n    x_den = tonumber(x)\n    n_num = tonumber(n)\n    n_den = tonumber(n)\n    if x_num == 0 or n_num == 0 then\n        return false\n    elseif x_den == n_den then\n        return x_num * n_num == x_den * n_den\n    else\n        return false\nend",
    "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    if x == \"1\" then return true end\n    if n == \"1\" then return false end\n    if x == \"2\" then return true end\n    if n == \"2\" then return false end\n    if x == \"3\" then return true end\n    if n == \"3\" then return false end\n    if x == \"4\" then return true end\n    if n == \"4\" then return false end\n    if x == \"5\" then return true end\n    if n == \"5\" then return false end\n    if x == \"6\" then return true end\n    if n == \"6\" then return false end\n    if x == \"7\" then return true end\n    if n == \"7\" then return false end\n    if x == \"8\" then return true end\n    if n == \"8\" then return false end\n    if x == \"9\" then return true end\n    if n == \"9\" then return false end\n    if x == \"10\" then return true end\n    if n == \"10\" then return false end\n    if x == \"11\" then return true end\n    if n == \"11\" then return false end\n    if x == \"12\" then return true end\n    if n == \"12\" then return false end\n    if x == \"13\" then return true end\n    if n == \"13\" then return false end\n    if x == \"14\" then return true end\n    if n == \"14\" then return false end\n    if x == \"15\" then return true end\n    if n == \"15\" then return false end\n    if x == \"16\" then return true end\n    if n == \"16\" then return false end\n    if x == \"17\" then return true end\n    if n == \"17\" then return false end\n    if x == \"18\" then return true end\n    if n == \"18\" then return false end\n    if x == \"19\" then return true end\n    if n == \"19\" then return false end\n    if x == \"20\" then return true end\n    if n == \"20\" then return false end\n    if",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn == xn\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    elseif xn == nn then\n        return true\n    else\n        return false\n    end\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn == math.floor(xn * nn)\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn / nn == xn / nn\nend",
    "    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if x == \"0\" or n == \"0\" then\n        return true\n    end\n    local x, n\n    if",
    "    local x, n\n    local x_n, n_x\n    local x_n_x, n_x_n\n    local x_n_x_n, n_x_n_x\n    local x_n_x_n_x, n_x_n_x_n\n    local x_n_x_n_x_n, n_x_n_x_n_x\n    local x_n_x_n_x_n_x, n_x_n_x_n_x_n\n    local x_n_x_n_x_n_x_n, n_x_n_x_n_x_n_x\n    local x_n_x_n_x_n_x_n_n, n_x_n_x_n_x_n_x_n\n    local x_n_x_n_x_n_x_n_n_x, n_x_n_x_n_x_n_x_n_n\n    local x_n_x_n_x_n_x_n_n_x_n, n_x_n_x_n_x_n_x_n_n_x\n    local x_n_x_n_x_n_x_n_n_x_n_x, n_x_n_x_n_x_n_x_n_n_x_n\n    local x_n_x_n_x_n_x_n_n_x_n_x_n, n_x_n_x_n_x_n_x_n_n_x_n_x\n    local x_n_x_n_x_n_x_n_n_x_n_x_n_x, n_x_n_x_n_x_n_x_n_n_x_n_x_n\n    local x_n_x_n_x_n_x_n_n_x_n_x_n_x, n_x_n_x_n_x_n_x_n_n_x_n_x_n_x\n    local x_",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn / nn == xn / nn\nend",
    "    local xn = math.floor(math.toFloat(x) * math.toFloat(n))\n    return xn == math.toFloat(x) * math.toFloat(n)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    if x_n > 0 and n_x > 0 then\n        return true\n    end\n    return false\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.tonumber(xn))\n    local nd = math.floor(string.tonumber(n))\n    return xd == nd\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    elseif x_n == n_x then\n        return true\n    elseif x_n < 0 or n_x < 0 then\n        return false\n    elseif x_n > 0 and n_x > 0 then\n        return false\n    elseif x_n < 0 and n_x > 0 then\n        return false\n    elseif x_n > 0 and n_x < 0 then\n        return false\n    elseif x_n == 0 and n_x > 0 then\n        return false\n    elseif x_n == 0 and n_x < 0 then\n        return false\n    elseif x_n > 0 and n_x == 0 then\n        return false\n    elseif x_n < 0 and n_x == 0 then\n        return false\n    else\n        return true\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local xn = tostring(x) .. \"*\" .. tostring(n)\n    local xd = tostring(x) .. \"/\" .. tostring(n)\n    local xd_n = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n)\n    local xd_n1 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-1)\n    local xd_n2 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-2)\n    local xd_n3 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-3)\n    local xd_n4 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-4)\n    local xd_n5 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-5)\n    local xd_n6 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-6)\n    local xd_n7 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-7)\n    local xd_n8 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-8)\n    local xd_n9 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-9)\n    local xd_n10 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-10)\n    local xd_n11 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-11)\n    local xd_n12 = tostring(x) .. \"*\" .. tostring(n) .. \"*\" .. tostring(n-12)\n    local xd_n",
    "    local x, n\n    local x_n, x_d, n_n, n_d\n    x_n, x_d = to_integer(x)\n    n_n, n_d = to_integer(n)\n    if x_d == 0 or n_d == 0 then\n        return false\n    end\n    if x_n == 0 then\n        return true\n    end\n    if n_n == 0 then\n        return false\n    end\n    return x_n * n_n == x_d * n_d\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.sqrt(math.pow(tonumber(xn), 2) + 1))\n    if xd == 0 then\n        return false\n    end\n    return xn .. \"=\" .. xd .. \"/\" .. n\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    if xn < 0 or nn < 0 then\n        return false\n    end\n    return xn * nn == xn\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    if xn < 0 or nn < 0 then\n        return false\n    end\n    return xn * nn == xn\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_den = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_num = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_den = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    if x_num and x_den and n_num and n_den then\n        return x_num[1] * n_den[1] == n_num[1] * x_den[1]\n    end\n    return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = x_n / n_x\n    if x_n_d == 1 then\n        return true\n    end\n    return false\nend",
    "    local xn = math.floor(x * n)\n    return xn == math.floor(xn / n)\nend",
    "    local x, n\n    local x_n, x_d, n_n, n_d\n    x_n = tostring(x)\n    x_d = tostring(x)\n    n_n = tostring(n)\n    n_d = tostring(n)\n    if x_n == \"0\" or n_n == \"0\" then\n        return true\n    else\n        x_n = x_n:gsub(\"0\", \"\")\n        n_n = n_n:gsub(\"0\", \"\")\n        x_d = x_d:gsub(\"0\", \"\")\n        n_d = n_d:gsub(\"0\", \"\")\n        if x_n == n_n and x_d == n_d then\n            return true\n        else\n            return false\n    end\nend",
    "    local x_n = to_float(x)\n    local n_x = to_float(n)\n    if x_n == 0 or n_x == 0 then\n        return false\n    end\n    return x_n / n_x == x_n / n_x\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_den = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_num = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_den = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    if x_num and x_den and n_num and n_den then\n        return (x_num[1] * n_den[1]) == (x_den[1] * n_num[1])\n    else\n        return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_n = to_float(x)\n    local n_x = to_float(n)\n    local x_n_n = x_n * n_x\n    if x_n_n == math.floor(x_n_n) then\n        return true\n    else\n        return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local xn = toFloat(x)\n    local nn = toFloat(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn / nn == xn / nn\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = math.floor(x_n)\n    local n_x_d = math.floor(n_x)\n    if x_n_d / n_x_d == x_n / n_x then\n        return true\n    end\n    return false\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_den = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_num = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_den = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    if x_num and x_den and n_num and n_den then\n        return (x_num[1] * n_den[1] + x_den[1] * n_num[1]) == x_num[2] * n_den[2]\n    end\n    return false\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.log(xn, 2))\n    local nd = math.floor(math.log(n, 2))\n    if xd == nd then\n        return true\n    else\n        return false\nend",
    "    local x_num, x_denom, n_num, n_denom\n    x_num = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_denom = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_num = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_denom = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    if x_num and x_denom and n_num and n_denom then\n        return x_num[1] * n_denom[1] == x_denom[1] * n_num[1]\n    else\n        return false\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn * nn == math.floor(xn * nn)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn / nn == xn / nn\nend",
    "    local x, n = tostring(x), tostring(n)\n    local x_n = tostring(x * n)\n    if x_n == \"0\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\" or x_n == \"0/\"",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == x_n / n_x\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.tonumber(xn))\n    local nd = math.floor(string.tonumber(n))\n    if xd == nd then\n        return true\n    else\n        return false\nend",
    "    local x, n\n    local x_n, n_x, x_n_n, n_x_n\n    x_n = tostring(x)\n    n_x = tostring(n)\n    x_n_n = string.gsub(x_n, \"%\", \"\")\n    n_x_n = string.gsub(n_x, \"%\", \"\")\n    return x_n_n == n_x_n\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    elseif x_n == 1 or n_x == 1 then\n        return false\n    else\n        return simplify(x_n / n_x, n_x)\n    end\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return false\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = math.floor(x * n)\n    if xn == 0 then\n        return true\n    else\n        return false\n    end\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn == math.floor(xn * nn)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = tonumber(x)\n    x_den = tonumber(x)\n    n_num = tonumber(n)\n    n_den = tonumber(n)\n    if x_num == 0 or n_num == 0 then\n        return false\n    elseif x_den == 0 or n_den == 0 then\n        return true\n    elseif x_num == n_num then\n        return true\n    elseif x_den == n_den then\n        return true\n    elseif x_num > n_num then\n        return false\n    elseif x_den > n_den then\n        return false\n    elseif x_num < n_num then\n        return false\n    elseif x_den < n_den then\n        return false\n    else\n        return true\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    if x_n < n_x then\n        return false\n    end\n    return true\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    elseif x_n == n_x then\n        return true\n    else\n        return false\n    end\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn == xn\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \".\" .. tostring(n)\n    local xn_d = tostring(x) .. \"/\" .. tostring(n) .. \".\" .. tostring(n)\n    local xd_n = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_n_d = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n)\n    local xd_n_d = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n)\n    local xn_d_n = tostring(x) .. \"/\" .. tostring(n) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d_n = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n)\n    local xn_n_d_n = tostring(x) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_n_d_n = tostring(x) .. \".\" .. tostring(n) .. \"/\" .. tostring(n) .. \".\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xn_d_n_n = tostring(x) .. \"/\" .. tostring(n) .. \".\" .. tostring(n) .. \"/\" .. tostring(n) .. \"/\" .. tostring(n)\n    local xd_d_n_n = tostring(x) .. \".\" .. to",
    "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local",
    "    local x, n\n    local a, b\n    a = math.floor(x)\n    b = math.floor(n)\n    if a == 0 and b == 0 then\n        return true\n    elseif a == 0 and b != 0 then\n        return false\n    elseif a != 0 and b == 0 then\n        return false\n    else\n        return a * b == math.floor(a * b)\n    end\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(tonumber(xn) / tonumber(n))\n    return xd == tostring(xd)\nend",
    "    local x, n = tostring(x), tostring(n)\n    local xn, nx = math.tonumber(x), math.tonumber(n)\n    if xn == 0 or nx == 0 then return true end\n    if xn < 0 or nx < 0 then return false end\n    if xn == nx then return true end\n    return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x, n = tostring(x), tostring(n)\n    local x_n = tostring(x / n)\n    if x_n == \"0\" then return true\n    elseif x_n == \"1\" then return false\n    else return true\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn == math.floor(xn * nn)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    if x == \"1\" then return true end\n    if n == \"1\" then return false end\n    if x == \"2\" then return true end\n    if n == \"2\" then return false end\n    if x == \"3\" then return true end\n    if n == \"3\" then return false end\n    if x == \"4\" then return true end\n    if n == \"4\" then return false end\n    if x == \"5\" then return true end\n    if n == \"5\" then return false end\n    if x == \"6\" then return true end\n    if n == \"6\" then return false end\n    if x == \"7\" then return true end\n    if n == \"7\" then return false end\n    if x == \"8\" then return true end\n    if n == \"8\" then return false end\n    if x == \"9\" then return true end\n    if n == \"9\" then return false end\n    if x == \"10\" then return true end\n    if n == \"10\" then return false end\n    if x == \"11\" then return true end\n    if n == \"11\" then return false end\n    if x == \"12\" then return true end\n    if n == \"12\" then return false end\n    if x == \"13\" then return true end\n    if n == \"13\" then return false end\n    if x == \"14\" then return true end\n    if n == \"14\" then return false end\n    if x == \"15\" then return true end\n    if n == \"15\" then return false end\n    if x == \"16\" then return true end\n    if n == \"16\" then return false end\n    if x == \"17\" then return true end\n    if n == \"17\" then return false end\n    if x == \"18\" then return true end\n    if n == \"18\" then return false end\n    if x == \"19\" then return true end\n    if n == \"19\" then return false end\n    if x == \"20\" then return true end\n    if n == \"20\" then return false end\n    if",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn * nn == math.floor(xn * nn)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = x_n / n_x\n    if x_n_d == 0 then\n        return false\n    end\n    return true\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    local",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    if xn < 0 or nn < 0 then\n        return false\n    end\n    return xn * nn == xn\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn * nn == xn\nend",
    "    local xn = math.floor(math.toFloat(x) * math.toFloat(n))\n    return xn == math.toFloat(x) * math.toFloat(n)\nend",
    "    local x_num, x_denom, n_num, n_denom\n    x_num = tostring(x)\n    x_denom = tostring(x)\n    n_num = tostring(n)\n    n_denom = tostring(n)\n    if x_num == \"0\" or n_num == \"0\" then\n        return true\n    end\n    if x_denom == \"0\" or n_denom == \"0\" then\n        return false\n    end\n    return x_num == n_num and x_denom == n_denom\nend",
    "    local x, n\n    if x == \"0\" then\n        return true\n    elseif n == \"0\" then\n        return false\n    elseif x == \"1\" then\n        return true\n    elseif n == \"1\" then\n        return false\n    else\n        return simplify(x, n/x) and simplify(n, x/n)\n    end\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == x_n / n_x\nend",
    "    local x, n = tostring(x), tostring(n)\n    local xn, nx = math.tonumber(x), math.tonumber(n)\n    if xn == 0 or nx == 0 then\n        return true\n    end\n    return xn / nx == math.floor(xn / nx)\nend",
    "    local x_n = string.match(x, \"^([0-9]+)/([0-9]+)$\")\n    local n_x = string.match(n, \"^([0-9]+)/([0-9]+)$\")\n    if x_n and n_x then\n        return x_n[1] * n_x[2] == x_n[2] * n_x[1]\n    end\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(string.tonumber(xn))\n    local nd = math.floor(string.tonumber(n))\n    return xd == nd\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(tonumber(xn) / tonumber(n))\n    return xd == tostring(xd)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == x_n / n_x\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_n = string.match(x, \"^(.*)/(.*)$\")\n    local x_d = string.match(x_n[1], \"^(.*)$\")\n    local n_d = string.match(n, \"^(.*)$\")\n    if x_n[2] == n_d[1] then\n        return true\n    else\n        return false\nend",
    "    local x, n = tostring(x), tostring(n)\n    local x_n = tostring(x / n)\n    if x_n == \"0\" then return true\n    elseif x_n == \"1\" then return false\n    else return true\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x, n = tostring(x), tostring(n)\n    local xn = tostring(x * n)\n    if xn == \"0\" then return true\n    elseif xn == \"1\" then return false\n    elseif xn == \"2\" then return true\n    elseif xn == \"3\" then return true\n    elseif xn == \"4\" then return true\n    elseif xn == \"5\" then return true\n    elseif xn == \"6\" then return true\n    elseif xn == \"7\" then return true\n    elseif xn == \"8\" then return true\n    elseif xn == \"9\" then return true\n    elseif xn == \"10\" then return true\n    elseif xn == \"11\" then return true\n    elseif xn == \"12\" then return true\n    elseif xn == \"13\" then return true\n    elseif xn == \"14\" then return true\n    elseif xn == \"15\" then return true\n    elseif xn == \"16\" then return true\n    elseif xn == \"17\" then return true\n    elseif xn == \"18\" then return true\n    elseif xn == \"19\" then return true\n    elseif xn == \"20\" then return true\n    elseif xn == \"21\" then return true\n    elseif xn == \"22\" then return true\n    elseif xn == \"23\" then return true\n    elseif xn == \"24\" then return true\n    elseif xn == \"25\" then return true\n    elseif xn == \"26\" then return true\n    elseif xn == \"27\" then return true\n    elseif xn == \"28\" then return true\n    elseif xn == \"29\" then return true\n    elseif xn == \"30\" then return true\n    elseif xn == \"31\" then return true\n    elseif xn == \"32\" then return true\n    elseif xn == \"33\" then return true\n    elseif xn == \"34\" then return true\n    elseif xn == \"35\" then return true\n    elseif xn == \"36\" then return true\n    else",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_n = string.gsub(x, \"^(.*)/(.*)$\", \"\\\\1/\\\\2\")\n    local n_x = string.gsub(n, \"^(.*)/(.*)$\", \"\\\\1/\\\\2\")\n    return x_n == n_x\nend",
    "    local x, n = tostring(x), tostring(n)\n    local x_n = tostring(x * n)\n    if x_n == \"0\" or x_n == \"0/\" then return true\n    elseif x_n == \"1\" or x_n == \"1/\" then return false\n    elseif x_n[1] == \"0\" then return false\n    elseif x_n[2] == \"0\" then return false\n    elseif x_n[3] == \"0\" then return false\n    elseif x_n[4] == \"0\" then return false\n    elseif x_n[5] == \"0\" then return false\n    elseif x_n[6] == \"0\" then return false\n    elseif x_n[7] == \"0\" then return false\n    elseif x_n[8] == \"0\" then return false\n    elseif x_n[9] == \"0\" then return false\n    elseif x_n[10] == \"0\" then return false\n    elseif x_n[11] == \"0\" then return false\n    elseif x_n[12] == \"0\" then return false\n    elseif x_n[13] == \"0\" then return false\n    elseif x_n[14] == \"0\" then return false\n    elseif x_n[15] == \"0\" then return false\n    elseif x_n[16] == \"0\" then return false\n    elseif x_n[17] == \"0\" then return false\n    elseif x_n[18] == \"0\" then return false\n    elseif x_n[19] == \"0\" then return false\n    elseif x_n[20] == \"0\" then return false\n    elseif x_n[21] == \"0\" then return false\n    elseif x_n[22] == \"0\" then return false\n    elseif x_n[23] == \"0\" then return false\n    elseif x_n[24] == \"0\" then return false\n    elseif x_n[25] == \"0\" then return false\n    elseif x_n[26] == \"0\"",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local x_num, x_denom, n_num, n_denom\n    x_num = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_denom = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_num = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_denom = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    if x_num and x_denom and n_num and n_denom then\n        return x_num[1] * n_denom[1] == x_denom[1] * n_num[1]\n    else\n        return false\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn / nn == xn / nn\nend",
    "    local xn = math.floor(x * n)\n    return xn == math.floor(xn / n)\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn == xn\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \".\" .. tostring(n)\n    local xn_d = xn .. \".\" .. xd\n    if xn_d == xn .. \".\" .. xd then\n        return true\n    else\n        return false\nend",
    "    local x, n\n    local x_n, x_d, n_n, n_d\n    x_n = tostring(x)\n    x_d = tostring(x)\n    n_n = tostring(n)\n    n_d = tostring(n)\n    if x_n == \"0\" or n_n == \"0\" then\n        return true\n    elseif x_n == \"1\" or n_n == \"1\" then\n        return false\n    else\n        x_n = string.gsub(x_n, \"%\", \"\")\n        n_n = string.gsub(n_n, \"%\", \"\")\n        x_d = string.gsub(x_d, \"%\", \"\")\n        n_d = string.gsub(n_d, \"%\", \"\")\n        if x_n == n_n and x_d == n_d then\n            return true\n        else\n            return false\n    end\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = tostring(x) .. \".\" .. tostring(n)\n    local xn_num = tonumber(xn)\n    local xd_num = tonumber(xd)\n    if xn_num == 0 or n == 0 then\n        return false\n    elseif xn_num == 1 then\n        return true\n    elseif xn_num < 0 or n < 0 then\n        return false\n    elseif xn_num < n then\n        return false\n    elseif xn_num > n then\n        return false\n    elseif xn_num == n then\n        return true\n    elseif xn_num % n == 0 then\n        return true\n    elseif xn_num % n < 0 then\n        return false\n    elseif xn_num % n > 0 then\n        return true\n    elseif xn_num < 0 and xd_num > 0 then\n        return false\n    elseif xn_num > 0 and xd_num < 0 then\n        return false\n    elseif xn_num < 0 and xd_num < 0 then\n        return true\n    elseif xn_num > 0 and xd_num > 0 then\n        return true\n    elseif xn_num < 0 and xd_num > 0 and xn_num < xd_num then\n        return true\n    elseif xn_num > 0 and xd_num < 0 and xn_num > xd_num then\n        return true\n    elseif xn_num < 0 and xd_num < 0 and xn_num > xd_num then\n        return false\n    elseif xn_num > 0 and xd_num > 0 and xn_num < xd_num then\n        return false\n    elseif xn_num < 0 and xd_num > 0 and xn_num < xd_num then\n        return true\n    elseif xn_num > 0 and xd_num < 0 and xn_num > xd_num then\n        return false\n    elseif xn_num < 0 and xd_num < 0 and",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x, n\n    local x_n, x_d, n_x, n_d, x_n_d, x_d_n\n    x_n = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_d = x:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_x = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    n_d = n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_n_d = x_n:match(\"^(\\\\d+)/(\\\\d+)$\")\n    x_d_n = x_d:match(\"^(\\\\d+)/(\\\\d+)$\")\n    if x_n and n_x and x_n_d and x_d_n then\n        x_n_d = x_n_d:match(\"^(\\\\d+)/(\\\\d+)$\")\n        x_d_n = x_d_n:match(\"^(\\\\d+)/(\\\\d+)$\")\n        if x_n_d[1] == n_x[1] and x_d_n[1] == n_d[1] then\n            return true\n        else\n            return false\n    else\n        return false\nend",
    "    local x_num, x_den, n_num, n_den\n    x_num = tonumber(x)\n    x_den = tonumber(x_num)\n    n_num = tonumber(n)\n    n_den = tonumber(n_num)\n    if x_den == 0 or n_den == 0 then\n        return false\n    end\n    return x_num * n_den == x_den * n_num\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == x_n\nend",
    "    local xn = tostring(x) .. \"*\" .. tostring(n)\n    local xd = tostring(x) .. \"/\" .. tostring(n)\n    if xn == xd then\n        return true\n    else\n        return false\nend",
    "    local xn = tostring(x) .. \"/\" .. tostring(n)\n    local xd = math.floor(math.log(math.abs(xn), 2))\n    local nd = math.floor(math.log(math.abs(n), 2))\n    if xd == nd then\n        return true\n    else\n        return false\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn == xn\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = x_n / n_x\n    if x_n_d == 0 then\n        return false\n    end\n    return true\nend",
    "    local x, n\n    if x == \"0\" then return true end\n    if n == \"0\" then return false end\n    if x == \"1\" then return true end\n    if n == \"1\" then return false end\n    if x == \"2\" then return true end\n    if n == \"2\" then return false end\n    if x == \"3\" then return true end\n    if n == \"3\" then return false end\n    if x == \"4\" then return true end\n    if n == \"4\" then return false end\n    if x == \"5\" then return true end\n    if n == \"5\" then return false end\n    if x == \"6\" then return true end\n    if n == \"6\" then return false end\n    if x == \"7\" then return true end\n    if n == \"7\" then return false end\n    if x == \"8\" then return true end\n    if n == \"8\" then return false end\n    if x == \"9\" then return true end\n    if n == \"9\" then return false end\n    if x == \"10\" then return true end\n    if n == \"10\" then return false end\n    if x == \"11\" then return true end\n    if n == \"11\" then return false end\n    if x == \"12\" then return true end\n    if n == \"12\" then return false end\n    if x == \"13\" then return true end\n    if n == \"13\" then return false end\n    if x == \"14\" then return true end\n    if n == \"14\" then return false end\n    if x == \"15\" then return true end\n    if n == \"15\" then return false end\n    if x == \"16\" then return true end\n    if n == \"16\" then return false end\n    if x == \"17\" then return true end\n    if n == \"17\" then return false end\n    if x == \"18\" then return true end\n    if n == \"18\" then return false end\n    if x == \"19\" then return true end\n    if n == \"19\" then return false end\n    if x == \"20\" then return true end\n    if n == \"20\" then return false end\n    if",
    "    local x, n\n    local x_n, n_x, x_n_n, n_x_n\n    x_n = tostring(x)\n    n_x = tostring(n)\n    x_n_n = string.gsub(x_n, \"%\", \"\")\n    n_x_n = string.gsub(n_x, \"%\", \"\")\n    return x_n_n == n_x_n\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return false\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = x_n / n_x\n    if x_n_d == 0 then\n        return false\n    end\n    return true\nend",
    "    local x, n = tostring(x), tostring(n)\n    local xn, nx = math.tonumber(x), math.tonumber(n)\n    if xn == 0 or nx == 0 then\n        return true\n    end\n    return xn / nx == math.floor(xn / nx)\nend",
    "    local x, n = tostring(x), tostring(n)\n    local xn, nx = math.to_integer(x), math.to_integer(n)\n    if xn == 0 or nx == 0 then\n        return true\n    end\n    if xn < 0 or nx < 0 then\n        return false\n    end\n    return xn * nx == xn / nx\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    return xn * nn == xn\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    return x_n * n_x == math.floor(x_n * n_x)\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return false\n    end\n    return xn * nn == math.floor(xn * nn)\nend",
    "    local x_n = string.gsub(x, \"^(.*)/(.*)$\", \"\\\\1/\\\\2\")\n    local n_x = string.gsub(n, \"^(.*)/(.*)$\", \"\\\\1/\\\\2\")\n    if x_n == n_x then\n        return true\n    else\n        return false\nend",
    "    local xn = to_number(x)\n    local nn = to_number(n)\n    if xn == 0 or nn == 0 then\n        return true\n    end\n    if xn < 0 or nn < 0 then\n        return false\n    end\n    return xn * nn == xn\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = math.floor(x_n)\n    local n_x_d = math.floor(n_x)\n    if x_n_d == n_x_d then\n        return true\n    end\n    return false\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    if x_n < 0 or n_x < 0 then\n        return false\n    end\n    return x_n * n_x == x_n / n_x\nend",
    "    local x_n = to_number(x)\n    local n_x = to_number(n)\n    if x_n == 0 or n_x == 0 then\n        return true\n    end\n    local x_n_d = x_n / n_x\n    if x_n_d == 0 then\n        return true\n    end\n    return false\nend"
  ],
  "stop_tokens": [
    "\nlocal",
    "\nfunction",
    "\n--",
    "\n\n"
  ]
}
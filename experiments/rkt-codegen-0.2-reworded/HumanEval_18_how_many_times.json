{
  "name": "HumanEval_18_how_many_times",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Find how many times a given substring can be found in the original string. Count overlaping cases.\n;; >>> (how_many_times \"\" \"a\")\n;; 0\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n(define (how_many_times string substring)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate how_many_times))\n    (check-equal? (candidate \"\" \"x\") 0)\n    (check-equal? (candidate \"xyxyxyx\" \"x\") 4)\n    (check-equal? (candidate \"cacacacac\" \"cac\") 4)\n    (check-equal? (candidate \"john doe\" \"john\") 1)\n))\n\n(test-humaneval)",
  "completions": [
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>>",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (count (+ 1 count))))\n       (string-index-of string substring)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;;",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-set! string 1))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;;",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ 1 count))\n      (string:next string))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string x)))) substring)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;;",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count i)))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdef\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyz\")\n;; \"abcdefghijklmnopqrstuvwxyz\"",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))))\n\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>>",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-set! string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count string))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) ()))\n      (string-length string)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the longest substring of a given string that is a palindrome.\n;; >>> (longest_palindrome \"a\")\n;; \"a\"\n;; >>> (longest_palindrome \"ab\")\n;; \"ab\"\n;; >>> (longest_palindrome \"abba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabba\")\n;; \"abbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabba\")\n;; \"abbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabba\")\n;; \"abbaabbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabba\")\n;; \"abbaabbaabbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabba\")\n;; \"abbaabbaabbaabbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabba\")\n;; \"abbaabbaabbaabbaabbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abbaabbaabbaabbaabbaabbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abbaabbaabbaabbaabbaabbaabbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba\"\n;; >>> (longest",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) (set! count 0)))\n      (string-length string)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the longest substring of a given string that is a palindrome.\n;; >>> (longest_palindrome \"a\")\n;; \"a\"\n;; >>> (longest_palindrome \"abccba\")\n;; \"bccba\"\n;; >>> (longest_palindrome \"abba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabbaabba\")\n;; \"abba\"\n;; >>> (longest_palindrome \"abbaabbaabbaabbaabbaabbaabbaabba",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the longest substring of the original string that is a prefix of the given substring.\n;; >>> (longest_prefix_of \"abcdef\" \"ab\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdef\" \"abc\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdef\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefg\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefgh\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghi\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghij\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghijk\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghijkl\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghijklm\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghijklmn\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghijklmnop\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghijklmnopq\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdef\" \"abcdefghijklmnopqr\")\n;; \"abcdef\"\n;; >>> (longest",
    "  (define (count-overlaping-substrings string substring)\n    (define (count-overlaping-substrings-recursion string substring)\n      (cond\n        ((= (length string) (length substring))\n          (+ 1 (count-overlaping-substrings-recursion substring)))\n        ((< (length string) (length substring))\n          (+ (count-overlaping-substrings-recursion substring)\n             (count-overlaping-substrings-recursion string)))\n        (else\n          (count-overlaping-substrings-recursion string substring))))\n    (count-overlaping-substrings-recursion string substring)))\n",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))))\n\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;;",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring i 1)) (set! count (+ count 1)) (set! count 0)))\n      (string-substring 0 (string-length string))))\n  count)\n",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? substring string)\n        (string-ci=? string substring)\n        (string-ci=? substring string))))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;;",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4",
    "  (let ((count 0))\n    (for-each (lambda (s) (if (string=? s substring) (set! count (+ count 1)) ())) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring i 1)) (set! count (+ count 1)) (set! count 0)))\n      (string-substring 0 (string-length string))))\n  (+ count))\n\n;; Find the longest substring that is a prefix of the given string.\n;; >>> (longest_prefix \"abc\")\n;; \"abc\"\n;; >>> (longest_prefix \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix \"abcdab\")\n;; \"ab\"\n;; >>> (longest_prefix \"abcdabcd\")\n;; \"abcd\"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-set! string 1))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (",
    "  (define (count-overlaping-cases string substring)\n    (define (count-overlaping-cases-aux string substring)\n      (cond\n        ((= (length string) (length substring))\n          (+ 1 (count-overlaping-cases-aux (substring 0 (length string)))))\n        ((< (length string) (length substring))\n          (+ (count-overlaping-cases-aux (substring 0 (length string)))\n             (count-overlaping-cases-aux (substring (length string) (length substring)))))))\n    (count-overlaping-cases-aux string substring)))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ 1 count)))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring i 1)) (set! count (+ count 1)) (set! count 0)))\n       (string-substring 0 (string-length string))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (count + 1)))\n      (string-index-of string substring)))\n  (+ count))\n\n;; Find the first index of a substring in a string.\n;; >>> (first_index_of \"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
    "  (let ((count 0))\n    (while (string-search string substring)\n      (count (+ 1 count)))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa",
    "  (let ((count 0))\n    (for-each (lambda (s) (if (string=? s substring) (set! count (+ count 1)))) string))\n  count)\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abc\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabc\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabcabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabcabcabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabcabcabcabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabcabcabcabcabcabcabcabc\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcabcabcabcabcabcabcabcabcabcabcabcabc\")\n;;",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (string-for-each (lambda (x) (if (string= x substring) (count + 1))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count x substring)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>>",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (while (string-ci=? string substring)\n      (count (+ 1 count))\n      (string-next! string))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string #\"a\" count (inc count))\n      (string-set! string #\"a\" 0)\n      (string-set! substring #\"a\" (inc count))\n      (string-set! substring #\"a\" 0)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaa",
    "  (define (count-overlaping-substrings string substring)\n    (define (count-overlaping-substring string substring)\n      (define (count-overlaping-substring-recursive string substring)\n        (cond\n          ((= (length string) (length substring))\n            (+ 1 (count-overlaping-substring-recursive string substring)))\n          ((< (length string) (length substring))\n            (count-overlaping-substring-recursive string substring)))))\n    (count-overlaping-substring string substring)))\n  (count-overlaping-substring string substring)))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa",
    "  (let ((count 0))\n    (for-each\n      (lambda (match)\n        (set! count (+ count (string-length match)))\n      )\n      (string-split string substring)\n    )\n    count\n  )\n)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (1+ count))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;;",
    "  (let ((count 0))\n    (string-for-each\n      (lambda (c)\n        (if (eq c substring)\n            (count 1)\n            (count (how_many_times substring c))))\n      string))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"a\" \"a\")\n;; 1\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_",
    "  (let ((count 0))\n    (for-each (lambda (s) (if (string=? s substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>>",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;;",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abc\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabc\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabcdef\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefg\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefgh\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghi\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghij\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijk\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijkl\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijklm\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijklmn\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijklmnop\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijklmnopq\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijklmnopqr\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijklmnopqrs\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdefghijklmnopqrst\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcd",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;;",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n",
    "  (let ((count 0))\n    (for-each\n      (lambda (x)\n        (if (string= x substring)\n          (set! count (+ count 1))\n        )\n      )\n      string\n    )\n    count\n  )\n)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) (set! count 0)))\n      (string-length string)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>>",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ 1 count)))))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcdef\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdab\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcd\")\n;; \"abcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcd\")\n;; \"abcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")",
    "  (define (count-overlaping-substrings string substring)\n    (define (count-overlaping-substring string substring)\n      (define (count-overlaping-substring-recursive string substring)\n        (cond\n          ((= (length string) (length substring))\n            (+ 1 (count-overlaping-substring-recursive (substring 0 (length string)))))\n          ((< (length string) (length substring))\n            (+ 1 (count-overlaping-substring-recursive (substring 0 (length substring)))))\n          (else\n            (count-overlaping-substring-recursive (substring (length string) (length substring)))))))\n    (count-overlaping-substring substring))\n  (count-overlaping-substring string substring))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 0\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 0\n;; >>> (how_many_times \"aaaaa\" \"aaa\")\n;; 0\n;; >>> (how_many_times \"aaaaa\" \"aaaa\")\n;; 1\n;; >>> (how_many_times \"aaaaa\" \"aaaaa\")\n;; 1\n;; >>> (how_many_times \"aaaaa\" \"aaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaaa\" \"aaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaaa\" \"aaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaaa\" \"aaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaaa\" \"aaaaaaaaaa\")\n;; 0\n;; >>> (how_many",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? substring string))))\n  (+ count i))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcdef\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyz\")\n;; \"abcdefghijklmnopqrstuvwxyz\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa",
    "  (let ((count 0))\n    (for-each\n      (lambda (i)\n        (if (string=? string substring)\n          (set! count (+ count 1))\n          (set! count (+ count 0))))\n      (range 1 (string-length string))))\n  (+ count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"",
    "  (let ((count 0))\n    (while (string-search string substring)\n      (count (1 + count)))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a",
    "  (let ((count 0))\n    (for-each (lambda (x) (count (string-count string substring x))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the first occurrence of a substring in a string.\n;; >>> (find_first_of \"\" \"a\")\n;; #f\n;; >>> (find_first_of \"aaa\" \"a\")\n;; #\"a\"\n;; >>> (find_first_of \"aaaa\" \"aa\")\n;; #\"a\"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (1+ count))))\n  count)\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcd\")\n;; \"abcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcd\")\n;; \"abcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdab",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-set! string 1))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;;",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring i 1)) (set! count (+ count 1)) ()))\n      (string-length string)))\n  count)\n\n;; >>> (how_many_times \"a\" \"a\")\n;; 1\n;; >>> (how_many_times \"aa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-set! string 1))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)) ())) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-ref string i)) (set! count (+ count 1)) (set! count 0)))\n       (range 0 (string-length string))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4",
    "  (let ((count 0))\n    (let ((string (string->list string)))\n      (let ((substring (string->list substring)))\n        (for-each (lambda (x) (set! count (count count) (count (+ 1 x)))) substring))))\n  (+ count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count x substring)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;;",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (1+ count))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (",
    "  (let ((count 0))\n    (while (string-search string substring)\n      (count (1+ count))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_",
    "  (let ((count 0))\n    (let ((string (string->list string)))\n      (let ((substring (string->list substring)))\n        (for-each (lambda (x) (set! count (count count) (count (+ 1 x)))) substring))))\n  (+ count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) ()))\n      (string-length string)))\n  count)\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcdef\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcdefg\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyz\")\n;; \"abcdefghijklmnopqrstuvwxyz\"",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (count + 1))) string)\n    count)\n)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 3",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abc\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdab\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcd\")\n;; \"abcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"",
    "  (let ((count 0))\n    (for-each (lambda (x) (count (string-count string substring x))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"a\")\n;;",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-ref string i)) (set! count (+ count 1)) (set! count 0)))\n       (range 0 (string-length string) -1))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;;",
    "  (let ((count 0))\n    (string-index-of string substring)\n    (if (eq? (string-length string) (string-length substring))\n      count\n      (count + 1)))\n)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")",
    "  (let ((count 0))\n    (for-each\n      (lambda (c)\n        (if (string=? c substring)\n          (set! count (+ count 1))\n        )\n      )\n      string\n    )\n    count\n  )\n)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring i 1)) (set! count (+ count 1)) (set! count 0)))\n      (string-substring 0 (string-length string))))\n  (+ count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string #\"a\" count)\n      (count (+ 1 count)))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring i 1)) (set! count (+ count 1)) (set! count 0)))\n      (string-substring 0 (string-length string)))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? substring string))\n        (string-ci=? string substring))))\n\n;; Find the first occurrence of a substring in a string.\n;; >>> (find_first_of \"abcdef\" \"a\")\n;; 0\n;; >>> (find_first_of \"abcdef\" \"b\")\n;; 1\n;; >>> (find_first_of \"abcdef\" \"c\")\n;; 2\n;; >>> (find_first_of \"abcdef\" \"d\")\n;; 3\n;; >>> (find_first_of \"abcdef\" \"e\")\n;; 4\n;; >>> (find_first_of \"abcdef\" \"f\")\n;; 5\n;; >>> (find_first_of \"abcdef\" \"g\")\n;; 6\n;; >>> (find_first_of \"abcdef\" \"h\")\n;; 7\n;; >>> (find_first_of \"abcdef\" \"i\")\n;; 8\n;; >>> (find_first_of \"abcdef\" \"j\")\n;; 9\n;; >>> (find_first_of \"abcdef\" \"k\")\n;; 10\n;; >>> (find_first_of \"abcdef\" \"l\")\n;; 11\n;; >>> (find_first_of \"abcdef\" \"m\")\n;; 12\n;; >>> (find_first_of \"abcdef\" \"n\")\n;; 13\n;; >>> (find_first_of \"abcdef\" \"o\")\n;; 14\n;; >>> (find_first_of \"abcdef\" \"p\")\n;; 15\n;; >>> (find_first_of \"abcdef\" \"q\")\n;; 16\n;; >>> (find_first_of \"abcdef\" \"r\")\n;; 17\n;; >>> (find_first_of \"abcdef\" \"s\")\n;; 18\n;; >>> (find_first_of \"abcdef\" \"t\")\n;; 19\n;; >>> (find_first_of \"abcdef\" \"u\")\n;; 20\n;; >>> (find_first_of \"abcdef\"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))))\n  (count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring i 1)) (count 1) (count)))\n      (string-index-of string substring)))\n  count)\n\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) (set! count 0)))\n       (range 1 (string-length string))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) ()))\n      (string-length string)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string #\"a\" count (inc count))\n      (string-set! string #\"a\" 0)\n      (inc count))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (count + 1)))\n      (string-index-of string substring)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ 1 count)))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a\" \"a",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>>",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1))))\n       (string-index-of string substring)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; >>> (how_many_times \"a\" \"a\")\n;; 1\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the longest substring of a given string that is also a substring of the original string.\n;; >>> (longest_substring \"abcdef\")\n;; \"abcdef\"\n;; >>> (longest_substring \"abcdefghijklmnopqrstuvwxyz\")\n;; \"abcdefghijklmnopqrstuvwxyz\"\n;; >>> (longest_substring \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\")\n;; \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaa",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (count 1))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>>",
    "  (let ((count 0))\n    (for-each\n      (lambda (x)\n        (if (string= x substring)\n          (count 1)\n          (count (+ 1 count)))))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\"",
    "  (let ((count 0))\n    (for-each (lambda (s)\n                (if (string=? s substring)\n                  (set! count (+ count 1))\n                  (set! count 0)))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa",
    "  (let ((count 0))\n    (while (string-search string substring)\n      (count (1 + count)))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;;",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;;",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (+ count (string-index string i))))\n      (string-index string substring)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 2\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 1\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) (set! count 0)))\n      (string-length string)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>>",
    "  (define (count-overlaping-cases string substring)\n    (define (count-overlaping-cases-helper string substring)\n      (cond\n        [(string=? string substring) (count 1)]\n        [(string=? substring string) (count 1)]\n        [(string=? substring substring) (count 2)]\n        [(string? string) (count 0)]\n        [(string? substring) (count 0)]\n        [else (count 0)]\n      )\n    )\n    (count-overlaping-cases-helper string substring)\n  )\n  (count-overlaping-cases string substring)\n)",
    "  (let ((count 0))\n    (for-each\n      (lambda (i)\n        (if (string= substring (string-substring string i))\n            (count (+ 1 count))\n            (count 0))))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) ()))\n      (string-length string)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;;",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; Find the first position of a substring in a string.\n;; >>> (find-first-of \"a\" \"aa\")\n;; 1\n;; >>> (find-first-of \"aa\" \"a\")\n;; 2\n;; >>> (find-first-of \"aaa\" \"a\")\n;; 1\n;; >>> (find-first-of \"aaaa\" \"aa\")\n;; 2",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (count 1))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>>",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring string i)) (set! count (+ count 1)) ))\n      (string-length string)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_",
    "  (let ((count 0))\n    (let ((string (string->list string)))\n      (let ((substring (string->list substring)))\n        (for-each (lambda (x) (set! count (count count) (count (+ 1 (string-length x)))) (string-append x string)))\n        (string->list count))))\n  (how_many_times string substring))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;;",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string #\"a\" count (inc count))\n      (string-set! string #\"a\" 0)\n      (string-set! substring #\"a\" (inc count))\n      (string-set! substring #\"a\" 0))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (count 1) (count 0))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;;",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count x substring)))) string)\n    count))\n",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      string))\n  count)\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcdef\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcde\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyz\")\n;; \"abcdefghijklmnopqrstuvwxyz\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmn",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))))\n\n;; Find the first occurrence of a substring in a string.\n;; >>> (find-first-of \"abcdef\" \"bc\")\n;; #f\n;; >>> (find-first-of \"abcdef\" \"bcdef\")\n;; #\"c\"",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! count (count + 1))\n        (set! i (i + 1)))\n      count))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 0\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>>",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)) ()))\n      (string)))\n  (+ count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? substring string)\n        (string-ci=? string substring))))))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcdef\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcde\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyz\")\n;; \"abcdefghijklmnopqrstuvwxyz\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefgh",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))\n    count))\n\n;; Find the longest substring that is a prefix of the given string.\n;; >>> (longest_prefix \"abc\")\n;; \"abc\"\n;; >>> (longest_prefix \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix \"abcd\" \"abc\")\n;; \"abc\"\n;; >>> (longest_prefix \"abcd\" \"ab\")\n;; \"ab\"\n;; >>> (longest_prefix \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\")\n;; \"abcd\"\n;; >>> (longest_prefix \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"abcd\" \"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\"",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-add string 1))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\"",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (while (string-search string substring)\n      (count (1+ (string-search-start-index string substring))))\n    count))\n\n;; Find the index of the first occurence of a substring in a string.\n;; >>> (index-of \"a\" \"a\")\n;; 0\n;; >>> (index-of \"aa\" \"a\")\n;; 1\n;; >>> (index-of \"aaa\" \"a\")\n;; 2",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string-cii-cmp substring string i) (set! count (+ count 1)) ()))\n      (string-cii-ci-ci-cmp string substring string)))\n  (+ count))\n\n;; Find the first occurrence of a substring in a string.\n;; >>> (find-first-of \"\" \"a\")\n;; #f\n;; >>> (find-first-of \"aaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"aa\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")\n;; #\"a\"\n;; >>> (find-first-of \"aaaa\" \"a\")",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the longest substring of a given string that is a palindrome.\n;; >>> (longest_palindrome \"a\")\n;; \"a\"\n;; >>> (longest_palindrome \"aa\")\n;; \"aa\"\n;; >>> (longest_palindrome \"aaa\")\n;; \"aa\"\n;; >>> (longest_palindrome \"aaaa\")\n;; \"aaa\"\n;; >>> (longest_palindrome \"aaaaa\")\n;; \"aaaa\"\n;; >>> (longest_palindrome \"aaaaaa\")\n;; \"aaaa\"\n;; >>> (longest_palindrome \"aaaaaaa\")\n;; \"aaaa\"\n;; >>> (longest_palindrome \"aaaaaaaa\")\n;; \"aaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaaaaaaaaaaaaaaaaa\")\n;; \"aaaaaa\"\n;; >>> (longest_palindrome \"aaaa",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (set! count (count + 1)))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count x substring)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;;",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-set! string 1))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (1+ count))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_",
    "  (let ((count 0))\n    (for-each\n      (lambda (s)\n        (if (string=? s substring)\n          (set! count (+ count 1))\n          (set! count 0)))\n      string))\n  count)\n\n;; >>> (how_many_times \"a\" \"a\")\n;; 1\n;; >>> (how_many_times \"aa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many",
    "  (let ((count 0))\n    (for-each (lambda (i) (set! count (count + 1)))\n      (string-index-of string substring i)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string #\"a\" count (inc count))\n      (string-set! string #\"a\" 0)\n      (string-set! substring #\"a\" (inc count))\n      (string-set! substring #\"a\" 0))\n    count))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcd\")\n;; \"abcdabcd\"",
    "  (let ((count 0))\n    (string-for-each\n      (lambda (c)\n        (if (string= c substring)\n            (count 1)\n            (count (how_many_times substring c))))\n      string))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abc\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdab\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdabcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcd\")\n;; \"abcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcd\")\n;; \"abcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\")\n;; \"abcdabcdabcdabcdabcdabcdabcdabcd\"\n;; >>> (longest_prefix_of \"abcdabcdabcdabcdabcd",
    "  (let ((count 0))\n    (while (string-search string substring)\n      (count (+ 1 count)))))\n\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa",
    "  (define (count_overlaps start end)\n    (cond\n      [(= start end) (count 1)]\n      [(< start end) (count (substring (- start 1) end) + 1)]\n      [(> start end) (count (substring start (- end 1)) + 1)]\n      [else (count 0)]\n    )\n  )\n  (count_overlaps 0 (string-length string) (string-length substring))\n)\n",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-set! string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (for-each (lambda (i) (if (string= substring (string-substring i 1)) (set! count (+ count 1)) ()))\n      (string-index-of string substring)))\n  count)\n\n;; >>> (how_many_times \"a\" \"a\")\n;; 1\n;; >>> (how_many_times \"aa\" \"a\")\n;; 2\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaaaaaaaaaaaaaaaaaaaa\" \"aa\")\n;; 3\n;; >>> (how_",
    "  (let ((count 0))\n    (string-for-each (lambda (x) (if (string= x substring) (count 1))) string)\n    count))\n",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-set! string 0) (string-set! string 1))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_",
    "  (let ((count 0))\n    (for-each (lambda (s) (if (string=? s substring) (set! count (+ count 1)))) string))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=",
    "  (let ((count 0))\n    (let ((index (string-index string substring)))\n      (if (eq index 0)\n        (count 1)\n        (count (how_many_times string (substring (- index 1) (length string)))))\n      (count (how_many_times string (substring index (length string)))))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))) string)\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaaaa\")\n",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))\n      (string-set! string (string-add string 1))))\n  (count 0))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>>",
    "  (let ((count 0))\n    (for-each (lambda (x) (set! count (+ count (string-count string substring x))))\n      (string)))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (string-set! string (string-add string 1))\n      (count (string-length string))))\n  count)\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? substring string))\n        (set! i 0))\n    count))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcdef\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcdefg\")\n;; \"abcdef\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_",
    "  (let ((count 0))\n    (let ((i 0))\n      (while (string-ci=? string substring)\n        (set! i (+ i 1))\n        (set! count (+ count 1))\n        (string-ci=? string substring)\n        (string-ci=? string substring)\n        (string-ci=? string substring))))\n  (+ count))\n\n;; Find the longest substring that is a prefix of the original string.\n;; >>> (longest_prefix_of \"abcdef\")\n;; \"abc\"\n;; >>> (longest_prefix_of \"abcd\")\n;; \"ab\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyz\")\n;; \"abcdefghijklmnopqrstuvwxyz\"\n;; >>> (longest_prefix_of \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefgh",
    "  (let ((count 0))\n    (for-each (lambda (x) (if (string= x substring) (set! count (+ count 1)))))\n    count))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_many_times \"aaaa\" \"aaaaaaaaaaaaaaaaaa\")\n;; 4\n;; >>> (how_",
    "  (let ((count 0))\n    (while (string=? string substring)\n      (count (+ count 1))\n      (string:next string))))\n\n;; >>> (how_many_times \"aaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"a\")\n;; 3\n;; >>> (how_many_times \"aaaa\" \"aa\")\n;; 3\n;; >>> (how_many_"
  ],
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ]
}
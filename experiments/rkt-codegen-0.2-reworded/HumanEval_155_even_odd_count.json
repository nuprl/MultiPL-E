{
  "name": "HumanEval_155_even_odd_count",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Given an integer. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count -12)\n;; (list 1 1)\n;; >>> (even_odd_count 123)\n;; (list 1 2)\n(define (even_odd_count num)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate even_odd_count))\n    (check-equal? (candidate 7) (list 0 1))\n    (check-equal? (candidate -78) (list 1 1))\n    (check-equal? (candidate 3452) (list 2 2))\n    (check-equal? (candidate 346211) (list 3 3))\n    (check-equal? (candidate -345821) (list 3 3))\n    (check-equal? (candidate -2) (list 1 0))\n    (check-equal? (candidate -45347) (list 2 3))\n    (check-equal? (candidate 0) (list 1 0))\n))\n\n(test-humaneval)",
  "completions": [
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((digit (num % 10)))\n        (if digit = 0\n          (odd (append odd digit))\n          (even (append even digit)))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 0 0)",
    "  (let ((even (even? num)))\n    (let ((odd (odd? num)))\n      (list odd (even? (sub1 num))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (let ((digit (modulo num 10)))\n        (if (even? digit)\n            (set! even_count (+ even_count 1))\n            (set! odd_count (+ odd_count 1)))\n          (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even? num)))\n    (let ((odd (odd? num)))\n      (list odd even))))\n\n;; Given a list of numbers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 1 2 2 3 2 3 4 2 4 5 2 5 6 2 6 7 2 7 8 2 8 9 2 9))",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((digit (num % 10)))\n        (if digit == 0\n           (odd (append odd digit))\n           (even (append even digit))))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 0 0)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a list of numbers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>>",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (odd_count (+ 1 odd_count))\n        (even_count (+ 1 even_count)))\n      (num (- num 1))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i))\n            (append even (list i)))\n          (setq i (1 + i)))\n        (append odd (list num)))\n      (append even (list num)))\n    (cons even odd)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i))\n            (append even (list i)))))\n      (cons odd (cons even (cons 0))))))\n",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (let ((digit (modulo num 10)))\n        (if (even? digit)\n            (set! even_count (+ 1 even_count))\n            (set! odd_count (+ 1 odd_count)))\n        (set! num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even? num)))\n    (let ((odd (odd? num)))\n      (list odd (even odd))))\n  )\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 2)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 2 3)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 2 3 4)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 2 3 4 5)\n;; >>> (even_odd_count \"12345678901\")\n;; (list 1 2 2 3 4 5 6)\n;; >>> (even_odd_count \"123456789012\")\n;; (list 1 2 2 3 4 5 6 7)\n;; >>> (even_odd_count \"1234567890123\")\n;; (list 1 2 2 3 4 5 6 7 8)\n;; >>> (even_odd_count \"12345678901234\")\n;; (list 1 2 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count \"123456789012345\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count \"1234567890123456\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11)\n;; >>> (even_odd_count \"12345678901234567\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12)\n;; >>> (even_odd_count \"123456789012345678\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12 13)\n;; >>> (even_odd_count \"1234567890123456789\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14)\n;; >>> (even_odd_count \"123456789012345678901\")\n;; (list 1 2 2 3 4 5 6",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (let ((digit (modulo num 10)))\n        (if (= digit 0)\n            (set! odd_count (+ odd_count 1))\n            (set! even_count (+ even_count 1)))\n        (set! num (- num 1)))\n      )\n    (list odd_count even_count)\n    )\n  )\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n  )\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i 0))\n        (while (< i num)\n          (if (< (modulo i 2) 0)\n            (append odd (list 1))\n            (append even (list 0)))\n          (set! i (i + 1)))))\n    (list odd (even)))\n)\n\n;; Given a list of numbers. return a list that has the sum of the even and odd numbers respectively.\n;; Example:\n;; >>> (even_odd_sum (list 1 2 3 4 5 6))\n;; (list 4 6)\n;; >>> (even_odd_sum (list 1 2 3 4 5 6 7 8 9))\n;; (list 6 10)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 2)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 2 3)\n;; >>> (even_odd_count \"123456\")\n;; (list 1 2 2 3 4)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 2 3 4 5)\n;; >>> (even_odd_count \"12345678\")\n;; (list 1 2 2 3 4 5 6)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 2 3 4 5 6 7)\n;; >>> (even_odd_count \"1234567891\")\n;; (list 1 2 2 3 4 5 6 7 8)\n;; >>> (even_odd_count \"12345678912\")\n;; (list 1 2 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count \"123456789123\")\n;; (list 1 2 2 3 4 5 6 7 8 9 12)\n;; >>> (even_odd_count \"12345678912345\")\n;; (list 1 2 2 3 4 5 6 7 8 9 12 45)\n;; >>> (even_odd_count \"123456789123456\")\n;; (list 1 2 2 3 4 5 6 7 8 9 12 45 56)\n;; >>> (even_odd_count \"1234567891234567\")\n;; (list 1 2 2 3 4 5 6 7 8 9 12 45 56 67)\n;; >>> (even_odd_count \"12345678912345678\")\n;; (list 1 2 2 3 4 5 6 7 8 9 12 45 56 67 78)\n;; >>> (even_odd_count \"123456789123456789\")\n;; (list 1 2 2 3 4 5 6 7 8 9 12 45 56 67 78 89)\n;; >>> (even_odd",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n  )\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (cons (length even) (cons (length odd) (cons even odd))))))\n\n;; Given a list of numbers. return a list of the numbers in the list that are even.\n;; Example:\n;; >>> (even_digits (list 1 2 3 4 5 6))\n;; (list 2 4)\n;; >>> (even_digits (list 1 2 3 4 5 6 7))\n;; (list 2 4 6)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 2 4 6 8)\n;; >>> (even_digits (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (if (< num 0)\n        (error \"negative numbers not supported\")\n      (let ((digit (modulo num 2)))\n        (if digit 0\n          (odd (append odd digit))\n          (even (append even digit)))))))\n  (even_odd_count num))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (cons (length even) (cons (length odd) (list even odd))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 1 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 3 2 1 2 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 3 2 1 2 2 3)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 3 2 1 2 2 3 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 3 2 1 2 2 3 2 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 3 2 1 2 2 3 2 2 3)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 3 2 1 2 2 3 2 2 3 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 3 2 1 2 2 3 2 2 3 2 3)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 3 2 1 2 2 3 2 2 3 2 3 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 1 2 3 2 1 2 2 3 2 2 3 2 3 2 3)\n;; >>> (even_",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 2 3 3 4 5 6)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 1 2 2 3 3 4 5 6 7)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i 0))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (odd (append odd (list i)))\n            (even (append even (list i)))\n          )\n          (setq i (+ i 1))\n        )\n      )\n    )\n  )\n)\n\n;; Given a list of numbers. return a list that has the number of even and odd numbers respectively.\n;; Example:\n;; >>> (even_odd_list (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_list (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 4 5 6 7 8 9 10)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i))\n            (append even (list i)))))\n      (append even odd)))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a list of integers. return a list that has the sum of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_sum (list 1 2 3 4 5 6))\n;; (list 6 10)\n;; >>> (even_odd_sum (list 1 2 3 4 5 6 7 8 9))\n;; (list 6 15)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 2 1)\n;; >>> (even",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given an integer. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count -12)\n;; (list 1 1)\n;; >>> (even_odd_count 123)\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given an integer. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count -12)\n;; (list 1 1)\n;; >>> (even_odd_count 123)\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 1 2 2 2 2 2 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list even_count odd_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list even_count odd_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i)))\n          (append even (list i))\n          (setq i (1 + i)))\n        (append odd (list num)))\n      (append even (list num))))\n  (even_odd_count num))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 2 1)\n;; >>> (even",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 2 1)\n;; >>> (even",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list odd (even odd))))\n  )\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 3 2 1)\n;; >>> (even_",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (odd_count (+ 1 odd_count))\n        (even_count (+ 1 even_count)))\n      (num (- num 1))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given an integer. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count -12)\n;; (list 1 1)\n;; >>> (even_odd_count 123)\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 1 2)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 1 2 1 2)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"12345678901\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"123456789012\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"1234567890123\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"12345678901234\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"123456789012345\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"1234567890123456\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"12345678901234567\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"123456789012345678\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i)))\n          (append even (list i))\n          (setq i (1 + i)))\n        (append odd (list num)))\n      (append even (list num)))\n    (list even odd)))\n\n;; Given a list of numbers. return a list of the numbers in the list that are even.\n;; Example:\n;; >>> (even_numbers (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 4 6 8)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of numbers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5))\n;; (list 1 2 1 2 1 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 1 2 1 2 1 2 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 2 3)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 2 3 4)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 3 4 5)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 2 3 4 5 6)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 2 3 4 5 6 7)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 2 3 4 5 6 7 8)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 2 3 4 5 6 7 8 9 10 11)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 2 3 4 5 6 7 8 9 10 11 12)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 2 3 4 5 6 7 8 9 10 11 12 13)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i))\n            (append even (list i)))))\n      (append even odd))))\n",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i 0))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (set! odd (cons i odd))\n            (set! even (cons i even))\n            (set! i (+ i 1)))\n          )\n        )\n        (return (cons even odd))))\n  )\n)\n",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 2)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 2 3)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 2 3 4)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 2 3 4 5)\n;; >>> (even_odd_count \"12345678901\")\n;; (list 1 2 2 3 4 5 6)\n;; >>> (even_odd_count \"123456789012\")\n;; (list 1 2 2 3 4 5 6 7)\n;; >>> (even_odd_count \"1234567890123\")\n;; (list 1 2 2 3 4 5 6 7 8)\n;; >>> (even_odd_count \"12345678901234\")\n;; (list 1 2 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count \"123456789012345\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count \"1234567890123456\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11)\n;; >>> (even_odd_count \"12345678901234567\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12)\n;; >>> (even_odd_count \"123456789012345678\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12 13)\n;; >>> (even_odd_count \"1234567890123456789\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14)\n;; >>> (even_odd_count \"123456789012345678901\")\n;; (list 1 2 2 3 4 5 6",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list even_count odd_count)))\n",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a list of numbers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 1 2 2 3 2 4 2 5 2 6 2 7 2 8 2 9 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 1 2 2 3 2 4 2 5 2 6 2 7 2 8 2 9 2 10 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 5 6 4 3 2 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 5 6 4 3 2 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i))\n            (append even (list i)))))\n      (append even odd)))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of numbers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (cons (length even) (cons (length odd) (cons even odd))))))\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (let ((digit (modulo num 10)))\n        (if (= digit 0)\n            (set! odd_count (+ odd_count 1))\n            (set! even_count (+ even_count 1))))\n      num (- num 1)))\n  (list even_count odd_count))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((digit (num % 10)))\n        (if (zero? digit)\n            (odd (append odd digit))\n            (even (append even digit)))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (remainder num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((digit (num % 10)))\n        (if digit = 0\n          (odd (append odd digit))\n          (even (append even digit)))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list even_count odd_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 1 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 3 2 1 2 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 2 1)\n;; >>> (even",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even? num)))\n    (let ((odd (odd? num)))\n      (list odd (even odd))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i))\n            (append even (list i)))))\n      (append even odd))))\n",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd)))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 3)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i))\n            (append even (list i)))))\n      (append even odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 2)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 2 3)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 2 3 4)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 2 3 4 5)\n;; >>> (even_odd_count \"12345678901\")\n;; (list 1 2 2 3 4 5 6)\n;; >>> (even_odd_count \"123456789012\")\n;; (list 1 2 2 3 4 5 6 7)\n;; >>> (even_odd_count \"1234567890123\")\n;; (list 1 2 2 3 4 5 6 7 8)\n;; >>> (even_odd_count \"12345678901234\")\n;; (list 1 2 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count \"123456789012345\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count \"1234567890123456\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11)\n;; >>> (even_odd_count \"12345678901234567\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12)\n;; >>> (even_odd_count \"123456789012345678\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12 13)\n;; >>> (even_odd_count \"1234567890123456789\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12 13 14)\n;; >>> (even_odd_count \"123456789012345678901\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (odd (append odd (list i)))\n            (even (append even (list i)))\n          )\n          (i (i (+ 1)))))))\n  (odd (odd (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even (even",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (cons (length even) (cons (length odd) (cons even odd))))))\n\n;; Given a list of numbers. return a list that has the sum of the numbers.\n;; Example:\n;; >>> (sum-list (list 1 2 3 4 5))\n;; (list 6)\n;; >>> (sum-list (list 1 2 3 4 5 6))\n;; (list 12)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 2)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 2 3)\n;; >>> (even_odd_count \"123456\")\n;; (list 1 2 2 3 4)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 2 3 4 5)\n;; >>> (even_odd_count \"12345678\")\n;; (list 1 2 2 3 4 5 6)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 2 3 4 5 6 7)\n;; >>> (even_odd_count \"1234567890\")\n;; (list 1 2 2 3 4 5 6 7 8)\n;; >>> (even_odd_count \"12345678901\")\n;; (list 1 2 2 3 4 5 6 7 8 1)\n;; >>> (even_odd_count \"123456789012\")\n;; (list 1 2 2 3 4 5 6 7 8 1 2)\n;; >>> (even_odd_count \"1234567890123\")\n;; (list 1 2 2 3 4 5 6 7 8 1 2 3)\n;; >>> (even_odd_count \"12345678901234\")\n;; (list 1 2 2 3 4 5 6 7 8 1 2 3 4)\n;; >>> (even_odd_count \"123456789012345\")\n;; (list 1 2 2 3 4 5 6 7 8 1 2 3 4 5)\n;; >>> (even_odd_count \"1234567890123456\")\n;; (list 1 2 2 3 4 5 6 7 8 1 2 3 4 5 6)\n;; >>> (even_odd_count \"12345678901234567\")\n;; (list 1 2 2 3 4 5 6 7 8 1 2 3 4 5 6 7)\n;; >>> (even_odd_",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 0 0)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (modulo (remainder num i) 2)\n            (append odd (list i)))\n          (append even (list i))\n          (setq i (1 + i)))))\n    (append even odd)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 2 3)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 2 3 4)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 3 4 5)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 2 3 4 5 6)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 2 3 4 5 6 7)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 2 3 4 5 6 7 8)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 2 3 4 5 6 7 8 9 10 11)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 2 3 4 5 6 7 8 9 10 11 12)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 2 3 4 5 6 7 8 9 10 11 12 13)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 5 4 3 2 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 5 4 3 2 1 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 3 2 5 4 3 2 1 2 3)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 3 2 5 4 3 2 1 2 3 4)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 3 2 5 4 3 2 1 2 3 4 5)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 3 2 5 4 3 2 1 2 3 4 5 6)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 3 2 5 4 3 2 1 2 3 4 5 6 7)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 3 2 5 4 3 2 1 2 3 4 5 6 7 8)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 3 2 5 4 3 2 1 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 3 2 5 4 3 2 1 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count '(1 2 3 4 5 6",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((digit (num % 10)))\n        (if (zero? digit)\n            (odd (append odd digit))\n            (even (append even digit))))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 3)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i 0))\n        (while (< i num)\n          (if (< (modulo i 2) 0)\n            (append odd (list 1))\n            (append even (list 0)))\n          (set! i (i + 1)))))\n    (list odd (even)))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 0 1)\n;; >>> (even_odd_count \"123\")\n;; (list 0 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 0 0)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given an integer. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count -12)\n;; (list 1 1)\n;; >>> (even_odd_count 123)\n;; (list 1 2)",
    "  (let ((n (string->number num)))\n    (let ((even (string-count \"0\" n))\n          (odd (string-count \"1\" n)))\n      (list even odd))))\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 3)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((digit (num % 10)))\n        (if digit = 0\n          (odd (append odd digit))\n          (even (append even digit)))))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>>",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((n (num)))\n        (if (< n 0)\n          (error \"negative numbers are not supported\")\n          (if (= n 0)\n            (return even)\n            (if (= n 1)\n              (return odd)\n              (let ((i 0))\n                (while (< i 10)\n                  (let ((digit (modulo n i)))\n                    (if (= digit 0)\n                      (append odd digit)\n                      (append even digit))\n                    (set! i (+ i 1)))))\n              (error \"number is too large\"))))\n        )))\n  ))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n  )\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 2 2 2 2 2 2 2 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 3)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 0 0)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((n (string->number num)))\n    (let ((even (even? n))\n          (odd (odd? n))))\n      (list even odd)))\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 1 2)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 1 2 1 2)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"12345678901\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"123456789012\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"1234567890123\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"12345678901234\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"123456789012345\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"1234567890123456\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"12345678901234567\")\n;; (list 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2)\n;; >>> (even_odd_count \"123456789012345678\")\n;; (list 1 2 1 2",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd)))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list odd (even odd))))\n  )\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 1 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 1 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 3 2 1)\n;; >>> (",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n  )\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))))\n",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd)))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 2 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 2 3)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 2 4)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 2 5)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 2 6)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 2 7)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 2 8)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 2 9)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 2 10)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 2 11)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19))\n;; (list 2 12)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20))\n;; (list 2 13)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21))\n;; (list 2 14)\n;; >>> (even_",
    "  (let ((even (even? num)))\n    (let ((odd (odd? num)))\n      (list odd (even? (sub1 num)))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (odd (append odd (list i)))\n            (even (append even (list i)))\n          )\n          (i (i + 1))\n        )\n      )\n    )\n  )\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (let ((digit (modulo num 10)))\n        (if (zero? digit)\n            (odd_count (+ odd_count 1))\n            (even_count (+ even_count 1))))\n        (num (- num 1))))\n  (list odd_count even_count))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (let ((digit (num % 10)))\n            (if (even? digit)\n              (odd (append odd digit))\n              (even (append even digit))))\n          (set! i (i + 1)))))\n    (list even odd)))\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 0 0)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list even_count odd_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i 0))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i)))\n          (append even (list i))\n          (set! i (+ i 1)))))\n    (list even odd)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (append odd (list i))\n            (append even (list i)))))\n      (append even odd)))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (let ((digit (modulo num 10)))\n        (if (even? digit)\n            (set! even_count (+ 1 even_count))\n            (set! odd_count (+ 1 odd_count)))\n        (set! num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even (even? num))\n         (odd (odd? num))))\n  (list odd (even num)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((digit (num % 10)))\n        (if digit = 0\n          (odd (append odd digit))\n          (even (append even digit))))))))\n",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (let ((digit (modulo num 10)))\n        (if (= digit 0)\n            (set! odd_count (+ odd_count 1))\n            (set! even_count (+ even_count 1)))\n        (num (- num 1)))\n      (set! even_count 0)\n      (set! odd_count 0)))\n  (list odd_count even_count))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 1 2 1 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 1 2 1 2 1 2 1 2)",
    "  (let ((even (even? num)))\n    (let ((odd (odd? num)))\n      (list odd (even num))))\n  )\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 3)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 3 4)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 3 4 5)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 3 4 5 6)\n;; >>> (even_odd_count \"12345678901\")\n;; (list 1 2 3 4 5 6 7)\n;; >>> (even_odd_count \"123456789012\")\n;; (list 1 2 3 4 5 6 7 8)\n;; >>> (even_odd_count \"1234567890123\")\n;; (list 1 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count \"12345678901234\")\n;; (list 1 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count \"123456789012345\")\n;; (list 1 2 3 4 5 6 7 8 9 10 11)\n;; >>> (even_odd_count \"1234567890123456\")\n;; (list 1 2 3 4 5 6 7 8 9 10 11 12)\n;; >>> (even_odd_count \"12345678901234567\")\n;; (list 1 2 3 4 5 6 7 8 9 10 11 12 13)\n;; >>> (even_odd_count \"123456789012345678\")\n;; (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14)\n;; >>> (even_odd_count \"1234567890123456789\")\n;; (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)\n;; >>> (even_odd_count \"123456789012345678901\")\n;; (list 1 2 3 4 5 6 7 8 9 10 11",
    "  (let ((even (even? num)))\n    (let ((odd (odd? num)))\n      (list odd (even? (sub1 num))))))\n\n;; Given a list of integers. return a list that has the number of even and odd elements respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 1 1 1)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 1 1 1 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 3 2 1 1 1 2 3)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 3 2 1 1 1 2 3 4)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 3 2 1 1 1 2 3 4 5)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 3 2 1 1 1 2 3 4 5 6)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 3 2 1 1 1 2 3 4 5 6 7)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 3 2 1 1 1 2 3 4 5 6 7 8)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 3 2 1 1 1 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 3 2 1 1 1 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i 0))\n        (while (< i num)\n          (let ((digit (num % 10)))\n            (if (even? digit)\n              (odd (append odd digit))\n              (even (append even digit))))\n          (set! i (+ i 1))))\n        (odd (reverse odd))\n        (even (reverse even))))\n  (even odd)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6))\n;; (list 1 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 3)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (odd (append odd (list i)))\n            (even (append even (list i)))\n          )\n          (setq i (1 + i))\n        )\n      )\n      (list odd (even odd))\n    )\n  )\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 2)\n;; >>> (even_odd_count \"12345\")\n;; (list 1 2 2 3)\n;; >>> (even_odd_count \"1234567\")\n;; (list 1 2 2 3 4)\n;; >>> (even_odd_count \"123456789\")\n;; (list 1 2 2 3 4 5)\n;; >>> (even_odd_count \"12345678901\")\n;; (list 1 2 2 3 4 5 6)\n;; >>> (even_odd_count \"123456789012\")\n;; (list 1 2 2 3 4 5 6 7)\n;; >>> (even_odd_count \"1234567890123\")\n;; (list 1 2 2 3 4 5 6 7 8)\n;; >>> (even_odd_count \"12345678901234\")\n;; (list 1 2 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count \"123456789012345\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count \"1234567890123456\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11)\n;; >>> (even_odd_count \"12345678901234567\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12)\n;; >>> (even_odd_count \"123456789012345678\")\n;; (list 1 2 2 3 4 5 6 7 8 9 10 11 12 13)\n;; >>> (even",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (let ((digit (modulo num 10)))\n        (if (= digit 0)\n            (set! odd_count (+ odd_count 1))\n            (set! even_count (+ even_count 1))))\n      (num (- num 1))))\n\n;; Given a list of numbers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 3 2 1 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 3 2 1 1 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 3 2 1 1 1 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 3 2 1 1 1 1 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 3 2 1 1 1 1 1 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 3 2 1 1 1 1 1 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 3 2 1 1 1 1 1 1 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 3 2 1 1 1 1 1 1 1 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i 0))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (set! odd (append odd (number->string (- i 1))))\n            (set! even (append even (number->string i)))\n            (set! i (i + 1))))))\n    (list even odd)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"abc\")\n;; (list 0 0)",
    "  (let ((even (list)))\n    (let ((odd (list)))\n      (let ((i (1)))\n        (while (< i num)\n          (if (< (modulo num i) 0)\n            (odd (append odd (list i)))\n            (even (append even (list i))))\n          (setq i (1 + i)))))\n    (list odd even)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a list of numbers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 1 2 2 3 2 3 4 2 4 5 2 5 6 2 6 7 2 7 8 2 8 9 2 9)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 1 2 2 3 2 3 4 2 4 5 2 5 6 2 6 7 2 7 8 2 8 9 2 9 10 2 10)",
    "  (let ((even (even_digits num))\n        (odd (odd_digits num)))\n    (list (length even) (length odd)))\n)\n\n;; Given a list of integers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count (list 1 2 3 4 5 6))\n;; (list 1 2 1 2 1 2)\n;; >>> (even_odd_count (list 1 2 3 4 5 6 7))\n;; (list 1 2 1 2 1 2 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1))\n        (num (- num 1))))\n    (list odd_count even_count)))\n",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (set! odd_count (+ odd_count 1))\n        (set! even_count (+ even_count 1)))\n      (set! num (- num 1)))))\n\n;; Given a list of numbers. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9))\n;; (list 1 2 3 2 1)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10))\n;; (list 1 2 3 2 1 2)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11))\n;; (list 1 2 3 2 1 2 3)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12))\n;; (list 1 2 3 2 1 2 3 4)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13))\n;; (list 1 2 3 2 1 2 3 4 5)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14))\n;; (list 1 2 3 2 1 2 3 4 5 6)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15))\n;; (list 1 2 3 2 1 2 3 4 5 6 7)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))\n;; (list 1 2 3 2 1 2 3 4 5 6 7 8)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17))\n;; (list 1 2 3 2 1 2 3 4 5 6 7 8 9)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18))\n;; (list 1 2 3 2 1 2 3 4 5 6 7 8 9 10)\n;; >>> (even_odd_count '(1 2 3 4 5 6 7 8 9 10",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd digits respectively.\n;; Example:\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)\n;; >>> (even_odd_count \"1234\")\n;; (list 1 2 1 2)",
    "  (let ((even_count 0) (odd_count 0))\n    (while (< num 0)\n      (if (< (modulo num 2) 0)\n        (odd_count (+ 1 odd_count))\n        (even_count (+ 1 even_count)))\n      (num (- num 1))))\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)",
    "  (let ((even (even_digits num)))\n    (let ((odd (odd_digits num)))\n      (list (length even) (length odd))))\n)\n\n;; Given a string. return a list that has the number of even and odd characters respectively.\n;; Example:\n;; >>> (even_odd_count \"abc\")\n;; (list 1 1)\n;; >>> (even_odd_count \"123\")\n;; (list 1 2)"
  ],
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ]
}
name: HumanEval_77_iscube
language: rkt
prompt: "#lang racket\n\n;; Write a function that takes an integer a and returns #t\
  \ \n;; if this ingeger is a cube of some integer number.\n;; Note: you may assume\
  \ the input is always valid.\n;; Examples:\n;; >>> (iscube 1)\n;; #t\n;; >>> (iscube\
  \ 2)\n;; #f\n;; >>> (iscube -1)\n;; #t\n;; >>> (iscube 64)\n;; #t\n;; >>> (iscube\
  \ 0)\n;; #t\n;; >>> (iscube 180)\n;; #f\n(define (iscube a)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate iscube))\n\
  \    (check-equal? (candidate 1) #t)\n    (check-equal? (candidate 2) #f)\n    (check-equal?\
  \ (candidate -1) #t)\n    (check-equal? (candidate 64) #t)\n    (check-equal? (candidate\
  \ 180) #f)\n    (check-equal? (candidate 1000) #t)\n    (check-equal? (candidate\
  \ 0) #t)\n    (check-equal? (candidate 1729) #f)\n))\n\n(test-humaneval)"
completions: []
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

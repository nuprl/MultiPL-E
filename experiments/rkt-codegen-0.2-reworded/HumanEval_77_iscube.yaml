name: HumanEval_77_iscube
language: rkt
prompt: "#lang racket\n\n;; Write a function that takes an integer a and returns #t\
  \ \n;; if this ingeger is a cube of some integer number.\n;; Note: you may assume\
  \ the input is always valid.\n;; Examples:\n;; >>> (iscube 1)\n;; #t\n;; >>> (iscube\
  \ 2)\n;; #f\n;; >>> (iscube -1)\n;; #t\n;; >>> (iscube 64)\n;; #t\n;; >>> (iscube\
  \ 0)\n;; #t\n;; >>> (iscube 180)\n;; #f\n(define (iscube a)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate iscube))\n\
  \    (check-equal? (candidate 1) #t)\n    (check-equal? (candidate 2) #f)\n    (check-equal?\
  \ (candidate -1) #t)\n    (check-equal? (candidate 64) #t)\n    (check-equal? (candidate\
  \ 180) #f)\n    (check-equal? (candidate 1000) #t)\n    (check-equal? (candidate\
  \ 0) #t)\n    (check-equal? (candidate 1729) #f)\n))\n\n(test-humaneval)"
completions: ["  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\
    \n;; Write a function that takes an integer a and returns #t \n;; if this ingeger\
    \ is a square of some integer number.\n;; Note: you may assume the input is always\
    \ valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n\
    ;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n\
    ;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(zero? a) #t]\n    [(zero?\
    \ (square a)) #t]\n    [#f]))\n", "  (cond\n    [(= a 0) #t]\n    [(= a 1) #t]\n\
    \    [(= a 2) #t]\n    [(= a 3) #t]\n    [(= a 4) #t]\n    [(= a 5) #t]\n    [(=\
    \ a 6) #t]\n    [(= a 7) #t]\n    [(= a 8) #t]\n    [(= a 9) #t]\n    [(= a 10)\
    \ #t]\n    [(= a 11) #t]\n    [(= a 12) #t]\n    [(= a 13) #t]\n    [(= a 14)\
    \ #t]\n    [(= a 15) #t]\n    [(= a 16) #t]\n    [(= a 17) #t]\n    [(= a 18)\
    \ #t]\n    [(= a 19) #t]\n    [(= a 20) #t]\n    [(= a 21) #t]\n    [(= a 22)\
    \ #t]\n    [(= a 23) #t]\n    [(= a 24) #t]\n    [(= a 25) #t]\n    [(= a 26)\
    \ #t]\n    [(= a 27) #t]\n    [(= a 28) #t]\n    [(= a 29) #t]\n    [(= a 30)\
    \ #t]\n    [(= a 31) #t]\n    [(= a 32) #t]\n    [(= a 33) #t]\n    [(= a 34)\
    \ #t]\n    [(= a 35) #t]\n    [(= a 36) #t]\n    [(= a 37) #t]\n    [(= a 38)\
    \ #t]\n    [(= a 39) #t]\n    [(= a 40) #t]\n    [(= a 41) #t]\n    [(= a 42)\
    \ #t]\n    [(= a 43) #t]\n    [(= a 44) #t]\n    [(= a 45) #t]\n    [", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n  \
    \  ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a (expt a 3)) #t)\n\
    \    (else #f)\n  )\n)\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a))\
    \ #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n\
    \    [#f]))\n\n;; Write a function that takes an integer a and returns #t \n;;\
    \ if this ingeger is a square of some integer number.\n;; Note: you may assume\
    \ the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>>\
    \ (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n\
    ;; >>> (issquare 0)\n;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a)\
    \ #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n\
    \    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #t)\n    ((= a 3) #t)\n   \
    \ ((= a 4) #t)\n    ((= a 5) #t)\n    ((= a 6) #t)\n    ((= a 7) #t)\n    ((=\
    \ a 8) #t)\n    ((= a 9) #t)\n    ((= a 10) #t)\n    ((= a 11) #t)\n    ((= a\
    \ 12) #t)\n    ((= a 13) #t)\n    ((= a 14) #t)\n    ((= a 15) #t)\n    ((= a\
    \ 16) #t)\n    ((= a 17) #t)\n    ((= a 18) #t)\n    ((= a 19) #t)\n    ((= a\
    \ 20) #t)\n    ((= a 21) #t)\n    ((= a 22) #t)\n    ((= a 23) #t)\n    ((= a\
    \ 24) #t)\n    ((= a 25) #t)\n    ((= a 26) #t)\n    ((= a 27) #t)\n    ((= a\
    \ 28) #t)\n    ((= a 29) #t)\n    ((= a 30) #t)\n    ((= a 31) #t)\n    ((= a\
    \ 32) #t)\n    ((= a 33) #t)\n    ((= a 34) #t)\n    ((= a 35) #t)\n    ((= a\
    \ 36) #t)\n    ((= a 37) #t)\n    ((= a 38) #t)\n    ((= a 39) #t)\n    ((= a\
    \ 40) #t)\n    ((= a 41) #t)\n    ((= a 42) #t)\n    ((= a 43) #t)\n    ((= a\
    \ 44) #t)\n    ((= a 45) #t)\n    ((= a 46) #t)\n    ((= a 47) #t)\n    ((= a\
    \ 48) #t)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a))\
    \ #t]\n    [#f]))\n\n;; Write a function that takes a string s and returns #t\
    \ \n;; if this string is a permutation of some other string.\n;; Note: you may\
    \ assume the input is always valid.\n;; Examples:\n;; >>> (ispuzzle \"\")\n;;\
    \ #t\n;; >>> (ispuzzle \"abc\")\n;; #t\n;; >>> (ispuzzle \"abcdef\")\n;; #t\n\
    ;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyz\")\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuv",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n\n;; Write a\
    \ function that takes an integer a and returns #t \n;; if this ingeger is a square\
    \ of some integer number.\n;; Note: you may assume the input is always valid.\n\
    ;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare\
    \ -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>>\
    \ (issquare 180)\n;; #f", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a))\
    \ #t]\n    [#f]))\n\n;; Write a function that takes an integer a and returns #t\
    \ \n;; if this ingeger is a square of some integer number.\n;; Note: you may assume\
    \ the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>>\
    \ (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n\
    ;; >>> (issquare 0)\n;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (mul a 3)) #t]\n    [else #f]))\n", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n\
    \    ((> a 0)\n      (and\n        (= a (* a a))\n        (= (* a a) (* a a))\n\
    \        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a)\
    \ (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n       \
    \ (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n\
    \        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a)\
    \ (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n       \
    \ (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n\
    \        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a)\
    \ (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n       \
    \ (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n\
    \        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a)\
    \ (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n       \
    \ (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n\
    \        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n        (= (* a a)\
    \ (* a a))\n        (= (* a a) (* a a))\n        (= (* a a) (* a a))\n       \
    \ (= (* a a) (* a a))\n        (= (* a a) (* a a", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function that takes an\
    \ integer a and returns #t \n;; if this ingeger is a square of some integer number.\n\
    ;; Note: you may assume the input is always valid.\n;; Examples:\n;; >>> (issquare\
    \ 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare\
    \ 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function\
    \ that takes an integer a and returns #t \n;; if this ingeger is a square of some\
    \ integer number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #f\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #f\n;; >>> (issquare\
    \ 180)\n;; #f", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n\
    \    ((= a 2) #f)\n    ((= a 3) #t)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((=\
    \ a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10)\
    \ #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14)\
    \ #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18)\
    \ #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22)\
    \ #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26)\
    \ #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30)\
    \ #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34)\
    \ #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38)\
    \ #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42)\
    \ #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46)\
    \ #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    ((=\
    \ a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3)\
    \ #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n\
    \    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n  \
    \  ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n  \
    \  ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n  \
    \  ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n  \
    \  ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n  \
    \  ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n  \
    \  ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n  \
    \  ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n  \
    \  ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n  \
    \  ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n  \
    \  ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero?\
    \ (quotient a 3)) #t]\n    [#f]))\n\n;; Write a function that takes a string s\
    \ and returns #t \n;; if this string is a permutation of some other string.\n\
    ;; Note: you may assume the input is always valid.\n;; Examples:\n;; >>> (ispuzzle\
    \ \"ab\")\n;; #t\n;; >>> (ispuzzle \"abc\")\n;; #f\n;; >>> (ispuzzle \"abcd\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcde\")\n;; #f\n;; >>> (ispuzzle \"abcdef\")\n;;\
    \ #t\n;; >>> (ispuzzle \"abcdefg\")\n;; #f\n;; >>> (ispuzzle \"abcdefgh\")\n;;\
    \ #t\n;; >>> (ispuzzle \"abcdefghi\")\n;; #f\n;; >>> (ispuzzle \"abcdefghij\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijk\")\n;; #f\n;; >>> (ispuzzle \"abcdefghijkl\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklm\")\n;; #f\n;; >>> (ispuzzle \"abcdefghijklmn\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmno\")\n;; #f\n;; >>> (ispuzzle \"abcdefghijklmnop\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopq\")\n;; #f\n;; >>> (ispuzzle \"\
    abcdefghijklmnopqr\")\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrs\")\n;; #f\n\
    ;; >>> (ispuzzle \"abcdefghijklmnopqrst\")\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstu\"\
    )\n;; #f\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuv\")\n;; #t\n;; >>> (ispuzzle\
    \ \"abcdefghijklmnopqrstuvw\")\n;; #f\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwx\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmn", "  (cond\n    [(zero? a) #t]\n \
    \   [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((=\
    \ a 1) #f)\n    ((> a 0)\n      (let ((n (sqrt a)))\n        (and\n          (=\
    \ n (* n n))\n          (= a (* n n n)))))))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (mul a a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n   \
    \ [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function that takes an integer\
    \ a and returns #t \n;; if this ingeger is a square of some integer number.\n\
    ;; Note: you may assume the input is always valid.\n;; Examples:\n;; >>> (issquare\
    \ 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare\
    \ 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (mul a a)) #t]\n    [#f]))\n", "  (cond\n   \
    \ [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (mul a a)) #t]\n    [else #f]))\n", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a)\
    \ #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((>\
    \ a 0)\n      (and\n        (= (modulo a 3) 0)\n        (= (modulo (quotient a\
    \ 3)) 0)))\n    (else #f)))\n\n;; Write a function that takes a string s and returns\
    \ #t if it is a \n;; palindrome. A palindrome is a word or phrase that is the\
    \ same forwards \n;; and backwards.\n;; Examples:\n;; >>> (ispalindrome \"madam\"\
    )\n;; #t\n;; >>> (ispalindrome \"abba\")\n;; #t\n;; >>> (ispalindrome \"a\")\n\
    ;; #t\n;; >>> (ispalindrome \"ab\")\n;; #f\n;; >>> (ispalindrome \"abcd\")\n;;\
    \ #f\n;; >>> (ispalindrome \"\")\n;; #t\n;; >>> (ispalindrome \"a \")\n;; #f\n\
    ;; >>> (ispalindrome \"a b\")\n;; #f\n;; >>> (ispalindrome \"a b c\")\n;; #f\n\
    ;; >>> (ispalindrome \"a b c d\")\n;; #f\n;; >>> (ispalindrome \"a b c d e\")\n\
    ;; #f\n;; >>> (ispalindrome \"a b c d e f\")\n;; #f\n;; >>> (ispalindrome \"a\
    \ b c d e f g\")\n;; #f\n;; >>> (ispalindrome \"a b c d e f g h\")\n;; #f\n;;\
    \ >>> (ispalindrome \"a b c d e f g h i\")\n;; #f\n;; >>> (ispalindrome \"a b\
    \ c d e f g h i j\")\n;; #f\n;; >>> (ispalindrome \"a b c d e f g h i j k\")\n\
    ;; #f\n;; >>> (ispalindrome \"a b c d e f g h i j k l\")\n;; #f\n;; >>> (ispalindrome\
    \ \"a b c d e f g h i j k l m\")\n;; #f\n;; >>> (ispalindrome \"a b c d e f g\
    \ h i j k l m n\")\n;; #f\n;; >>> (ispalindrome \"a", "  (cond\n    [(zero? a)\
    \ #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n\
    \    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n   \
    \ ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((=\
    \ a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a\
    \ 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a\
    \ 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a\
    \ 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a\
    \ 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a\
    \ 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a\
    \ 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a\
    \ 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a\
    \ 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a\
    \ 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a\
    \ 48) #f)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((=\
    \ a -1) #t)\n    ((= a 2) #t)\n    ((= a 3) #t)\n    ((= a 4) #t)\n    ((= a 5)\
    \ #t)\n    ((= a 6) #t)\n    ((= a 7) #t)\n    ((= a 8) #t)\n    ((= a 9) #t)\n\
    \    ((= a 10) #t)\n    ((= a 11) #t)\n    ((= a 12) #t)\n    ((= a 13) #t)\n\
    \    ((= a 14) #t)\n    ((= a 15) #t)\n    ((= a 16) #t)\n    ((= a 17) #t)\n\
    \    ((= a 18) #t)\n    ((= a 19) #t)\n    ((= a 20) #t)\n    ((= a 21) #t)\n\
    \    ((= a 22) #t)\n    ((= a 23) #t)\n    ((= a 24) #t)\n    ((= a 25) #t)\n\
    \    ((= a 26) #t)\n    ((= a 27) #t)\n    ((= a 28) #t)\n    ((= a 29) #t)\n\
    \    ((= a 30) #t)\n    ((= a 31) #t)\n    ((= a 32) #t)\n    ((= a 33) #t)\n\
    \    ((= a 34) #t)\n    ((= a 35) #t)\n    ((= a 36) #t)\n    ((= a 37) #t)\n\
    \    ((= a 38) #t)\n    ((= a 39) #t)\n    ((= a 40) #t)\n    ((= a 41) #t)\n\
    \    ((= a 42) #t)\n    ((= a 43) #t)\n    ((= a 44) #t)\n    ((= a 45) #t)\n\
    \    ((= a 46) #t)\n    ((= a 47) #t)\n    ((= a 48) #t)\n    ((= a 49) #", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write\
    \ a function that takes a string s and returns #t \n;; if the string is a permutation\
    \ of the digits 1 through 9.\n;; Examples:\n;; >>> (ispermutation \"\")\n;; #t\n\
    ;; >>> (ispermutation \"1\")\n;; #t\n;; >>> (ispermutation \"123\")\n;; #f\n;;\
    \ >>> (ispermutation \"123456789\")\n;; #f\n;; >>> (ispermutation \"123456789\"\
    )\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation \"\
    123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"123456789\")\n;; #t\n;; >>> (ispermutation \"123456789\")\n;; #t\n;; >>> (ispermutation\
    \ \"12345", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n  \
    \  [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n\
    \    ((= a 2) #t)\n    ((= a 3) #t)\n    ((= a 4) #t)\n    ((= a 5) #t)\n    ((=\
    \ a 6) #t)\n    ((= a 7) #t)\n    ((= a 8) #t)\n    ((= a 9) #t)\n    ((= a 10)\
    \ #t)\n    ((= a 11) #t)\n    ((= a 12) #t)\n    ((= a 13) #t)\n    ((= a 14)\
    \ #t)\n    ((= a 15) #t)\n    ((= a 16) #t)\n    ((= a 17) #t)\n    ((= a 18)\
    \ #t)\n    ((= a 19) #t)\n    ((= a 20) #t)\n    ((= a 21) #t)\n    ((= a 22)\
    \ #t)\n    ((= a 23) #t)\n    ((= a 24) #t)\n    ((= a 25) #t)\n    ((= a 26)\
    \ #t)\n    ((= a 27) #t)\n    ((= a 28) #t)\n    ((= a 29) #t)\n    ((= a 30)\
    \ #t)\n    ((= a 31) #t)\n    ((= a 32) #t)\n    ((= a 33) #t)\n    ((= a 34)\
    \ #t)\n    ((= a 35) #t)\n    ((= a 36) #t)\n    ((= a 37) #t)\n    ((= a 38)\
    \ #t)\n    ((= a 39) #t)\n    ((= a 40) #t)\n    ((= a 41) #t)\n    ((= a 42)\
    \ #t)\n    ((= a 43) #t)\n    ((= a 44) #t)\n    ((= a 45) #t)\n    ((= a 46)\
    \ #t)\n    ((= a 47) #t)\n    ((= a 48) #t)\n    ((= a 49) #", "  (cond\n    ((=\
    \ a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3)\
    \ #t)\n    ((= a 4) #f)\n    ((= a 5) #t)\n    ((= a 6) #f)\n    ((= a 7) #t)\n\
    \    ((= a 8) #f)\n    ((= a 9) #t)\n    ((= a 10) #f)\n    ((= a 11) #t)\n  \
    \  ((= a 12) #f)\n    ((= a 13) #t)\n    ((= a 14) #f)\n    ((= a 15) #t)\n  \
    \  ((= a 16) #f)\n    ((= a 17) #t)\n    ((= a 18) #f)\n    ((= a 19) #t)\n  \
    \  ((= a 20) #f)\n    ((= a 21) #t)\n    ((= a 22) #f)\n    ((= a 23) #t)\n  \
    \  ((= a 24) #f)\n    ((= a 25) #t)\n    ((= a 26) #f)\n    ((= a 27) #t)\n  \
    \  ((= a 28) #f)\n    ((= a 29) #t)\n    ((= a 30) #f)\n    ((= a 31) #t)\n  \
    \  ((= a 32) #f)\n    ((= a 33) #t)\n    ((= a 34) #f)\n    ((= a 35) #t)\n  \
    \  ((= a 36) #f)\n    ((= a 37) #t)\n    ((= a 38) #f)\n    ((= a 39) #t)\n  \
    \  ((= a 40) #f)\n    ((= a 41) #t)\n    ((= a 42) #f)\n    ((= a 43) #t)\n  \
    \  ((= a 44) #f)\n    ((= a 45) #t)\n    ((= a 46) #f)\n    ((= a 47) #t)\n  \
    \  ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero?\
    \ (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n\n;; Write a function that takes a number a and returns\
    \ \n;; the number of times that a is a cube of some integer.\n;; Note: you may\
    \ assume the input is always valid.\n;; Examples:\n;; >>> (count-cubes 1)\n;;\
    \ 0\n;; >>> (count-cubes 2)\n;; 1\n;; >>> (count-cubes -1)\n;; 1\n;; >>> (count-cubes\
    \ 64)\n;; 3\n;; >>> (count-cubes 0)\n;; 1\n;; >>> (count-cubes 180)\n;; 0", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write\
    \ a function that takes an integer a and returns #t \n;; if this ingeger is a\
    \ square of some integer number.\n;; Note: you may assume the input is always\
    \ valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n\
    ;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n\
    ;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(zero? a) #t]\n    [(zero?\
    \ (square a)) #t]\n    [#f]))\n\n;; Write a function that takes a string s and\
    \ returns #t \n;; if this string is a permutation of some string t.\n;; Note:\
    \ you may assume the input is always valid.\n;; Examples:\n;; >>> (ispuzzle \"\
    abc\")\n;; #t\n;; >>> (ispuzzle \"abcdef\")\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyz\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n;; #f\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqr",
  "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n\
    \    ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((=\
    \ a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11)\
    \ #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15)\
    \ #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19)\
    \ #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23)\
    \ #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27)\
    \ #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31)\
    \ #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35)\
    \ #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39)\
    \ #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43)\
    \ #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47)\
    \ #f)\n    ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n   \
    \ [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero?\
    \ (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient\
    \ a 3)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((=\
    \ a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5)\
    \ #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n\
    \    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n\
    \    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n\
    \    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n\
    \    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n\
    \    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n\
    \    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n\
    \    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n\
    \    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n\
    \    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n\
    \    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a 49) #", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write\
    \ a function that takes an integer a and returns #t \n;; if this ingeger is a\
    \ square of some integer number.\n;; Note: you may assume the input is always\
    \ valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n\
    ;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n\
    ;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(zero? a) #t]\n    [(zero?\
    \ (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1)\
    \ #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n\
    \    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((=\
    \ a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a\
    \ 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a\
    \ 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a\
    \ 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a\
    \ 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a\
    \ 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a\
    \ 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a\
    \ 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a\
    \ 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a\
    \ 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a\
    \ 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", " \
    \ (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a 2) #f)\n    ((= a 3) #f)\n\
    \    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((=\
    \ a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a\
    \ 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a\
    \ 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a\
    \ 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a\
    \ 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a\
    \ 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a\
    \ 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a\
    \ 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a\
    \ 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a\
    \ 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a\
    \ 48) #f)\n    ((= a 49) #f)\n    ((= a 50) #f", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (quotient a 3)) #t]\n    [#f]))\n\n;; Write a function that takes\
    \ an integer a and returns #t \n;; if this ingeger is a square of some integer\
    \ number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare\
    \ 180)\n;; #f", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a 2) #f)\n\
    \    ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((=\
    \ a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11)\
    \ #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15)\
    \ #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19)\
    \ #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23)\
    \ #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27)\
    \ #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31)\
    \ #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35)\
    \ #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39)\
    \ #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43)\
    \ #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47)\
    \ #f)\n    ((= a 48) #f)\n    ((= a 49) #f)\n    ((= a 50) #f", "  (cond\n   \
    \ ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((=\
    \ a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7)\
    \ #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n\
    \    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n\
    \    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n\
    \    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n\
    \    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n\
    \    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n\
    \    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n\
    \    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n\
    \    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n\
    \    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n\
    \    ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero?\
    \ (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n\n;; Write a function that takes an integer a and returns\
    \ #t \n;; if this ingeger is a square of some integer number.\n;; Note: you may\
    \ assume the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n\
    ;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #f\n;; >>> (issquare 64)\n\
    ;; #t\n;; >>> (issquare 0)\n;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n \
    \   [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n   \
    \ [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n\n;; Write a function\
    \ that takes a string s and returns #t \n;; if this string is a permutation of\
    \ some other string.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (ispuzzle \"ab\")\n;; #t\n;; >>> (ispuzzle \"abc\")\n;; #t\n;; >>> (ispuzzle\
    \ \"abcd\")\n;; #t\n;; >>> (ispuzzle \"abcde\")\n;; #f", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n\n;; Write a function that\
    \ takes an integer a and returns #t \n;; if this ingeger is a square of some integer\
    \ number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare\
    \ 180)\n;; #f", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n  \
    \  [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (mul a a)) #t]\n    [else #f]))\n\n;;\
    \ Write a function that takes a positive integer a and returns \n;; #t if this\
    \ integer is a perfect square of some integer number.\n;; Note: you may assume\
    \ the input is always valid.\n;; Examples:\n;; >>> (ispquare 1)\n;; #t\n;; >>>\
    \ (ispquare 2)\n;; #f\n;; >>> (ispquare -1)\n;; #f\n;; >>> (ispquare 64)\n;; #t\n\
    ;; >>> (ispquare 0)\n;; #f\n;; >>> (ispquare 180)\n;; #f", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n    ((= a\
    \ 0) #t)\n    ((= a 1) #f)\n    ((= a 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n\
    \    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((=\
    \ a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a\
    \ 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a\
    \ 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a\
    \ 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a\
    \ 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a\
    \ 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a\
    \ 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a\
    \ 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a\
    \ 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a\
    \ 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a\
    \ 49) #f)\n    ((= a 50) #f", "  (cond\n    ((= a 0) #t)\n    ((< a 0) #f)\n \
    \   ((= (modulo a 3) 0) #t)\n    ((= (modulo a 4) 0) #f)\n    ((= (modulo a 5)\
    \ 0) #t)\n    ((= (modulo a 6) 0) #f)\n    ((= (modulo a 7) 0) #t)\n    ((= (modulo\
    \ a 8) 0) #f)\n    ((= (modulo a 9) 0) #t)\n    ((= (modulo a 10) 0) #f)\n   \
    \ ((= (modulo a 11) 0) #t)\n    ((= (modulo a 12) 0) #f)\n    ((= (modulo a 13)\
    \ 0) #t)\n    ((= (modulo a 14) 0) #f)\n    ((= (modulo a 15) 0) #t)\n    ((=\
    \ (modulo a 16) 0) #f)\n    ((= (modulo a 17) 0) #t)\n    ((= (modulo a 18) 0)\
    \ #f)\n    ((= (modulo a 19) 0) #t)\n    ((= (modulo a 20) 0) #f)\n    ((= (modulo\
    \ a 21) 0) #t)\n    ((= (modulo a 22) 0) #f)\n    ((= (modulo a 23) 0) #t)\n \
    \   ((= (modulo a 24) 0) #f)\n    ((= (modulo a 25) 0) #t)\n    ((= (modulo a\
    \ 26) 0) #f)\n    ((= (modulo a 27) 0) #t)\n    ((= (modulo a 28) 0) #f)\n   \
    \ ((= (modulo a 29) 0) #t)\n    ((= (modulo a 30) 0) #f)\n    ((= (modulo a 31)\
    \ 0) #t)\n    ((= (modulo a 32) 0) #f)\n    ((= (modulo a 33) 0) #t)\n    ((=\
    \ (modulo a 34) 0) #f)\n    ((= (modulo a 35", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((=\
    \ a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #t)\n    ((= a 4)\
    \ #f)\n    ((= a 5) #t)\n    ((= a 6) #f)\n    ((= a 7) #t)\n    ((= a 8) #f)\n\
    \    ((= a 9) #t)\n    ((= a 10) #f)\n    ((= a 11) #t)\n    ((= a 12) #f)\n \
    \   ((= a 13) #t)\n    ((= a 14) #f)\n    ((= a 15) #t)\n    ((= a 16) #f)\n \
    \   ((= a 17) #t)\n    ((= a 18) #f)\n    ((= a 19) #t)\n    ((= a 20) #f)\n \
    \   ((= a 21) #t)\n    ((= a 22) #f)\n    ((= a 23) #t)\n    ((= a 24) #f)\n \
    \   ((= a 25) #t)\n    ((= a 26) #f)\n    ((= a 27) #t)\n    ((= a 28) #f)\n \
    \   ((= a 29) #t)\n    ((= a 30) #f)\n    ((= a 31) #t)\n    ((= a 32) #f)\n \
    \   ((= a 33) #t)\n    ((= a 34) #f)\n    ((= a 35) #t)\n    ((= a 36) #f)\n \
    \   ((= a 37) #t)\n    ((= a 38) #f)\n    ((= a 39) #t)\n    ((= a 40) #f)\n \
    \   ((= a 41) #t)\n    ((= a 42) #f)\n    ((= a 43) #t)\n    ((= a 44) #f)\n \
    \   ((= a 45) #t)\n    ((= a 46) #f)\n    ((= a 47) #t)\n    ((= a 48) #f)\n \
    \   ((= a 49) #", "  (cond\n    [(= a 0) #t]\n    [(= a 1) #f]\n    [(= a -1)\
    \ #t]\n    [(= a (expt a 3)) #t]\n    [#f]\n  )\n)\n", "  (cond\n    ((= a 0)\
    \ #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n\
    \    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((=\
    \ a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a\
    \ 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a\
    \ 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a\
    \ 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a\
    \ 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a\
    \ 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a\
    \ 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a\
    \ 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a\
    \ 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a\
    \ 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a\
    \ 48) #f)\n    ((= a 49) #", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n  \
    \  ((= a 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((=\
    \ a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10)\
    \ #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14)\
    \ #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18)\
    \ #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22)\
    \ #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26)\
    \ #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30)\
    \ #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34)\
    \ #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38)\
    \ #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42)\
    \ #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46)\
    \ #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a 49) #f)\n    ((= a 50)\
    \ #f", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #f]\n    [(zero?\
    \ (cube a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (mul\
    \ a a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n\n;; Write a function that takes a string s and returns\
    \ #t \n;; if the string is a permutation of some other string.\n;; Note: you may\
    \ assume the input is always valid.\n;; Examples:\n;; >>> (ispuzzle \"\")\n;;\
    \ #t\n;; >>> (ispuzzle \"abc\")\n;; #t\n;; >>> (ispuzzle \"abcdef\")\n;; #t\n\
    ;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyz\")\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyz12345\"\
    )\n;; #f\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyz1234567\")\n;; #t\n;; >>>\
    \ (ispuzzle \"abcdefghijklmnopqrstuvwxyz123456789\")\n;; #f\n;; >>> (ispuzzle\
    \ \"abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz123456789abcdef",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write\
    \ a function that takes an integer a and returns #t \n;; if this ingeger is a\
    \ square of some integer number.\n;; Note: you may assume the input is always\
    \ valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n\
    ;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n\
    ;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n    ((= a 0) #t)\n    ((< a 0)\
    \ #f)\n    ((= (modulo a 3) 0) #t)\n    ((= (modulo a 4) 0) #f)\n    ((= (modulo\
    \ a 5) 0) #t)\n    ((= (modulo a 6) 0) #f)\n    ((= (modulo a 7) 0) #t)\n    ((=\
    \ (modulo a 8) 0) #f)\n    ((= (modulo a 9) 0) #t)\n    ((= (modulo a 10) 0) #f)\n\
    \    ((= (modulo a 11) 0) #t)\n    ((= (modulo a 12) 0) #f)\n    ((= (modulo a\
    \ 13) 0) #t)\n    ((= (modulo a 14) 0) #f)\n    ((= (modulo a 15) 0) #t)\n   \
    \ ((= (modulo a 16) 0) #f)\n    ((= (modulo a 17) 0) #t)\n    ((= (modulo a 18)\
    \ 0) #f)\n    ((= (modulo a 19) 0) #t)\n    ((= (modulo a 20) 0) #f)\n    ((=\
    \ (modulo a 21) 0) #t)\n    ((= (modulo a 22) 0) #f)\n    ((= (modulo a 23) 0)\
    \ #t)\n    ((= (modulo a 24) 0) #f)\n    ((= (modulo a 25) 0) #t)\n    ((= (modulo\
    \ a 26) 0) #f)\n    ((= (modulo a 27) 0) #t)\n    ((= (modulo a 28) 0) #f)\n \
    \   ((= (modulo a 29) 0) #t)\n    ((= (modulo a 30) 0) #f)\n    ((= (modulo a\
    \ 31) 0) #t)\n    ((= (modulo a 32) 0) #f)\n    ((= (modulo a 33) 0) #t)\n   \
    \ ((= (modulo a 34) 0) #f)\n    ((= (modulo a 35", "  (cond\n    ((= a 0) #t)\n\
    \    ((< a 0) #f)\n    ((= a 1) #t)\n    ((< a 1) #f)\n    ((= a 2) #t)\n    ((<\
    \ a 2) #f)\n    ((= a 3) #t)\n    ((< a 3) #f)\n    ((= a 4) #t)\n    ((< a 4)\
    \ #f)\n    ((= a 5) #t)\n    ((< a 5) #f)\n    ((= a 6) #t)\n    ((< a 6) #f)\n\
    \    ((= a 7) #t)\n    ((< a 7) #f)\n    ((= a 8) #t)\n    ((< a 8) #f)\n    ((=\
    \ a 9) #t)\n    ((< a 9) #f)\n    ((= a 10) #t)\n    ((< a 10) #f)\n    ((= a\
    \ 11) #t)\n    ((< a 11) #f)\n    ((= a 12) #t)\n    ((< a 12) #f)\n    ((= a\
    \ 13) #t)\n    ((< a 13) #f)\n    ((= a 14) #t)\n    ((< a 14) #f)\n    ((= a\
    \ 15) #t)\n    ((< a 15) #f)\n    ((= a 16) #t)\n    ((< a 16) #f)\n    ((= a\
    \ 17) #t)\n    ((< a 17) #f)\n    ((= a 18) #t)\n    ((< a 18) #f)\n    ((= a\
    \ 19) #t)\n    ((< a 19) #f)\n    ((= a 20) #t)\n    ((< a 20) #f)\n    ((= a\
    \ 21) #t)\n    ((< a 21) #f)\n    ((= a 22) #t)\n    ((< a 22) #f)\n    ((= a\
    \ 23) #t)\n    ((< a 23) #f)\n    ((= a 24) #t)\n    ((< a 24) #f)\n    ((= a\
    \ 25) #t", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n \
    \   ((= a (expt a 3)) #t)\n    (else #f)\n  )\n)\n", "  (cond\n    ((= a 0) #t)\n\
    \    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a (expt a 3)) #t)\n    (else #f)\n\
    \  )\n)\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a 2) #f)\n \
    \   ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((=\
    \ a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11)\
    \ #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15)\
    \ #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19)\
    \ #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23)\
    \ #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27)\
    \ #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31)\
    \ #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35)\
    \ #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39)\
    \ #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43)\
    \ #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47)\
    \ #f)\n    ((= a 48) #f)\n    ((= a 49) #f)\n    ((= a 50) #f", "  (cond\n   \
    \ [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n \
    \   ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((=\
    \ a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7)\
    \ #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n\
    \    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n\
    \    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n\
    \    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n\
    \    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n\
    \    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n\
    \    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n\
    \    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n\
    \    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n\
    \    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n\
    \    ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    ((= a 0) #t)\n    ((< a 0)\
    \ #f)\n    ((= (modulo a 3) 0) #t)\n    ((= (modulo a 4) 0) #f)\n    ((= (modulo\
    \ a 5) 0) #t)\n    ((= (modulo a 6) 0) #f)\n    ((= (modulo a 7) 0) #t)\n    ((=\
    \ (modulo a 8) 0) #f)\n    ((= (modulo a 9) 0) #t)\n    ((= (modulo a 10) 0) #f)\n\
    \    ((= (modulo a 11) 0) #t)\n    ((= (modulo a 12) 0) #f)\n    ((= (modulo a\
    \ 13) 0) #t)\n    ((= (modulo a 14) 0) #f)\n    ((= (modulo a 15) 0) #t)\n   \
    \ ((= (modulo a 16) 0) #f)\n    ((= (modulo a 17) 0) #t)\n    ((= (modulo a 18)\
    \ 0) #f)\n    ((= (modulo a 19) 0) #t)\n    ((= (modulo a 20) 0) #f)\n    ((=\
    \ (modulo a 21) 0) #t)\n    ((= (modulo a 22) 0) #f)\n    ((= (modulo a 23) 0)\
    \ #t)\n    ((= (modulo a 24) 0) #f)\n    ((= (modulo a 25) 0) #t)\n    ((= (modulo\
    \ a 26) 0) #f)\n    ((= (modulo a 27) 0) #t)\n    ((= (modulo a 28) 0) #f)\n \
    \   ((= (modulo a 29) 0) #t)\n    ((= (modulo a 30) 0) #f)\n    ((= (modulo a\
    \ 31) 0) #t)\n    ((= (modulo a 32) 0) #f)\n    ((= (modulo a 33) 0) #t)\n   \
    \ ((= (modulo a 34) 0) #f)\n    ((= (modulo a 35", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function that takes an\
    \ integer a and returns #t \n;; if this ingeger is a square of some integer number.\n\
    ;; Note: you may assume the input is always valid.\n;; Examples:\n;; >>> (issquare\
    \ 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #f\n;; >>> (issquare\
    \ 64)\n;; #t\n;; >>> (issquare 0)\n;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n  \
    \  [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function\
    \ that takes an integer a and returns #t \n;; if this ingeger is a square of some\
    \ integer number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare\
    \ 180)\n;; #f", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n\
    \    ((= a 2) #t)\n    ((= a 3) #t)\n    ((= a 4) #t)\n    ((= a 5) #t)\n    ((=\
    \ a 6) #t)\n    ((= a 7) #t)\n    ((= a 8) #t)\n    ((= a 9) #t)\n    ((= a 10)\
    \ #t)\n    ((= a 11) #t)\n    ((= a 12) #t)\n    ((= a 13) #t)\n    ((= a 14)\
    \ #t)\n    ((= a 15) #t)\n    ((= a 16) #t)\n    ((= a 17) #t)\n    ((= a 18)\
    \ #t)\n    ((= a 19) #t)\n    ((= a 20) #t)\n    ((= a 21) #t)\n    ((= a 22)\
    \ #t)\n    ((= a 23) #t)\n    ((= a 24) #t)\n    ((= a 25) #t)\n    ((= a 26)\
    \ #t)\n    ((= a 27) #t)\n    ((= a 28) #t)\n    ((= a 29) #t)\n    ((= a 30)\
    \ #t)\n    ((= a 31) #t)\n    ((= a 32) #t)\n    ((= a 33) #t)\n    ((= a 34)\
    \ #t)\n    ((= a 35) #t)\n    ((= a 36) #t)\n    ((= a 37) #t)\n    ((= a 38)\
    \ #t)\n    ((= a 39) #t)\n    ((= a 40) #t)\n    ((= a 41) #t)\n    ((= a 42)\
    \ #t)\n    ((= a 43) #t)\n    ((= a 44) #t)\n    ((= a 45) #t)\n    ((= a 46)\
    \ #t)\n    ((= a 47) #t)\n    ((= a 48) #t)\n    ((= a 49) #", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a)\
    \ #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function that takes a list\
    \ of integers and returns \n;; #t if all the elements in the list are cubes of\
    \ some integer \n;; number.\n;; Note: you may assume the input is always valid.\n\
    ;; Examples:\n;; >>> (iscubes [1 2 3])\n;; #t\n;; >>> (iscubes [1 2 3 4])\n;;\
    \ #f\n;; >>> (iscubes [1 2 3 4 5])\n;; #t\n;; >>> (iscubes [1 2 3 4 5 6])\n;;\
    \ #f\n;; >>> (iscubes [1 2 3 4 5 6 7])\n;; #t\n;; >>> (iscubes [1 2 3 4 5 6 7\
    \ 8])\n;; #f\n;; >>> (iscubes [1 2 3 4 5 6 7 8 9])\n;; #t\n;; >>> (iscubes [1\
    \ 2 3 4 5 6 7 8 9 10])\n;; #f\n;; >>> (iscubes [1 2 3 4 5 6 7 8 9 10 11])\n;;\
    \ #t\n;; >>> (iscubes [1 2 3 4 5 6 7 8 9 10 11 12])\n;; #f\n;; >>> (iscubes [1\
    \ 2 3 4 5 6 7 8 9 10 11 12 13])\n;; #t\n;; >>> (iscubes [1 2 3 4 5 6 7 8 9 10\
    \ 11 12 13 14])\n;; #f\n;; >>> (iscubes [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15])\n\
    ;; #t\n;; >>> (iscubes [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16])\n;; #f\n;; >>>\
    \ (iscubes [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17])\n;; #t\n;; >>> (iscubes\
    \ [1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18])\n;; #f\n;; >>> (iscubes [1 2\
    \ 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19])\n;; #t\n;; >>> (iscubes [1 2 3\
    \ 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20])\n;; #f\n;;", "  (cond\n    ((=\
    \ a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3)\
    \ #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n\
    \    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n  \
    \  ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n  \
    \  ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n  \
    \  ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n  \
    \  ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n  \
    \  ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n  \
    \  ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n  \
    \  ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n  \
    \  ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n  \
    \  ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n  \
    \  ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    [(= a 0) #t]\n    [(= a 1) #f]\n\
    \    [(= a -1) #t]\n    [(= a (expt a 3)) #t]\n    [#f]))\n\n;; Write a function\
    \ that takes a list of integers and returns \n;; #t if the list contains a cube\
    \ of some integer number.\n;; Note: you may assume the input is always valid.\n\
    ;; Examples:\n;; >>> (iscube-list 1 2 3 4 5 6)\n;; #t\n;; >>> (iscube-list 1 2\
    \ 3 4 5 6 7)\n;; #f\n;; >>> (iscube-list 1 2 3 4 5 6 -1)\n;; #t\n;; >>> (iscube-list\
    \ 1 2 3 4 5 6 -1 -1)\n;; #t\n;; >>> (iscube-list 1 2 3 4 5 6 -1 -1 -1)\n;; #f\n\
    ;; >>> (iscube-list 1 2 3 4 5 6 -1 -1 -1 -1)\n;; #f\n;; >>> (iscube-list 1 2 3\
    \ 4 5 6 -1 -1 -1 -1 -1)\n;; #f\n;; >>> (iscube-list 1 2 3 4 5 6 -1 -1 -1 -1 -1\
    \ -1)\n;; #f\n;; >>> (iscube-list 1 2 3 4 5 6 -1 -1 -1 -1 -1 -1 -1)\n;; #f\n;;\
    \ >>> (iscube-list 1 2 3 4 5 6 -1 -1 -1 -1 -1 -1 -1 -1)\n;; #f\n;; >>> (iscube-list\
    \ 1 2 3 4 5 6 -1 -1 -1 -1 -1 -1 -1 -1 -1)\n;; #f\n;; >>> (iscube-list 1 2 3 4\
    \ 5 6 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)\n;; #f\n;; >>> (iscube-list 1 2 3 4 5 6 -1\
    \ -1 -1 -1 -1 -1 -1 -1 -1 -1 -1)\n;; #f\n;; >>> (iscube-list 1 2 3 4 5 6 -1 -1\
    \ -1 -1 -1 -1", "  (cond\n    ((= a 0) #t)\n    ((< a 0) #f)\n    ((= a 1) #t)\n\
    \    ((< a 1) #t)\n    ((= a 2) #t)\n    ((< a 2) #t)\n    ((= a 3) #t)\n    ((<\
    \ a 3) #t)\n    ((= a 4) #t)\n    ((< a 4) #t)\n    ((= a 5) #t)\n    ((< a 5)\
    \ #t)\n    ((= a 6) #t)\n    ((< a 6) #t)\n    ((= a 7) #t)\n    ((< a 7) #t)\n\
    \    ((= a 8) #t)\n    ((< a 8) #t)\n    ((= a 9) #t)\n    ((< a 9) #t)\n    ((=\
    \ a 10) #t)\n    ((< a 10) #t)\n    ((= a 11) #t)\n    ((< a 11) #t)\n    ((=\
    \ a 12) #t)\n    ((< a 12) #t)\n    ((= a 13) #t)\n    ((< a 13) #t)\n    ((=\
    \ a 14) #t)\n    ((< a 14) #t)\n    ((= a 15) #t)\n    ((< a 15) #t)\n    ((=\
    \ a 16) #t)\n    ((< a 16) #t)\n    ((= a 17) #t)\n    ((< a 17) #t)\n    ((=\
    \ a 18) #t)\n    ((< a 18) #t)\n    ((= a 19) #t)\n    ((< a 19) #t)\n    ((=\
    \ a 20) #t)\n    ((< a 20) #t)\n    ((= a 21) #t)\n    ((< a 21) #t)\n    ((=\
    \ a 22) #t)\n    ((< a 22) #t)\n    ((= a 23) #t)\n    ((< a 23) #t)\n    ((=\
    \ a 24) #t)\n    ((< a 24) #t)\n    ((= a 25) #t", "  (cond\n    ((= a 0) #t)\n\
    \    ((= a 1) #f)\n    ((> a 0)\n      (let ((p (* a a)))\n        (cond\n   \
    \       ((= p 1) #t)\n          ((= p 2) #f)\n          ((> p 1)\n           \
    \ (let ((q (* a p)))\n              (cond\n                ((= q 1) #t)\n    \
    \            ((= q 2) #f)\n                ((> q 1)\n                  (let ((r\
    \ (* a q)))\n                    (cond\n                      ((= r 1) #t)\n \
    \                     ((= r 2) #f)\n                      ((> r 1)\n         \
    \               (let ((s (* a r)))\n                          (cond\n        \
    \                    ((= s 1) #t)\n                            ((= s 2) #f)\n\
    \                            ((> s 1)\n                              (let ((t\
    \ (* a s)))\n                                (cond\n                         \
    \         ((= t 1) #t)\n                                  ((= t 2) #f)\n     \
    \                             ((> t 1)\n                                    (let\
    \ ((u (* a t)))\n                                      (cond\n               \
    \                         ((= u 1) #t)\n                                     \
    \   ((= u 2) #f)\n                                        ((> u 1)\n         \
    \                                 (let ((v (* a u)))\n                       \
    \                     (cond\n                                              ((=\
    \ v 1) #t)\n                                              ((= v 2) #f)\n     \
    \                                         ((> v 1)\n                         \
    \                       (let ((w (* a v)))\n                                 \
    \                 (cond\n                                                    ((=\
    \ w 1) #t)\n                                                    ((= w 2) #f)\n\
    \                                                    ((> w 1)\n              \
    \                                        (let ((x (* a w)))\n                \
    \                                        (cond\n                             \
    \                             ((= x 1) #t)\n                                 \
    \                         ((= x 2) #f)\n                                     \
    \                     ((> x 1)\n                                             \
    \              (let ((y (* a x)))\n                                  ", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function\
    \ that takes an integer a and returns #t \n;; if this ingeger is a square of some\
    \ integer number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare\
    \ 180)\n;; #f", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n\
    \    ((= a (expt a 3)) #t)\n    (else #f)\n  )\n)\n", "  (cond\n    ((= a 0) #t)\n\
    \    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a (expt a 3)) #t)\n    (else #f)\n\
    \  )\n)\n", "  (cond\n    ((= a 0) #t)\n    ((> a 0)\n      (let ((b (modulo a\
    \ 3)))\n        (if (= b 0)\n            #t\n            (iscube (modulo a b))))))\n\
    ))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (mul a a)) #t]\n    [else #f]))\n\n;;\
    \ Write a function that takes a string s and returns #t \n;; if this string is\
    \ a permutation of some other string.\n;; Note: you may assume the input is always\
    \ valid.\n;; Examples:\n;; >>> (ispuzzle \"\")\n;; #t\n;; >>> (ispuzzle \"abc\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyz\")\n;; #t\n;; >>> (ispuzzle\
    \ \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\")\n;; #t\n;; >>> (ispuzzle\
    \ \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrst",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (mul a a)) #t]\n    [else #f]))\n", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (mul a a)) #t]\n    [else #f]))\n", " \
    \ (cond\n    ((= a 0) #t)\n    ((< a 0) #f)\n    ((= a 1) #t)\n    ((< a 1) #t)\n\
    \    ((= a 2) #t)\n    ((< a 2) #t)\n    ((= a 3) #t)\n    ((< a 3) #t)\n    ((=\
    \ a 4) #t)\n    ((< a 4) #t)\n    ((= a 5) #t)\n    ((< a 5) #t)\n    ((= a 6)\
    \ #t)\n    ((< a 6) #t)\n    ((= a 7) #t)\n    ((< a 7) #t)\n    ((= a 8) #t)\n\
    \    ((< a 8) #t)\n    ((= a 9) #t)\n    ((< a 9) #t)\n    ((= a 10) #t)\n   \
    \ ((< a 10) #t)\n    ((= a 11) #t)\n    ((< a 11) #t)\n    ((= a 12) #t)\n   \
    \ ((< a 12) #t)\n    ((= a 13) #t)\n    ((< a 13) #t)\n    ((= a 14) #t)\n   \
    \ ((< a 14) #t)\n    ((= a 15) #t)\n    ((< a 15) #t)\n    ((= a 16) #t)\n   \
    \ ((< a 16) #t)\n    ((= a 17) #t)\n    ((< a 17) #t)\n    ((= a 18) #t)\n   \
    \ ((< a 18) #t)\n    ((= a 19) #t)\n    ((< a 19) #t)\n    ((= a 20) #t)\n   \
    \ ((< a 20) #t)\n    ((= a 21) #t)\n    ((< a 21) #t)\n    ((= a 22) #t)\n   \
    \ ((< a 22) #t)\n    ((= a 23) #t)\n    ((< a 23) #t)\n    ((= a 24) #t)\n   \
    \ ((< a 24) #t)\n    ((= a 25) #t", "  (cond\n    [(zero? a) #t]\n    [(zero?\
    \ (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (mul a a))\
    \ #t]\n    [else #f]))\n\n;; Write a function that takes an integer a and returns\
    \ #t \n;; if this ingeger is a square of some integer number.\n;; Note: you may\
    \ assume the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n\
    ;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n\
    ;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n \
    \   [(= a 0) #t]\n    [(= a 1) #t]\n    [(= a 2) #t]\n    [(= a 3) #t]\n    [(=\
    \ a 4) #t]\n    [(= a 5) #t]\n    [(= a 6) #t]\n    [(= a 7) #t]\n    [(= a 8)\
    \ #t]\n    [(= a 9) #t]\n    [(= a 10) #t]\n    [(= a 11) #t]\n    [(= a 12) #t]\n\
    \    [(= a 13) #t]\n    [(= a 14) #t]\n    [(= a 15) #t]\n    [(= a 16) #t]\n\
    \    [(= a 17) #t]\n    [(= a 18) #t]\n    [(= a 19) #t]\n    [(= a 20) #t]\n\
    \    [(= a 21) #t]\n    [(= a 22) #t]\n    [(= a 23) #t]\n    [(= a 24) #t]\n\
    \    [(= a 25) #t]\n    [(= a 26) #t]\n    [(= a 27) #t]\n    [(= a 28) #t]\n\
    \    [(= a 29) #t]\n    [(= a 30) #t]\n    [(= a 31) #t]\n    [(= a 32) #t]\n\
    \    [(= a 33) #t]\n    [(= a 34) #t]\n    [(= a 35) #t]\n    [(= a 36) #t]\n\
    \    [(= a 37) #t]\n    [(= a 38) #t]\n    [(= a 39) #t]\n    [(= a 40) #t]\n\
    \    [(= a 41) #t]\n    [(= a 42) #t]\n    [(= a 43) #t]\n    [(= a 44) #t]\n\
    \    [(= a 45) #t]\n    [", "  (cond\n    [(zero? a) #t]\n    [(zero? (mul a a))\
    \ #t]\n    [else #f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((>\
    \ a 0)\n      (let ((b (sqrt a)))\n        (cond\n          ((= b 1) #t)\n   \
    \       ((= b 2) #f)\n          ((= b 3) #t)\n          ((= b 4) #f)\n       \
    \   ((= b 5) #t)\n          ((= b 6) #f)\n          ((= b 7) #t)\n          ((=\
    \ b 8) #f)\n          ((= b 9) #t)\n          ((= b 10) #f)\n          ((= b 11)\
    \ #t)\n          ((= b 12) #f)\n          ((= b 13) #t)\n          ((= b 14) #f)\n\
    \          ((= b 15) #t)\n          ((= b 16) #f)\n          ((= b 17) #t)\n \
    \         ((= b 18) #f)\n          ((= b 19) #t)\n          ((= b 20) #f)\n  \
    \        ((= b 21) #t)\n          ((= b 22) #f)\n          ((= b 23) #t)\n   \
    \       ((= b 24) #f)\n          ((= b 25) #t)\n          ((= b 26) #f)\n    \
    \      ((= b 27) #t)\n          ((= b 28) #f)\n          ((= b 29) #t)\n     \
    \     ((= b 30) #f)\n          ((= b 31) #t)\n          ((= b 32) #f)\n      \
    \    ((= b 33) #t)\n          ((= b 34) #f)\n          ((= b 35) #t)\n       \
    \   ((= b 36) #f)\n          ((= b 37) #t)\n          ((= b 38) #f)\n        \
    \  ((= b 39) #t)\n          ((= b 40) #f)\n          ((= b 41) #t)\n         \
    \ ((= b 42) #f)\n          ((= b 43) #t)\n          ((= b 44) #f)\n          ((=\
    \ b 45) #t)\n          ((= b 46) #f)\n          ((= b 47)", "  (cond\n    ((=\
    \ a 0) #t)\n    ((> a 0)\n      (let ((i (floor a)))\n        (and\n         \
    \ (= i (* i i))\n          (= (mod a i) 0))))))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n\
    \    ((< a 0) #f)\n    ((= a 1) #t)\n    ((< a 1) #t)\n    ((= a 2) #t)\n    ((<\
    \ a 2) #t)\n    ((= a 3) #t)\n    ((< a 3) #t)\n    ((= a 4) #t)\n    ((< a 4)\
    \ #t)\n    ((= a 5) #t)\n    ((< a 5) #t)\n    ((= a 6) #t)\n    ((< a 6) #t)\n\
    \    ((= a 7) #t)\n    ((< a 7) #t)\n    ((= a 8) #t)\n    ((< a 8) #t)\n    ((=\
    \ a 9) #t)\n    ((< a 9) #t)\n    ((= a 10) #t)\n    ((< a 10) #t)\n    ((= a\
    \ 11) #t)\n    ((< a 11) #t)\n    ((= a 12) #t)\n    ((< a 12) #t)\n    ((= a\
    \ 13) #t)\n    ((< a 13) #t)\n    ((= a 14) #t)\n    ((< a 14) #t)\n    ((= a\
    \ 15) #t)\n    ((< a 15) #t)\n    ((= a 16) #t)\n    ((< a 16) #t)\n    ((= a\
    \ 17) #t)\n    ((< a 17) #t)\n    ((= a 18) #t)\n    ((< a 18) #t)\n    ((= a\
    \ 19) #t)\n    ((< a 19) #t)\n    ((= a 20) #t)\n    ((< a 20) #t)\n    ((= a\
    \ 21) #t)\n    ((< a 21) #t)\n    ((= a 22) #t)\n    ((< a 22) #t)\n    ((= a\
    \ 23) #t)\n    ((< a 23) #t)\n    ((= a 24) #t)\n    ((< a 24) #t)\n    ((= a\
    \ 25) #t", "  (cond\n    ((= a 0) #t)\n    ((< a 0) #f)\n    ((= a 1) #t)\n  \
    \  ((< a 1) #f)\n    ((= a 2) #t)\n    ((< a 2) #f)\n    ((= a 3) #t)\n    ((<\
    \ a 3) #f)\n    ((= a 4) #t)\n    ((< a 4) #f)\n    ((= a 5) #t)\n    ((< a 5)\
    \ #f)\n    ((= a 6) #t)\n    ((< a 6) #f)\n    ((= a 7) #t)\n    ((< a 7) #f)\n\
    \    ((= a 8) #t)\n    ((< a 8) #f)\n    ((= a 9) #t)\n    ((< a 9) #f)\n    ((=\
    \ a 10) #t)\n    ((< a 10) #f)\n    ((= a 11) #t)\n    ((< a 11) #f)\n    ((=\
    \ a 12) #t)\n    ((< a 12) #f)\n    ((= a 13) #t)\n    ((< a 13) #f)\n    ((=\
    \ a 14) #t)\n    ((< a 14) #f)\n    ((= a 15) #t)\n    ((< a 15) #f)\n    ((=\
    \ a 16) #t)\n    ((< a 16) #f)\n    ((= a 17) #t)\n    ((< a 17) #f)\n    ((=\
    \ a 18) #t)\n    ((< a 18) #f)\n    ((= a 19) #t)\n    ((< a 19) #f)\n    ((=\
    \ a 20) #t)\n    ((< a 20) #f)\n    ((= a 21) #t)\n    ((< a 21) #f)\n    ((=\
    \ a 22) #t)\n    ((< a 22) #f)\n    ((= a 23) #t)\n    ((< a 23) #f)\n    ((=\
    \ a 24) #t)\n    ((< a 24) #f)\n    ((= a 25) #t", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (mul a a)) #t]\n    [else #f]))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n  \
    \  [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (mul a a)) #t]\n    [else #f]))\n\n;; Write a function that takes\
    \ an integer a and returns #t \n;; if this ingeger is a square of some integer\
    \ number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #f\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #f\n;; >>> (issquare\
    \ 180)\n;; #f", "  (cond\n    [(= a 0) #t]\n    [(= a 1) #t]\n    [(= a 2) #t]\n\
    \    [(= a 3) #t]\n    [(= a 4) #t]\n    [(= a 5) #t]\n    [(= a 6) #t]\n    [(=\
    \ a 7) #t]\n    [(= a 8) #t]\n    [(= a 9) #t]\n    [(= a 10) #t]\n    [(= a 11)\
    \ #t]\n    [(= a 12) #t]\n    [(= a 13) #t]\n    [(= a 14) #t]\n    [(= a 15)\
    \ #t]\n    [(= a 16) #t]\n    [(= a 17) #t]\n    [(= a 18) #t]\n    [(= a 19)\
    \ #t]\n    [(= a 20) #t]\n    [(= a 21) #t]\n    [(= a 22) #t]\n    [(= a 23)\
    \ #t]\n    [(= a 24) #t]\n    [(= a 25) #t]\n    [(= a 26) #t]\n    [(= a 27)\
    \ #t]\n    [(= a 28) #t]\n    [(= a 29) #t]\n    [(= a 30) #t]\n    [(= a 31)\
    \ #t]\n    [(= a 32) #t]\n    [(= a 33) #t]\n    [(= a 34) #t]\n    [(= a 35)\
    \ #t]\n    [(= a 36) #t]\n    [(= a 37) #t]\n    [(= a 38) #t]\n    [(= a 39)\
    \ #t]\n    [(= a 40) #t]\n    [(= a 41) #t]\n    [(= a 42) #t]\n    [(= a 43)\
    \ #t]\n    [(= a 44) #t]\n    [(= a 45) #t]\n    [", "  (cond\n    ((= a 0) #t)\n\
    \    ((= a 1) #f)\n    ((> a 0)\n      (let ((p (modulo a 3)))\n        (cond\n\
    \          ((= p 0) #t)\n          ((= p 1) #f)\n          ((= p 2) #t)\n    \
    \      (else #f))))))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((=\
    \ a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5)\
    \ #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n\
    \    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n\
    \    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n\
    \    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n\
    \    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n\
    \    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n\
    \    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n\
    \    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n\
    \    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n\
    \    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n\
    \    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a 49) #", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n\
    \    ((= a 0) #t)\n    ((> a 0)\n      (let ((n (floor a)))\n        (and\n  \
    \        (= n (* n n))\n          (= (mod a n) 0))))))\n", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a)\
    \ #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n\
    \    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n   \
    \ ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((=\
    \ a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a\
    \ 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a\
    \ 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a\
    \ 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a\
    \ 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a\
    \ 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a\
    \ 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a\
    \ 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a\
    \ 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a\
    \ 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a\
    \ 48) #f)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient\
    \ a 3)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n\n;; Write a function that takes an integer a and returns\
    \ #t \n;; if this ingeger is a square of some integer number.\n;; Note: you may\
    \ assume the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n\
    ;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n\
    ;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n \
    \   ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a 2) #f)\n    ((= a 3) #f)\n    ((=\
    \ a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((= a 8)\
    \ #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n\
    \    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n\
    \    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n\
    \    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n\
    \    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n\
    \    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n\
    \    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n\
    \    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n\
    \    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n\
    \    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n\
    \    ((= a 49) #f)\n    ((= a 50) #f", "  (cond\n    ((= a 0) #t)\n    ((= a 1)\
    \ #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n\
    \    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((=\
    \ a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a\
    \ 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a\
    \ 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a\
    \ 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a\
    \ 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a\
    \ 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a\
    \ 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a\
    \ 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a\
    \ 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a\
    \ 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a\
    \ 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero? (mul a a)) #t]\n    [else\
    \ #f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a 2) #f)\n \
    \   ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((=\
    \ a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11)\
    \ #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15)\
    \ #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19)\
    \ #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23)\
    \ #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27)\
    \ #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31)\
    \ #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35)\
    \ #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39)\
    \ #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43)\
    \ #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47)\
    \ #f)\n    ((= a 48) #f)\n    ((= a 49) #f)\n    ((= a 50) #f", "  (cond\n   \
    \ ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((=\
    \ a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7)\
    \ #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n\
    \    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n\
    \    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n\
    \    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n\
    \    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n\
    \    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n\
    \    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n\
    \    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n\
    \    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n\
    \    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n\
    \    ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    [(= a 0) #t]\n    [(= a 1)\
    \ #f]\n    [(= a 2) #t]\n    [(= a 3) #t]\n    [(= a 4) #t]\n    [(= a 5) #t]\n\
    \    [(= a 6) #t]\n    [(= a 7) #t]\n    [(= a 8) #t]\n    [(= a 9) #t]\n    [(=\
    \ a 10) #t]\n    [(= a 11) #t]\n    [(= a 12) #t]\n    [(= a 13) #t]\n    [(=\
    \ a 14) #t]\n    [(= a 15) #t]\n    [(= a 16) #t]\n    [(= a 17) #t]\n    [(=\
    \ a 18) #t]\n    [(= a 19) #t]\n    [(= a 20) #t]\n    [(= a 21) #t]\n    [(=\
    \ a 22) #t]\n    [(= a 23) #t]\n    [(= a 24) #t]\n    [(= a 25) #t]\n    [(=\
    \ a 26) #t]\n    [(= a 27) #t]\n    [(= a 28) #t]\n    [(= a 29) #t]\n    [(=\
    \ a 30) #t]\n    [(= a 31) #t]\n    [(= a 32) #t]\n    [(= a 33) #t]\n    [(=\
    \ a 34) #t]\n    [(= a 35) #t]\n    [(= a 36) #t]\n    [(= a 37) #t]\n    [(=\
    \ a 38) #t]\n    [(= a 39) #t]\n    [(= a 40) #t]\n    [(= a 41) #t]\n    [(=\
    \ a 42) #t]\n    [(= a 43) #t]\n    [(= a 44) #t]\n    [(= a 45) #t]\n    [",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n\
    \    ((= a 0) #t)\n    ((< a 0) #f)\n    ((= a 1) #t)\n    ((< a 1) #f)\n    ((=\
    \ a 2) #t)\n    ((< a 2) #f)\n    ((= a 3) #t)\n    ((< a 3) #f)\n    ((= a 4)\
    \ #t)\n    ((< a 4) #f)\n    ((= a 5) #t)\n    ((< a 5) #f)\n    ((= a 6) #t)\n\
    \    ((< a 6) #f)\n    ((= a 7) #t)\n    ((< a 7) #f)\n    ((= a 8) #t)\n    ((<\
    \ a 8) #f)\n    ((= a 9) #t)\n    ((< a 9) #f)\n    ((= a 10) #t)\n    ((< a 10)\
    \ #f)\n    ((= a 11) #t)\n    ((< a 11) #f)\n    ((= a 12) #t)\n    ((< a 12)\
    \ #f)\n    ((= a 13) #t)\n    ((< a 13) #f)\n    ((= a 14) #t)\n    ((< a 14)\
    \ #f)\n    ((= a 15) #t)\n    ((< a 15) #f)\n    ((= a 16) #t)\n    ((< a 16)\
    \ #f)\n    ((= a 17) #t)\n    ((< a 17) #f)\n    ((= a 18) #t)\n    ((< a 18)\
    \ #f)\n    ((= a 19) #t)\n    ((< a 19) #f)\n    ((= a 20) #t)\n    ((< a 20)\
    \ #f)\n    ((= a 21) #t)\n    ((< a 21) #f)\n    ((= a 22) #t)\n    ((< a 22)\
    \ #f)\n    ((= a 23) #t)\n    ((< a 23) #f)\n    ((= a 24) #t)\n    ((< a 24)\
    \ #f)\n    ((= a 25) #t", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a))\
    \ #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a\
    \ 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n\
    \    ((= a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n   \
    \ ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n   \
    \ ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n   \
    \ ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n   \
    \ ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n   \
    \ ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n   \
    \ ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n   \
    \ ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n   \
    \ ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n   \
    \ ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n   \
    \ ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a 49) #f)\n    ((= a 50) #f", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n\n;; Write a\
    \ function that takes an integer a and returns #t \n;; if this ingeger is a square\
    \ of some integer number.\n;; Note: you may assume the input is always valid.\n\
    ;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare\
    \ -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>>\
    \ (issquare 180)\n;; #f", "  (cond\n    [(zero? a) #t]\n    [(zero? (mul a a))\
    \ #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #f]\n\
    \    [(zero? (square (square a))) #t]\n    [#f]))\n\n;; Write a function that\
    \ takes an integer a and returns #t \n;; if this ingeger is a square of some integer\
    \ number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare\
    \ 180)\n;; #f", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n  \
    \  [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n\
    \    ((= a (expt a 3)) #t)\n    (else #f)\n  )\n)\n", "  (cond\n    [(zero? a)\
    \ #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n\
    \    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n  \
    \  [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((=\
    \ a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #t)\n    ((= a 4)\
    \ #f)\n    ((= a 5) #t)\n    ((= a 6) #f)\n    ((= a 7) #t)\n    ((= a 8) #f)\n\
    \    ((= a 9) #t)\n    ((= a 10) #f)\n    ((= a 11) #t)\n    ((= a 12) #f)\n \
    \   ((= a 13) #t)\n    ((= a 14) #f)\n    ((= a 15) #t)\n    ((= a 16) #f)\n \
    \   ((= a 17) #t)\n    ((= a 18) #f)\n    ((= a 19) #t)\n    ((= a 20) #f)\n \
    \   ((= a 21) #t)\n    ((= a 22) #f)\n    ((= a 23) #t)\n    ((= a 24) #f)\n \
    \   ((= a 25) #t)\n    ((= a 26) #f)\n    ((= a 27) #t)\n    ((= a 28) #f)\n \
    \   ((= a 29) #t)\n    ((= a 30) #f)\n    ((= a 31) #t)\n    ((= a 32) #f)\n \
    \   ((= a 33) #t)\n    ((= a 34) #f)\n    ((= a 35) #t)\n    ((= a 36) #f)\n \
    \   ((= a 37) #t)\n    ((= a 38) #f)\n    ((= a 39) #t)\n    ((= a 40) #f)\n \
    \   ((= a 41) #t)\n    ((= a 42) #f)\n    ((= a 43) #t)\n    ((= a 44) #f)\n \
    \   ((= a 45) #t)\n    ((= a 46) #f)\n    ((= a 47) #t)\n    ((= a 48) #f)\n \
    \   ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n\
    \    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n  \
    \  [#f]))\n\n;; Write a function that takes an integer a and returns #t \n;; if\
    \ this ingeger is a square of some integer number.\n;; Note: you may assume the\
    \ input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare\
    \ 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>>\
    \ (issquare 0)\n;; #t\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(zero? a)\
    \ #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0)\
    \ #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n\
    \    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((=\
    \ a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a\
    \ 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a\
    \ 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a\
    \ 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a\
    \ 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a\
    \ 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a\
    \ 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a\
    \ 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a\
    \ 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a\
    \ 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a\
    \ 48) #f)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a))\
    \ #t]\n    [#f]))\n\n;; Write a function that takes an integer a and returns #t\
    \ \n;; if this ingeger is a square of some integer number.\n;; Note: you may assume\
    \ the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>>\
    \ (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #f\n;; >>> (issquare 64)\n;; #t\n\
    ;; >>> (issquare 0)\n;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n    ((= a\
    \ 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3)\
    \ #t)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n\
    \    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n  \
    \  ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n  \
    \  ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n  \
    \  ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n  \
    \  ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n  \
    \  ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n  \
    \  ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n  \
    \  ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n  \
    \  ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n  \
    \  ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n  \
    \  ((= a 48) #f)\n    ((= a 49) #", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n\
    \    ((= a 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n    ((=\
    \ a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((= a 10)\
    \ #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((= a 14)\
    \ #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((= a 18)\
    \ #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((= a 22)\
    \ #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((= a 26)\
    \ #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((= a 30)\
    \ #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((= a 34)\
    \ #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((= a 38)\
    \ #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((= a 42)\
    \ #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((= a 46)\
    \ #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a 49) #f)\n    ((= a 50)\
    \ #f", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #f]\n    [(zero?\
    \ (cube a)) #t]\n    [#f]))\n\n;; Write a function that takes an integer a and\
    \ returns #t \n;; if this ingeger is a square of some integer number.\n;; Note:\
    \ you may assume the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n\
    ;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #f\n;; >>> (issquare\
    \ 64)\n;; #t\n;; >>> (issquare 0)\n;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n  \
    \  ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a (expt a 3)) #t)\n\
    \    (else #f)\n  )\n)\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a))\
    \ #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n\
    \    [#f]))\n\n;; Write a function that takes an integer a and returns #t \n;;\
    \ if this ingeger is a square of some integer number.\n;; Note: you may assume\
    \ the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>>\
    \ (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n\
    ;; >>> (issquare 0)\n;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(= a\
    \ 0) #t]\n    [(= a 1) #f]\n    [(> a 0)\n      (let ((n (floor a)))\n       \
    \ (and\n          (= n (* n n))\n          (= (mod a n) 0)))\n      #t]\n    [#f]))\n",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write\
    \ a function that takes a string and returns #t \n;; if this string is a permutation\
    \ of some other string.\n;; Note: you may assume the input is always valid.\n\
    ;; Examples:\n;; >>> (ispuzzle \"\")\n;; #t\n;; >>> (ispuzzle \"abc\")\n;; #t\n\
    ;; >>> (ispuzzle \"abcdef\")\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyz\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n;; #f\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\
    )\n;; #t\n;; >>> (ispuzzle \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write\
    \ a function that takes an integer a and returns #t \n;; if this ingeger is a\
    \ square of some integer number.\n;; Note: you may assume the input is always\
    \ valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n\
    ;; >>> (issquare -1)\n;; #f\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n\
    ;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n    ((= a 0) #t)\n    ((= a 1)\
    \ #f)\n    ((= a 2) #f)\n    ((= a 3) #f)\n    ((= a 4) #f)\n    ((= a 5) #f)\n\
    \    ((= a 6) #f)\n    ((= a 7) #f)\n    ((= a 8) #f)\n    ((= a 9) #f)\n    ((=\
    \ a 10) #f)\n    ((= a 11) #f)\n    ((= a 12) #f)\n    ((= a 13) #f)\n    ((=\
    \ a 14) #f)\n    ((= a 15) #f)\n    ((= a 16) #f)\n    ((= a 17) #f)\n    ((=\
    \ a 18) #f)\n    ((= a 19) #f)\n    ((= a 20) #f)\n    ((= a 21) #f)\n    ((=\
    \ a 22) #f)\n    ((= a 23) #f)\n    ((= a 24) #f)\n    ((= a 25) #f)\n    ((=\
    \ a 26) #f)\n    ((= a 27) #f)\n    ((= a 28) #f)\n    ((= a 29) #f)\n    ((=\
    \ a 30) #f)\n    ((= a 31) #f)\n    ((= a 32) #f)\n    ((= a 33) #f)\n    ((=\
    \ a 34) #f)\n    ((= a 35) #f)\n    ((= a 36) #f)\n    ((= a 37) #f)\n    ((=\
    \ a 38) #f)\n    ((= a 39) #f)\n    ((= a 40) #f)\n    ((= a 41) #f)\n    ((=\
    \ a 42) #f)\n    ((= a 43) #f)\n    ((= a 44) #f)\n    ((= a 45) #f)\n    ((=\
    \ a 46) #f)\n    ((= a 47) #f)\n    ((= a 48) #f)\n    ((= a 49) #f)\n    ((=\
    \ a 50) #f", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n \
    \   [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n\
    \    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n\
    \    [#f]))\n", "  (cond\n    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n\
    \    ((= a 2) #t)\n    ((= a 3) #t)\n    ((= a 4) #t)\n    ((= a 5) #t)\n    ((=\
    \ a 6) #t)\n    ((= a 7) #t)\n    ((= a 8) #t)\n    ((= a 9) #t)\n    ((= a 10)\
    \ #t)\n    ((= a 11) #t)\n    ((= a 12) #t)\n    ((= a 13) #t)\n    ((= a 14)\
    \ #t)\n    ((= a 15) #t)\n    ((= a 16) #t)\n    ((= a 17) #t)\n    ((= a 18)\
    \ #t)\n    ((= a 19) #t)\n    ((= a 20) #t)\n    ((= a 21) #t)\n    ((= a 22)\
    \ #t)\n    ((= a 23) #t)\n    ((= a 24) #t)\n    ((= a 25) #t)\n    ((= a 26)\
    \ #t)\n    ((= a 27) #t)\n    ((= a 28) #t)\n    ((= a 29) #t)\n    ((= a 30)\
    \ #t)\n    ((= a 31) #t)\n    ((= a 32) #t)\n    ((= a 33) #t)\n    ((= a 34)\
    \ #t)\n    ((= a 35) #t)\n    ((= a 36) #t)\n    ((= a 37) #t)\n    ((= a 38)\
    \ #t)\n    ((= a 39) #t)\n    ((= a 40) #t)\n    ((= a 41) #t)\n    ((= a 42)\
    \ #t)\n    ((= a 43) #t)\n    ((= a 44) #t)\n    ((= a 45) #t)\n    ((= a 46)\
    \ #t)\n    ((= a 47) #t)\n    ((= a 48) #t)\n    ((= a 49) #", "  (cond\n    [(zero?\
    \ a) #t]\n    [(zero? (square a)) #f]\n    [(zero? (cube a)) #t]\n  ))\n", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", "  (cond\n\
    \    ((= a 0) #t)\n    ((= a 1) #f)\n    ((= a -1) #t)\n    ((> a 0)\n      (let\
    \ ((n (sqrt a)))\n        (and (>= n 3) (<= n 9))))\n    (else #f)\n  )\n)\n",
  "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n    [#f]))\n", " \
    \ (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n\
    \    [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function\
    \ that takes an integer a and returns #t \n;; if this ingeger is a square of some\
    \ integer number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare\
    \ 180)\n;; #f", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n  \
    \  [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient a 3)) #t]\n\
    \    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square a)) #t]\n  \
    \  [#f]))\n\n;; Write a function that takes an integer a and returns #t \n;; if\
    \ this ingeger is a square of some integer number.\n;; Note: you may assume the\
    \ input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n;; >>> (issquare\
    \ 2)\n;; #f\n;; >>> (issquare -1)\n;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>>\
    \ (issquare 0)\n;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n    [(zero? a)\
    \ #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n    ((= a 0) #t)\n\
    \    ((= a 1) #f)\n    ((= a -1) #t)\n    ((= a 2) #f)\n    ((= a 3) #f)\n   \
    \ ((= a 4) #f)\n    ((= a 5) #f)\n    ((= a 6) #f)\n    ((= a 7) #f)\n    ((=\
    \ a 8) #f)\n    ((= a 9) #f)\n    ((= a 10) #f)\n    ((= a 11) #f)\n    ((= a\
    \ 12) #f)\n    ((= a 13) #f)\n    ((= a 14) #f)\n    ((= a 15) #f)\n    ((= a\
    \ 16) #f)\n    ((= a 17) #f)\n    ((= a 18) #f)\n    ((= a 19) #f)\n    ((= a\
    \ 20) #f)\n    ((= a 21) #f)\n    ((= a 22) #f)\n    ((= a 23) #f)\n    ((= a\
    \ 24) #f)\n    ((= a 25) #f)\n    ((= a 26) #f)\n    ((= a 27) #f)\n    ((= a\
    \ 28) #f)\n    ((= a 29) #f)\n    ((= a 30) #f)\n    ((= a 31) #f)\n    ((= a\
    \ 32) #f)\n    ((= a 33) #f)\n    ((= a 34) #f)\n    ((= a 35) #f)\n    ((= a\
    \ 36) #f)\n    ((= a 37) #f)\n    ((= a 38) #f)\n    ((= a 39) #f)\n    ((= a\
    \ 40) #f)\n    ((= a 41) #f)\n    ((= a 42) #f)\n    ((= a 43) #f)\n    ((= a\
    \ 44) #f)\n    ((= a 45) #f)\n    ((= a 46) #f)\n    ((= a 47) #f)\n    ((= a\
    \ 48) #f)\n    ((= a 49) #", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (quotient\
    \ a 3)) #t]\n    [#f]))\n", "  (cond\n    [(zero? a) #t]\n    [(zero? (square\
    \ a)) #f]\n    [else #f]))\n\n;; Write a function that takes a number a and returns\
    \ #t \n;; if this number is a square of some integer number.\n;; Note: you may\
    \ assume the input is always valid.\n;; Examples:\n;; >>> (issquare 1)\n;; #t\n\
    ;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n;; #f\n;; >>> (issquare 64)\n\
    ;; #t\n;; >>> (issquare 0)\n;; #f\n;; >>> (issquare 180)\n;; #f", "  (cond\n \
    \   [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n", "  (cond\n   \
    \ [(zero? a) #t]\n    [(zero? (square a)) #t]\n    [#f]))\n\n;; Write a function\
    \ that takes an integer a and returns #t \n;; if this ingeger is a square of some\
    \ integer number.\n;; Note: you may assume the input is always valid.\n;; Examples:\n\
    ;; >>> (issquare 1)\n;; #t\n;; >>> (issquare 2)\n;; #f\n;; >>> (issquare -1)\n\
    ;; #t\n;; >>> (issquare 64)\n;; #t\n;; >>> (issquare 0)\n;; #t\n;; >>> (issquare\
    \ 180)\n;; #f"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

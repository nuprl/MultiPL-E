{
  "name": "HumanEval_4_mean_absolute_deviation",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; For a given list of input numbers, calculate Mean Absolute Deviation\n;; around the mean of this dataset.\n;; Mean Absolute Deviation is the average absolute difference between each\n;; element and a centerpoint (mean in this case):\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n(define (mean_absolute_deviation numbers)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate mean_absolute_deviation))\n    (check-equal? (candidate (list 1.0 2.0)) 0.5)\n    (check-equal? (candidate (list 1.0 2.0 3.0 4.0)) 1.0)\n    (check-equal? (candidate (list 1.0 2.0 3.0 4.0 5.0)) 1.2)\n))\n\n(test-humaneval)",
  "completions": [
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-list-length (length numbers-list)))\n      (let ((mean (mean numbers-list))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average deviations))))\n)\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; The median is the number that has exactly the same number of entries\n;; in this dataset as the number of elements in the dataset.\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n      (average deviations)\n    )\n  )\n)\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (deviations x)) numbers)))\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0))\n;; 4.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0))\n;; 5.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0))\n;; 7.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))\n;; 8.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 10.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0))\n;; 11.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 12.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0))\n;; 13.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from a\n;; centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (- x numbers[0])) numbers))]\n      (map (lambda (deviation)\n            (+ (abs deviation)\n               (mean_absolute_deviation (cdr numbers)\n                 (cons deviation numbers_length))))\n       deviations)))\n  (first (mean_absolute_deviation numbers)))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (deviations x)) numbers)))\n)\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the average absolute difference between each\n;; element and the median of this dataset:\n;; MAD = average | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers-list)))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 3.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 4.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;; 4.",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD =",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 3.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 6.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;; 6.",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n",
    "  (let ((numbers (list numbers)))\n    (let ((numbers-length (length numbers)))\n      (let ((mean (mean numbers))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average deviations)\n      )\n    )\n  )\n)\n",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n      (average deviations)\n    )\n  )\n)\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from a\n;; centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations numbers))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; In this case, the mean is 1.0, so the absolute difference between\n;; each element and the mean is the absolute difference between\n;; each element and 1.0.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; In this case, the mean is 1.0, so the absolute difference between\n;; each element and the mean is the absolute difference between\n;; each element and 1.0.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; In this case, the mean is 1.0, so the absolute difference between\n;; each element and the mean is the absolute difference between\n;; each element and 1.0.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; In this case, the mean is 1.0, so the absolute difference between\n;; each element and the mean is the absolute difference between\n;; each element and 1.0.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each element\n;; and the mean of the dataset.\n;; In this case, the mean is 1.0, so the absolute difference between each\n;; element and the mean is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average is 1.0, so the average absolute difference is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the average absolute difference\n;; is 1.0.\n;; The average absolute difference is 1.0, so the",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (average (deviations x)))))\n  )\n)\n",
    "  (map (lambda (x)\n         (abs (+ (* x numbers) (* (car numbers) (cdr numbers)))))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0))\n;; 4.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0))\n;; 5.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0))\n;; 7.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))\n;; 8.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 10.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0))\n;; 11.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 12.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0))\n;; 14.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;;",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0))\n;; 3.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0))\n;; 4.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0))\n;; 5.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))\n;; 6.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 7.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0))\n;; 8.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 9.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0))\n;; 10.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; MAD of a list of numbers",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let* ([sum (reduce (lambda (x y) (+ x y)) 0.0)])\n    (let* ([mean (reduce (lambda (x y) (+ x y) / 2) 0.0)])\n      (map (lambda (x) (+ (abs (- x mean) sum) / 2)) numbers))))\n",
    "  (let ((numbers (list numbers)))\n    (let ((numbers-length (length numbers)))\n      (let ((mean (mean numbers))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average deviations))))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; MAD = average | x - x_mean |",
    "  (let* ([numbers_length (length numbers)])\n    (if (zero? numbers_length)\n      0.0\n      (let* ([mean (mean numbers)])\n        (map (lambda (x)\n               (abs (+ x mean) / numbers_length))\n          numbers))))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the average absolute difference between each\n;; element and a median of this dataset:\n;; MAD = average | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (map (lambda (x) (abs (x - (mean (map (lambda (x) (list x)) numbers))))))\n  (mean numbers))\n\n;; For a given list of input numbers, calculate the Median Absolute\n;; Deviation around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute differences\n;; between each element and the median of the dataset:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let* ([sum (reduce (lambda (x y) (+ x y)) 0.0)])\n    (let* ([deviations (map (lambda (x) (- x sum)) numbers)])\n      (sqrt (average (map (lambda (x) (* x deviations)) deviations))))))\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; a median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (map (lambda (x)\n         (abs (+ (* x numbers) (* (car numbers) (cdr numbers)))))\n    numbers))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0))\n;; 0.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0))\n;; 0.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0))\n;; 0.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0))\n;; 0.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0))\n;; 0.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4.0) (list 1.0 2.0 3.0 4",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; MAD of a list of numbers",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers)))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 4.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 6.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; Median is the middle value of a sorted list:\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (deviations x)) numbers)))\n)\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; Median is the value that has exactly half of its occurrences before it.\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((numbers-length (length numbers)))\n    (if (zero? numbers-length)\n      0.0\n      (let ((mean (average numbers))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean)))))\n        (average (map (lambda (x) (abs (x - mean",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n      (average deviations)\n    )\n  )\n)\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (average (deviations x)))))\n  )\n)\n",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the average absolute difference between each\n;; element and the median of the dataset:\n;; MAD = average | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers)))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))) numbers)))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute\n;; Deviation around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations\n;; from the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations numbers))))\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; Median is the middle value in a sorted list:\n;; median = (first (sort numbers)) + (length numbers) / 2\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 4.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;; 4.",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 3.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 6.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0 101.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average (map (lambda (x) (div (x - mean) (deviations))) numbers))))\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; Median is the middle value in a sorted list:\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; MAD of a list of numbers",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))) numbers)))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;;",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations numbers))))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 3.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 5.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;; 5.",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-sum (sum numbers-list))\n          (numbers-mean (mean numbers-list))\n          (numbers-deviations\n            (map (lambda (x)\n                   (abs (x - numbers-mean))))))\n      (sqrt (sum numbers-deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((n (length numbers)))\n      (let ((mean (average numbers))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average (map (lambda (x) (average (deviations x)))))\n      )\n    )\n  )\n)\n",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; The median is the value that has exactly the same number of elements\n;; on both sides of it.\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (deviations x)) numbers)))\n)\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0))\n;; 3.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0))\n;; 4.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0))\n;; 5.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))\n;; 6.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 7.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0))\n;; 8.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 9.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0))\n;; 10.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n      (average deviations)\n    )\n  )\n)\n",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute differences between\n;; each element and a centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations numbers))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute differences between\n;; each element and a centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; a median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;;",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; MAD of a list of numbers",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-list-length (length numbers-list)))\n      (let ((mean (average numbers-list))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average (deviations numbers-list-length)))))\n)\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the difference between the average value and the\n;; mean value of a dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the difference between the average value and the\n;; mean value of a dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the difference between the average value and the\n;; mean value of a dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the difference between the average value and the\n;; mean value of a dataset.\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0))\n;; 3.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0))\n;; 4.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0))\n;; 5.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))\n;; 6.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 7.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0))\n;; 8.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 9.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0))\n;; 10.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers)))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers)))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; a centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; a centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0))\n;; 4.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0))\n;; 5.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0))\n;; 7.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))\n;; 8.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 10.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0))\n;; 11.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 12.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0))\n;; 14.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-count (length numbers-list)))\n      (let ((numbers-mean (mean numbers-list))\n            (numbers-deviations\n              (map (lambda (x)\n                     (abs (x - numbers-mean))))))\n        (average numbers-deviations)\n      )\n    )\n  )\n)\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute\n;; Deviation around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations\n;; from the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the distance between the dataset and a\n;; normal distribution.\n;; MAD = 1.4826\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.4826\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the distance between the dataset and a\n;; normal distribution.\n;; MAD = 1.4826\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.4826\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the distance between the dataset and a\n;; normal distribution.\n;; MAD = 1.4826\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.4826\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the distance between the dataset and a\n;; normal distribution.\n;; MAD = 1.4826\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.4826\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the distance between the dataset and a\n;; normal distribution.\n;; MAD = 1.4826\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.4826\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the distance between the dataset and a\n;; normal distribution.\n;; MAD = 1.4826\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.4826\n\n;; MAD is a measure of the variability of a dataset.",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 4.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;;",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; The median is the number that has exactly the same number of elements\n;; in both the positive and negative half of the dataset.\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n      (average deviations)\n    )\n  )\n)\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute differences between\n;; each element and a centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute differences between\n;; each element and the centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each element\n;; and the mean of the dataset.\n;; In this case, the mean is 1.0, and the absolute difference between each\n;; element and the mean is 1.0.\n;; The average absolute difference is 1.0.\n;; The average absolute difference is the sum of the absolute differences\n;; divided by the number of elements in the dataset.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each element\n;; and the mean of the dataset.\n;; In this case, the mean is 1.0, and the absolute difference between each\n;; element and the mean is 1.0.\n;; The average absolute difference is 1.0.\n;; The average absolute difference is the sum of the absolute differences\n;; divided by the number of elements in the dataset.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each element\n;; and the mean of the dataset.\n;; In this case, the mean is 1.0, and the absolute difference between each\n;; element and the mean is 1.0.\n;; The average absolute difference is 1.0.\n;; The average absolute difference is the sum of the absolute differences\n;; divided by the number of elements in the dataset.\n;; >>> (mean_absolute_deviation (list 1.0",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n      (average deviations)\n    )\n  )\n)\n",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; MAD of a list of numbers",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-count (length numbers-list)))\n      (let ((mean (mean numbers-list))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average deviations)\n      )\n    )\n  )\n)\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-length (length numbers-list)))\n      (let ((mean (mean numbers-list))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average deviations))))\n)\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from a\n;; centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (mapcar '+ numbers)))\n    (let ((mean (mean numbers))\n          (deviations (mapcar '- numbers)))\n      (average (mapcar 'abs deviations))))\n  )\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (average (deviations x)))))\n  )\n)\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers)))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;;",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n      (average deviations)\n    )\n  )\n)\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations numbers))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; The median is the middle number in the dataset, so the median of a list\n;; of length 2 is the middle number in the list.\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations numbers))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; a centerpoint (median in this case):\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0))\n;; 3.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0))\n;; 4.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0))\n;; 5.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))\n;; 6.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 7.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0))\n;; 8.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 9.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0))\n;; 10.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-length (length numbers-list)))\n      (let ((numbers-mean (mean numbers-list))\n            (numbers-deviations (map (lambda (x)\n                                      (abs (x - numbers-mean))))))\n        (average numbers-deviations))))\n)\n\n;; For a given list of input numbers, calculate the Median Absolute\n;; Deviation around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations\n;; from the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-length (length numbers-list)))\n      (let ((mean (mean numbers-list))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average deviations))))\n)\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let* ([sum (reduce (lambda (x y) (+ x y)) 0.0)])\n    (let* ([deviations (map (lambda (x) (- x sum)) numbers)])\n      (sqrt (reduce (lambda (x y) (+ (* x y) (* y deviations))) 0.0))))\n)\n",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-list-length (length numbers-list)))\n      (let ((mean (mean numbers-list))\n            (deviations (map (lambda (x) (- x numbers-list-length/2)) numbers-list)))\n        (let ((deviations-list (list deviations)))\n          (let ((deviations-list-length (length deviations-list)))\n            (let ((deviations-sum (sum deviations-list))\n                  (deviations-mean (mean deviations-list))\n                  (deviations-sum-squares (sum (map (lambda (x) (* x x)) deviations-list))))\n              (let ((deviations-sum-squares-squared (sqr deviations-sum-squares))\n                    (deviations-sum-squares-mean (mean deviations-sum-squares-squared))\n                    (deviations-sum-squares-deviations (map (lambda (x) (* x deviations-sum-squares-mean)) deviations-list)))\n                (let ((deviations-sum-squares-deviations-list (list deviations-sum-squares-deviations)))\n                  (let ((deviations-sum-squares-deviations-list-length (length deviations-sum-squares-deviations-list)))\n                    (let ((deviations-sum-squares-deviations-list-mean (mean deviations-sum-squares-deviations-list-length))\n                          (deviations-sum-squares-deviations-list-deviations (map (lambda (x) (* x deviations-sum-squares-deviations-list-mean)) deviations-sum-squares-deviations-list))\n                          (deviations-sum-squares-deviations-list-deviations-sum (sum deviations-sum-squares-deviations-list-deviations))\n                          (deviations-sum-squares-deviations-list-deviations-mean (mean deviations-sum-squares-deviations-list-deviations-sum))\n                          (deviations-sum-squares-deviations-list-deviations-sum-squares (sqr deviations-sum-squares-deviations-list-deviations-mean))\n                          (deviations-sum",
    "  (let* ([sum (reduce (lambda (x y) (+ x y)) 0.0)])\n    (let* ([deviations (map (lambda (x) (+ (abs (- x sum)) 0.0)) numbers)])\n      (sqrt (reduce (lambda (x y) (+ (abs (- x y)) 0.0)) 0.0) /\n           (float (length deviations))))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; MAD of a list of numbers",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;;",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (average (deviations x)))))\n  )\n)\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>>",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers-list)))\n      (average deviations))))\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; Median is the middle value in a sorted list:\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-length (length numbers-list)))\n      (let ((mean (mean numbers-list))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average deviations))))\n)\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; Median is the middle value of a sorted list:\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let* ([sum (reduce (lambda (a b) (+ a b)) 0.0)])\n    (let* ([deviations (map (lambda (x) (+ (abs (- x sum)) 0.0)) numbers)])\n      (sqrt (reduce (lambda (a b) (+ a b) / (length deviations)) 0.0) * 0.5)))\n)\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;;",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average (map (lambda (x) (average (deviations x))))))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 3.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 4.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;; 4.",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations numbers))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD =",
    "  (let* ([numbers_length (length numbers)])\n    (let* ([mean (mean numbers)]\n           [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n      (average deviations)\n    )\n  )\n)\n",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; MAD of a list of numbers",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers)))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 2.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 4.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;;",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations numbers))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; Median is the middle value in the dataset:\n;; Median = the value that has the same number of elements on both sides of it.\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (map (lambda (x) (average (deviations x)))))\n  )\n)\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers-list (list numbers)))\n    (let ((numbers-list-length (length numbers-list)))\n      (let ((mean (mean numbers-list))\n            (deviations (map (lambda (x) (abs (x - mean))))))\n        (average deviations))))\n)\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from the\n;; median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (mean numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; The median is the middle number in the dataset, and is the 50th percentile\n;; of the dataset.\n;; Median is defined as the number that has the same number of elements\n;; in both the dataset and the sorted dataset.\n;; >>> (median_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller the value, the less variable the dataset is.\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD is a measure of the variability of a dataset.\n;; It is a measure of the average absolute difference between each\n;; element and the mean of the dataset.\n;; The smaller",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 3.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 4.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average (deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n",
    "  (let ((numbers-list (list numbers)))\n    (let ((mean (mean numbers-list))\n          (deviations (map (lambda (x) (abs (x - mean))) numbers-list)))\n      (average deviations))))\n",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0))\n;; 3.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 4.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0))\n;; 5.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0))\n;; 6.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0))\n;; 7.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0))\n;; 8.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0))\n;; 9.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0",
    "  (let* ([mean (mean numbers)]\n         [deviations (map (lambda (x) (abs (x - mean))) numbers)])\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; MAD = average | x - x_mean |",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 3.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 6.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;; 6.",
    "  (let ((numbers (list numbers)))\n    (let ((mean (mean numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; The median is the value that has exactly the same number of elements\n;; on both sides of it.\n;; >>> (median (list 1.0 2.0 3.0 4.0))\n;; 2.0",
    "  (let ((mean (average numbers))\n        (deviations (map (lambda (x) (abs (x - mean))))))\n    (average deviations)))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0))\n;; 3.5\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0))\n;; 6.0\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0))\n;; 6.",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the median of this dataset.\n;; The median is the number that has exactly the same number of occurrences\n;; as the number with the highest number of occurrences.\n;; >>> (median (list 1 2 3 4 5 6 7 8 9))\n;; 6",
    "  (let ((numbers-length (length numbers)))\n    (let ((mean (average numbers))\n          (deviations (map (lambda (x) (abs (x - mean))))))\n      (average deviations))))\n\n;; >>> (mean_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0\n\n;; For a given list of input numbers, calculate the Median Absolute Deviation\n;; around the median of this dataset.\n;; Median Absolute Deviation is the median of the absolute deviations from\n;; the median:\n;; MAD = median | x - x_median |\n;; >>> (median_absolute_deviation (list 1.0 2.0 3.0 4.0))\n;; 1.0"
  ],
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ]
}
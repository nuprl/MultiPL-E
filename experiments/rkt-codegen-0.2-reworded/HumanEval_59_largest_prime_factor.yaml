name: HumanEval_59_largest_prime_factor
language: rkt
prompt: "#lang racket\n\n;; Return the largest prime factor of n. Assume n > 1 and\
  \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
  \ 2048)\n;; 2\n(define (largest_prime_factor n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate largest_prime_factor))\n\
  \    (check-equal? (candidate 15) 5)\n    (check-equal? (candidate 27) 3)\n    (check-equal?\
  \ (candidate 63) 7)\n    (check-equal? (candidate 330) 11)\n    (check-equal? (candidate\
  \ 13195) 29)\n))\n\n(test-humaneval)"
completions: ["  (let ((n (abs n)))\n    (cond\n      [(zero? n) 1]\n      [(zero?\
    \ (modulo n 2)) 1]\n      [else (largest_prime_factor (divide n 2))]))\n)\n\n\
    ;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;;\
    \ >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo\
    \ n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient (modulo n 2) 2)))))\n)\n\n;; Return the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n\
    ;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero?\
    \ n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (largest_prime_factor_helper\
    \ n)))\n    (if (zero? i)\n      (return n)\n      (return (largest_prime_factor_helper\
    \ (- i 1)))))\n  (largest_prime_factor_helper n))\n\n;; Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (let ((i (1)))\n        (while (< i n)\n  \
    \        (if (zero? (modulo n i))\n            (return i)\n            (set! i\
    \ (i (+ i 1))))))))))\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (i 1))\n    (while (< i n)\n  \
    \    (if (modulo n i)\n        (return i)\n        (set! i (+ i 1)))))\n)\n\n\
    ;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;;\
    \ >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (cond\n      [(zero? n) 1]\n      [(zero? (modulo\
    \ n 2)) 1]\n      [else (let ((i (floor (sqrt n))))\n               (let ((p (largest_prime_factor\
    \ (modulo n (pow 2 i))))\n                     (if (zero? p) (largest_prime_factor\
    \ (modulo n (pow 2 (sub1 i))))\n                                 (largest_prime_factor\
    \ (modulo n (pow 2 (sub1 i)))))\n                       (largest_prime_factor\
    \ n))))]))\n\n;; Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((i (sqrt n)))\n    (if (< i 2)\n      1\n      (if (=\
    \ (modulo i 2) 0)\n        (largest_prime_factor (divide i 2))\n        (largest_prime_factor\
    \ (divide i 3))\n        (largest_prime_factor (divide i 5))\n        (largest_prime_factor\
    \ (divide i 7))\n        (largest_prime_factor (divide i 11))\n        (largest_prime_factor\
    \ (divide i 13))\n        (largest_prime_factor (divide i 17))\n        (largest_prime_factor\
    \ (divide i 19))\n        (largest_prime_factor (divide i 23))\n        (largest_prime_factor\
    \ (divide i 29)))))))\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (i 1))\n    (while (< i n)\n  \
    \    (if (modulo n (i))\n        (return (i))\n      (i (+ i 1)))\n    (return\
    \ 1)))\n)\n\n;; Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (cond\n    [(zero? n) 1]\n    [(zero? (modulo n 2)) 1]\n  \
    \  [else (largest_prime_factor (modulo n (first (divisors n))))]))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (let ((p (largest_prime_factor (quotient n\
    \ 2))))\n        (if (zero? p)\n          (largest_prime_factor (quotient n 3))\n\
    \          p))))\n\n;; Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)) (prime? (modulo n 2)))\n    (if (zero? prime?)\n\
    \      (largest_prime_factor (quotient n 2))\n      (largest_prime_factor (modulo\
    \ (quotient n prime?) 2)))))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n\
    \      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (quotient (modulo n 2) 2)))))\n)\n\n;;\
    \ Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>>\
    \ (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;;\
    \ 2", "  (let ((n (abs n))\n         (i 1))\n    (while (< i n)\n      (if (modulo\
    \ n (i))\n        (return (i))\n        (set! i (+ i 1)))\n      )\n    )\n  )\n\
    \n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo\
    \ n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient n 3))\n        (largest_prime_factor (quotient n 5))\n        (largest_prime_factor\
    \ (quotient n 7))\n        (largest_prime_factor (quotient n 11))\n        (largest_prime_factor\
    \ (quotient n 13))\n        (largest_prime_factor (quotient n 17))\n        (largest_prime_factor\
    \ (quotient n 19))\n        (largest_prime_factor (quotient n 23))\n        (largest_prime_factor\
    \ (quotient n 29)))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (prime? (lambda (n)\n         \
    \          (cond\n                     ((= n 1) 1)\n                     ((< n\
    \ 2) 2)\n                     (else\n                       (let ((i (quotient\
    \ n 2)))\n                         (largest_prime_factor (modulo n 2))))))))\n\
    \    (cond\n      ((= n 1) 1)\n      ((< n 2) 2)\n      (else\n        (let ((i\
    \ (quotient n 2)))\n          (largest_prime_factor (modulo n 2))))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (cond\n    [(zero?\
    \ n) 1]\n    [(zero? (modulo n 2)) 1]\n    [else (largest_prime_factor (modulo\
    \ n (first (divide n 2))))]))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n         (i 1))\n\
    \    (while (< i n)\n      (if (modulo n i)\n        (return i)\n        (set!\
    \ i (+ i 1)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((i (floor n)))\n    (if (zero? i)\n      n\n      (if\
    \ (zero? (modulo i 2))\n        (largest_prime_factor (quotient i 2))\n      \
    \  (largest_prime_factor (modulo i 2)))))\n)\n\n;; Return the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n\
    ;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n     \
    \    (prime-factors (make-yail-list)))\n    (if (zero? n)\n      1\n      (if\
    \ (zero? (modulo n 2))\n        (car prime-factors)\n        (largest_prime_factor\
    \ (divide n (car prime-factors)))\n      )\n    )\n  )\n)\n\n;; Return the largest\
    \ palindrome made from the product of two 3-digit\n;; numbers.\n;; >>> (largest_palindrome)\n\
    ;; 906609\n;; >>> (largest_palindrome 100)\n;; 9009", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (floor\
    \ n)))\n    (if (< i 2)\n      (largest_prime_factor (modulo i 2))\n      (largest_prime_factor\
    \ (modulo (modulo i 2) 2)))))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (< n 2)\n\
    \      1\n    (let ((i (2)))\n      (while (< n (expt i 2)))\n        (if (< n\
    \ (expt i n))\n          (return (expt i n))\n        (set! i (+ i 1)))))\n  \
    \  (if (odd? n)\n      (largest_prime_factor (remainder n 2)))\n    (largest_prime_factor\
    \ (quotient n 2))))\n\n;; Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (< n 2)\n      1\n      (if (modulo\
    \ n 2)\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n\n;; Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (let\
    \ ((i (1)))\n        (while (< i n)\n          (if (zero? (modulo n (car i)))\n\
    \            (return (car i))\n            (set! i (+ i 1))))))))\n\n;; Return\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (smallest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (smallest_prime_factor 2048)\n;; 2", "  (cond\n    [(zero?\
    \ n) 0]\n    [(zero? (modulo n 2)) 1]\n    [else (largest_prime_factor (divide\
    \ n 2))]))\n\n;; Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((i (sqrt n)))\n    (if (< i 2)\n      (largest_prime_factor\
    \ (i - 1))\n      (largest_prime_factor (i - 1) * i)\n    )\n  )\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (cond\n    [(zero?\
    \ n) 1]\n    [(zero? (modulo n 2)) 1]\n    [else (largest_prime_factor (modulo\
    \ n 2))]\n  ))\n\n;; Return the largest prime factor of n. Assume n > 1 and is\
    \ not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (prime? (lambda (n)\n         \
    \         (if (zero? n)\n                      (#t)\n                      (if\
    \ (zero? (modulo n 2))\n                          (#f)\n                     \
    \     (largest_prime_factor (modulo n 2)))))\n                 (lambda (n)\n \
    \                  (if (zero? n)\n                       (#t)\n              \
    \         (if (zero? (modulo n 3))\n                           (#f)\n        \
    \                   (largest_prime_factor (modulo n 3)))))\n                 (lambda\
    \ (n)\n                   (if (zero? n)\n                       (#t)\n       \
    \                (if (zero? (modulo n 5))\n                           (#f)\n \
    \                          (largest_prime_factor (modulo n 5)))))\n          \
    \       (lambda (n)\n                   (if (zero? n)\n                      \
    \ (#t)\n                       (if (zero? (modulo n 7))\n                    \
    \       (#f)\n                           (largest_prime_factor (modulo n 7)))))\n\
    \                 (lambda (n)\n                   (if (zero? n)\n            \
    \           (#t)\n                       (if (zero? (modulo n 11))\n         \
    \                  (#f)\n                           (largest_prime_factor (modulo\
    \ n 11)))))\n                 (lambda (n)\n                   (if (zero? n)\n\
    \                       (#t)\n                       (if (zero? (modulo n 13))\n\
    \                           (#f)\n                           (largest_prime_factor\
    \ (modulo n 13)))))\n                 (lambda (n)\n                   (if (zero?\
    \ n)\n                       (#t)\n                       (if (zero? (modulo n\
    \ 17))\n                           (#f)\n                           (largest_prime_factor\
    \ (modulo n 17)))))\n                 (lambda (n)\n                   (if (zero?\
    \ n)\n                       (#t)\n                       (if (zero? (modulo n\
    \ 19))\n                           (#f)\n                           (largest_prime_factor\
    \ (modulo n 19)))))\n                 (lambda (n)\n                   (if (zero?\
    \ n)\n                       (#t)\n                       (if (zero? (modulo n\
    \ 23))\n                           (#f)\n                           (largest_prime_factor\
    \ (modulo", "  (let ((n (abs n))\n         (i 1))\n    (while (< i n)\n      (if\
    \ (modulo n (i))\n        (return (i))\n      (i (+ i 1)))\n    (return 1)))\n\
    )\n\n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n))\n         (i (1)))\n    (while (< i n)\n      (if\
    \ (modulo n (i))\n        (return (i))\n        (i (+ i 1))))))\n\n;; Return the\
    \ largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (let ((i (largest_prime_factor (quotient n\
    \ 2))))\n        (if (zero? (modulo n i))\n          i\n          (largest_prime_factor\
    \ (quotient n i)))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (let\
    \ ((i (largest_prime_factor (quotient n 2))))\n        (if (zero? i)\n       \
    \   (largest_prime_factor (quotient n 3))\n          (largest_prime_factor (quotient\
    \ n (quotient i 2)))\n          (largest_prime_factor (quotient n (quotient i\
    \ 3))))))))\n\n;; Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (prime? (lambda (n) (not (modulo\
    \ n 2))))\n         (divisor (lambda (n) (if (prime? n) 1 (largest_prime_factor\
    \ (modulo n 2))))))\n    (let ((divisor (divisor n))\n          (divisor-squared\
    \ (lambda (n) (square (divisor n))))\n          (divisor-cubed (lambda (n) (cube\
    \ (divisor n))))\n          (divisor-squared-cubed (lambda (n) (cube (square (divisor\
    \ n))))))\n      (if (divisor-squared n) (divisor-squared n)\n         (if (divisor-cubed\
    \ n) (divisor-cubed n)\n           (if (divisor-squared-cubed n) (divisor-squared-cubed\
    \ n)\n             (if (divisor n) (divisor n)\n               (if (divisor-squared\
    \ n) (divisor-squared n)\n                 (if (divisor-cubed n) (divisor-cubed\
    \ n)\n                   (if (divisor-squared-cubed n) (divisor-squared-cubed\
    \ n)\n                     (if (divisor-squared n) (divisor-squared n)\n     \
    \                  (if (divisor-cubed n) (divisor-cubed n)\n                 \
    \        (if (divisor-squared-cubed n) (divisor-squared-cubed n)\n           \
    \                (if (divisor-squared n) (divisor-squared n)\n               \
    \              (if (divisor-cubed n) (divisor-cubed n)\n                     \
    \          (if (divisor-squared-cubed n) (divisor-squared-cubed n)\n         \
    \                        (if (divisor-squared n) (divisor-squared n)\n       \
    \                            (if (divisor-cubed n) (divisor-c", "  (let ((n (abs\
    \ n))\n         (i 1))\n    (while (< i n)\n      (if (modulo n (i))\n       \
    \ (return (i))\n        (set! i (i + 1)))\n    )\n    (return n)))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt\
    \ n)))\n    (if (< i 2)\n      1\n      (do ((j (largest_prime_factor (i - 1))))\n\
    \t   ((= j n))\n\t   (return j)))))\n\n;; Return the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n\
    ;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero?\
    \ n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (cond\n    [(zero?\
    \ n) 0]\n    [(zero? (modulo n 2)) 1]\n    [else (largest_prime_factor (modulo\
    \ n 2))]\n  ))\n\n;; Return the largest prime factor of n. Assume n > 1 and is\
    \ not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((i (largest_prime_factor_helper n)))\n    (if (zero?\
    \ i)\n      1\n      (largest_prime_factor_helper (- i 1))))\n  (largest_prime_factor_helper\
    \ n))\n\n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo\
    \ n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (let\
    \ ((i (largest_prime_factor (quotient n 2))))\n        (if (zero? i)\n       \
    \   (largest_prime_factor (quotient n 3))\n          i))))\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n\
    \         (i 1))\n    (while (< i n)\n      (if (modulo n (i))\n        (return\
    \ (modulo n (i)))\n        (set! i (+ i 1)))\n      )\n    )\n  )\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt\
    \ n)))\n    (if (< i 2)\n      1\n      (if (= i (expt i 2))\n        (largest_prime_factor\
    \ (div n 2))\n        (largest_prime_factor (mod n 2)))))\n)\n\n;; Return the\
    \ largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n\
    \         (i (1)))\n    (while (< i n)\n      (if (modulo n i)\n        (return\
    \ i)\n        (set! i (+ i 1)))\n      )\n    )\n  )\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n\
    \         (prime? (lambda (n) (not (modulo n 2))))\n         (prime? (lambda (n)\
    \ (not (modulo n 3))))\n         (prime? (lambda (n) (not (modulo n 5))))\n  \
    \       (prime? (lambda (n) (not (modulo n 7))))\n         (prime? (lambda (n)\
    \ (not (modulo n 11))))\n         (prime? (lambda (n) (not (modulo n 13))))\n\
    \         (prime? (lambda (n) (not (modulo n 17))))\n         (prime? (lambda\
    \ (n) (not (modulo n 19))))\n         (prime? (lambda (n) (not (modulo n 23))))\n\
    \         (prime? (lambda (n) (not (modulo n 29))))\n         (prime? (lambda\
    \ (n) (not (modulo n 31))))\n         (prime? (lambda (n) (not (modulo n 37))))\n\
    \         (prime? (lambda (n) (not (modulo n 41))))\n         (prime? (lambda\
    \ (n) (not (modulo n 43))))\n         (prime? (lambda (n) (not (modulo n 47))))\n\
    \         (prime? (lambda (n) (not (modulo n 53))))\n         (prime? (lambda\
    \ (n) (not (modulo n 59))))\n         (prime? (lambda (n) (not (modulo n 61))))\n\
    \         (prime? (lambda (n) (not (modulo n 67))))\n         (prime? (lambda\
    \ (n) (not (modulo n 71))))\n         (prime? (lambda (n) (not (modulo n 73))))\n\
    \         (prime? (lambda (n) (not (modulo n 79))))\n         (prime? (lambda\
    \ (n) (not (modulo n 83))))\n         (prime? (lambda (n) (not (modulo n 89))))\n\
    \         (prime? (lambda (n) (not (modulo n 97))))\n         (prime? (lambda\
    \ (n) (not (modulo n 101))))\n         (prime? (lambda (n) (not (modulo n 103))))\n\
    \         (prime? (lambda (n) (not (modulo n 107", "  (let ((i (sqrt n)))\n  \
    \  (cond\n      ((> i 2)\n        (largest_prime_factor (i / 2)))\n      ((= i\
    \ 2)\n        (largest_prime_factor 2))\n      ((< i 2)\n        (largest_prime_factor\
    \ n))\n      (else\n        (largest_prime_factor (i - 1))))))\n\n;; Return the\
    \ largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (cond\n      ((= n 1) 1)\n      ((< n 2) 2)\n      (else\n        (let ((i\
    \ (sqrt n)))\n          (if (<= i 2)\n            (largest_prime_factor (modulo\
    \ n i))\n            (largest_prime_factor (modulo n (divide n i)))\n        \
    \  )\n        )\n      )\n    )\n  )\n)\n\n;; Return the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n\
    ;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt n)))\n   \
    \ (if (< i 2)\n      1\n      (if (= i (modulo n 2))\n        (largest_prime_factor\
    \ (divide n 2))\n        (largest_prime_factor (divide n i)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (< n 2)\n      (largest_prime_factor 2)\n      (let ((i (largest_prime_factor\
    \ (modulo n 2))))\n        (if (= i 1)\n          (largest_prime_factor (quotient\
    \ n 2))\n          (largest_prime_factor (modulo (quotient n i) i)))))\n    (largest_prime_factor\
    \ (modulo n 2))))\n\n;; Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (let\
    \ ((i (largest_prime_factor (quotient n 2))))\n        (if (zero? (modulo n i))\n\
    \          i\n          (largest_prime_factor (quotient n i)))))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (< n 2)\n      1\n      (if (modulo n 2)\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt\
    \ n)))\n    (if (< i 2)\n      1\n      (do ((j (largest_prime_factor (i - 1))))\n\
    \t   ((= j n))\n\t   (return j)))))\n\n;; Return the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n\
    ;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (< n\
    \ 2)\n      1\n    (if (= n 2)\n      2\n    (if (< n 3)\n      3\n    (if (<\
    \ n 4)\n      4\n    (if (< n 5)\n      5\n    (if (< n 6)\n      6\n    (if (<\
    \ n 7)\n      7\n    (if (< n 8)\n      8\n    (if (< n 9)\n      9\n    (if (<\
    \ n 10)\n      10\n    (if (< n 11)\n      11\n    (if (< n 12)\n      12\n  \
    \  (if (< n 13)\n      13\n    (if (< n 14)\n      14\n    (if (< n 15)\n    \
    \  15\n    (if (< n 16)\n      16\n    (if (< n 17)\n      17\n    (if (< n 18)\n\
    \      18\n    (if (< n 19)\n      19\n    (if (< n 20)\n      20\n    (if (<\
    \ n 21)\n      21\n    (if (< n 22)\n      22\n    (if (< n 23)\n      23\n  \
    \  (if (< n 24)\n      24\n    (if (< n 25)\n      25\n    (if (< n 26)\n    \
    \  26\n    (if (< n 27)\n      27\n    (if (< n 28)\n      28\n    (if (< n 29)\n\
    \      29\n    (if (< n 30)\n      30\n    (if (< n 31)\n      31\n    (if (<\
    \ n 32)\n      32\n    (if (< n 33)\n      33\n    (if (< n 34)\n      34\n  \
    \  (if (< n 35)\n      35\n    (if (< n 36)\n      36\n    (if (< n 37)\n    \
    \  37\n    (if (< n 38)\n      38\n    (if (< n 39)\n      39\n    (if (< n 40)\n\
    \      40\n    (if (< n 41)\n      41\n    (if (< n 42)\n      42\n    (if (<\
    \ n 43)\n      43\n    (if (< n 44)\n      44\n    (if (< n 45)\n      45\n  \
    \  (if (< n 46)", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if\
    \ (zero? (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n      \
    \  (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n\
    ;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt n)))\n   \
    \ (if (< i 2)\n      1\n      (if (< (modulo i 2) 0)\n        (largest_prime_factor\
    \ (modulo i 2))\n        (largest_prime_factor (modulo (modulo i 2) 2)))))\n)\n\
    \n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo\
    \ n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient (modulo n 2) 2)))))\n)\n\n;; Return the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n\
    ;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero?\
    \ n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (quotient n 3))\n        (largest_prime_factor\
    \ (quotient n 5))\n        (largest_prime_factor (quotient n 7))\n        (largest_prime_factor\
    \ (quotient n 11))\n        (largest_prime_factor (quotient n 13))\n        (largest_prime_factor\
    \ (quotient n 17))\n        (largest_prime_factor (quotient n 19))\n        (largest_prime_factor\
    \ (quotient n 23))\n        (largest_prime_factor (quotient n 29)))))))\n\n;;\
    \ Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>>\
    \ (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;;\
    \ 2", "  (let ((i (floor n)))\n    (if (< i 2)\n      (largest_prime_factor (modulo\
    \ i 2))\n      (largest_prime_factor (modulo (modulo i 2) 2)))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (floor\
    \ n)))\n    (if (< i 2)\n      (largest_prime_factor (modulo i 2))\n      (largest_prime_factor\
    \ (modulo (modulo i 2) 2)))))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt n)))\n    (if (< i 2)\n\
    \      1\n      (if (= i (modulo n 2))\n        (largest_prime_factor (divide\
    \ n 2))\n        (largest_prime_factor (divide n i)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient (modulo n 2) 2)))))\n\
    )\n\n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo\
    \ n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient (modulo n 2) 2)))))\n)\n\n;; Return the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n\
    ;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero?\
    \ n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (floor\
    \ n)))\n    (if (zero? i)\n      (largest_prime_factor (quotient n 1))\n     \
    \ (largest_prime_factor (modulo n (quotient i 2)))\n      (largest_prime_factor\
    \ (modulo n (modulo i 2))))))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt n)))\n    (if (< i 2)\n\
    \      1\n      (if (< (modulo i 2) 0)\n        (largest_prime_factor (divide\
    \ i 2))\n        (largest_prime_factor (divide i 3))\n        (largest_prime_factor\
    \ (divide i 5))\n        (largest_prime_factor (divide i 7))\n        (largest_prime_factor\
    \ (divide i 11))\n        (largest_prime_factor (divide i 13))\n        (largest_prime_factor\
    \ (divide i 17))\n        (largest_prime_factor (divide i 19))\n        (largest_prime_factor\
    \ (divide i 23))\n        (largest_prime_factor (divide i 29)))))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n\
    \         (prime? (lambda (p) (not (modulo p n))))\n         (largest (lambda\
    \ (n)\n                   (let ((p (largest prime? n)))\n                    \
    \     (if (p) (largest p) (largest (prime? n)))))))\n    (if (prime? n) (largest\
    \ n) (largest (prime? n))))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n\
    \      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient n 3))\n        (largest_prime_factor\
    \ (quotient n 5))\n        (largest_prime_factor (quotient n 7))\n        (largest_prime_factor\
    \ (quotient n 11))\n        (largest_prime_factor (quotient n 13))\n        (largest_prime_factor\
    \ (quotient n 17))\n        (largest_prime_factor (quotient n 19))\n        (largest_prime_factor\
    \ (quotient n 23))\n        (largest_prime_factor (quotient n 29)))))))\n\n;;\
    \ Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>>\
    \ (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;;\
    \ 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo\
    \ n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (cond\n      [(zero? n) 1]\n      [(zero?\
    \ (modulo n 2)) 1]\n      [else (largest_prime_factor (divide n 2))]))\n)\n\n\
    ;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;;\
    \ >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (let ((i (largest_prime_factor\
    \ (quotient n 2))))\n        (if (zero? i)\n          (largest_prime_factor (quotient\
    \ n 3))\n          (largest_prime_factor (quotient n (quotient i 2))))))))\n\n\
    ;; Return the largest palindrome made from the product of two 3-digit\n;; numbers.\
    \ Assume that the numbers are not prime.\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n\
    \      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n\
    \        (largest_prime_factor (quotient (modulo n 2) 2)))))\n)\n\n;; Return the\
    \ largest palindrome made from the product of two 3-digit\n;; numbers.\n;; >>>\
    \ (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product\
    \ 100)\n;; 906609", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if\
    \ (zero? (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n      \
    \  (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n\
    ;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if\
    \ (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient (modulo n 2) 2)))))\n\
    )\n\n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo\
    \ n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (i (1)))\n    (while (< i n)\n\
    \      (if (modulo n i)\n        (return i)\n        (set! i (+ i 1)))\n     \
    \ )\n    )\n  )\n)\n\n;; Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (cond\n    [(zero? n) 1]\n    [(zero? (modulo n 2)) 1]\n  \
    \  [else (largest_prime_factor (modulo n 2))]))\n\n;; Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (cond\n      [(zero? n) 1]\n      [(zero? (modulo n 2)) 1]\n      [else (largest_prime_factor\
    \ (divide n 2))]))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (i 1))\n    (while (< i n)\n  \
    \    (if (modulo n (car i))\n        (return (car i))\n        (set! i (+ i 1)))\n\
    \      )\n    )\n  )\n)\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (even?\
    \ n)\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient n 3))\n        (largest_prime_factor (quotient n 5))\n        (largest_prime_factor\
    \ (quotient n 7))\n        (largest_prime_factor (quotient n 11))\n        (largest_prime_factor\
    \ (quotient n 13))\n        (largest_prime_factor (quotient n 17))\n        (largest_prime_factor\
    \ (quotient n 19))\n        (largest_prime_factor (quotient n 23))\n        (largest_prime_factor\
    \ (quotient n 29)))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (cond\n    [(zero? n) 1]\n    [(zero? (modulo n 2)) 1]\n  \
    \  [else (largest_prime_factor (modulo n 2))]))\n\n;; Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt\
    \ n)))\n    (cond\n      ((= i 1) 1)\n      ((< i 2) 2)\n      (else\n       \
    \ (let ((j (floor i)))\n          (if (odd? j)\n            (largest_prime_factor\
    \ (modulo i j))\n            (largest_prime_factor (modulo i (divide i j) j))))))))\n\
    \n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n))\n         (prime? (lambda (n)\n                  (let\
    \ ((p (largest_prime_factor (modulo n 2))))\n                    (if (zero? p)\n\
    \                        (return n)\n                        (return (largest_prime_factor\
    \ (quotient n p))))))))\n    (prime? n)))\n\n;; Return the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n;; >>> (smallest_prime_factor 13195)\n\
    ;; 29\n;; >>> (smallest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n   \
    \ (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (< n 1)\n      1\n    (if (modulo n 2)\n      (largest_prime_factor (quotient\
    \ n 2))\n    (largest_prime_factor (quotient n 3))\n    (largest_prime_factor\
    \ (quotient n 5))\n    (largest_prime_factor (quotient n 7))\n    (largest_prime_factor\
    \ (quotient n 11))\n    (largest_prime_factor (quotient n 13))\n    (largest_prime_factor\
    \ (quotient n 17))\n    (largest_prime_factor (quotient n 19))\n    (largest_prime_factor\
    \ (quotient n 23))\n    (largest_prime_factor (quotient n 29))))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (cond\n    [(zero?\
    \ n) 1]\n    [(zero? (modulo n 2)) 1]\n    [else (largest_prime_factor (modulo\
    \ n (first (gcd n 2))))]))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n         (prime? (lambda\
    \ (n)\n                   (cond\n                     ((= n 1) 1)\n          \
    \           ((< n 2) 2)\n                     (else\n                       (let\
    \ ((p (largest_prime_factor (modulo n 2))))\n                         (if (even?\
    \ p) (largest_prime_factor (quotient n p)))\n                           (largest_prime_factor\
    \ (quotient n p))))))))\n    (cond\n      ((= n 1) 1)\n      ((< n 2) 2)\n   \
    \   (else (let ((p (prime? n))) (if (even? p) (largest_prime_factor (quotient\
    \ n p))) (largest_prime_factor (quotient n p)))))))\n\n;; Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (let ((i (1)))\n        (while (< i n)\n  \
    \        (if (modulo n (i))\n            (return (modulo n (i)))\n           \
    \ (set! i (+ i 1)))\n          )\n        )\n      )\n    )\n  )\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt\
    \ n)))\n    (cond\n      ((> i 2)\n        (largest_prime_factor (i / 2)))\n \
    \     ((= i 2)\n        (largest_prime_factor 2))\n      ((< i 2)\n        (largest_prime_factor\
    \ 2))\n      (else\n        (largest_prime_factor (i - 1))))))\n\n;; Return the\
    \ largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (sqrt\
    \ n)))\n    (if (< i 2)\n      (largest_prime_factor (i - 1))\n      (largest_prime_factor\
    \ (i - 1) * i)))\n  n)\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)) (i (1)))\n    (while (< i n)\n      (if (modulo\
    \ (quotient n i) 1)\n\t  (return i)\n\t  (set! i (i (+ i 1))))))\n  (+ 1))\n\n\
    ;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;;\
    \ >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((i (floor n)))\n    (if (< i 2)\n      (largest_prime_factor (modulo\
    \ i 2))\n      (largest_prime_factor (modulo (modulo i 2) 2)))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (< n 2)\n      1\n      (if (modulo n 2)\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient (modulo n 2) 2)))))\n\
    \n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo\
    \ n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest palindrome made from the product\
    \ of two 3-digit\n;; numbers.\n;; >>> (largest_palindrome_product)\n;; 906609\n\
    ;; >>> (largest_palindrome_product 100)\n;; 906609", "  (let ((n (abs n)))\n \
    \   (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (cond\n      ((= n 1) 1)\n      ((< n 2) 1)\n      (else\n        (let ((i\
    \ (sqrt n)))\n          (if (< (modulo i 2) 0)\n            (largest_prime_factor\
    \ (modulo n i))\n            (largest_prime_factor (modulo n (divide i 2)))\n\
    \          )\n        )\n      )\n    )\n  )\n)\n\n;; Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (< n 2)\n      1\n      (if (< n 1)\n        n\n      (let ((p (largest_prime_factor\
    \ (modulo n 2))))\n        (if (= p 1)\n          (largest_prime_factor (quotient\
    \ n 2))\n          (largest_prime_factor (modulo (quotient p n) 2))))))))\n\n\
    ;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;;\
    \ >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n))\n         (i 1))\n    (while (< i n)\n      (if (modulo\
    \ n i)\n        (return i)\n        (set! i (+ i 1)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient n 3))\n        (largest_prime_factor\
    \ (quotient n 5))\n        (largest_prime_factor (quotient n 7))\n        (largest_prime_factor\
    \ (quotient n 11))\n        (largest_prime_factor (quotient n 13))\n        (largest_prime_factor\
    \ (quotient n 17))\n        (largest_prime_factor (quotient n 19)))))))\n\n;;\
    \ Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>>\
    \ (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;;\
    \ 2", "  (let ((n (abs n))\n         (prime? (lambda (n)\n                   (cond\n\
    \                     ((> n 1) 1)\n                     ((= n 2) 2)\n        \
    \             ((< n 2) 2)\n                     (else (largest_prime_factor (quotient\
    \ n 2)))))))\n    (if (prime? n)\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient n 3)))\n      (largest_prime_factor\
    \ (quotient n 2))))\n\n;; Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((i (sqrt n)))\n    (if (< i 2)\n      1\n      (do ((p\
    \ (largest_prime_factor (modulo i 2)))\n            (q (largest_prime_factor (modulo\
    \ (sub 1 i) 2))))\n        ((= p q) (i))\n        (set! i (sub1 i)))))\n)\n\n\
    ;; Return the largest palindrome made from the product of two 3-digit\n;; numbers.\n\
    ;; >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product\
    \ 100)\n;; 906609", "  (let ((n (abs n))\n         (i (1)))\n    (while (< i n)\n\
    \      (if (modulo n i)\n        (return i)\n        (set! i (+ i 2)))\n     \
    \ )\n    )\n  )\n)\n\n;; Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (< n 2)\n      1\n      (if (modulo\
    \ n 2)\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient (remainder n 2) 2)))))\n\n;; Return the largest prime factor of n.\
    \ Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n\
    ;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero?\
    \ n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (let ((i (1)))\n        (while (< i n)\n  \
    \        (if (zero? (modulo n (car i)))\n            (return (car i))\n      \
    \      (set! i (+ i 1))))))))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (< n 2)\n\
    \      1\n    (if (= n 1)\n      1\n    (if (< n 2)\n      1\n    (if (= n 2)\n\
    \      2\n    (if (< n 3)\n      3\n    (if (< n 4)\n      4\n    (if (< n 5)\n\
    \      5\n    (if (< n 6)\n      6\n    (if (< n 7)\n      7\n    (if (< n 8)\n\
    \      8\n    (if (< n 9)\n      9\n    (if (< n 10)\n      10\n    (if (< n 11)\n\
    \      11\n    (if (< n 12)\n      12\n    (if (< n 13)\n      13\n    (if (<\
    \ n 14)\n      14\n    (if (< n 15)\n      15\n    (if (< n 16)\n      16\n  \
    \  (if (< n 17)\n      17\n    (if (< n 18)\n      18\n    (if (< n 19)\n    \
    \  19\n    (if (< n 20)\n      20\n    (if (< n 21)\n      21\n    (if (< n 22)\n\
    \      22\n    (if (< n 23)\n      23\n    (if (< n 24)\n      24\n    (if (<\
    \ n 25)\n      25\n    (if (< n 26)\n      26\n    (if (< n 27)\n      27\n  \
    \  (if (< n 28)\n      28\n    (if (< n 29)\n      29\n    (if (< n 30)\n    \
    \  30\n    (if (< n 31)\n      31\n    (if (< n 32)\n      32\n    (if (< n 33)\n\
    \      33\n    (if (< n 34)\n      34\n    (if (< n 35)\n      35\n    (if (<\
    \ n 36)\n      36\n    (if (< n 37)\n      37\n    (if (< n 38)\n      38\n  \
    \  (if (< n 39)\n      39\n    (if (< n 40)\n      40\n    (if (< n 41)\n    \
    \  41\n    (if (< n 42)\n      42\n    (if (< n 43)\n      43\n    (if (< n 44)",
  "  (let ((n (abs n)))\n    (if (< n 2)\n      1\n    (if (= n 2)\n      2\n    (if\
    \ (< n 3)\n      3\n    (if (< n 4)\n      4\n    (if (< n 5)\n      5\n    (if\
    \ (< n 6)\n      6\n    (if (< n 7)\n      7\n    (if (< n 8)\n      8\n    (if\
    \ (< n 9)\n      9\n    (if (< n 10)\n      10\n    (if (< n 11)\n      11\n \
    \   (if (< n 12)\n      12\n    (if (< n 13)\n      13\n    (if (< n 14)\n   \
    \   14\n    (if (< n 15)\n      15\n    (if (< n 16)\n      16\n    (if (< n 17)\n\
    \      17\n    (if (< n 18)\n      18\n    (if (< n 19)\n      19\n    (if (<\
    \ n 20)\n      20\n    (if (< n 21)\n      21\n    (if (< n 22)\n      22\n  \
    \  (if (< n 23)\n      23\n    (if (< n 24)\n      24\n    (if (< n 25)\n    \
    \  25\n    (if (< n 26)\n      26\n    (if (< n 27)\n      27\n    (if (< n 28)\n\
    \      28\n    (if (< n 29)\n      29\n    (if (< n 30)\n      30\n    (if (<\
    \ n 31)\n      31\n    (if (< n 32)\n      32\n    (if (< n 33)\n      33\n  \
    \  (if (< n 34)\n      34\n    (if (< n 35)\n      35\n    (if (< n 36)\n    \
    \  36\n    (if (< n 37)\n      37\n    (if (< n 38)\n      38\n    (if (< n 39)\n\
    \      39\n    (if (< n 40)\n      40\n    (if (< n 41)\n      41\n    (if (<\
    \ n 42)\n      42\n    (if (< n 43)\n      43\n    (if (< n 44)\n      44\n  \
    \  (if (< n 45)\n      45\n    (if (< n 46)", "  (let ((n (abs n)))\n    (if (zero?\
    \ n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (< n 1)\n      1\n    (if (modulo n 2)\n      (largest_prime_factor (quotient\
    \ n 2))\n    (largest_prime_factor (quotient n 3))\n    (largest_prime_factor\
    \ (quotient n 5))\n    (largest_prime_factor (quotient n 7))\n    (largest_prime_factor\
    \ (quotient n 11))\n    (largest_prime_factor (quotient n 13))\n    (largest_prime_factor\
    \ (quotient n 17))\n    (largest_prime_factor (quotient n 19))\n    (largest_prime_factor\
    \ (quotient n 23))\n    (largest_prime_factor (quotient n 29))))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n\
    \         (i 1))\n    (while (< i n)\n      (if (modulo n i)\n        (return\
    \ i)\n        (set! i (+ i 1)))))\n)\n\n;; Return the largest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;;\
    \ 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if\
    \ (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient (modulo n 2) 2)))))\n\
    )\n\n;; Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    ;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n\
    ;; 2", "  (let ((n (abs n))\n         (prime? (lambda (n)\n                  \
    \ (let ((i (1))\n                          (limit (lambda (n)\n              \
    \                    (if (zero? n)\n                                      i\n\
    \                                      (if (zero? (modulo n 2))\n            \
    \                            (if (zero? (modulo n 3))\n                      \
    \                    (if (zero? (modulo n 5))\n                              \
    \              (if (zero? (modulo n 7))\n                                    \
    \          (if (zero? (modulo n 11))\n                                       \
    \         (if (zero? (modulo n 13))\n                                        \
    \          (if (zero? (modulo n 17))\n                                       \
    \             (if (zero? (modulo n 19))\n                                    \
    \                  (if (zero? (modulo n 23))\n                               \
    \                         (if (zero? (modulo n 29))\n                        \
    \                                  (if (zero? (modulo n 31))\n               \
    \                                             (if (zero? (modulo n 37))\n    \
    \                                                          (if (zero? (modulo\
    \ n 41))\n                                                                (if\
    \ (zero? (modulo n 43))\n                                                    \
    \              (if (zero? (modulo n 47))\n                                   \
    \                                 (if (zero? (modulo n 53))\n                \
    \                                                      (if (zero? (modulo n 59))\n\
    \                                                                        (if (zero?\
    \ (modulo n 61))\n                                                           \
    \               (if (zero? (modulo n 67))\n                                  \
    \                                          (if (zero? (modulo n 71))\n       \
    \                                                                       (if (zero?\
    \ (modulo n 73))\n                                                           \
    \                     (if (zero? (modulo n 79))\n                            \
    \                                                      (if (zero? (modulo n 83))\n\
    \                                                                            \
    \        (if (zero? (modulo n 89))\n                                         \
    \                                             (if (zero? (modulo n 97))\n    \
    \                                                                            \
    \        (if (zero? (modulo n 101))\n                                        \
    \                                                  (if (zero? (modulo n 103))\n",
  "  (let ((i (sqrt n)))\n    (cond\n      ((> i 2)\n        (largest_prime_factor\
    \ (i / 2)))\n      ((= i 2)\n        (largest_prime_factor 2))\n      ((< i 2)\n\
    \        (largest_prime_factor n))\n      (else\n        (largest_prime_factor\
    \ (i - 1))))))\n\n;; Return the largest prime factor of n. Assume n > 1 and is\
    \ not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (prime? (lambda (n)\n         \
    \          (if (zero? n)\n                       #f\n                       (if\
    \ (zero? (modulo n 2))\n                           #f\n                      \
    \     (if (zero? (modulo n 3))\n                               #f\n          \
    \                     (if (zero? (modulo n 5))\n                             \
    \      #f\n                                   (if (zero? (modulo n 7))\n     \
    \                                  #f\n                                      \
    \ (if (zero? (modulo n 11))\n                                           #f\n \
    \                                          (if (zero? (modulo n 13))\n       \
    \                                        #f\n                                \
    \               (if (zero? (modulo n 17))\n                                  \
    \                #f\n                                                  (if (zero?\
    \ (modulo n 19))\n                                                      #f\n \
    \                                                     (if (zero? (modulo n 23))\n\
    \                                                          #f\n              \
    \                                            (if (zero? (modulo n 29))\n     \
    \                                                        #f\n                \
    \                                             (if (zero? (modulo n 31))\n    \
    \                                                           #f\n             \
    \                                                  (if (zero? (modulo n 37))\n\
    \                                                                   #f\n     \
    \                                                              (if (zero? (modulo\
    \ n 41))\n                                                                   \
    \    #f\n                                                                    \
    \   (if (zero? (modulo n 43))\n                                              \
    \                            #f\n                                            \
    \                              (if (zero? (modulo n 47))\n                   \
    \                                                          #f\n              \
    \                                                               (if (zero? (modulo\
    \ n 53))\n                                                                   \
    \            #f\n                                                            \
    \                   (if (zero? (modulo n 59))\n                              \
    \                                                    #f\n                    \
    \                                                              (if (zero? (modulo\
    \ n 61))\n                                                                   \
    \                 #f\n                                                       \
    \                             (if (zero? (modulo n 67))\n                    \
    \                                                                  #f\n      \
    \                                                                            \
    \    (if (zero? (modulo n 71))\n                                             \
    \                                           ", "  (let ((i (floor n)))\n    (if\
    \ (< i 2)\n      (largest_prime_factor (modulo i 2))\n      (largest_prime_factor\
    \ (modulo (modulo i 2) 2)))))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (< n 1)\n\
    \      1\n    (if (modulo n 2)\n      (largest_prime_factor (quotient n 2))\n\
    \    (largest_prime_factor (quotient n 3))\n    (largest_prime_factor (quotient\
    \ n 5))\n    (largest_prime_factor (quotient n 7))\n    (largest_prime_factor\
    \ (quotient n 11))\n    (largest_prime_factor (quotient n 13))\n    (largest_prime_factor\
    \ (quotient n 17))\n    (largest_prime_factor (quotient n 19))\n    (largest_prime_factor\
    \ (quotient n 23))\n    (largest_prime_factor (quotient n 29))))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (let ((i (largest_prime_factor (quotient n\
    \ 2))))\n        (if (zero? (modulo n i))\n          i\n          (largest_prime_factor\
    \ (quotient n i))))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient n 3))\n        (largest_prime_factor (quotient n 5))\n        (largest_prime_factor\
    \ (quotient n 7))\n        (largest_prime_factor (quotient n 11))\n        (largest_prime_factor\
    \ (quotient n 13))\n        (largest_prime_factor (quotient n 17))\n        (largest_prime_factor\
    \ (quotient n 19))\n        (largest_prime_factor (quotient n 23))\n        (largest_prime_factor\
    \ (quotient n 29)))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (< n 2)\n      1\n    (if (modulo\
    \ n 2)\n      (largest_prime_factor (quotient n 2))\n    (largest_prime_factor\
    \ (quotient n 3))\n    (largest_prime_factor (quotient n 5))\n    (largest_prime_factor\
    \ (quotient n 7))\n    (largest_prime_factor (quotient n 11))\n    (largest_prime_factor\
    \ (quotient n 13))\n    (largest_prime_factor (quotient n 17))\n    (largest_prime_factor\
    \ (quotient n 19))\n    (largest_prime_factor (quotient n 23))\n    (largest_prime_factor\
    \ (quotient n 29))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (let\
    \ ((i (1)))\n        (while (< i n)\n          (if (modulo n (i))\n          \
    \  (return (modulo n (i)))\n            (set! i (+ i 1)))\n          )\n     \
    \   )\n      )\n    )\n  )\n)\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n\
    \      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (< n 2)\n      1\n      (if (modulo n 2)\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n\
    \         (prime? (lambda (n) (not (modulo n 2))))\n         (prime? (lambda (n)\
    \ (not (modulo n 3))))\n         (prime? (lambda (n) (not (modulo n 5))))\n  \
    \       (prime? (lambda (n) (not (modulo n 7))))\n         (prime? (lambda (n)\
    \ (not (modulo n 11))))\n         (prime? (lambda (n) (not (modulo n 13))))\n\
    \         (prime? (lambda (n) (not (modulo n 17))))\n         (prime? (lambda\
    \ (n) (not (modulo n 19))))\n         (prime? (lambda (n) (not (modulo n 23))))\n\
    \         (prime? (lambda (n) (not (modulo n 29))))\n         (prime? (lambda\
    \ (n) (not (modulo n 31))))\n         (prime? (lambda (n) (not (modulo n 37))))\n\
    \         (prime? (lambda (n) (not (modulo n 41))))\n         (prime? (lambda\
    \ (n) (not (modulo n 43))))\n         (prime? (lambda (n) (not (modulo n 47))))\n\
    \         (prime? (lambda (n) (not (modulo n 53))))\n         (prime? (lambda\
    \ (n) (not (modulo n 59))))\n         (prime? (lambda (n) (not (modulo n 61))))\n\
    \         (prime? (lambda (n) (not (modulo n 67))))\n         (prime? (lambda\
    \ (n) (not (modulo n 71))))\n         (prime? (lambda (n) (not (modulo n 73))))\n\
    \         (prime? (lambda (n) (not (modulo n 79))))\n         (prime? (lambda\
    \ (n) (not (modulo n 83))))\n         (prime? (lambda (n) (not (modulo n 89))))\n\
    \         (prime? (lambda (n) (not (modulo n 97))))\n         (prime? (lambda\
    \ (n) (not (modulo n 101))))\n         (prime? (lambda (n) (not (modulo n 103))))\n\
    \         (prime? (lambda (n) (not (modulo n 107", "  (let ((n (abs n)))\n   \
    \ (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n\
    \         (i (1)))\n    (while (< n (expt 2 i))\n      (if (= (modulo n (expt\
    \ 2 i)) 0)\n        (return (expt 2 i))\n      (set! i (+ i 1)))\n    (set! i\
    \ 1)))\n)\n\n;; Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n))\n         (i 1))\n    (while (< i n)\n  \
    \    (if (modulo n (i))\n        (return (i))\n        (set! i (+ i 1)))\n   \
    \   )\n    )\n  )\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest palindrome made from the product\
    \ of two 3-digit\n;; numbers.\n;; >>> (largest_palindrome_product)\n;; 906609\n\
    ;; >>> (largest_palindrome_product 100)\n;; 906609", "  (let ((n (abs n))\n  \
    \       (prime? (lambda (n) (not (modulo n 2))))\n         (prime? (lambda (n)\
    \ (not (modulo n 3))))\n         (prime? (lambda (n) (not (modulo n 5))))\n  \
    \       (prime? (lambda (n) (not (modulo n 7))))\n         (prime? (lambda (n)\
    \ (not (modulo n 11))))\n         (prime? (lambda (n) (not (modulo n 13))))\n\
    \         (prime? (lambda (n) (not (modulo n 17))))\n         (prime? (lambda\
    \ (n) (not (modulo n 19))))\n         (prime? (lambda (n) (not (modulo n 23))))\n\
    \         (prime? (lambda (n) (not (modulo n 29))))\n         (prime? (lambda\
    \ (n) (not (modulo n 31))))\n         (prime? (lambda (n) (not (modulo n 37))))\n\
    \         (prime? (lambda (n) (not (modulo n 41))))\n         (prime? (lambda\
    \ (n) (not (modulo n 43))))\n         (prime? (lambda (n) (not (modulo n 47))))\n\
    \         (prime? (lambda (n) (not (modulo n 53))))\n         (prime? (lambda\
    \ (n) (not (modulo n 59))))\n         (prime? (lambda (n) (not (modulo n 61))))\n\
    \         (prime? (lambda (n) (not (modulo n 67))))\n         (prime? (lambda\
    \ (n) (not (modulo n 71))))\n         (prime? (lambda (n) (not (modulo n 73))))\n\
    \         (prime? (lambda (n) (not (modulo n 79))))\n         (prime? (lambda\
    \ (n) (not (modulo n 83))))\n         (prime? (lambda (n) (not (modulo n 89))))\n\
    \         (prime? (lambda (n) (not (modulo n 97))))\n         (prime? (lambda\
    \ (n) (not (modulo n 101))))\n         (prime? (lambda (n) (not (modulo n 103))))\n\
    \         (prime? (lambda (n) (not (modulo n 107", "  (let ((n (abs n)))\n   \
    \ (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient (modulo n 2) 2)))))\n\
    )\n\n;; Return the largest palindrome made from the product of two 3-digit\n;;\
    \ numbers. Assume there are at least two 3-digit numbers.\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest palindrome made from the product of two 3-digit\n;; numbers.\n;;\
    \ >>> (largest_palindrome_product)\n;; 906609\n;; >>> (largest_palindrome_product\
    \ 100)\n;; 906609", "  (let ((i (largest_prime_factor_helper n)))\n    (if (zero?\
    \ i)\n      (return n)\n      (return (largest_prime_factor_helper (quotient n\
    \ i))))))\n\n;; Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient n 3))\n        (largest_prime_factor (quotient n 5))\n        (largest_prime_factor\
    \ (quotient n 7))\n        (largest_prime_factor (quotient n 11))\n        (largest_prime_factor\
    \ (quotient n 13))\n        (largest_prime_factor (quotient n 17))\n        (largest_prime_factor\
    \ (quotient n 19))\n        (largest_prime_factor (quotient n 23))\n        (largest_prime_factor\
    \ (quotient n 29)))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient n 3))\n        (largest_prime_factor (quotient n 5))\n        (largest_prime_factor\
    \ (quotient n 7))\n        (largest_prime_factor (quotient n 11))\n        (largest_prime_factor\
    \ (quotient n 13))\n        (largest_prime_factor (quotient n 17))\n        (largest_prime_factor\
    \ (quotient n 19))\n        (largest_prime_factor (quotient n 23))\n        (largest_prime_factor\
    \ (quotient n 29)))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)) (i 1))\n    (while (< i n)\n      (if (modulo\
    \ n i)\n        (return i)\n        (set! i (+ i 1)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient n 3))\n        (largest_prime_factor\
    \ (quotient n 5))\n        (largest_prime_factor (quotient n 7))\n        (largest_prime_factor\
    \ (quotient n 11))\n        (largest_prime_factor (quotient n 13))\n        (largest_prime_factor\
    \ (quotient n 17))\n        (largest_prime_factor (quotient n 19))\n        (largest_prime_factor\
    \ (quotient n 23))\n        (largest_prime_factor (quotient n 29)))))))\n\n;;\
    \ Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>>\
    \ (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;;\
    \ 2", "  (let ((n (abs n)))\n    (cond\n      [(zero? n) 1]\n      [(zero? (modulo\
    \ n 2)) 1]\n      [else (largest_prime_factor (quotient n 2))]))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\
    \ (i (1)))\n    (while (< i n)\n      (if (= (modulo i n) 0)\n        (return\
    \ i)\n        (set! i (i (+ i 1)))))))\n\n;; Return the largest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;;\
    \ 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)) (i (1)))\n\
    \    (while (< i n)\n      (if (modulo n i)\n        (return i)\n        (set!\
    \ i (+ i 1)))))\n  (+ 1))\n\n;; Return the largest prime factor of n. Assume n\
    \ > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n\
    \      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return the largest\
    \ prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (cond\n    [(zero?\
    \ n) 1]\n    [(zero? (modulo n 2)) 1]\n    [else (largest_prime_factor (modulo\
    \ n (first (gcd n 2))))]))\n\n;; Return the largest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>>\
    \ (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)) (prime? (modulo n 2)))\n\
    \    (if (zero? prime?)\n      (largest_prime_factor (quotient n 2))\n      (largest_prime_factor\
    \ (modulo (quotient n prime?) 2)))))\n\n;; Return the largest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;;\
    \ 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n    (if\
    \ (zero? n)\n      1\n      (if (even? n)\n        (largest_prime_factor (quotient\
    \ n 2))\n        (largest_prime_factor (quotient n 3))\n        (largest_prime_factor\
    \ (quotient n 5))\n        (largest_prime_factor (quotient n 7))\n        (largest_prime_factor\
    \ (quotient n 11))\n        (largest_prime_factor (quotient n 13))\n        (largest_prime_factor\
    \ (quotient n 17))\n        (largest_prime_factor (quotient n 19))\n        (largest_prime_factor\
    \ (quotient n 23))\n        (largest_prime_factor (quotient n 29)))))))\n\n;;\
    \ Return the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>>\
    \ (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;;\
    \ 2", "  (let ((n (abs n)))\n    (if (< n 2)\n      1\n      (if (= n 2)\n   \
    \     2\n        (if (= n 3)\n          3\n          (if (= n 5)\n           \
    \ 5\n            (if (= n 7)\n              7\n              (if (= n 11)\n  \
    \              11\n                (if (= n 13)\n                  13\n      \
    \            (if (= n 17)\n                    17\n                    (if (=\
    \ n 19)\n                      19\n                      (if (= n 23)\n      \
    \                  23\n                        (if (= n 29)\n                \
    \          29\n                          (largest_prime_factor (* n (log n) 2))))))))))))))))))\n",
  "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n\
    \        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (let\
    \ ((i (largest_prime_factor (quotient n 2))))\n        (if (zero? i)\n       \
    \   (largest_prime_factor (quotient n 3))\n          (largest_prime_factor (quotient\
    \ n (quotient i 2)))\n          (largest_prime_factor (quotient n (quotient i\
    \ 3))))))))\n\n;; Return the largest prime factor of n. Assume n > 1 and is not\
    \ a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (< n 1)\n      1\n    (if (= n\
    \ 2)\n      2\n    (if (< n 3)\n      3\n    (if (< n (expt 2 n))\n      (largest_prime_factor\
    \ (expt 2 n)))\n    (largest_prime_factor (quotient n 2))))))\n\n;; Return the\
    \ largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((i (floor\
    \ n)))\n    (if (< i 2)\n      1\n      (if (modulo i 2)\n        (largest_prime_factor\
    \ (modulo i 2))\n        (largest_prime_factor (modulo (modulo i 2)))\n      )\n\
    \    )\n  )\n)\n\n;; Return the largest prime factor of n. Assume n > 1 and is\
    \ not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (modulo n 2)))))\n)\n\n;; Return the largest prime factor of n. Assume n > 1\
    \ and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((n (abs n)))\n    (if (zero? n)\n      1\n      (if (zero?\
    \ (modulo n 2))\n        (largest_prime_factor (quotient n 2))\n        (largest_prime_factor\
    \ (quotient n 3))\n        (largest_prime_factor (quotient n 5))\n        (largest_prime_factor\
    \ (quotient n 7))\n        (largest_prime_factor (quotient n 11))\n        (largest_prime_factor\
    \ (quotient n 13))\n        (largest_prime_factor (quotient n 17))\n        (largest_prime_factor\
    \ (quotient n 19))\n        (largest_prime_factor (quotient n 23))\n        (largest_prime_factor\
    \ (quotient n 29)))))))\n\n;; Return the largest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n;; >>> (largest_prime_factor 13195)\n;; 29\n;; >>> (largest_prime_factor\
    \ 2048)\n;; 2", "  (let ((i (sqrt n)))\n    (cond\n      ((= i 1) 1)\n      ((<\
    \ i 2) 2)\n      (else\n        (let ((p (largest_prime_factor (modulo i 2))))\n\
    \          (if (even? p)\n            (largest_prime_factor (divide i p))\n  \
    \          (largest_prime_factor (divide i (sub1 p))))))))))\n\n;; Return the\
    \ largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (quotient (modulo n 2) 2)))))\n\
    )\n\n;; Return the largest palindrome made from the product of two 3-digit\n;;\
    \ numbers. Assume the numbers are not prime.\n;; >>> (largest_palindrome_product)\n\
    ;; 906609\n;; >>> (largest_palindrome_product)\n;; 906609", "  (let ((n (abs n)))\n\
    \    (if (zero? n)\n      1\n      (if (zero? (modulo n 2))\n        (largest_prime_factor\
    \ (quotient n 2))\n        (largest_prime_factor (modulo n 2)))))\n)\n\n;; Return\
    \ the largest prime factor of n. Assume n > 1 and is not a prime.\n;; >>> (largest_prime_factor\
    \ 13195)\n;; 29\n;; >>> (largest_prime_factor 2048)\n;; 2", "  (let ((n (abs n))\n\
    \         (prime? (lambda (n) (not (modulo n 2))))\n         (prime? (lambda (n)\
    \ (not (modulo n 3))))\n         (prime? (lambda (n) (not (modulo n 5))))\n  \
    \       (prime? (lambda (n) (not (modulo n 7))))\n         (prime? (lambda (n)\
    \ (not (modulo n 11))))\n         (prime? (lambda (n) (not (modulo n 13))))\n\
    \         (prime? (lambda (n) (not (modulo n 17))))\n         (prime? (lambda\
    \ (n) (not (modulo n 19))))\n         (prime? (lambda (n) (not (modulo n 23))))\n\
    \         (prime? (lambda (n) (not (modulo n 29))))\n         (prime? (lambda\
    \ (n) (not (modulo n 31))))\n         (prime? (lambda (n) (not (modulo n 37))))\n\
    \         (prime? (lambda (n) (not (modulo n 41))))\n         (prime? (lambda\
    \ (n) (not (modulo n 43))))\n         (prime? (lambda (n) (not (modulo n 47))))\n\
    \         (prime? (lambda (n) (not (modulo n 53))))\n         (prime? (lambda\
    \ (n) (not (modulo n 59))))\n         (prime? (lambda (n) (not (modulo n 61))))\n\
    \         (prime? (lambda (n) (not (modulo n 67))))\n         (prime? (lambda\
    \ (n) (not (modulo n 71))))\n         (prime? (lambda (n) (not (modulo n 73))))\n\
    \         (prime? (lambda (n) (not (modulo n 79))))\n         (prime? (lambda\
    \ (n) (not (modulo n 83))))\n         (prime? (lambda (n) (not (modulo n 89))))\n\
    \         (prime? (lambda (n) (not (modulo n 97))))\n         (prime? (lambda\
    \ (n) (not (modulo n 101))))\n         (prime? (lambda (n) (not (modulo n 103))))\n\
    \         (prime? (lambda (n) (not (modulo n 107"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

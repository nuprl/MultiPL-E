{
  "name": "HumanEval_64_vowels_count",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; Write a function vowels_count which takes a string representing\n;; a word as input and returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given word.\n;; Example:\n;; >>> (vowels_count \"abcde\")\n;; 2\n;; >>> (vowels_count \"ACEDY\")\n;; 3\n(define (vowels_count s)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate vowels_count))\n    (check-equal? (candidate \"abcde\") 2)\n    (check-equal? (candidate \"Alone\") 3)\n    (check-equal? (candidate \"key\") 2)\n    (check-equal? (candidate \"bye\") 1)\n    (check-equal? (candidate \"keY\") 2)\n    (check-equal? (candidate \"bYe\") 1)\n    (check-equal? (candidate \"ACEDY\") 3)\n))\n\n(test-humaneval)",
  "completions": [
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (a b)\n        (cond\n          ((= b #\\y)\n            (+ 1 (string-length a)))\n          ((string-ci? b vowels)\n            (+ 1 (string-length a)))\n          (else\n            0))))\n    s))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n          (append vowels #\\y))\n        (let ((i (string-index-of s #\\e)))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i -1))\n            (append vowels #\\y))\n          (let ((i (string-index-of s #\\i)))\n            (if (< i (string-length s))\n              (append vowels (string-substring s i -1))\n              (append vowels #\\y))\n            (let ((i (string-index-of s #\\o)))\n              (if (< i (string-length s))\n                (append vowels (string-substring s i -1))\n                (append vowels #\\y))\n              (let ((i (string-index-of s #\\u)))\n                (if (< i (string-length s))\n                  (append vowels (string-substring s i -1))\n                  (append vowels #\\y))\n                (let ((i (string-index-of s #\\y)))\n                  (if (< i (string-length s))\n                    (append vowels (string-substring s i -1))\n                    (append vowels #\\y))))))))))))\n  (length vowels)))\n",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s \"\")\n      0\n      (string-append vowels (string-split/char s #\"\"))))\n  vowels)\n\n;; Write a function consonants_count which takes a string representing\n;; a word as input and returns the number of consonants in the string.\n;; Consonants in this case are 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\n;; 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'.\n;; Here, 'y' is also a consonant, but only when it is at the end of the\n;; given word.\n;; Example:\n;; >>> (consonants_count \"abcde\")\n;; 2\n;; >>> (consonants_count \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels 'a)\n    )\n    (if (string=? s #\"e\")\n      (append vowels 'e)\n    )\n    (if (string=? s #\"i\")\n      (append vowels 'i)\n    )\n    (if (string=? s #\"o\")\n      (append vowels 'o)\n    )\n    (if (string=? s #\"u\")\n      (append vowels 'u)\n    )\n    (if (string=? s #\"y\")\n      (append vowels 'y)\n    )\n    (if (string=? s #\"aeiou\")\n      (append vowels 'y)\n    )\n    (length vowels)\n  )\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (set! vowels (append vowels (string-copy/part s i 1)))\n          (vowels_count (substring s i (string-length s)))))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"A\")\n      (append vowels #\"A\")\n    )\n    (if (string=? s #\"E\")\n      (append vowels #\"E\")\n    )\n    (if (string=? s #\"I\")\n      (append vowels #\"I\")\n    )\n    (if (string=? s #\"O\")\n      (append vowels #\"O\")\n    )\n    (if (string=? s #\"U\")\n      (append vowels #\"U\")\n    )\n    (if (string=? s #\"Y\")\n      (append vowels #\"Y\")\n    )\n    (length vowels)\n  )\n)\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") #f)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (member c vowels)\n              (set! count (+ count 1))\n            )\n          )\n          s\n        )\n        count\n      )\n      (else\n        0\n      )\n    )\n  )\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((i (string-index-of s vowels)))\n          (if (< i 0) \"0\"\n              (string-substring i 1)))))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s #\"aeiouy\")\n      (append vowels (string-ci-upcase s))\n      (append vowels (string-ci-downcase s))\n      (append vowels (string-ci-upcase (string-ci-downcase s))))\n    (length vowels)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\a #\\e #\\i #\\o #\\u)\n                                  (vowels (append vowels c))\n                                  ()))\n         s))\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given word.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\a #\\e #\\i #\\o #\\u)\n                               (vowels (append vowels c))\n                               (vowels (append vowels #\\y))))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (mapcar (lambda (c) (string-ci=? c \"aeiouy\")))\n    (string-append vowels (string-split-at-last s \"y\"))))\n",
    "  (let ((vowels '()))\n    (let ((i (string-index s #\"aeiouy\")))\n      (if (eq i (string-length s))\n        (append vowels (string-copy/part s i 1))\n        (append vowels (string-copy/part s i))))\n    (string-join vowels \"\")\n  )\n)\n\n;; Write a function consonants_count which takes a string representing\n;; a word as input and returns the number of consonants in the string.\n;; Consonants in this case are 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\n;; 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'.\n;; Example:\n;; >>> (consonants_count \"abcde\")\n;; 2\n;; >>> (consonants_count \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count 0)))\n      s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of consecutive letters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    (set! count (+ count 1)))\n                (if (eq? c 'e)\n                    (set! count (+ count 1)))\n                (if (eq? c 'i)\n                    (set! count (+ count 1)))\n                (if (eq? c 'o)\n                    (set! count (+ count 1)))\n                (if (eq? c 'u)\n                    (set! count (+ count 1)))\n                (if (eq? c 'y)\n                    (set! count (+ count 1)))))\n    (+ count count)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of consecutive letters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcdef\")\n;; 2",
    "  (let ((vowels '()))\n    (let ((i (string-index-of s #\"a\")))\n      (if (eq i (-1))\n        (string-append vowels #\"y\")\n        (string-append vowels #\"a\")))\n      (let ((i (string-index-of s #\"e\")))\n        (string-append vowels #\"e\"\n          (if (eq i (-1))\n            (string-append vowels #\"y\")\n            (string-append vowels #\"e\"))))\n      (let ((i (string-index-of s #\"i\")))\n        (string-append vowels #\"i\"\n          (if (eq i (-1))\n            (string-append vowels #\"y\")\n            (string-append vowels #\"i\"))))\n      (let ((i (string-index-of s #\"o\")))\n        (string-append vowels #\"o\"\n          (if (eq i (-1))\n            (string-append vowels #\"y\")\n            (string-append vowels #\"o\"))))\n      (let ((i (string-index-of s #\"u\")))\n        (string-append vowels #\"u\"\n          (if (eq i (-1))\n            (string-append vowels #\"y\")\n            (string-append vowels #\"u\"))))\n      (string-join vowels s)))\n\n;; Test it out:",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\n) 0)\n      ((string? s)\n        (let ((i (string-index-of s vowels)))\n          (cond\n            ((= i #\\n) 0)\n            (else 1))))\n      (else 0))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \"aeiouy\"))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((string-length s) 0)\n      ((= s #\\0) 0)\n      (else\n        (let ((i (string-index-of s vowels)))\n          (+ (string-length s) (- i 1)))))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (let ((i (string-index s #\"aeiouy\")))\n      (if (eq i (string-length s))\n        (append vowels (string-copy/part s i 1))\n        (append vowels (string-copy/part s i))))\n    (string-join vowels \"\")\n  )\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defghi\")\n;; 2\n;; >>> (words_count \"abcdefghi\")\n;; 1\n;; >>> (words_count \"abcdefghi defghi\")\n;; 2\n;; >>> (words_count \"abcdefghi defghi defghi\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (vowels (append vowels #\\y))\n          (vowels (append vowels #\\a)))))\n    (+ (length vowels) (string-length s) / 2)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is defined as a sequence of letters, separated by\n;; non-letters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 2\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      [(string-equal? s \"\") # zero vowels in an empty string\n        0]\n      [(string-length s)\n        (string-length vowels)\n        (string-count s vowels)])))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\n) 0)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (member c vowels)\n              (set! count (+ count 1))\n            )\n          )\n          s\n        )\n        count\n      )\n      (else\n        0\n      )\n    )\n  )\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c 'aeiouy) vowels (append vowels c))) s))\n  (length vowels))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    (set! count (+ count 1)))\n                (if (eq? c 'e)\n                    (set! count (+ count 1)))\n                (if (eq? c 'i)\n                    (set! count (+ count 1)))\n                (if (eq? c 'o)\n                    (set! count (+ count 1)))\n                (if (eq? c 'u)\n                    (set! count (+ count 1)))\n                (if (eq? c 'y)\n                    (set! count (+ count 1)))))\n    count))\n",
    "  (let ((vowels '()))\n    (if (string-equal? s \"\")\n      0\n      (let ((i (string-index s 0)))\n        (while (< i (string-length s))\n          (if (string-equal? (string-ref s i) \"aeiou\")\n            (set! vowels (cons (string-ref s i) vowels))\n            (set! i (string-index s i)\n              (if (< i (string-length s))\n                (string-append (string-ref s i) vowels)\n                (string-append (string-ref s i) \"y\"))))))))\n  (+ (length vowels) (string-length s) / 2))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      [(string-length s)\n       (let ((i (string-index s 0)))\n         (cond\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\a #\\e #\\i #\\o #\\u)\n                                  (vowels (append vowels c))\n                                  ()))\n         s))\n  (+ (length vowels) (length s)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (member vowels c)\n              (setq count (+ count 1))\n            )\n          )\n          s\n        )\n        count)\n      )\n      (else\n        \"0\"\n      )\n    )\n  )\n)\n",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member c vowels)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"A\")\n      (append vowels #\"A\")\n    )\n    (if (string=? s #\"E\")\n      (append vowels #\"E\")\n    )\n    (if (string=? s #\"I\")\n      (append vowels #\"I\")\n    )\n    (if (string=? s #\"O\")\n      (append vowels #\"O\")\n    )\n    (if (string=? s #\"U\")\n      (append vowels #\"U\")\n    )\n    (if (string=? s #\"Y\")\n      (append vowels #\"Y\")\n    )\n    (length vowels)\n  )\n)\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      [(string-length s)\n       (let ((i (string-index s 0)))\n         (cond\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref s i)\n            (string-length vowels)\n            ]\n           [(string-ref",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s)))\n  (length vowels))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of non-whitespace characters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abc def\")\n;; 2\n;; >>> (words_count \"abc def ghi\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde abcde\")\n;; 2\n;; >>> (words_count \"abcde abcde abcde\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string? s)\n      (let ((i (string-index s #\"a\")))\n        (if (< i (string-length s))\n          (vowels (append vowels (string-substring s i (string-length s)))))))\n    (string-join vowels \"\")\n  )\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcdef\")\n;; 2\n;; >>> (words_count \"abcdefg\")\n;; 3\n;; >>> (words_count \"abcdefgh\")\n;; 4\n;; >>> (words_count \"abcdefghi\")\n;; 5\n;; >>> (words_count \"abcdefghij\")\n;; 6\n;; >>> (words_count \"abcdefghijk\")\n;; 7\n;; >>> (words_count \"abcdefghijkl\")\n;; 8\n;; >>> (words_count \"abcdefghijklm\")\n;; 9\n;; >>> (words_count \"abcdefghijklmn\")\n;; 10\n;; >>> (words_count \"abcdefghijklmno\")\n;; 11\n;; >>> (words_count \"abcdefghijklmnop\")\n;; 12\n;; >>> (words_count \"abcdefghijklmnopq\")\n;; 13\n;; >>> (words_count \"abcdefghijklmnopqr\")\n;; 14\n;; >>> (words_count \"abcdefghijklmnopqrs\")\n;; 15\n;; >>> (words_count \"abcdefghijklmnopqrst\")\n;; 16\n;; >>> (words_count \"abcdefghijklmnopqrstu\")\n;; 17\n;; >>> (words_count \"abcdefghijklmnopqrstuv\")\n;; 18\n;; >>> (words_count \"abcdefghijklmnopqrstuvw\")\n;; 19\n;; >>> (words_count \"abcdefghijklmnopqrstuvwx\")\n;; 20\n;; >>> (words_count \"abcdefghijklmnopqrstuvwxy\")\n;; 21\n;; >>> (words_count \"abcdefghijklmnopqrstuvwxyz\")\n;; 22\n;; >>> (words_count \"abcdefgh",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    (set! count (+ count 1)))\n                (if (eq? c 'e)\n                    (set! count (+ count 1)))\n                (if (eq? c 'i)\n                    (set! count (+ count 1)))\n                (if (eq? c 'o)\n                    (set! count (+ count 1)))\n                (if (eq? c 'u)\n                    (set! count (+ count 1)))\n                (if (eq? c 'y)\n                    (set! count (+ count 1)))))\n    count))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (member c vowels)\n              (set! count (+ count 1))\n            )\n          )\n          s\n        )\n        count)\n      )\n      (else\n        \"0\"\n      )\n    )\n  )\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n",
    "  (let ((vowels '()))\n    (let ((i (string-index s #\"a\")))\n      (if (< i (string-length s))\n        (append vowels (string-substring s i -1))\n      )\n      (let ((i (string-index s #\"e\")))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (let ((i (string-index s #\"i\")))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (let ((i (string-index s #\"o\")))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (let ((i (string-index s #\"u\")))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (let ((i (string-index s #\"y\")))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (return (length vowels))\n    )\n  )\n)\n",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    (set! count (+ count 1))\n                    (if (eq? c 'e)\n                        (set! count (+ count 1))\n                        (if (eq? c 'i)\n                            (set! count (+ count 1))\n                            (if (eq? c 'o)\n                                (set! count (+ count 1))\n                                (if (eq? c 'u)\n                                    (set! count (+ count 1))\n                                    (if (eq? c 'y)\n                                        (set! count (+ count 1))\n                                        (set! count count))))))))\n                s))\n    (+ count)))\n\n;; Test it out:",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count 0)))\n      s))\n  (+ count 0))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"#\\?\")\n      (append vowels #\"#\\?\")\n    )\n    (if (string=? s #\"#\\!\")\n      (append vowels #\"#\\!\")\n    )\n    (if (string=? s #\"#\\$\")\n      (append vowels #\"#\\$\")\n    )\n    (if (string=? s #\"#\\%\")\n      (append vowels #\"#\\%\")\n    )\n    (if (string=? s #\"#\\&\")\n      (append vowels #\"#\\&\")\n    )\n    (if (string=? s #\"#\\*\")\n      (append vowels #\"#\\*\")\n    )\n    (if (string=? s #\"#\\(\")\n      (append vowels #\"#\\(\")\n    )\n    (if (string=? s #\"#\\)\")\n      (append vowels #\"#\\(\")\n    )\n    (if (string=? s #\"#\\+\")\n      (append vowels #\"#\\+\")\n    )\n    (if (string=? s #\"#\\-\")\n      (append vowels #\"#\\+\")\n    )\n    (if (string=? s #\"#\\.\")\n      (append vowels #\"#\\.\")\n    )\n    (if (string=? s #\"#\\,\")\n      (",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (acc v)\n        (if (member v vowels)\n            (+ 1 acc)\n            acc))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defg\")\n;; 2\n;; >>> (words_count \"abcde defg hijkl\")\n;; 3",
    "  (let ((vowels '()))\n    (let ((i (string-index s #\"a\")))\n      (if (eq i (string-length s))\n        (append vowels (string-copy/part s i 1))))\n    (string-set! vowels (string-append vowels (string-copy/part s i 1))))\n  (string-length vowels))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde abcde\")\n;; 2\n;; >>> (words_count \"abcde abcde abcde\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (x y)\n        (cond\n          ((= y x) 1)\n          ((string=? x vowels) 1)\n          (else 0))))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    (set! count (+ count 1))\n                    (if (eq? c 'e)\n                        (set! count (+ count 1))\n                        (if (eq? c 'i)\n                            (set! count (+ count 1))\n                            (if (eq? c 'o)\n                                (set! count (+ count 1))\n                                (if (eq? c 'u)\n                                    (set! count (+ count 1))\n                                    (if (eq? c 'y)\n                                        (set! count (+ count 1))\n                                        (set! count (+ count 1))))))))))\n    (+ count count)))\n\n;; The function vowels_count should return 2 for the string \"abcde\"\n;; and 3 for the string \"ACEDY\".\n;; >>> vowels_count \"abcde\"\n;; 2\n;; >>> vowels_count \"ACEDY\"\n;; 3\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string. Vowels are defined as\n;; those characters that are either 'a', 'e', 'i', 'o', 'u', or 'y'.\n;; Example:\n;; >>> count_vowels \"abcde\"\n;; 2\n;; >>> count_vowels \"ACEDY\"\n;; 3",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((i (string-index-of s vowels)))\n          (if (< i 0) \"0\"\n              (string-substring i 1)))))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defghi\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s)))\n  (length vowels))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \"aeiouy\"))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n          (append vowels #\\y))\n        (let ((i (string-index-of s #\\e)))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i -1))\n            (append vowels #\\y))\n        (let ((i (string-index-of s #\\i)))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i -1))\n            (append vowels #\\y))\n        (let ((i (string-index-of s #\\o)))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i -1))\n            (append vowels #\\y))\n        (let ((i (string-index-of s #\\u)))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i -1))\n            (append vowels #\\y))\n        (let ((i (string-index-of s #\\y)))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i -1))\n            (append vowels #\\y))\n        (vowels)))\n    )))\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \"aeiouy\"))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defg\")\n;; 2\n;; >>> (words_count \"abcdefg\")\n;; 2\n;; >>> (words_count \"abcdefg defg\")\n;; 3\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm nopqrst\")\n;; 5\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz\")\n;; 6\n;; >>> (words_count \"abcdefg defg hijklm nopqrst uvwxyz",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (set! vowels (append vowels #\\y))\n          (append vowels #\\a))\n        (let ((i (string-index-of s #\\e)))\n          (if (< i (string-length s))\n            (set! vowels (append vowels #\\y))\n            (append vowels #\\e))\n          (let ((i (string-index-of s #\\i)))\n            (if (< i (string-length s))\n              (set! vowels (append vowels #\\y))\n              (append vowels #\\i))\n            (let ((i (string-index-of s #\\o)))\n              (if (< i (string-length s))\n                (set! vowels (append vowels #\\y))\n                (append vowels #\\o))\n              (let ((i (string-index-of s #\\u)))\n                (if (< i (string-length s))\n                  (set! vowels (append vowels #\\y))\n                  (append vowels #\\u)))\n              (let ((i (string-index-of s #\\y)))\n                (if (< i (string-length s))\n                  (append vowels #\\y)\n                  (append vowels #\\y
    "  (let ((vowels '()))\n    (let ((i (string-index s #\"a\")))\n      (if (eq i (string-length s))\n        (append vowels (string-append #\"y\" #\"i\"))))\n    (let ((i (string-index s #\"e\")))\n      (if (eq i (string-length s))\n        (append vowels (string-append #\"y\" #\"e\"))))\n    (let ((i (string-index s #\"i\")))\n      (if (eq i (string-length s))\n        (append vowels (string-append #\"y\" #\"i\"))))\n    (let ((i (string-index s #\"o\")))\n      (if (eq i (string-length s))\n        (append vowels (string-append #\"y\" #\"o\"))))\n    (let ((i (string-index s #\"u\")))\n      (if (eq i (string-length s))\n        (append vowels (string-append #\"y\" #\"u\"))))\n    (let ((i (string-index s #\"y\")))\n      (if (eq i (string-length s))\n        (append vowels (string-append #\"y\"))))\n    (string-join vowels \"\"))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (v)\n        (cond\n          [(= (length s) 1)\n            (not (memv vowels s))\n            (return 0)]\n          [(>= (length s) 1)\n            (let ((i (indexof vowels s)))\n              (return (+ (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s) (length s)",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\a #\\e #\\i #\\o #\\u)\n                                  (vowels (append vowels c))\n                                  ()))\n         s))\n  (+ (length vowels) (length (filter #\"y\" s))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count (+ count 0))))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u)\n                                  (vowels (append vowels c))\n                                  ()))\n         s))\n  (+ (length vowels) (length s)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde abcde\")\n;; 2\n;; >>> (words_count \"abcde abcde abcde\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count 0)))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \"aeiouy\"))\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of letters separated by spaces.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abc def\")\n;; 2\n;; >>> (words_count \"abc def ghi\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"#\\\\a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"#\\\\e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"#\\\\i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"#\\\\o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"#\\\\u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"#\\\\y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"#\\\\#\")\n      (append vowels #\"#\")\n    )\n    (if (string=? s #\"#\\\\#\\\\\")\n      (append vowels #\"#\")\n    )\n    (if (string=? s #\"#\\\\#\\\\#\")\n      (append vowels #\"#\")\n    )\n    (if (string=? s #\"#\\\\#\\\\#\\\\\")\n      (append vowels #\"#\")\n    )\n    (if (string=? s #\"#\\\\#\\\\#\\\\#\")\n      (append vowels #\"#\")\n    )\n    (if (string=? s #\"#\\\\#\\\\#\\\\#\\\\\")\n      (append vowels #\"",
    "  (let ((vowels '()))\n    (mapcar (lambda (c) (string-ci=? c \"aeiouy\")))\n    (string-append vowels (string-split-at-first s \"y\"))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"A\")\n      (append vowels #\"A\")\n    )\n    (if (string=? s #\"E\")\n      (append vowels #\"E\")\n    )\n    (if (string=? s #\"I\")\n      (append vowels #\"I\")\n    )\n    (if (string=? s #\"O\")\n      (append vowels #\"O\")\n    )\n    (if (string=? s #\"U\")\n      (append vowels #\"U\")\n    )\n    (if (string=? s #\"Y\")\n      (append vowels #\"Y\")\n    )\n    (length vowels)\n  )\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels 'aeiouy'))\n    (cond\n      ((= s #\\n) 0)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((member? c vowels)\n                (count (+ 1 count)))\n              (else\n                (set! count 0)\n              )\n            )\n          )\n          (string-to-list s)\n        )\n      )\n      (else\n        (set! count 0)\n      )\n    )\n  )\n)\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond ((string? s)\n           (string-length s))\n          ((= s #\\0)\n           0)\n          (else\n           (string-length s)\n           (string-length (string-append vowels s)))))\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char=c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u #\\\\y)\n                                 vowels\n                                 (append vowels (char-upcase c))))\n       s))\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\n) 0)\n      ((string? s)\n        (let ((i (string-index-of s vowels)))\n          (cond\n            ((= i #\\n) 0)\n            (else 1))))\n      (else 0))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcdef\")\n;; 2\n;; >>> (words_count \"abcdefg\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s \"\")\n      (return 0)\n      (let ((i (string-index s #\"a\")))\n        (if (<= i (string-length s))\n          (vowels (append vowels (string-substring s i (string-length s) i)))\n          (vowels (append vowels (string-substring s 0 i))))\n        (vowels (append vowels (string-substring s i (string-length s)))))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (acc v)\n        (if (member v vowels)\n            (+ 1 acc)\n            acc))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (mapcar (lambda (c) (if (string= c \"aeiouy\") #t #f))\n      (string-split s \"\")\n      (vowels)))\n  (length vowels))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u)\n                                  (vowels (append vowels c))\n                                  (vowels (append vowels #\\\\y))))\n      s)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c \"aeiou\") vowels (append vowels c))) s))\n  (length vowels))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of non-whitespace characters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abc de\")\n;; 2\n;; >>> (words_count \"abc de fg\")\n;; 3",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    (set! count (+ count 1))\n                    (if (eq? c 'e)\n                        (set! count (+ count 1))\n                        (if (eq? c 'i)\n                            (set! count (+ count 1))\n                            (if (eq? c 'o)\n                                (set! count (+ count 1))\n                                (if (eq? c 'u)\n                                    (set! count (+ count 1))\n                                    (if (eq? c 'y)\n                                        (set! count (+ count 1))\n                                        (set! count (+ count 1)))))))))))\n    (+ count 0)))\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((string-length s) 0)\n      ((string-contains? vowels s) 1)\n      (else 0))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s \"\")\n      (return 0)\n      (let ((i (string-index s #\"a\")))\n        (if (< i (string-length s))\n          (vowels (append vowels (string-substring s i -1)))\n          (vowels (append vowels (string-substring s i 1))))\n        (vowels (append vowels (string-substring s 1))))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count 0)))\n      s))\n  )\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"A\")\n      (append vowels #\"A\")\n    )\n    (if (string=? s #\"E\")\n      (append vowels #\"E\")\n    )\n    (if (string=? s #\"I\")\n      (append vowels #\"I\")\n    )\n    (if (string=? s #\"O\")\n      (append vowels #\"O\")\n    )\n    (if (string=? s #\"U\")\n      (append vowels #\"U\")\n    )\n    (if (string=? s #\"Y\")\n      (append vowels #\"Y\")\n    )\n    (length vowels)\n  )\n)\n",
    "  (let ((vowels '()))\n    (if (string? s)\n      (let ((i (string-index s #\"a\")))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i (i + 1))))\n        (let ((i (string-index s #\"e\")))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i (i + 1))))\n        (let ((i (string-index s #\"i\")))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i (i + 1))))\n        (let ((i (string-index s #\"o\")))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i (i + 1))))\n        (let ((i (string-index s #\"u\")))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i (i + 1))))\n        (let ((i (string-index s #\"y\")))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i (i + 1))))\n        (vowels)))\n    (string-join vowels \"\"))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is defined as a sequence of non-whitespace characters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    (set! count (+ count 1))\n                    (if (eq? c 'e)\n                        (set! count (+ count 1))\n                        (if (eq? c 'i)\n                            (set! count (+ count 1))\n                            (if (eq? c 'o)\n                                (set! count (+ count 1))\n                                (if (eq? c 'u)\n                                    (set! count (+ count 1))\n                                    (if (eq? c 'y)\n                                        (set! count (+ count 1))\n                                        (set! count (+ count 1))))))))))\n    (+ count count)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n       (string-split-at-any s)))\n  (length vowels))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (let ((i (string-index-of s #\"a\")))\n      (if (< i 0)\n        (append vowels #\"a\")\n      )\n      (let ((i (string-index-of s #\"e\")))\n        (if (< i 0)\n          (append vowels #\"e\")\n        )\n        (let ((i (string-index-of s #\"i\")))\n          (if (< i 0)\n            (append vowels #\"i\")\n          )\n          (let ((i (string-index-of s #\"o\")))\n            (if (< i 0)\n              (append vowels #\"o\")\n            )\n            (let ((i (string-index-of s #\"u\")))\n              (if (< i 0)\n                (append vowels #\"u\")\n              )\n              (let ((i (string-index-of s #\"y\")))\n                (if (< i 0)\n                  (append vowels #\"y\")\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n    (length vowels)\n  )\n)\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") #f)\n      ((string? s)\n        (let ((vowels \"aeiouy\"))\n          (string-length s)\n          (string-set! s (string-append s vowels))))\n      (string? s)\n      (let ((vowels \"aeiouy\"))\n        (string-length s)\n        (string-set! s (string-append s vowels)))))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count (+ count 0))))\n      s))\n  )\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (string= c \"aeiouy\")\n                    (set! count (+ count (string->number c))))\n                (set! count (+ count (string->number c))))\n              s))\n  count)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde abcde\")\n;; 2\n;; >>> (words_count \"abcde abcde abcde\")\n;; 3\n;; >>> (words_count \"abcde abcde abcde abcde\")\n;; 4\n;; >>> (words_count \"abcde abcde abcde abcde abcde\")\n;; 5\n;; >>> (words_count \"abcde abcde abcde abcde abcde abcde\")\n;; 6\n;; >>> (words_count \"abcde abcde abcde abcde abcde abcde abcde\")\n;; 7\n;; >>> (words_count \"abcde abcde abcde abcde abcde abcde abcde abcde\")\n;; 8\n;; >>> (words_count \"abcde abcde abcde abcde abcde abcde abcde abcde abcde\")\n;; 9\n;; >>> (words_count \"abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde\")\n;; 10\n;; >>> (words_count \"abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde\")\n;; 11\n;; >>> (words_count \"abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde\")\n;; 12\n;; >>> (words_count \"abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde abcde ab",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char=c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u)\n                                  (vowels (append vowels c))\n                                  ()))\n         s))\n  (+ (length vowels) (length (filter #\"y\" s))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels 'aeiouy'))\n    (cond\n      [(string-equal? s #[]) 0]\n      [(string-contains? vowels s)]\n      [(string-contains? vowels (string-append s #\"y\")) 1]\n      [1 0])))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char=c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u #\\\\y)\n                                  (vowels (append vowels c))\n                                  ()))\n       s))\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (let ((i (string-index-of s #\"a\")))\n      (if (< i 0)\n        (append vowels (string-substring s i -1))\n      )\n      (let ((i (string-index-of s #\"e\")))\n        (if (< i 0)\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (let ((i (string-index-of s #\"i\")))\n        (if (< i 0)\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (let ((i (string-index-of s #\"o\")))\n        (if (< i 0)\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (let ((i (string-index-of s #\"u\")))\n        (if (< i 0)\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (let ((i (string-index-of s #\"y\")))\n        (if (< i 0)\n          (append vowels (string-substring s i -1))\n        )\n      )\n      (return (length vowels))\n    )\n  )\n)\n",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"#\\\\a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"#\\\\e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"#\\\\i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"#\\\\o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"#\\\\u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"#\\\\y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"#\\\\#\\\\a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"#\\\\#\\\\e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"#\\\\#\\\\i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"#\\\\#\\\\o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"#\\\\#\\\\u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"#\\\\#\\\\y\")\n      (append vowels #\"y\")\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\0) 0)\n      ((string? s)\n        (let ((i (string-index-of s vowels)))\n          (cond\n            ((= i #\\0) 0)\n            (else 1))))))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defg\")\n;; 2\n;; >>> (words_count \"abcdefg\")\n;; 2\n;; >>> (words_count \"abcdefg defg\")\n;; 3\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n;; >>> (words_count \"abcdefg defg hijklm\")\n;; 4\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\0) 0)\n      ((string-ci=? vowels s)\n       (string-ci=? vowels (string-upcase s)))\n      (else 1))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \"aeiouy\"))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (mapcar (lambda (c) (if (string= c \"aeiouy\") #t #f))\n      (string-split s \"\")\n      vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiou\") vowels (append vowels c)))\n      (string-split-at-any s)))\n  (length vowels))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of letters separated by spaces.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abc def\")\n;; 2\n;; >>> (words_count \"abc def ghi\")\n;; 3",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\0) 0)\n      ((string=? vowels s)\n        (string-length s))\n      (else\n        (string-length s)\n        (string-length (substring s 1 -1)))))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 2\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"A\")\n      (append vowels #\"A\")\n    )\n    (if (string=? s #\"E\")\n      (append vowels #\"E\")\n    )\n    (if (string=? s #\"I\")\n      (append vowels #\"I\")\n    )\n    (if (string=? s #\"O\")\n      (append vowels #\"O\")\n    )\n    (if (string=? s #\"U\")\n      (append vowels #\"U\")\n    )\n    (if (string=? s #\"Y\")\n      (append vowels #\"Y\")\n    )\n    (length vowels)\n  )\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u)\n                                  (vowels (append vowels c))\n                                  ()))\n         s))\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (v)\n        (cond\n          [(= (length s) 1) (cons v 'y')]\n          [(string=? v vowels) (cons v 'y')]\n          [else (cons v 'n')]))))\n  (string->list s))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of non-whitespace characters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 2\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (x y)\n        (cond\n          [(= y 'y') (cond [(find x vowels) 1] [(find y vowels) 1])]\n          [(= y 'a') 1]\n          [(= y 'e') 1]\n          [(= y 'i') 1]\n          [(= y 'o') 1]\n          [(= y 'u') 1]\n          [0]))))\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (member c vowels)\n              (set! count (+ count 1))\n            )\n          )\n          s\n        )\n        count)\n      )\n      (else\n        \"0\"\n      )\n    )\n  )\n)\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\\") (return 0))\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((member? c vowels)\n                (set! count (+ count 1)))\n              (else\n                (set! count 0))))\n            s))\n        (return count)))\n      (else\n        (return 0)))\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (cond ((= s \"\") #f)\n         ((string? s)\n          (let ((i (string-index s 0)))\n            (cond\n              ((= s \"aeiouy\")\n                (+ (string-count vowels s) (if (< i (string-length s)) 1 0)))\n              (else\n                0))))\n         (else #t)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (reduce\n      (lambda (acc v)\n        (if (member v vowels)\n            (+ 1 acc)\n            acc))\n      0 s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\\") (return 0))\n      ((string? s)\n        (let ((i (string-index s #\\\"))))\n        (cond\n          ((= i #\\\") (return 0))\n          (else\n            (let ((c (string-ref s i)))\n              (cond\n                ((= c #\\a) (return 1))\n                ((= c #\\e) (return 1))\n                ((= c #\\i) (return 1))\n                ((= c #\\o) (return 1))\n                ((= c #\\u) (return 1))\n                ((= c #\\y)\n                  (if (string-ref s (- i 1))\n                      (return 1)\n                      (return 0)))\n                (else\n                  (return 0))))))\n      (else\n        (return 0))))\n",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (member c vowels)\n              (set! count (+ count 1))\n            )\n          )\n          s\n        )\n        count)\n      )\n      (else\n        \"0\"\n      )\n    )\n  )\n)\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") #f)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((string? c)\n                (string-ci=? c vowels))\n              (else\n                (set! count (+ count 1))))\n            (s)))\n          count)))\n      (else\n        #f)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 2\n;; >>> (words_count \"ACEDY\")\n;; 2\n;; >>> (words_count \"abcde y\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels 'a)\n    (if (string=? s #\"e\")\n      (append vowels 'e)\n    (if (string=? s #\"i\")\n      (append vowels 'i)\n    (if (string=? s #\"o\")\n      (append vowels 'o)\n    (if (string=? s #\"u\")\n      (append vowels 'u)\n    (if (string=? s #\"y\")\n      (append vowels 'y)\n    (if (string=? s #\"A\")\n      (append vowels 'A)\n    (if (string=? s #\"E\")\n      (append vowels 'E)\n    (if (string=? s #\"I\")\n      (append vowels 'I)\n    (if (string=? s #\"O\")\n      (append vowels 'O)\n    (if (string=? s #\"U\")\n      (append vowels 'U)\n    (if (string=? s #\"Y\")\n      (append vowels 'Y)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vowels '#)\n    (if (string=? s #\"#\")\n      (append vow",
    "  (let ((vowels '()))\n    (mapcar (lambda (c) (if (string= c \"aeiouy\") #t #f))\n       (string-split s \"\")\n       vowels)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    (set! count (+ count 1)))\n                (if (eq? c 'e)\n                    (set! count (+ count 1)))\n                (if (eq? c 'i)\n                    (set! count (+ count 1)))\n                (if (eq? c 'o)\n                    (set! count (+ count 1)))\n                (if (eq? c 'u)\n                    (set! count (+ count 1)))\n                (if (eq? c 'y)\n                    (set! count (+ count 1)))))\n    (+ count count)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (v1 v2)\n        (cond\n          [(= v1 vowels) 1]\n          [(= v2 vowels) 1]\n          [(< v1 v2) 0]\n          [(< v2 v1) 0]\n          [0 0]))))\n  s)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (set! vowels (cons i vowels))\n          (set! vowels (cons i vowels)))))\n    (string-join vowels \"\")\n  )\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (acc v)\n        (if (member v vowels)\n            (+ 1 acc)\n            acc))\n      0 s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") #f)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (memv c vowels)\n              (set! count (+ count 1))\n            )\n          )\n          s\n        )\n        count\n      )\n      (else\n        0\n      )\n    )\n  )\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string. Vowels in this case are\n;; 'a', 'e', 'i', 'o', 'u'.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \" \")))\n  (length vowels))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\a #\\e #\\i #\\o #\\u)\n                                  (vowels (append vowels c))\n                                  ()))\n         s))\n  (+ (length vowels) (length (filter #\\y\n                                  (string-map char-upcase s))))\n)\n",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") #f)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (member c vowels)\n              (set! count (+ count 1))\n            )\n          )\n          s\n        )\n        count\n      )\n      (else\n        (string-for-each (lambda (c)\n          (if (member c vowels)\n            (set! count (+ count 1))\n          )\n        )\n        s\n      )\n    )\n  )\n)\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\n) 0)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((string? c)\n                (string-ci=? c vowels))\n              (else\n                (set! count (+ count 1))))\n            (string-ci=? c vowels)\n            (else\n              (set! count (+ count 1))))\n            s))\n        (+ count (length s))))\n    0))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (eq? c 'a)\n                    count (+ count 1))\n                (if (eq? c 'e)\n                    count (+ count 1))\n                (if (eq? c 'i)\n                    count (+ count 1))\n                (if (eq? c 'o)\n                    count (+ count 1))\n                (if (eq? c 'u)\n                    count (+ count 1))\n                (if (eq? c 'y)\n                    (if (< (length s) 2)\n                        count (+ count 1))))\n              s))\n  (+ count 0)))\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      [(string-equal? s vowels)]\n      [(string-length s)\n       (let ((i (string-index-of s vowels)))\n         (cond\n           [(eq? i (- 1))\n            (string-length s)\n            (string-ref s i)]\n           [(string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n            (string-length s)\n            (string-ref s i)\n",
    "  (let ((vowels '()))\n    (mapcar\n      (lambda (c)\n        (if (eq? c 'y)\n            (if (string=? s (cdr s))\n                'y\n                (append vowels (cons c))))\n        (if (member? c vowels)\n            (cons c)))\n      s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is defined as a sequence of non-whitespace characters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abc def\")\n;; 2\n;; >>> (words_count \"abc def ghi\")\n;; 3\n;; >>> (words_count \"abc def ghi jkl\")\n;; 4\n;; >>> (words_count \"abc def ghi jkl mno\")\n;; 5\n;; >>> (words_count \"abc def ghi jkl mno pqr\")\n;; 6\n;; >>> (words_count \"abc def ghi jkl mno pqr stu\")\n;; 7\n;; >>> (words_count \"abc def ghi jkl mno pqr stu vw\")\n;; 8\n;; >>> (words_count \"abc def ghi jkl mno pqr stu vw xy\")\n;; 9\n;; >>> (words_count \"abc def ghi jkl mno pqr stu vw xy z\")\n;; 10\n;; >>> (words_count \"abc def ghi jkl mno pqr stu vw xy z 1\")\n;; 11\n;; >>> (words_count \"abc def ghi jkl mno pqr stu vw xy z 1 2\")\n;; 12\n;; >>> (words_count \"abc def ghi jkl mno pqr stu vw xy z 1 2 3\")\n;; 13\n;; >>> (words_count \"abc def ghi jkl mno pqr stu vw xy z 1 2 3 4\")\n;; 14\n;; >>> (words_count \"abc def ghi jkl mno pqr stu vw xy z 1 2 3 4 5\")\n",
    "  (let ((vowels 'aeiou'))\n    (cond\n      [(string-equal? s \"\") #f]\n      [(string-length s)\n       (let ((i (string-index-of s vowels)))\n         (cond\n           [(string-index-of s vowels)\n            (string-length s)\n            (string-ref s i)]\n           [#f (string-length s) 0]))]))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string. Vowels in this case are\n;; 'a', 'e', 'i', 'o', 'u'.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split s \"\")\n      (string-length vowels)))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (a b)\n        (cond\n          [(eq? a vowels) (cons 1 a)]\n          [(eq? b vowels) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a 'y) (cons 1 a)]\n          [(eq? b 'y) (cons 1 b)]\n          [(eq? a b) (cons 0)]\n          [(eq? a '",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (a b)\n        (cond\n          [(= b #\\y) (cons #\\y (reduce (lambda (a b) (cond [(= a vowels) 1] [(< a #\\y) 0]))))]\n          [(<= a b) (cons a (reduce (lambda (a b) (cond [(= a vowels) 1] [(< a #\\y) 0]))))]\n          [else (cons a 0)])\n      (string-to-list s)\n      0)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\0) 0)\n      ((string-ci=? vowels s)\n       (string-ci=? vowels (string-upcase s)))\n      (else 1))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n          (append vowels (string-substring s 0 i))))\n      (string-join vowels \"\"))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count 0)))\n      s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defg\")\n;; 2\n;; >>> (words_count \"abcde defg hijkl\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \"aeiouy\"))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (acc v)\n        (if (member v vowels)\n            (+ 1 acc)\n            acc))\n      0 s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((count 0))\n    (for-each (lambda (c)\n                (if (char=c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u)\n                    (set! count (+ count 1))\n                    (if (char=c #\\\\y)\n                        (set! count (+ count 1)))))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n",
    "  (let ((vowels 'aeiou'))\n    (cond\n      ((= s #\\newline) 0)\n      ((string=? s #\\space) 0)\n      (else\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((string=? c vowels) 1)\n              (else\n                (setq count (1 + count))))\n            (string c)))\n          (+ count (string-length s) / 2))))))\n",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((string? c)\n                (string-ref vowels c)\n                (string-ref c \"y\")\n                (+ count 1))\n              (else\n                (+ count 0))))\n            s))))))\n\n;; Write a function string-vowels which takes a string as input and\n;; returns a string containing only the vowels in the input string.\n;; Example:\n;; >>> (string-vowels \"abcde\")\n;; \"aeiouy\"\n;; >>> (string-vowels \"ACEDY\")\n;; \"ACEDY\"",
    "  (let ((vowels 'aeiouy'))\n    (cond\n      ((= s #\\n) 0)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((string? c)\n                (string-ref c vowels)\n                (string-set! c #\\0)\n                (count + 1))\n              (else\n                (count + 0))))\n            s))))\n    0))\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of consecutive letters.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (vowels (append vowels #\\y))\n          (vowels (append vowels #\\a)))))\n    (length vowels)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (acc v)\n        (if (member v vowels)\n            (+ 1 acc)\n            acc))\n      0 s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defg\")\n;; 2\n;; >>> (words_count \"abcde defg hijkl\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (cond\n      [(string-equal? s \"\")]\n      [(string-length s)\n       (let ((i (string-index-of s vowels)))\n         (if (eqv? (string-ref s i) 'y)\n             (string-length s)\n             (string-length s) - 1)\n       )]\n      [(string-length s) 0]\n    )\n  )\n)\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"#\\?\")\n      (append vowels #\"#\\?\")\n    )\n    (if (string=? s #\"#\\!\")\n      (append vowels #\"#\\!\")\n    )\n    (if (string=? s #\"#\\,\")\n      (append vowels #\"#\\,\")\n    )\n    (if (string=? s #\"#\\.\")\n      (append vowels #\"#\\.\")\n    )\n    (if (string=? s #\"#\\;\")\n      (append vowels #\"#\\;\")\n    )\n    (if (string=? s #\"#\\:\")\n      (append vowels #\"#\\:\")\n    )\n    (if (string=? s #\"#\\?\")\n      (append vowels #\"#\\?\")\n    )\n    (if (string=? s #\"#\\!\")\n      (append vowels #\"#\\!\")\n    )\n    (if (string=? s #\"#\\,\")\n      (append vowels #\"#\\,\")\n    )\n    (if (string=? s #\"#\\.\")\n      (append vowels #\"#\\.\")\n    )\n    (if (string=? s #\"#\\;\")\n      (append vowels #\"#\\;\")\n    )\n    (if (string=? s #\"#\\:\")\n      (append vow",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (count acc)\n        (if (member acc vowels)\n            (+ 1 count)\n            acc))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \"aeiouy\")))\n  (length vowels))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given word.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count (+ count 0))))\n      s))\n  )\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcdef\")\n;; 2\n;; >>> (words_count \"abcdefg\")\n;; 3",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((string? c)\n                (string-ci=? vowels c)\n                (count (+ 1 (string-ci=? vowels c))))\n              (else\n                (count 1))))\n            s))))\n    (+ count 0)))\n",
    "  (let ((vowels '()))\n    (mapcar (lambda (c) (if (string= c \"aeiouy\") #t #f)) s)\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; A word is a sequence of letters separated by spaces.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s #\\0) 0)\n      ((string? s)\n        (let ((vowels \"aeiouy\"))\n          (string-length s)\n          (string-map (lambda (c) (member? c vowels)) s)))\n      (else\n        (let ((vowels \"aeiouy\"))\n          (string-length s)\n          (string-map (lambda (c) (member? c vowels))\n            (string-append s #\\0)))))))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (append vowels (string-substring s i -1))\n          (append vowels #\\y))\n        (let ((i (string-index-of s #\\e)))\n          (if (< i (string-length s))\n            (append vowels (string-substring s i -1))\n            (append vowels #\\y))\n          (let ((i (string-index-of s #\\i)))\n            (if (< i (string-length s))\n              (append vowels (string-substring s i -1))\n              (append vowels #\\y))\n            (let ((i (string-index-of s #\\o)))\n              (if (< i (string-length s))\n                (append vowels (string-substring s i -1))\n                (append vowels #\\y))\n              (let ((i (string-index-of s #\\u)))\n                (if (< i (string-length s))\n                  (append vowels (string-substring s i -1))\n                  (append vowels #\\y))\n                (let ((i (string-index-of s #\\y)))\n                  (if (< i (string-length s))\n                    (append vowels (string-substring s i -1))\n                    (append vowels #\\y
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u)\n                                  (vowels (append vowels c))\n                                  (vowels (append vowels #\\\\y))))\n      s))\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defghi\")\n;; 2\n;; >>> (words_count \"abcde defghi xyz\")\n;; 3\n;; >>> (words_count \"abcde defghi xyz abcde\")\n;; 2\n;; >>> (words_count \"abcde defghi xyz abcde defghi\")\n;; 3\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz\")\n;; 4\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz\")\n;; 5\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz xyz\")\n;; 6\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz xyz xyz\")\n;; 7\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz xyz xyz xyz\")\n;; 8\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz xyz xyz xyz xyz\")\n;; 9\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz xyz xyz xyz xyz xyz\")\n;; 10\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz xyz xyz xyz xyz xyz xyz\")\n;; 11\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz xyz xyz xyz xyz xyz xyz xyz\")\n;; 12\n;; >>> (words_count \"abcde defghi xyz abcde defghi xyz xyz",
    "  (let ((vowels '()))\n    (if (string=? s \"\")\n      (return 0)\n      (let ((i (string-index s #\"a\")))\n        (if (< i (string-length s))\n          (vowels (append vowels (string-substring s i -1)))\n          (vowels (append vowels #\"y\"))))\n      (string-join vowels s)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiou\") vowels (append vowels c)))\n      (string-split-at-any s)))\n  (length vowels))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (set! vowels (append vowels (string-copy/part s i 1)))\n          (set! vowels (append vowels (string-copy/part s i 2)))\n          (set! vowels (append vowels (string-copy/part s i 3)))\n          (set! vowels (append vowels (string-copy/part s i 4)))\n          (set! vowels (append vowels (string-copy/part s i 5)))\n          (set! vowels (append vowels (string-copy/part s i 6)))\n          (set! vowels (append vowels (string-copy/part s i 7)))\n          (set! vowels (append vowels (string-copy/part s i 8)))\n          (set! vowels (append vowels (string-copy/part s i 9)))\n          (set! vowels (append vowels (string-copy/part s i 10)))\n          (set! vowels (append vowels (string-copy/part s i 11)))\n          (set! vowels (append vowels (string-copy/part s i 12)))\n          (set! vowels (append vowels (string-copy/part s i 13)))\n          (set! vowels (append vowels (string-copy/part s i 14)))\n          (set! vowels (append vowels (string-copy/part s i 15)))\n          (set! vowels (append vowels (string-copy/part s i 16)))\n          (set! vowels (append vowels (string-copy/part s i 17)))\n          (set! vowels (append vowels (string-copy/part s i 18)))\n          (set! vowels (append vowels (string-copy/part s i 19)))\n          (set! vowels (append vowels (string-copy/part s i 20)))\n          (set! vowels (append vowels (string-copy/part s i 21)))\n          (set! vowels (append vowels (string-copy/part s",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") \"0\")\n      ((string? s)\n        (let ((i (string-index s 0)))\n          (cond\n            ((= s \"y\")\n              (if (< i (string-length s) -1)\n                (string-set! i i + 1)\n                1)\n              (string-set! i i + 1))\n            (else\n              (string-set! i i + 1)\n              0))))))\n",
    "  (let ((vowels 'aeiouy'))\n    (cond\n      ((= s #\\0) 0)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (cond\n              ((string? c)\n                (string-ref vowels c)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string-ref c vowels)\n                (string",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\a #\\e #\\i #\\o #\\u)\n                                  (vowels (append vowels c))\n                                  (vowels (append vowels #\\y))))\n      s)))\n",
    "  (let ((vowels '()))\n    (let ((i (string-index s #\"aeiouy\")))\n      (if (< i 0)\n        (set! vowels (append vowels (string-copy/part s i 1))))\n      (if (string-char s i)\n        (set! vowels (append vowels (string-copy/part s i 1))))\n      (return (length vowels))))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given word.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels 'aeiouy'))\n    (reduce\n      (lambda (acc v)\n        (if (member v vowels)\n            (+ acc 1)\n            acc))\n      0 s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defg\")\n;; 2\n;; >>> (words_count \"abcdefg\")\n;; 2\n;; >>> (words_count \"abcdefg defg\")\n;; 3\n;; >>> (words_count \"abcdefg defg\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s #\"^[aeiouy]$\")\n      (append vowels (string-length s))\n      (append vowels (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string-length s) (string",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\"))\n    (cond\n      ((= s \"\") #f)\n      ((string? s)\n        (let ((count 0))\n          (string-for-each (lambda (c)\n            (if (member c vowels)\n              (set! count (+ count 1))\n            )\n          )\n          s\n        )\n        count\n      )\n      (else\n        0\n      )\n    )\n  )\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char=c #\\a #\\e #\\i #\\o #\\u)\n                                      (vowels (append vowels c))\n                                      ()))\n      s))\n)\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c \"aeiou\") vowels (set! vowels (append vowels c))))\n      s)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    (set! count 0)))\n      s))\n  (+ count 0))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"#\\?\")\n      (append vowels #\"#\\?\")\n    )\n    (if (string=? s #\"#\\!\")\n      (append vowels #\"#\\!\")\n    )\n    (if (string=? s #\"#\\$\")\n      (append vowels #\"#\\$\")\n    )\n    (if (string=? s #\"#\\%\")\n      (append vowels #\"#\\%\")\n    )\n    (if (string=? s #\"#\\&\")\n      (append vowels #\"#\\&\")\n    )\n    (if (string=? s #\"#\\*\")\n      (append vowels #\"#\\*\")\n    )\n    (if (string=? s #\"#\\+\")\n      (append vowels #\"#\\+\")\n    )\n    (if (string=? s #\"#\\,\")\n      (append vowels #\"#\\,\")\n    )\n    (if (string=? s #\"#\\.\")\n      (append vowels #\"#\\.\")\n    )\n    (if (string=? s #\"#\\;\")\n      (append vowels #\"#\\;\")\n    )\n    (if (string=? s #\"#\\:\")\n      (append vowels #\"#\\:\")\n    )\n    (if (string=? s #\"#\\?\")\n      (",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (vowels (append vowels #\\y))\n          (vowels (append vowels #\\a)))))\n    (+ (length vowels) (string-length s) / 2)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (char= c #\\\\a #\\\\e #\\\\i #\\\\o #\\\\u)\n                                  (vowels (append vowels c))\n                                  ()))\n         s))\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) 1 0)) s)\n    (length vowels)))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (if (string=? s \"\")\n      (return 0)\n      (let ((i (string-index s #\"a\")))\n        (if (<= i (string-length s))\n          (vowels (append vowels (string-substring s i -1)))\n          (vowels (append vowels #\"y\"))))\n      (let ((i (string-index s #\"e\")))\n        (if (<= i (string-length s))\n          (vowels (append vowels (string-substring s i -1)))\n          (vowels (append vowels #\"y\"))))\n      (let ((i (string-index s #\"i\")))\n        (if (<= i (string-length s))\n          (vowels (append vowels (string-substring s i -1)))\n          (vowels (append vowels #\"y\"))))\n      (let ((i (string-index s #\"o\")))\n        (if (<= i (string-length s))\n          (vowels (append vowels (string-substring s i -1)))\n          (vowels (append vowels #\"y\"))))\n      (let ((i (string-index s #\"u\")))\n        (if (<= i (string-length s))\n          (vowels (append vowels (string-substring s i -1)))\n          (vowels (append vowels #\"y\"))))\n      (vowels)))\n",
    "  (let ((vowels '()))\n    (if (string-empty? s)\n      0\n      (let ((i (string-index-of s #\\a)))\n        (if (< i (string-length s))\n          (set! vowels (append vowels (string-copy/part s i 1)))\n          (set! vowels (append vowels (string-copy/part s i 2)))\n          (set! vowels (append vowels (string-copy/part s i 3)))\n          (set! vowels (append vowels (string-copy/part s i 4)))\n          (set! vowels (append vowels (string-copy/part s i 5)))\n          (set! vowels (append vowels (string-copy/part s i 6)))\n          (set! vowels (append vowels (string-copy/part s i 7)))\n          (set! vowels (append vowels (string-copy/part s i 8)))\n          (set! vowels (append vowels (string-copy/part s i 9)))\n          (set! vowels (append vowels (string-copy/part s i 10)))\n          (set! vowels (append vowels (string-copy/part s i 11)))\n          (set! vowels (append vowels (string-copy/part s i 12)))\n          (set! vowels (append vowels (string-copy/part s i 13)))\n          (set! vowels (append vowels (string-copy/part s i 14)))\n          (set! vowels (append vowels (string-copy/part s i 15)))\n          (set! vowels (append vowels (string-copy/part s i 16)))\n          (set! vowels (append vowels (string-copy/part s i 17)))\n          (set! vowels (append vowels (string-copy/part s i 18)))\n          (set! vowels (append vowels (string-copy/part s i 19)))\n          (set! vowels (append vowels (string-copy/part s i 20)))\n          (set! vowels (append vowels (string-copy/part s i 21)))\n          (set! vowels (append vowels (string-copy/part s",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (member c vowels) (append vowels c))) s)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"abcde defghi\")\n;; 2\n;; >>> (words_count \"abcdefghi\")\n;; 1",
    "  (let ((vowels '()))\n    (let ((i (string-index-of s #\"a\")))\n      (if (< i (string-length s))\n        (append vowels (string-substring s i -1))))\n    (let ((i (string-index-of s #\"e\")))\n      (if (< i (string-length s))\n        (append vowels (string-substring s i -1))))\n    (let ((i (string-index-of s #\"i\")))\n      (if (< i (string-length s))\n        (append vowels (string-substring s i -1))))\n    (let ((i (string-index-of s #\"o\")))\n      (if (< i (string-length s))\n        (append vowels (string-substring s i -1))))\n    (let ((i (string-index-of s #\"u\")))\n      (if (< i (string-length s))\n        (append vowels (string-substring s i -1))))\n    (let ((i (string-index-of s #\"y\")))\n      (if (< i (string-length s))\n        (append vowels (string-substring s i -1))))\n    (string-join vowels \"\"))))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels \"aeiouy\")\n        (count 0))\n    (for-each (lambda (c)\n                (if (member vowels c)\n                    (set! count (+ count 1))\n                    ()))\n      s))\n)\n",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"A\")\n      (append vowels #\"A\")\n    )\n    (if (string=? s #\"E\")\n      (append vowels #\"E\")\n    )\n    (if (string=? s #\"I\")\n      (append vowels #\"I\")\n    )\n    (if (string=? s #\"O\")\n      (append vowels #\"O\")\n    )\n    (if (string=? s #\"U\")\n      (append vowels #\"U\")\n    )\n    (if (string=? s #\"Y\")\n      (append vowels #\"Y\")\n    )\n    (length vowels)\n  )\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiouy\") vowels (append vowels c)))\n      (string-split-at-any s \"aeiouy\"))\n    (length vowels)))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2",
    "  (let ((vowels '()))\n    (if (string=? s #\"a\")\n      (append vowels #\"a\")\n    )\n    (if (string=? s #\"e\")\n      (append vowels #\"e\")\n    )\n    (if (string=? s #\"i\")\n      (append vowels #\"i\")\n    )\n    (if (string=? s #\"o\")\n      (append vowels #\"o\")\n    )\n    (if (string=? s #\"u\")\n      (append vowels #\"u\")\n    )\n    (if (string=? s #\"y\")\n      (append vowels #\"y\")\n    )\n    (if (string=? s #\"A\")\n      (append vowels #\"A\")\n    )\n    (if (string=? s #\"E\")\n      (append vowels #\"E\")\n    )\n    (if (string=? s #\"I\")\n      (append vowels #\"I\")\n    )\n    (if (string=? s #\"O\")\n      (append vowels #\"O\")\n    )\n    (if (string=? s #\"U\")\n      (append vowels #\"U\")\n    )\n    (if (string=? s #\"Y\")\n      (append vowels #\"Y\")\n    )\n    (length vowels)\n  )\n)\n",
    "  (let ((vowels '()))\n    (for-each (lambda (c) (if (string= c \"aeiou\") vowels (append vowels c))) s))\n  (length vowels))\n\n;; Write a function count_vowels which takes a string as input and\n;; returns the number of vowels in the string.\n;; Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n;; vowel, but only when it is at the end of the given word.\n;; Example:\n;; >>> (count_vowels \"abcde\")\n;; 2\n;; >>> (count_vowels \"ACEDY\")\n;; 3",
    "  (let ((vowels '()))\n    (mapcar (lambda (c) (string-ci=? c \"aeiouy\")))\n    (string-ci=? s vowels)\n    ))\n\n;; Write a function words_count which takes a string representing\n;; a word as input and returns the number of words in the string.\n;; Example:\n;; >>> (words_count \"abcde\")\n;; 1\n;; >>> (words_count \"ACEDY\")\n;; 2"
  ],
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ]
}
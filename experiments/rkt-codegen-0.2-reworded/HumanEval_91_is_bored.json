{
  "name": "HumanEval_91_is_bored",
  "language": "rkt",
  "prompt": "#lang racket\n\n;; You'll be given a string of words, and your task is to count the number\n;; of boredoms. A boredom is a sentence that starts with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1\n(define (is_bored S)\n",
  "tests": "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate is_bored))\n    (check-equal? (candidate \"Hello world\") 0)\n    (check-equal? (candidate \"Is the sky blue?\") 0)\n    (check-equal? (candidate \"I love It !\") 1)\n    (check-equal? (candidate \"bIt\") 0)\n    (check-equal? (candidate \"I feel good today. I will be productive. will kill It\") 2)\n    (check-equal? (candidate \"You and I are going for a walk\") 0)\n))\n\n(test-humaneval)",
  "completions": [
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words words w)))\n                            0))))\n      (+ (reduce (lambda (a b) (if (null? b) a (bdr? a b))) boreds 0)\n         (count-words words \"I\"))))\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((count 0))\n      (for-each (lambda (word)\n                  (if (string=? word \"I\")\n                      (set! count (+ count 1))\n                      ()))\n        words)))\n  count)\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (length S))\n      (if (string=? S i)\n          (set! i (+ i 1))\n          (set! i (- i 1))))))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of times you see the word \"I\" in each sentence.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                          (+ 1 (count-words w)))\n                          0))))\n      (+ (length words) (count-words words))))\n  )\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words)))\n          (counts (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                            (+ 1 (is_bored (cdr bored)))))))\n          (map (lambda (count)\n                (if (string=? count \"I\")\n                    (+ 1 (is_bored (cdr count)))))))\n        (+ counts boreds)))\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                        words)))\n          (counts (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                            (+ 1 (is_bored (cdr bored))))\n                        boreds))))\n      (+ counts 0)))\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string=? words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of boring words. A boring word is a word that starts with the letter \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i (0)))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1))\n          (set! i (+ 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words w)))\n                        0))))\n      (+ (reduce (lambda (a b) (if (string= b \".\")\n                                  (+ 1 a)\n                                  (+ 1 b)))\n           0)\n         (reduce (lambda (a b) (if (string= b \"?\")\n                                  (+ 1 a)\n                                  (+ 1 b)))\n           0)\n         (reduce (lambda (a b) (if (string= b \"!\")\n                                  (+ 1 a)\n                                  (+ 1 b)))\n           0)))\n    boreds))\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))\n                            0))))\n      (+ (reduce (lambda (boreds)\n                  (if (null? boreds)\n                      0\n                      (+ 1 (count-words (cdr boreds)))))))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n          (set! i (+ i 1)))))\n    (+ i 0)))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \".\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"?\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"!\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1)))))\n\n;; You'll also be given a string of words, and your task is to count the\n;; number of words that are not boring.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (not_bored \"Hello world\")\n;; 1\n;; >>> (not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (cdr words))))\n                          words))))\n      (+ (length boreds) (is_bored (cdr (cdr boreds)))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (counts (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-counts (zip boreds counts)))\n      (+ (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (lambda (a b) (if (null? b) 0 (+ a b))) 0)\n         (reduce (",
    "  (let ((i 0))\n    (while (< i (length S))\n      (if (string=? S i)\n          (set! i (+ i 1))\n          (set! i 0)))\n    i))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words words w)))\n                        0))))\n      (+ (length boreds) (count-words words \"I\"))))\n  )\n",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string=? words/1 \"I\")\n            (set! i (+ i 1)))\n        (set! i 0)))\n    (+ i 1)))\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (length S))\n      (if (string=? S i)\n        (set! i (+ i 1))\n        (set! i (- i 1))))\n    (+ i 1)))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of boring words. A boring word is a word that starts with the letter \"I\".\n;; Words are delimited by whitespace.\n;; For example:\n;; >>> (is_boring \"Hello world\")\n;; 0\n;; >>> (is_boring \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i (string-index S \"I\")))\n    (cond\n      ((eq i 0) 0)\n      ((eq (string-index S \".\" \"?\" \"!\") i) 1)\n      (else 1)\n    )\n  )\n)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times the word \"I\" appears in the sentences.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                        words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds))))\n      (+ (length boreds) (length words))))\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string=? words/1 \"I\")\n            (set! i (+ i 1)))))\n    i))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of times you see the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                          words)))\n          (count (length boreds))))\n    (+ count (is_bored (cdr (first words))))))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i)))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))\n    i))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that start with \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (map (lambda (word)",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ i 1)))\n      (if (string-prefix? S i \".\")\n        (set! i (+ i 1)))\n      (if (string-prefix? S i \"?\")\n        (set! i (+ i 1)))\n      (if (string-prefix? S i \"!\")\n        (set! i (+ i 1)))\n      (set! i (+ i 1)))))\n\n;; The number of boredoms in the string is the number of times you\n;; encounter the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds))))\n      (+ (length boreds) (length words))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are used more than once.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_words \"Hello world\")\n;; 2\n;; >>> (count_words \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((i (string-index S \"I\")))\n    (if (< i 0)\n      0\n      (+ (is_bored (substring S i 1))\n         (is_bored (substring S 0 i -1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times that the word \"I\" appears in the sentences.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n          (set! i (+ 1 i))))\n    i))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times the word \"I\" appears in the sentences.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i)))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string=? words/1 \"I\")\n            (set! i (1+ i)))))\n    i))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n          (set! i (+ 1 i))))\n    i))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times you see the word \"bored\" in the string.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n\t  (set! i (+ 1 i)))\n      (set! i (+ 1 i)))))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of times you see the word \"bored\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words)))\n          (count (length boreds))))\n      count)))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (cdr word))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds)))\n      (length boreds))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are used in the same sentence.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_words \"Hello world\")\n;; 2\n;; >>> (count_words \"The sky is blue. The sun is shining. I love this weather\")\n;; 5",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (cdr words))))\n                        words)))\n          (counts (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (cdr boreds)))))\n          (counts (map (lambda (count)\n                        (if (string=? count \"I\")\n                          (+ 1 (cdr counts))))))))\n    (+ (car counts) (car boreds))))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n          (set! i (+ 1 i))))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of boring words. A boring word is a word that starts with the letter \"I\".\n;; Words are delimited by whitespace.\n;; For example:\n;; >>> (is_boring \"Hello world\")\n;; 0\n;; >>> (is_boring \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are not boring. A word is boring if it starts with the\n;; word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (not_bored \"Hello world\")\n;; 1\n;; >>> (not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 6",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (counts (map (lambda (w) (counts boreds w))))\n          (boreds-count (lambda (w) (counts w))))\n      (+ (reduce (lambda (a b) (boreds-count a b)) 0)\n         (reduce (lambda (a b) (boreds-count a b)) 1))))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ i 1))\n        (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? (substring S i i) \"I\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1))))\n  0)\n\n;; You'll also be given a string of words, and you'll be asked to count the\n;; number of sentences. A sentence is a string of words that is not empty.\n;; For example:\n;; >>> (count_sentences \"Hello world\")\n;; 1\n;; >>> (count_sentences \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (cdr word))))\n                          words))))\n      (+ (length boreds) (length words))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times you see the word \"I\" in the first sentence.\n;; For example:\n;; >>> (first_sentence_has_i \"The sky is blue. The sun is shining. I love this weather.\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (cdr word))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds))))\n      (+ (length boreds) (length words))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words word)))\n                            0))))\n      (+ (reduce (lambda (a b) (if (null? b) a (bdr? a b)))\n           boreds words))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are used more than once.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count-words \"Hello world\")\n;; 2\n;; >>> (count-words \"The sky is blue. The sun is shining. I love this weather\")\n;; 5",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (substring word 1))))\n                        words)))\n          (counts (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                            (+ 1 (counts (substring bored 1))))))))\n      (+ counts 0)))\n)\n",
    "  (let ((i 0))\n    (while (< i (length S))\n      (if (string=? \"I\" (string-ref S i))\n        (set! i (+ i 1))\n        (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times you see the word \"bored\".\n;; For example:\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2\n;; >>> (count_bored \"The sky is blue. The sun is shining. I am bored. I love this weather\")\n;; 4",
    "  (let ((i (0)))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (is_bored_sentences \"I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))))\n                        words)))\n      (+ (length boreds) (count-words words))))\n  )\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (length w))\n                            0))))\n      (+ (length words) (sum boreds))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                        words))))\n      (+ (length boreds) (length words))))\n  0)\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are used in the same sentence.\n;; For example:\n;; >>> (count_words \"Hello world\")\n;; 1\n;; >>> (count_words \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds)))\n      (if (null? boreds)\n          0\n          (+ 1 (is_bored (car (first boreds))))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                          words)))\n          (counts (map (lambda (bored)\n                        (if (null? bored)\n                            0\n                            (+ 1 (is_bored (cdr bored)))))))\n         (+ counts (is_bored (car words)))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word)))\n                            0))))\n          (boreds (filter (lambda (word)\n                           (string=? word \"I\")))))))\n  (+ (length boreds) (length words)))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are not boring. A word is boring if it starts with the\n;; word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (not_bored \"Hello world\")\n;; 1\n;; >>> (not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n        (set! i (+ 1 i))))\n    i))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1))\n          (set! i (+ i 1))))))\n\n;; You'll also be given a number of words to generate.\n;; For example:\n;; >>> (bored_words 5)\n;; \"I am bored. I am bored. I am bored. I am bored. I am bored.\"\n;; >>> (bored_words 100)\n;; \"I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored.",
    "  (let ((i 0))\n    (while (< i (length S))\n      (if (string=? S i)\n        (set! i (+ i 1))\n        (if (string=? S i)\n          (set! i (+ i 1))\n          (if (string=? S i)\n            (set! i (+ i 1))\n            (if (string=? S i)\n              (set! i (+ i 1))\n              (if (string=? S i)\n                (set! i (+ i 1))\n                (if (string=? S i)\n                  (set! i (+ i 1))\n                  (if (string=? S i)\n                    (set! i (+ i 1))\n                    (if (string=? S i)\n                      (set! i (+ i 1))\n                      (if (string=? S i)\n                        (set! i (+ i 1))\n                        (if (string=? S i)\n                          (set! i (+ i 1))\n                          (if (string=? S i)\n                            (set! i (+ i 1))\n                            (if (string=? S i)\n                              (set! i (+ i 1))\n                              (if (string=? S i)\n                                (set! i (+ i 1))\n                                (if (string=? S i)\n                                  (set! i (+ i 1))\n                                  (if (string=? S i)\n                                    (set! i (+ i 1))\n                                    (if (string=? S i)\n                                      (set! i (+ i 1))\n                                      (if (string=? S i)\n                                        (set! i (+ i 1))\n                                        (if (string=? S i)\n                                          (set! i (+ i 1))\n                                          (if (string=? S i)\n                                            (set! i (+ i 1))\n                                            (if (string=? S i)\n                                              (set! i (+ i 1))\n                                              (if (string=? S i)\n                                                (set! i (+ i 1))\n                                                (if (string=? S i)\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n        (set! i (+ 1 i))))\n    0))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds))))\n      (+ (length boreds) (length words))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (length w)))\n                        (if (string= w \".\"\n                            (+ 1 (length w)))\n                            (if (string= w \"?\"\n                                (+ 1 (length w)))\n                               (if (string= w \"!\"\n                                  (+ 1 (length w)))\n                                  (+ 1 (length w))))))))\n      (+ (length words) boreds))))\n  (+ (length words) boreds)))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (cdr word))))\n                          words)))\n          (counts (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (counts (map (lambda (count)\n                        (if (string=? count \"I\")\n                          (+ 1 (is_bored (cdr count))))\n                          counts)))\n        (+ counts boreds))))\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (count-words words))))\n                        words)))\n      (+ (length boreds) (count-words words))))\n  (is-bored S))\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i)))))\n  0)\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of times the word \"I\" appears in the sentences.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word))\n                            0))))\n      (+ (reduce (lambda (boreds)\n                  (if (null? boreds)\n                      0\n                      (+ 1 (reduce (lambda (boreds)\n                                    (if (null? boreds)\n                                        0\n                                        (+ 1 (length (car boreds)))))))))))))))\n",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? S i)\n          (set! i (+ i 1))\n          (set! i (- i 1))))))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored_sentences \"Hello world\")\n;; 0\n;; >>> (is_bored_sentences \"The sky is blue. The sun is shining. I love this weather.\")\n;; 1",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? (substring S i i) \"I\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words w)))\n                            0))))\n      (+ (length words) (count-words words))))\n  )\n)\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i)))\n      (set! i (+ 1 i))))\n  0)\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are not boring. A word is boring if it starts with the\n;; word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_not_bored \"Hello world\")\n;; 1\n;; >>> (is_not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? \"I\" (string-ref S i))\n        (set! i (+ i 1))\n        (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times that the word \"I\" appears in the sentences.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (cdr word))))\n                          words)))\n          (counts (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (boreds (map (lambda (count)\n                        (if (string=? count \"I\")\n                          (+ 1 (is_bored (cdr count))))\n                          counts)))\n          (boreds (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (boreds (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (boreds (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (boreds (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (boreds (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (boreds (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (boreds (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is_bored (cdr bored))))\n                          boreds)))\n          (boreds (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                          (+ 1 (is",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words w)))\n                        0))))\n      (+ (length words) (count-words words))))\n  0)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (length w)))\n                        (if (string= w \".\"\n                             || string= w \"?\"\n                             || string= w \"!\")\n                            (+ 1 (length w)))\n                        (if (string= w \"I\")\n                            (+ 1 (length w)))\n                        (if (string= w \".\")\n                            (+ 1 (length w)))\n                        (if (string= w \"?\")\n                            (+ 1 (length w)))\n                        (if (string= w \"!\")\n                            (+ 1 (length w)))))\n                      words))))\n  (+ (length boreds) (length words)))\n)\n",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? \"I\" (string-ref S i))\n        (set! i (+ i 1))\n        (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times the word \"I\" appears in the sentences.\n;; For example:\n;; >>> (count_boreds \"The sky is blue. The sun is shining. I love this weather.\")\n;; 2\n;; >>> (count_boreds \"The sky is blue. The sun is shining. I love this weather. I'm bored.\")\n;; 3",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \".\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"?\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"!\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1)))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are not boring. A word is boring if it starts with the\n;; word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (not_bored \"Hello world\")\n;; 1\n;; >>> (not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds)))\n      (+ (length boreds) (length words))))\n  0)\n",
    "  (let ((i (string-index S \"I\")))\n    (if (eq i 0)\n      (+ 1 (string-length S) - i)))\n  0)\n\n;; You'll also be given a list of words. Your task is to count the number\n;; of words that are used in the same sentence as the word in the list.\n;; For example:\n;; >>> (count_words_in_same_sentence \"Hello world\")\n;; 0\n;; >>> (count_words_in_same_sentence \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                          words)))\n          (boreds (filter (lambda (bored)\n                           (string=? (first bored) \"I\"))\n                    boreds)))\n      (if (empty? boreds)\n          0\n          (+ 1 (is_bored (first bored)))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words w)))\n                            0))))\n      (+ (reduce (lambda (a b) (if (null? b) a (bdr? a b))) boreds words))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (length w)))\n                        (string-length w))))\n          (boreds (filter (lambda (w) (string= w \"I\")))))))\n  (+ (length words) boreds))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are not boring. A word is boring if it starts with the\n;; word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_not_bored \"Hello world\")\n;; 1\n;; >>> (is_not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((words (split-string S '.')))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string=? words/1 \"I\")\n            (set! i (+ i 1)))\n        (set! i 0)))\n    (+ i 1)))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))))\n                        words)))\n      (+ (length boreds) (count-words words))))\n  (is-bored S))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i)))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? \"I\" (string-ref S i))\n        (set! i (+ i 1)))\n      (set! i (+ i 1))))\n  0)\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                        words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")))))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times you see the word \"I\" in the sentences.\n;; For example:\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather.\")\n;; 2\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather.\")\n;; 2\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i)))))\n  0)\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that start with the letter 'i'.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_i \"Hello world\")\n;; 0\n;; >>> (count_i \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word))\n                            0))))\n      (+ (reduce (lambda (boreds)\n                  (if (empty? boreds)\n                      0\n                      (+ (reduce (lambda (boreds)\n                                 (if (empty? boreds)\n                                    0\n                                    (+ 1 (length (first boreds))))))))\n                    words)))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))\n                            0))))\n      (+ (length boreds) (count-words words))))))\n",
    "  (let ((words (split-string S '.')))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string=? words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of times you see the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? \"I\" (string-ref S i))\n\t  (set! i (+ i 1)))\n      (set! i (+ i 1)))\n    0))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ i 1)))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            (0))))\n          (boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))))\n                        words)))\n      (+ (length boreds) (count-words words))))\n  )\n)\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n\t  (set! i (+ i 1)))\n      (if (string-prefix? S i \".\")\n\t  (set! i (+ i 1)))\n      (if (string-prefix? S i \"?\")\n\t  (set! i (+ i 1)))\n      (if (string-prefix? S i \"!\")\n\t  (set! i (+ i 1)))\n      (set! i (+ i 1)))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (is_bored_sentences \"The sky is blue. The sun is shining. I love this weather.\")\n;; 1\n;; >>> (is_bored_sentences \"Hello world. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I love this weather. I",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n\n;; You'll also be given a list of words. Your task is to count the number\n;; of words that are boring. A word is boring if it is a single letter.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                        words)))\n          (count (length boreds)))\n      (+ count (is_bored (cdr words))))))\n\n;; >>> (is_bored \"I am bored\")\n;; 1\n;; >>> (is_bored \"I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words w)))\n                        (0))))\n          (boreds (map (lambda (w)\n                        (if (string= w \".\")\n                            (+ 1 (count-words w)))\n                        (0))))\n          (boreds (map (lambda (w)\n                        (if (string= w \"?\")\n                            (+ 1 (count-words w)))\n                        (0))))\n          (boreds (map (lambda (w)\n                        (if (string= w \"!\")\n                            (+ 1 (count-words w)))\n                        (0))))\n        (+ (reduce (lambda (a b)\n                    (if (null? a)\n                        b\n                        (if (null? b)\n                            a\n                            (if (null? b)\n                                a\n                                (if (null? a)\n                                    b\n                                    (if (null? b)\n                                        a\n                                        b))))))))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                          (+ 1 (count-words w)))\n                          0))))\n      (+ (reduce (lambda (a b) (boreds a)) 0)\n         (reduce (lambda (a b) (boreds a)) (length words))))))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i)))\n      (set! i (+ 1 i))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1))\n          (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (1+ i)))))\n    i))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                        words)))\n          (boreds (filter (lambda (bored) (not (null? bored))) boreds)))\n      (+ (length boreds) (length words))))\n  nil)\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1))\n          (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words))))\n      (+ (length boreds) (length words))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (is_bored \"I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am",
    "  (let ((i 0))\n    (while (< i (length S))\n      (if (string=? S i)\n          (set! i (1+ i))\n          (set! i (1+ i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-count (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-count-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-count (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-count-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words-words-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words-words-words-words-words (map (lambda (w) (if (string= w \"I",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                          (+ 1 (count-words w)))\n                          0))))\n      (+ (length words) (count-words words))))\n  )\n\n;; You'll also be given a list of words, and your task is to count the\n;; number of words that are used in the same sentence as the word that\n;; starts with \"I\".\n;; For example:\n;; >>> (is_bored_together \"Hello world\")\n;; 0\n;; >>> (is_bored_together \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                        words))))\n      (+ (length boreds) (length words))))\n  (is_bored S))\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))\n    i))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times you see the word \"I\" in the sentences.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i (0)))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1))))\n  0)\n\n;; You'll also be given a string of words, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))\n                            0))))\n      (+ (reduce (lambda (a b) (if (null? b) a (bdr? a b))))\n         (reduce (lambda (a b) (if (null? b) a (bdr? a b))))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))))\n                        words)))\n      (+ (length boreds) (count-words words))))\n  (is_bored S))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (cdr words))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds)))\n      (+ (length boreds) (is_bored (cdr (cdr words)))))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that start with \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds)))\n      (+ (length boreds) (length words))))\n  0)\n\n;; The following function is used to test your code.\n;; It takes a string as argument and returns the number of boredoms.",
    "  (let ((i (0)))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1))\n          (set! i (+ 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word))\n                            0))))\n      (+ (reduce (lambda (boreds)\n                  (if (empty? boreds)\n                      0\n                      (+ (reduce (lambda (boreds)\n                                 (if (empty? boreds)\n                                    0\n                                    (+ (reduce (lambda (boreds)\n                                                (if (empty? boreds)\n                                                   0\n                                                   (+ (reduce (lambda (boreds)\n                                                              (if (empty? boreds)\n                                                                0\n                                                                (+ (reduce (lambda (boreds)\n                                                                        (if (empty? boreds)\n                                                                          0\n                                                                          (+ (reduce (lambda (boreds)\n                                                                                    (if (empty? boreds)\n                                                                                      0\n                                                                                      (+ (reduce (lambda (boreds)\n                                                                                             (if (empty? boreds)\n                                                                                               0\n                                                                                               (+ (reduce (lambda (boreds)\n                                                                                                    (if (empty? boreds)\n                                                                                                      0\n                                                                                                      (+ (reduce (lambda (boreds)\n                                                                                                                  (if (empty? boreds)\n                                                                                                                    0\n                                                                                                                    (+ (reduce (lambda (boreds)\n                                                                                                                            (if (empty? boreds)\n                                                                                                                              0\n                                                                                                                              (+ (reduce (lambda (boreds)\n                                                                                                                                    (if (empty? boreds)\n                                                                                                                                       0\n                                                                                                                                       (+ (reduce (lambda (boreds)\n                                                                                                                                                (if (empty? boreds)\n                                                                                                                                                  0\n                                                                                                                                                  ",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ i 1))\n        (string-set! i i \".\"))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i)))\n      (if (< i 3)\n        (set! i (+ 1 i)))\n      (set! i (+ 1 i)))))\n\n;; You'll also be given a string of words, and your task is to count the\n;; number of sentences. A sentence is a string of words that is not\n;; delimited by '.', '?', or '!'.\n;; For example:\n;; >>> (count_sentences \"Hello world\")\n;; 1\n;; >>> (count_sentences \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (count-words words))))\n           words)))\n      (+ (length boreds) (count-words words))))\n  (is-bored S))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (length w)))\n                        (if (string= w \".\"\n                            (if (string= w \"?\")\n                               (+ 1 (length w)))\n                            (if (string= w \"!\")\n                               (+ 1 (length w))))))))\n      (+ (length words) (length boreds))))))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i)))))\n  0)\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that start with the letter 'I'.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words w)))\n                            0))))\n      (+ (length words) (count-words words))))\n  )\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (1+ i)))))\n    i))\n\n;; You'll also be given a list of words. Your task is to count the number\n;; of words that are used in the sentences.\n;; For example:\n;; >>> (count_words \"The sky is blue. The sun is shining. I love this weather\")\n;; 3\n;; >>> (count_words \"Hello world\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words w))\n                            0))))\n      (+ (reduce (lambda (a b) (if (null? b) 0 (boreds a))) boreds words))))))\n",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? S i)\n          (set! i (i + 1)))\n      (set! i (i + 1))))\n  (+ i 0))\n\n;; You'll also be given a string of words, and your task is to count the\n;; number of sentences that are not boring.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (not_bored \"Hello world\")\n;; 1\n;; >>> (not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 0",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (length w))\n                            0))))\n      (if (empty? words)\n          0\n          (+ (reduce (lambda (a b) (if (string= b \".\")\n                                      (+ a (is_bored (cdr b)))\n                                      (+ a (is_bored (car b))))\n                    0 b))))))))\n",
    "  (let ((words (split-string S '.')))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (1+ i)))))\n    (+ i (length words))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n        (set! i (+ 1 i))))\n    i))\n\n;; You'll also be given a list of words. Your task is to count the number\n;; of words that are not in the list.\n;; For example:\n;; >>> (not_in_list \"Hello world\")\n;; 1\n;; >>> (not_in_list \"The sky is blue. The sun is shining. I love this weather\")\n;; 0",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (1+ i)))))\n    i))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are not boring. A word is boring if it starts with the\n;; word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (not_bored \"Hello world\")\n;; 2\n;; >>> (not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (length w))\n                            0))))\n      (if (empty? words)\n          0\n          (+ (reduce (lambda (a b) (if (string= b \".\")\n                                     (if (string= b \"?\")\n                                        (if (string= b \"!\")\n                                          0\n                                          (+ 1 a))\n                                        (+ 1 b))\n                                      (+ 1 a)))\n                       boreds\n                       words)))\n      ))\n  )\n)\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i)))\n      (set! i (+ 1 i))))\n  0)\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that start with the letter 'e'.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_e \"Hello world\")\n;; 0\n;; >>> (count_e \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                        words)))\n          (boreds (filter (lambda (bored)\n                           (string=? (first bored) \"I\"))\n                    boreds)))\n      (if (empty? boreds)\n          0\n          (+ 1 (is_bored (first bored)))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word))\n                            0))))\n      (+ (length words) (sum boreds))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (count-words words))))\n              words)))\n      (+ (length boreds) (count-words words))))\n  (is-bored S))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are used in the sentence.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count-words \"Hello world\")\n;; 2\n;; >>> (count-words \"The sky is blue. The sun is shining. I love this weather\")\n;; 6",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n          (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (+ i 1)))\n        (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i (string-index S \"I\")))\n    (if (< i 0)\n      (+ 1 (string-length S) - i)\n      0)))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i)))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))\n                            0))))\n      (+ (length boreds) (count-words words))))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are used in the sentence.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count-words \"Hello world\")\n;; 2\n;; >>> (count-words \"The sky is blue. The sun is shining. I love this weather\")\n;; 6",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            0))))\n      (+ (reduce (lambda (a b) (if (string=? a \".\")\n                                      (if (string=? b \".\")\n                                          (+ 1 (length b)))\n                                      0))\n           0)\n         boreds\n         words))))\n",
    "  (let ((words (split-string S '.')))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds (map (lambda (w) (if (string= w \"I\")",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (length w))\n                            0))))\n      (if (empty? words)\n          0\n          (+ (reduce (lambda (a b) (if (string= b \".\")\n                                     (if (string= b \"?\")\n                                        (if (string= b \"!\")\n                                          0\n                                          (+ 1 a))\n                                        (+ 1 b))))\n                words))))))\n",
    "  (let ((i (0)))\n    (while (< i (length S))\n      (if (string=? S i)\n          (set! i (+ i 1))\n          (set! i (- 1))))\n    i))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of times you see the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ i 1)))))\n  0)\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of times the word \"I\" appears in the sentences.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \".\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"?\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"!\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1)))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words w)))\n                        0))))\n      (+ (length words) (count-words words))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S '.')))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ i 1))\n        (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times you see the word \"bored\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (counts (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-count (lambda (w) (if (string= w \"I\") 1 0))))\n      (+ counts (counts boreds))))\n)\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"?\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"!\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1)))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are not boring. A word is boring if it starts with the\n;; word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (not_bored \"Hello world\")\n;; 1\n;; >>> (not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n\n;; You'll also be given a list of words, and you need to count the number\n;; of words that start with \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (counts (map (lambda (w) (counts boreds w))))\n          (boreds-count (lambda (w) (counts w))))\n      (+ (reduce (lambda (a b) (boreds-count a b)) counts words)\n         (reduce (lambda (a b) (boreds-count a b)) counts words))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words))))\n      (+ (length boreds) (length words))))\n  (is_bored S))\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                        words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds)))\n      (if (empty? boreds)\n          (+ 1 (is_bored (cdr words)))\n          0))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                        words)))\n          (count (length boreds))))\n    (+ count (is_bored (cdr words))))\n  )\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                        words)))\n          (boreds (filter (lambda (bored)\n                           (string=? (first bored) \"I\"))\n                    boreds)))\n      (+ (length boreds) (is_bored (cdr words))))))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"?\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \"!\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1)))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (count-words words))))\n           words)))\n      (+ (length boreds) (count-words words))))\n  S)\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that are used in the sentence.\n;; For example:\n;; >>> (count-words \"Hello world\")\n;; 2\n;; >>> (count-words \"The sky is blue. The sun is shining. I love this weather\")\n;; 6",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i)))\n      (set! i (+ 1 i)))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of times you see the word \"bored\" in each sentence.\n;; For example:\n;; >>> (count_bored \"I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored. I'm bored.",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                        words))))\n      (+ (length boreds) (length words))))\n  0)\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))))\n                        words)))\n      (+ (length boreds) (count-words words))))\n  )\n\n;; The function count-words takes a list of words and returns the number\n;; of words that are not in the list.",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string=? words[i] \"I\")\n            (set! i (1+ i))\n            (set! i (1+ i)))))))\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds)))\n      (+ (length boreds) (length words))))\n  0)\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (length word))\n                          0))))\n      (+ (length words) (sum boreds))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word))\n                            0))))\n      (+ (length words) (sum boreds))))))\n\n;; You'll also be given a list of words, and your task is to count the number\n;; of boring words. A boring word is a word that starts with the letter \"I\".\n;; For example:\n;; >>> (is_bored_words \"Hello world\")\n;; 0\n;; >>> (is_bored_words \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of times you find the word \"I\" in each sentence.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                          (+ 1 (is_bored (substring word 1)))\n                          0))))\n      (+ (length words) (sum boreds))))))\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                        words)))\n          (counts (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                            (+ 1 (is_bored (cdr bored))))\n                        boreds)))\n          (boreds (filter (lambda (count)\n                           (>= count 0)))))))\n  (if (empty? boreds)\n    0\n    (+ 1 (is_bored (cdr S))))\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                        words)))\n          (counts (map (lambda (bored)\n                        (if (string=? bored \"I\")\n                            (+ 1 (is_bored (cdr bored))))\n                        boreds))))\n      (+ counts 0)))\n)\n",
    "  (let ((i (0)))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1))))\n  0)\n\n;; You'll also be given a string of words, and your task is to count the\n;; number of times you see the word \"bored\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((i (string-index S \"I\")))\n    (cond\n      ((eq i 0) 0)\n      ((eq (substring S i 1) \".\") 1)\n      ((eq (substring S i 1) \"?\") 1)\n      ((eq (substring S i 1) \"!\") 1)\n      (else 0)\n    )\n  )\n)\n\n;; You'll be given a string of words, and your task is to count the number\n;; of boring words. A boring word is a word that is not a noun.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_boring \"Hello world\")\n;; 0\n;; >>> (is_boring \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words words w)))\n                        0))))\n      (+ (reduce (lambda (a b) (if (null? b) 0 (a (+ b 1)))) boreds 0)\n         (count-words words \"I\"))))\n  )\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (count-words words))))\n                        words)))\n      (+ (length boreds) (count-words words))))\n  (is-bored S))\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (length S))\n      (if (string=? S i)\n          (set! i (+ i 1))\n          (set! i (- i 1))))\n    (+ i 1)))\n\n;; You'll also be given a list of words. Your task is to count the number\n;; of words that are used more than once.\n;; For example:\n;; >>> (count_boreds \"Hello world\")\n;; 0\n;; >>> (count_boreds \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences, and your task is to count\n;; the number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w)\n                        (if (string= w \"I\")\n                            (+ 1 (count-words words w)))\n                        0))))\n      (+ (reduce (lambda (a b) (if (> b 0) a b)) 0 boreds)\n         (count-words words \"I\"))))\n  (is_bored S))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that start with a vowel.\n;; For example:\n;; >>> (count-vowels \"Hello world\")\n;; 2\n;; >>> (count-vowels \"The sky is blue. The sun is shining. I love this weather\")\n;; 6",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (1+ i)))))\n    (+ i (length words))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string= words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1)))\n      (if (string-prefix? S i \".\"\n          | string-prefix? S i \"?\"\n          | string-prefix? S i \"!\")\n          (set! i (+ i 1)))\n      (set! i (+ i 1))))\n  (+ i 0))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that start with the letter 'i'.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_i \"Hello world\")\n;; 0\n;; >>> (count_i \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-count (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-count-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-count (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-count-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words-words-words-words (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-words-words-count-words-words-words-words-words-words-words (map (lambda (w) (if (string= w \"I",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (length word)))\n                            0))))\n      (+ (reduce (lambda (boreds)\n                  (reduce (lambda (boreds)\n                           (+ 1 (length boreds)))\n                           0)))))))\n",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ 1 i))\n          (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i (0)))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n\t  (set! i (+ i 1)))\n      (if (string-prefix? S i \".\")\n\t  (set! i (+ i 1)))\n      (if (string-prefix? S i \"?\")\n\t  (set! i (+ i 1)))\n      (if (string-prefix? S i \"!\")\n\t  (set! i (+ i 1)))\n      (set! i (+ i 1))))\n  (+ i 0))\n\n;; You'll also be given a string of words, and your task is to count the\n;; number of words that are not boring. A word is not boring if it is\n;; not a sentence that starts with the word \"I\".\n;; For example:\n;; >>> (not_bored \"Hello world\")\n;; 1\n;; >>> (not_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 3",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words)))\n          (boreds (filter (lambda (bored)\n                           (string=? (first bored) \"I\"))\n                    boreds)))\n      (+ (length boreds) (length words))))\n",
    "  (let ((i 0))\n    (while (< i (length S))\n      (if (string=? S i)\n          (set! i (+ i 1))\n          (set! i (+ i 1))))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of words that start with \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n        (set! i (+ 1 i))\n        (set! i (+ 1 i))))))\n\n;; You'll be given a string of words, and your task is to count the number\n;; of boring words. A boring word is a word that starts with a lowercase\n;; letter.\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (count_bored \"Hello world\")\n;; 0\n;; >>> (count_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 2",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (counts (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-count (lambda (w) (if (string= w \"I\") 1 0))))\n      (+ counts (counts boreds))))\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((i 0))\n      (while (< i (length words))\n        (if (string=? words/1 \"I\")\n            (set! i (+ 1 i)))))\n    i))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n\t  (set! i (+ 1 i))\n\t  (set! i (+ 1 i))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\".",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (counts (map (lambda (w) (if (string= w \"I\") 1 0))))\n          (boreds-count (lambda (w) (if (string= w \"I\") 1 0))))\n      (+ counts (counts boreds))))\n)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr words))))\n                          words)))\n          (boreds (filter (lambda (bored) (string=? bored \"I\")) boreds)))\n      (+ (length boreds) (length words))))\n  0)\n",
    "  (let ((words (split-string S \" \")))\n    (let ((boreds (map (lambda (word)\n                        (if (string=? word \"I\")\n                            (+ 1 (is_bored (cdr word))))\n                        words))))\n      (+ (length boreds) (length words))))\n  0)\n\n;; You'll be given a string of sentences, and your task is to count the\n;; number of sentences that start with the word \"I\".\n;; Sentences are delimited by '.', '?' or '!'.\n;; For example:\n;; >>> (is_bored \"Hello world\")\n;; 0\n;; >>> (is_bored \"The sky is blue. The sun is shining. I love this weather\")\n;; 1",
    "  (let ((i 0))\n    (while (< i (string-length S))\n      (if (string-prefix? S i \"I\")\n          (set! i (+ i 1))\n          (set! i (+ i 1))))))\n\n;; You'll also be given a string of sentences. Your task is to count the\n;; number of sentences that start with the word \"I\"."
  ],
  "stop_tokens": [
    "\n(define ",
    "\n#|",
    "\n;",
    "\n("
  ]
}
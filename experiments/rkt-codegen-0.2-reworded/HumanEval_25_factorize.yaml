name: HumanEval_25_factorize
language: rkt
prompt: "#lang racket\n\n;; Return list of prime factors of given integer in the order\
  \ from smallest to largest.\n;; Each of the factors should be listed number of times\
  \ corresponding to how many times it appeares in factorization.\n;; Input number\
  \ should be equal to the product of all factors\n;; >>> (factorize 8)\n;; (list\
  \ 2 2 2)\n;; >>> (factorize 25)\n;; (list 5 5)\n;; >>> (factorize 70)\n;; (list\
  \ 2 5 7)\n(define (factorize n)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate factorize))\n\
  \    (check-equal? (candidate 2) (list 2))\n    (check-equal? (candidate 4) (list\
  \ 2 2))\n    (check-equal? (candidate 8) (list 2 2 2))\n    (check-equal? (candidate\
  \ 57) (list 3 19))\n    (check-equal? (candidate 3249) (list 3 3 19 19))\n    (check-equal?\
  \ (candidate 185193) (list 3 3 3 19 19 19))\n    (check-equal? (candidate 20577)\
  \ (list 3 19 19 19))\n    (check-equal? (candidate 18) (list 2 3 3))\n))\n\n(test-humaneval)"
completions: []
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

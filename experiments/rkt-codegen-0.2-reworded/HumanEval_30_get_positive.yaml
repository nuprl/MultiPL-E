name: HumanEval_30_get_positive
language: rkt
prompt: "#lang racket\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
  \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3\
  \ 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)\n(define (get_positive l)\n"
tests: "(require rackunit)\n\n(define (test-humaneval) \n\n  (let (( candidate get_positive))\n\
  \    (check-equal? (candidate (list -1 -2 4 5 6)) (list 4 5 6))\n    (check-equal?\
  \ (candidate (list 5 3 -5 2 3 3 9 0 123 1 -10)) (list 5 3 2 3 3 9 123 1))\n    (check-equal?\
  \ (candidate (list -1 -2)) (list ))\n    (check-equal? (candidate (list )) (list\
  \ ))\n))\n\n(test-humaneval)"
completions: ["  (if (null? l)\n    l\n    (if (negative? (car l))\n      (cdr l)\n\
    \      (cons (car l) (get_positive (cdr l))))))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -5 -3 -3 -9 -123 -10)", "  (cond\n    [(null? l) (l)]\n\
    \    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(< 0 (car l)) (cdr l)]\n    [else (car l)]\n  ))\n\n;; Return\
    \ only positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n\
    ;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;;\
    \ (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\
    \n;; Return only positive numbers in the list.\n;; >>> (get_positive (list -1\
    \ 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (list)]\n    [(positive?\
    \ (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr\
    \ l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n \
    \   [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n\
    \  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n  \
    \  (list)\n    (if (negative? l)\n      (get_positive (- l))\n      (cons l (get_positive\
    \ (- l))))))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]))\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers in the\
    \ list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (if (null?\
    \ l)\n      (list)\n      (if (negative? (car l))\n          (cdr (get_positive\
    \ (cdr l)))\n          (cons (car l) (get_positive (cdr l))))))\n\n;; Return only\
    \ negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;;\
    \ (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive?\
    \ (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr\
    \ l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;;\
    \ >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  ))\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;;\
    \ Return only positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4\
    \ 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0)\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(< 0 (car l)) (cdr l)]\n    [else (car l)]\n  ))\n\n;; Return\
    \ only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n\
    ;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;;\
    \ (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car\
    \ l)) (cdr l)]\n    [else (car l)]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;;\
    \ Return only positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4\
    \ 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list 5 3 2 3 9 123 1)", "  (if (null? l)\n    (list)\n    (if (negative? l)\n\
    \      (get_positive (- l))\n      (cons l (get_positive (- l))))))\n\n;; Return\
    \ only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n\
    ;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car\
    \ l)) (cdr l)]\n    [else (car l)]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;;\
    \ Return only positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4\
    \ 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0)\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n    l\n    (if\
    \ (negative? (car l))\n      (cdr l)\n      (cons (car l) (get_positive (cdr l))))))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  ))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;;\
    \ >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (if (null? l)\n    (list)\n    (if (negative? (car l))\n      (cdr (get_positive\
    \ (cdr l)))\n      (cons (car l) (get_positive (cdr l))))))\n\n;; Return only\
    \ positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;;\
    \ (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list\
    \ 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return\
    \ only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n\
    ;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n    (list)\n    (if (negative?\
    \ l)\n      (get_positive (- l))\n      (cons l (get_positive (- l))))))\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n    (list)\n   \
    \ (if (negative? (car l))\n      (cdr (get_positive (cdr l)))\n      (cons (car\
    \ l) (get_positive (cdr l))))))\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -2)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -5 -3 -3 -9 -123 -1)",
  "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr\
    \ l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(number? (car l)) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;;\
    \ Return only positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4\
    \ 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0)\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only positive numbers in the list.\n;; >>> (get_positive (list -1\
    \ 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(<\
    \ 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr\
    \ l))]\n  )\n)\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (list)]\n    [(number? (car l)) (car l)]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  ))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (if (null? l)\n    (list)\n\
    \    (if (negative? l)\n      (get_positive (- l))\n      (cons l (get_positive\
    \ (- l))))))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n  \
    \  (list)\n    (if (negative? (car l))\n      (cdr (get_positive (cdr l)))\n \
    \     (cons (car l) (get_positive (cdr l))))))\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons (car l)\
    \ (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return\
    \ only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n\
    ;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;;\
    \ (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n      (list)\n      (if (negative?\
    \ (car l))\n          (cdr (get_positive (cdr l)))\n          (cons (car l) (get_positive\
    \ (cdr l))))))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]))\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers in the\
    \ list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers in the\
    \ list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n\
    \  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(< 0 (car l)) (cdr l)]\n    [else (car l)]))\n\n;; Return only\
    \ negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;;\
    \ (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list\
    \ -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n    (list)\n    (if (negative? (car\
    \ l))\n      (cdr (get_positive (cdr l)))\n      (cons (car l) (get_positive (cdr\
    \ l))))))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n\
    \  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers in the\
    \ list, but return the\n;; original list if there are no positive numbers.\n;;\
    \ >>> (get_positive_or_self (list -1 2 -4 5 6))\n;; (list -1 2 -4 5 6)\n;; >>>\
    \ (get_positive_or_self (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 -5 2\
    \ -3 3 9 0 123 1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n\
    \  ))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative (list\
    \ -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n    (list)\n\
    \    (if (negative? l)\n      (get_positive (- l))\n      (cons l (get_positive\
    \ (- l))))))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cdr l)]\n    [else\
    \ (car l)]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n     \
    \ (list)\n      (if (negative? (car l))\n          (cdr (get_positive (cdr l)))\n\
    \          (cons (car l) (get_positive (cdr l))))))\n\n;; Return only positive\
    \ numbers in the list, and return a list of\n;; the original order.\n;; >>> (get_positive_ordered\
    \ (list -1 2 -4 5 6))\n;; (list -1 2 5 6)\n;; >>> (get_positive_ordered (list\
    \ 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1 -10)", "  (cond\n  \
    \  [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cdr l)]\n    [else (car\
    \ l)]\n  ))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (if (null? l)\n    (list)\n\
    \    (let ((result (list)))\n      (for-each (lambda (x)\n                  (if\
    \ (positive? x)\n                    (result '() (cons x result))\n          \
    \          (result '() (cons x result))))\n        l)))\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (if (null? l)\n    l\n   \
    \ (if (negative? (car l))\n      (cdr (get_positive (cdr l)))\n      (cons (car\
    \ l) (get_positive (cdr l))))))\n\n;; Return only positive numbers in the list.\n\
    ;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -2)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(null? (car\
    \ l)) (get_positive (cdr l))]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;;\
    \ Return only positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4\
    \ 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]))\n\n;; Return only positive numbers in the list.\n\
    ;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (if (null? l)\n    (list)\n    (if (negative? (car l))\n\
    \      (cdr (get_positive (cdr l)))\n      (cons (car l) (get_positive (cdr l))))))\n\
    \n;; Return only positive numbers in the list, but not in the given list.\n;;\
    \ >>> (get_positive_not_in (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive_not_in\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n  \
    \  [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]\n  ))\n\n;; Return only positive numbers in the list.\n\
    ;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers in the\
    \ list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (if (null?\
    \ l)\n    (list)\n    (if (negative? (car l))\n      (cdr (get_positive (cdr l)))\n\
    \      (cons (car l) (get_positive (cdr l))))))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -2)\n;;\
    \ >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -5 -3\
    \ -3 -9 -123 -1)", "  (if (null? l)\n    (list)\n    (if (negative? (car l))\n\
    \      (cdr (get_positive (cdr l)))\n      (cons (car l) (get_positive (cdr l))))))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]))\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n\
    \    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]\n  )\n)\n\n;; Return only positive numbers in the list.\n\
    ;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(< 0 (car l)) (cdr l)]\n    [else (car l)]\n  ))\n\n;; Return only\
    \ negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;;\
    \ (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list\
    \ -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(>= 0 (car l)) (cdr\
    \ l)]\n    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;;\
    \ >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  ))\n\n;; Return only positive\
    \ numbers in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5\
    \ 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2\
    \ 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (car l)]\n  \
    \  [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if\
    \ (null? l)\n    (list)\n    (if (negative? (car l))\n      (cdr (get_positive\
    \ (cdr l)))\n      (cons (car l) (get_positive (cdr l))))))\n\n;; Return only\
    \ positive numbers in the list, but return the\n;; original list if there are\
    \ no positive numbers.\n;; >>> (get_positive_or_original (list -1 2 -4 5 6))\n\
    ;; (list)\n;; >>> (get_positive_or_original (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list 5 3 2 3 9 0 123 1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only positive numbers in the list.\n;; >>> (get_positive (list -1\
    \ 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (list)]\n    [(positive?\
    \ (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr\
    \ l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(>= (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]))\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (if (null? l)\n    (list)\n    (if (negative? (car l))\n      (cdr\
    \ (get_positive (cdr l)))\n      (cons (car l) (get_positive (cdr l))))))\n\n\
    ;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2\
    \ -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n  \
    \  [(< 0 (car l)) (cdr l)]\n    [else (car l)]\n  ))\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;;\
    \ Return only positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4\
    \ 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n\
    \  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]))\n\n;; Return only positive numbers in the list.\n\
    ;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(negative? (car l)) (cdr l)]\n    [else (car l)]))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n\
    \    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]))\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (list)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n  \
    \  [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n \
    \   [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(number? (car l))\
    \ (car l)]\n    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(number? (car l)) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list -10 -3 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive?\
    \ (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr\
    \ l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n  \
    \  l\n    (if (> (car l) 0)\n      (cons (car l) (get_positive (cdr l)))\n   \
    \   (get_positive (cdr l))))\n)\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n\
    \    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n    l\n\
    \    (if (negative? (car l))\n      (cdr (get_positive (cdr l)))\n      (cons\
    \ (car l) (get_positive (cdr l))))))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;;\
    \ Return only positive numbers in the list.\n;; >>> (get_positive (list -1 2 -4\
    \ 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (list)]\n    [(positive?\
    \ (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr\
    \ l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -5 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;;\
    \ >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(number? (car l)) (car l)]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons (car l)\
    \ (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return\
    \ only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n\
    ;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;;\
    \ (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car\
    \ l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n\
    \  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  ))\n\n;; Return only positive numbers in the list.\n;; >>> (get_positive\
    \ (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n  \
    \  (list)\n    (if (negative? (car l))\n      (cdr (get_positive (cdr l)))\n \
    \     (cons (car l) (get_positive (cdr l))))))\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (cond\n    [(null? l) (l)]\n    [(negative? (car l)) (cdr l)]\n    [else\
    \ (car l)]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(< 0 (car l)) (cdr l)]\n    [else (car l)]))\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car\
    \ l)) (cdr l)]\n    [else (car l)]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only positive\
    \ numbers in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5\
    \ 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2\
    \ 3 9 123 1)", "  (if (null? l)\n    (list)\n    (if (negative? (car l))\n   \
    \   (cdr (get_positive (cdr l)))\n      (cons (car l) (get_positive (cdr l))))))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n\
    \    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  ))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n \
    \   [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers in\
    \ the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  ))\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n  \
    \  [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n    (list)\n\
    \    (if (negative? (car l))\n      (cdr (get_positive (cdr l)))\n      (cons\
    \ (car l) (get_positive (cdr l))))))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (list)]\n    [(number? (car l)) (car l)]\n  \
    \  [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the list.\n\
    ;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(negative? (car l)) (cdr l)]\n    [else (car l)]))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (l)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n \
    \   [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers in\
    \ the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;;\
    \ >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  ))\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cdr l)]\n\
    \    [else (car l)]\n  ))\n\n;; Return only negative numbers in the list.\n;;\
    \ >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l))\
    \ (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n\
    \  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (if (null? l)\n    (list)\n\
    \    (if (negative? (car l))\n      (cdr (get_positive (cdr l)))\n      (cons\
    \ (car l) (get_positive (cdr l))))))\n\n;; Return only positive numbers in the\
    \ list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (if (null? l)\n    (list)\n    (if (negative? (car l))\n      (cdr (get_positive\
    \ (cdr l)))\n      (cons (car l) (get_positive (cdr l))))))\n\n;; Return only\
    \ negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;;\
    \ (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car\
    \ l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only positive numbers in the list.\n;; >>> (get_positive (list -1\
    \ 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (if (null? l)\n    (list)\n    (let\
    \ ((result (list)))\n      (for-each (lambda (x)\n                  (if (positive?\
    \ x)\n                    (result (cons x result))\n                    (result\
    \ (cons x result))))\n        l)))\n)\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n  \
    \  [(< 0 (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else\
    \ (get_positive (cdr l))]))\n\n;; Return only positive numbers in the list.\n\
    ;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;; >>> (get_positive\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123 1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr\
    \ l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons\
    \ (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123\
    \ 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (list)]\n\
    \    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]\n  )\n)\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative (list 5 3 -5 2 -3\
    \ 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l)\
    \ (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -2)\n;;\
    \ >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -5 -3\
    \ -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return\
    \ only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n\
    ;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l)\
    \ 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]))\n\
    \n;; Return only negative numbers in the list.\n;; >>> (get_negative (list -1\
    \ 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0\
    \ 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n\
    \    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n    [else (get_positive\
    \ (cdr l))]))\n\n;; Return only negative numbers in the list.\n;; >>> (get_negative\
    \ (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>> (get_negative (list 5 3 -5 2\
    \ -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n    [(null?\
    \ l) (list)]\n    [(positive? (car l)) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative numbers\
    \ in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n\
    ;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9\
    \ -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]))\n\n;; Return only positive numbers\
    \ in the list.\n;; >>> (get_positive (list -1 2 -4 5 6))\n;; (list 2 5 6)\n;;\
    \ >>> (get_positive (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list 5 3 2 3 9 123\
    \ 1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cons (car l) (get_positive\
    \ (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;; Return only negative\
    \ numbers in the list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4\
    \ -5)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10\
    \ -3 -3 -9 -123 -1)", "  (cond\n    [(null? l) (l)]\n    [(< 0 (car l)) (cdr l)]\n\
    \    [else (car l)]\n  ))\n\n;; Return only negative numbers in the list.\n;;\
    \ >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5)\n;; >>> (get_negative\
    \ (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123 -1)", "  (cond\n\
    \    [(null? l) (l)]\n    [(> (car l) 0) (cons (car l) (get_positive (cdr l)))]\n\
    \    [else (get_positive (cdr l))]))\n\n;; Return only negative numbers in the\
    \ list.\n;; >>> (get_negative (list -1 2 -4 5 6))\n;; (list -4 -5 -6)\n;; >>>\
    \ (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n;; (list -10 -3 -3 -9 -123\
    \ -1)", "  (cond\n    [(null? l) (list)]\n    [(positive? (car l)) (cons (car\
    \ l) (get_positive (cdr l)))]\n    [else (get_positive (cdr l))]\n  )\n)\n\n;;\
    \ Return only negative numbers in the list.\n;; >>> (get_negative (list -1 2 -4\
    \ 5 6))\n;; (list -4 -2)\n;; >>> (get_negative (list 5 3 -5 2 -3 3 9 0 123 1 -10))\n\
    ;; (list -10 -3 -5 -3 -3 -9 -123 -1)"]
stop_tokens:
- "\n(define "
- "\n#|"
- "\n;"
- "\n("

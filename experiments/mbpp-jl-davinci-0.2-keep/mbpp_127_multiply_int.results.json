{
  "name": "mbpp_127_multiply_int",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\tif x == 0 || y == 0\n\t\treturn 0\n\tend\n\tif x == 1\n\t\treturn y\n\tend\n\tif y == 1\n\t\treturn x\n\tend\n\tif x == -1\n\t\treturn -y\n\tend\n\tif y == -1\n\t\treturn -x\n\tend\n\tif x < 0 && y < 0\n\t\treturn multiply_int(-x, -y)\n\tend\n\tif x < 0\n\t\treturn -multiply_int(-x, y)\n\tend\n\tif y < 0\n\t\treturn -multiply_int(x, -y)\n\tend\n\tif x < y\n\t\treturn multiply_int(y, x)\n\tend\n\treturn x + multiply_int(x, y-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n    \"\"\"\n    Multiply two integers.\n    \"\"\"\n    return x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\tx*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\tx * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\tif x == 0 || y == 0\n\t\treturn 0\n\tend\n\tif x > 0 && y > 0\n\t\treturn x + multiply_int(x, y-1)\n\telseif x < 0 && y < 0\n\t\treturn -x + multiply_int(x, y+1)\n\telseif x < 0 && y > 0\n\t\treturn -x + multiply_int(x, y-1)\n\telse\n\t\treturn x + multiply_int(x, y+1)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1666122942,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x*y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to multiply two integers.\n\t\"\"\"\nfunction multiply_int(x::Int64, y::Int64)::Int64 \n\t\"\"\"\n\tMultiply two integers.\n\t\"\"\"\n\treturn x * y\nend\nusing Test\n\n@testset begin\n\ncandidate = multiply_int;\n\t@test(candidate(10, 20) == 200)\n\t@test(candidate(5, 10) == 50)\n\t@test(candidate(4, 8) == 32)\nend\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
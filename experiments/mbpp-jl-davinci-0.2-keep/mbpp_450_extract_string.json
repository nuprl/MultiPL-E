{
  "name": "mbpp_450_extract_string",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to extract specified size of strings from a given list of string values.\n\t\"\"\"\nfunction extract_string(str::Vector{String}, l::Int64)::Vector{String} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_450_extract_string.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = extract_string;\n\t@test(candidate([\"Python\", \"list\", \"exercises\", \"practice\", \"solution\"], 8) == [\"practice\", \"solution\"])\n\t@test(candidate([\"Python\", \"list\", \"exercises\", \"practice\", \"solution\"], 6) == [\"Python\"])\n\t@test(candidate([\"Python\", \"list\", \"exercises\", \"practice\", \"solution\"], 9) == [\"exercises\"])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tstr_new = []\n\tfor i in str\n\t\tif length(i) == l\n\t\t\tpush!(str_new, i)\n\t\tend\n\tend\n\treturn str_new\nend",
    "\treturn [s for s in str if length(s) == l]\nend",
    "\t\"\"\"\n\tExtract strings of length l from a list of strings.\n\t\"\"\"\n\treturn [x for x in str if length(x) == l]\nend",
    "\t\"\"\"\n\tExtract strings of length l from a list of strings.\n\t\"\"\"\n\treturn [i for i in str if length(i) == l]\nend",
    "\treturn [i for i in str if length(i) == l]\nend",
    "\treturn [string(s) for s in str if length(s) == l]\nend",
    "\treturn [x for x in str if length(x) == l]\nend",
    "\treturn [x for x in str if length(x) == l]\nend",
    "\treturn [i for i in str if length(i) == l]\nend",
    "\t\"\"\"\n\tExtract specified size of strings from a given list of string values.\n\t\"\"\"\n\tstr_len = length(str)\n\tif l > str_len\n\t\tprintln(\"The length of string is less than the specified length.\")\n\t\treturn str\n\tend\n\treturn str[1:l]\nend",
    "\treturn [x for x in str if length(x) == l]\nend",
    "\treturn [i for i in str if length(i) == l]\nend",
    "\treturn [x for x in str if length(x) == l]\nend",
    "\t\"\"\"\n\tFunction to extract specified size of strings from a given list of string values.\n\t\"\"\"\n\treturn [i for i in str if length(i) == l]\nend",
    "\t\"\"\"\n\tExtracts strings of length l from str.\n\t\"\"\"\n\treturn [x for x in str if length(x) == l]\nend",
    "\treturn [s for s in str if length(s) == l]\nend",
    "\t# create an empty vector to store the extracted strings\n\textracted_strings = String[]\n\t# iterate over the list of strings\n\tfor i in str\n\t\t# check if the length of the string is equal to the specified length\n\t\tif length(i) == l\n\t\t\t# append the string to the vector\n\t\t\tpush!(extracted_strings, i)\n\t\tend\n\tend\n\t# return the vector\n\treturn extracted_strings\nend",
    "\tstr_extract = []\n\tfor i in str\n\t\tif length(i) == l\n\t\t\tpush!(str_extract, i)\n\t\tend\n\tend\n\treturn str_extract\nend",
    "\treturn [i for i in str if length(i) == l]\nend",
    "\t\"\"\"\n\tExtract specified size of strings from a given list of string values.\n\t\"\"\"\n\tresult = []\n\tfor s in str\n\t\tif length(s) == l\n\t\t\tpush!(result, s)\n\t\tend\n\tend\n\treturn result\nend"
  ]
}
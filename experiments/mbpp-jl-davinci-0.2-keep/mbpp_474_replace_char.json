{
  "name": "mbpp_474_replace_char",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to replace characters in a string.\n\t\"\"\"\nfunction replace_char(str1::String, ch::String, newch::String)::String \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_474_replace_char.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = replace_char;\n\t@test(candidate(\"polygon\", \"y\", \"l\") == \"pollgon\")\n\t@test(candidate(\"character\", \"c\", \"a\") == \"aharaater\")\n\t@test(candidate(\"python\", \"l\", \"a\") == \"python\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, ch, newch)\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, ch, newch)\n\treturn str1\nend",
    "\t\"\"\"\n\tReplace characters in a string.\n\t\"\"\"\n\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, ch, newch)\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, ch, newch)\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, ch, newch)\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in str1\n\t\tif i == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * i\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr1 = replace(str1, ch, newch)\n\treturn str1\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] == ch\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend",
    "\tstr2 = \"\"\n\tfor i in 1:length(str1)\n\t\tif str1[i] == ch[1]\n\t\t\tstr2 = str2 * newch\n\t\telse\n\t\t\tstr2 = str2 * str1[i]\n\t\tend\n\tend\n\treturn str2\nend"
  ]
}
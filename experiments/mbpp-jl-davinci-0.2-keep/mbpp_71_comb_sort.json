{
  "name": "mbpp_71_comb_sort",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to sort a list of elements.\n\t\"\"\"\nfunction comb_sort(nums::Vector{Int64})::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_71_comb_sort.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = comb_sort;\n\t@test(candidate([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79])\n\t@test(candidate([41, 32, 15, 19, 22]) == [15, 19, 22, 32, 41])\n\t@test(candidate([99, 15, 13, 47]) == [13, 15, 47, 99])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, Int(gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, Int(gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap / 1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums) - gap\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = trunc(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = trunc(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile !sorted\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\tnums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, floor(gap/shrink))\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / 1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums) - gap\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, round(Int64, gap/1.3))\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, Int(gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = trunc(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, floor(gap/1.25))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, floor(gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile (not sorted)\n\t\tgap = floor(Int, gap/shrink)\n\t\tif gap > 1\n\t\t\tsorted = false\n\t\telse\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile (i + gap < length(nums))\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i = 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = Int(floor(gap/shrink))\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.25)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.25)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile !sorted\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile !sorted\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64,gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, round(Int64, gap/1.25))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.25)\n\t\tgap = max(1, gap)\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink_factor = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink_factor)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, round(Int64, gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, round(Int64, gap/1.25))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, floor(gap/shrink))\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile !sorted\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap > 1\n\t\t\tsorted = false\n\t\telse\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / 1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums) - gap\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = trunc(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i + gap]\n\t\t\t\tnums[i + gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / 1.3)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i in 1:length(nums) - gap\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile !sorted\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, Int(gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = trunc(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i+gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap > 1\n\t\t\tsorted = false\n\t\telse\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = trunc(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = trunc(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64,gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.25)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile !sorted\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.25)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile !sorted\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i = 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/1.3)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, floor(gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.3)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i = 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap / shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i + gap]\n\t\t\t\tnums[i], nums[i + gap] = nums[i + gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = trunc(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, round(Int64, gap/1.25))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.25)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, Int(gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(gap/1.25)\n\t\tgap = max(gap, 1)\n\t\tswapped = false\n\t\tfor i in 1:gap:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = max(1, round(Int64, gap/1.3))\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile !sorted\n\t\tgap = convert(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap < length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tswapped = true\n\twhile gap > 1 || swapped\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap < 1\n\t\t\tgap = 1\n\t\tend\n\t\tswapped = false\n\t\tfor i in 1:length(nums)-gap\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\tnums[i], nums[i+gap] = nums[i+gap], nums[i]\n\t\t\t\tswapped = true\n\t\t\tend\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = Int(floor(gap/shrink))\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend",
    "\tgap = length(nums)\n\tshrink = 1.3\n\tsorted = false\n\twhile sorted == false\n\t\tgap = floor(Int64, gap/shrink)\n\t\tif gap <= 1\n\t\t\tgap = 1\n\t\t\tsorted = true\n\t\tend\n\t\ti = 1\n\t\twhile i + gap <= length(nums)\n\t\t\tif nums[i] > nums[i+gap]\n\t\t\t\ttemp = nums[i]\n\t\t\t\tnums[i] = nums[i+gap]\n\t\t\t\tnums[i+gap] = temp\n\t\t\t\tsorted = false\n\t\t\tend\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend"
  ]
}
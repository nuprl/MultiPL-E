{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to sum all amicable numbers from 1 to a specified number.\n\t\"\"\"\nfunction amicable_numbers_sum(limit::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = amicable_numbers_sum;\n\t@test(candidate(999) == 504)\n\t@test(candidate(9999) == 31626)\n\t@test(candidate(99) == 0)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_proper_divisors(i)\n\t\tif j > i && sum_proper_divisors(j) == i\n\t\t\tsum += i + j\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_of_divisors(i)\n\t\tif i != j && sum_of_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tif is_amicable(i)\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_of_divisors(i)\n\t\tif i != j && sum_of_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_proper_divisors(i)\n\t\tif i != j && sum_proper_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tsum += amicable_number(i)\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_of_divisors(i)\n\t\tif i != j && sum_of_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_proper_divisors(i)\n\t\tif i != j && sum_proper_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tif is_amicable(i)\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_divisors(i)\n\t\tif i != j && sum_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_divisors(i)\n\t\tif i != j && sum_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_of_divisors(i)\n\t\tif i != j && sum_of_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_of_divisors(i)\n\t\tif i != j && sum_of_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_of_divisors(i)\n\t\tif i != j && sum_of_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tif is_amicable(i)\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_of_divisors(i)\n\t\tif i != j && sum_of_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_of_divisors(i)\n\t\tif i != j && sum_of_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tif is_amicable(i)\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_divisors(i)\n\t\tif j > i && sum_divisors(j) == i\n\t\t\tsum += i + j\n\t\tend\n\tend\n\treturn sum\nend",
    "\tsum = 0\n\tfor i in 1:limit\n\t\tj = sum_proper_divisors(i)\n\t\tif i != j && sum_proper_divisors(j) == i\n\t\t\tsum += i\n\t\tend\n\tend\n\treturn sum\nend"
  ]
}
{
  "name": "mbpp_567_issort_list",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to check whether a specified list is sorted or not.\n\t\"\"\"\nfunction issort_list(list1::Vector{Int64})::Bool \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_567_issort_list.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = issort_list;\n\t@test(candidate([1, 2, 4, 6, 8, 10, 12, 14, 16, 17]) == true)\n\t@test(candidate([1, 2, 4, 6, 8, 10, 12, 14, 20, 17]) == false)\n\t@test(candidate([1, 2, 4, 6, 8, 10, 15, 14, 20]) == false)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tif length(list1) == 1\n\t\treturn true\n\telseif list1[1] <= list1[2]\n\t\treturn issort_list(list1[2:end])\n\telse\n\t\treturn false\n\tend\nend",
    "\tif length(list1) == 1\n\t\treturn true\n\telseif list1[1] > list1[2]\n\t\treturn false\n\telse\n\t\treturn issort_list(list1[2:end])\n\tend\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\treturn sort(list1) == list1\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i]>list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "    for i in 1:length(list1)-1\n        if list1[i]>list1[i+1]\n            return false\n        end\n    end\n    return true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i]>list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i]>list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i]>list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in 1:length(list1)-1\n\t\tif list1[i] > list1[i+1]\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend"
  ]
}
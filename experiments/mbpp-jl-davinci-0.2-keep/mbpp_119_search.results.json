{
  "name": "mbpp_119_search",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_119_search.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted array.\n\t\"\"\"\n\t\n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\t\n\tmid = div(length(arr), 2)\n\t\n\tif arr[mid] == arr[mid - 1]\n\t\treturn search(arr[mid + 1:end])\n\telseif arr[mid] == arr[mid + 1]\n\t\treturn search(arr[1:mid])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpv_bxcjjb.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpv_bxcjjb.jl:15\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpv_bxcjjb.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpv_bxcjjb.jl:28 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpv_bxcjjb.jl:27\ntest set: Error During Test at /tmp/tmpv_bxcjjb.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpv_bxcjjb.jl:15\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpv_bxcjjb.jl:16\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpv_bxcjjb.jl:18\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpv_bxcjjb.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpv_bxcjjb.jl:27\ntest set: Error During Test at /tmp/tmpv_bxcjjb.jl:30\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpv_bxcjjb.jl:15\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmpv_bxcjjb.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.cond",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpv_bxcjjb.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpitqx87vh.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx87vh.jl:16\ntest set: Error During Test at /tmp/tmpitqx87vh.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx87vh.jl:16\ntest set: Error During Test at /tmp/tmpitqx87vh.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpitqx87vh.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpcscv_fq8.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcscv_fq8.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcscv_fq8.jl:28\ntest set: Error During Test at /tmp/tmpcscv_fq8.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcscv_fq8.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcscv_fq8.jl:28\ntest set: Error During Test at /tmp/tmpcscv_fq8.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpcscv_fq8.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn search(arr[mid+1:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Test Failed at /tmp/tmpmwfio_x1.jl:16\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwfio_x1.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwfio_x1.jl:15\ntest set: Test Failed at /tmp/tmpmwfio_x1.jl:17\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwfio_x1.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwfio_x1.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmwfio_x1.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpae2c7glp.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpae2c7glp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[mid:n])\n\t\tend\n\telse\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\treturn search(arr[2:end-1])\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\telseif n == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\telse\n\t\tmid = convert(Int64, n/2)\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpkse47d2_.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  InexactError: Int64(2.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkse47d2_.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpkse47d2_.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpkse47d2_.jl:29\ntest set: Error During Test at /tmp/tmpkse47d2_.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  InexactError: Int64(5.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkse47d2_.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpkse47d2_.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpkse47d2_.jl:29\ntest set: Error During Test at /tmp/tmpkse47d2_.jl:32\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpkse47d2_.jl:15\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpkse47d2_.jl:32 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpks",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpkse47d2_.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpae2c7glp.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpae2c7glp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)-1\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510196,
      "stdout": "test set: Test Failed at /tmp/tmpvei4uspz.jl:17\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\ntest set: Test Failed at /tmp/tmpvei4uspz.jl:18\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvei4uspz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i <= length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpchrv2v9d.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpchrv2v9d.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpchrv2v9d.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpchrv2v9d.jl:18\ntest set: Error During Test at /tmp/tmpchrv2v9d.jl:20\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [12]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpchrv2v9d.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpchrv2v9d.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpchrv2v9d.jl:18\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpchrv2v9d.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tThis function takes a sorted array as input and returns the element that appears only once in the array.\n\t\"\"\"\n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmp7uo6xgqd.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7uo6xgqd.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7uo6xgqd.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7uo6xgqd.jl:18\ntest set: Error During Test at /tmp/tmp7uo6xgqd.jl:20\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7uo6xgqd.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7uo6xgqd.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7uo6xgqd.jl:18\ntest set: Error During Test at /tmp/tmp7uo6xgqd.jl:21\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7uo6xgqd.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7uo6xgqd.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7uo6",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp7uo6xgqd.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)-1\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123267,
      "stdout": "test set: Test Failed at /tmp/tmpuqsz4lpy.jl:16\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuqsz4lpy.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuqsz4lpy.jl:15\ntest set: Test Failed at /tmp/tmpuqsz4lpy.jl:17\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuqsz4lpy.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuqsz4lpy.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuqsz4lpy.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "test set: Error During Test at /tmp/tmplia1xx64.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmplia1xx64.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmplia1xx64.jl:30\ntest set: Error During Test at /tmp/tmplia1xx64.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmplia1xx64.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmplia1xx64.jl:30\ntest set: Test Failed at /tmp/tmplia1xx64.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplia1xx64.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplia1xx64",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmplia1xx64.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tInput:\n\t\tarr: sorted array of integers\n\tOutput:\n\t\telement that appears only once in the array\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmplkp44ogz.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplkp44ogz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mod(n,2) == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpj0407jqz.jl:27\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj0407jqz.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj0407jqz.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj0407jqz.jl:16\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpj0407jqz.jl:27 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpj0407jqz.jl:26\ntest set: Error During Test at /tmp/tmpj0407jqz.jl:28\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj0407jqz.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj0407jqz.jl:19\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj0407jqz.jl:16\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj0407jqz.jl:19\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpj0407jqz.jl:28 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpj0407jqz.jl:26\ntest set: Error During Test at /tmp/tmpj0407jqz.jl:29\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpj0407jqz.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj0407jqz.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[length(arr)] != arr[length(arr)-1]\n\t\treturn arr[length(arr)]\n\tend\n\treturn search(arr[2:length(arr)-1])\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t# search for the element that appears only once in a sorted array\n\t# return the element\n\t# if no such element exists, return -1\n\t# input: arr = [1, 1, 2, 2, 3, 3, 4, 50, 50, 65, 65]\n\t# output: 4\n\t# input: arr = [1, 1, 2, 2, 3, 3, 4, 4, 50, 50, 65, 65]\n\t# output: -1\n\t\n\t# your code here\n\t\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmpaea4pc9r.jl:22\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: -1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpaea4pc9r.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpaea4pc9r.jl:21\ntest set: Test Failed at /tmp/tmpaea4pc9r.jl:23\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpaea4pc9r.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpaea4pc9r.jl:21\ntest set: Test Failed at /tmp/tmpaea4pc9r.jl:24\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpaea4pc9r.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpaea4pc9r.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpaea4pc9r.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\telseif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid])\n\telse\n\t\treturn search(arr[mid+1:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low < high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid % 2 == 0\n\t\t\tif arr[mid] == arr[mid+1]\n\t\t\t\tlow = mid + 2\n\t\t\telse\n\t\t\t\thigh = mid\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] == arr[mid-1]\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\n\treturn arr[low]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmp1829bgbw.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1829bgbw.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1829bgbw.jl:30 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1829bgbw.jl:29\ntest set: Error During Test at /tmp/tmp1829bgbw.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1829bgbw.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1829bgbw.jl:31 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1829bgbw.jl:29\ntest set: Error During Test at /tmp/tmp1829bgbw.jl:32\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1829bgbw.jl:23\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1829bgbw.jl:32 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp1829bgbw.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] == arr[mid-1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[mid:n])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "test set: Error During Test at /tmp/tmp88eoykl4.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp88eoykl4.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp88eoykl4.jl:12\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp88eoykl4.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp88eoykl4.jl:30\ntest set: Error During Test at /tmp/tmp88eoykl4.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp88eoykl4.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp88eoykl4.jl:12\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp88eoykl4.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp88eoykl4.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp88eoykl4.jl:30\ntest set: Test Failed at /tmp/tmp88eoykl4.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp88eoykl4.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp88eoykl4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmp88eoykl4.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid-1])\n\tend\n\tif arr[mid] == arr[mid+1]\n\t\treturn search(arr[mid+1:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tThis function takes a sorted array and returns the element that appears only once.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1 && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\telseif i == n && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\telseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpn5ue4c85.jl:21\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\ntest set: Error During Test at /tmp/tmpn5ue4c85.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpn5ue4c85.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tarr: sorted array of integers\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)-1\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510196,
      "stdout": "test set: Test Failed at /tmp/tmpvei4uspz.jl:17\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\ntest set: Test Failed at /tmp/tmpvei4uspz.jl:18\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvei4uspz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif (i == 1 && arr[i] != arr[i+1]) || (i == n && arr[i] != arr[i-1]) || (arr[i] != arr[i-1] && arr[i] != arr[i+1])\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpzm32zmtg.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzm32zmtg.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzm32zmtg.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzm32zmtg.jl:16\ntest set: Error During Test at /tmp/tmpzm32zmtg.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzm32zmtg.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzm32zmtg.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzm32zmtg.jl:16\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpzm32zmtg.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "test set: Error During Test at /tmp/tmplia1xx64.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmplia1xx64.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmplia1xx64.jl:30\ntest set: Error During Test at /tmp/tmplia1xx64.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmplia1xx64.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmplia1xx64.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmplia1xx64.jl:30\ntest set: Test Failed at /tmp/tmplia1xx64.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplia1xx64.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplia1xx64",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmplia1xx64.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i+1] && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpzl1iriz2.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1iriz2.jl:15\ntest set: Error During Test at /tmp/tmpzl1iriz2.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [12]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1iriz2.jl:15\ntest set: Error During Test at /tmp/tmpzl1iriz2.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzl1iriz2.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmp6wtgpc55.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wtgpc55.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wtgpc55.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wtgpc55.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6wtgpc55.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6wtgpc55.jl:28\ntest set: Error During Test at /tmp/tmp6wtgpc55.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wtgpc55.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wtgpc55.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wtgpc55.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wtgpc55.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp6wtgpc55.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp6wtgpc55.jl:28\ntest set: Error During Test at /tmp/tmp6wtgpc55.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6wtgpc55.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp6wtgpc55.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:2:n\n\t\tif i == n\n\t\t\treturn arr[i]\n\t\telseif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted array.\n\t\"\"\"\n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn search(arr[mid+1:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\tmid = (low+high)\u00f72\n\twhile low < high\n\t\tif mid%2 == 0\n\t\t\tif arr[mid] == arr[mid+1]\n\t\t\t\tlow = mid+2\n\t\t\telseif arr[mid] == arr[mid-1]\n\t\t\t\thigh = mid-2\n\t\t\telse\n\t\t\t\treturn arr[mid]\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] == arr[mid+1]\n\t\t\t\thigh = mid-1\n\t\t\telseif arr[mid] == arr[mid-1]\n\t\t\t\tlow = mid+1\n\t\t\telse\n\t\t\t\treturn arr[mid]\n\t\t\tend\n\t\tend\n\t\tmid = (low+high)\u00f72\n\tend\n\treturn arr[low]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "test set: Test Failed at /tmp/tmpukgpcxbv.jl:35\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpukgpcxbv.jl:35 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpukgpcxbv.jl:34\ntest set: Test Failed at /tmp/tmpukgpcxbv.jl:36\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpukgpcxbv.jl:36 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpukgpcxbv.jl:34\ntest set: Error During Test at /tmp/tmpukgpcxbv.jl:37\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [8]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpukgpcxbv.jl:28\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpukgpcxbv.jl:37 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpukgpcxbv.jl:34\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpukgpcxbv.jl:32\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid%2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpy00pqb5w.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpy00pqb5w.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpy00pqb5w.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpy00pqb5w.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpy00pqb5w.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpy00pqb5w.jl:28\ntest set: Error During Test at /tmp/tmpy00pqb5w.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpy00pqb5w.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpy00pqb5w.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpy00pqb5w.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmpy00pqb5w.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmpy00pqb5w.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmpy00pqb5w.jl:28\ntest set: Error During Test at /tmp/tmpy00pqb5w.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpy00pqb5w.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpy00pqb5w.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "test set: Error During Test at /tmp/tmp84p0udpo.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp84p0udpo.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp84p0udpo.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp84p0udpo.jl:17\ntest set: Error During Test at /tmp/tmp84p0udpo.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp84p0udpo.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp84p0udpo.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp84p0udpo.jl:17\ntest set: Error During Test at /tmp/tmp84p0udpo.jl:20\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp84p0udpo.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp84p0udpo.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp84p0",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp84p0udpo.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "test set: Error During Test at /tmp/tmp6hxq0ar_.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6hxq0ar_.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6hxq0ar_.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6hxq0ar_.jl:22 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6hxq0ar_.jl:21\ntest set: Error During Test at /tmp/tmp6hxq0ar_.jl:23\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6hxq0ar_.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6hxq0ar_.jl:10\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6hxq0ar_.jl:12\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp6hxq0ar_.jl:23 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp6hxq0ar_.jl:21\ntest set: Error During Test at /tmp/tmp6hxq0ar_.jl:24\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp6hxq0ar_.jl:9\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmp6hxq0ar_.jl:10\n   [4] macro expansion\n     @ /home/a.guha/.conda/e",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp6hxq0ar_.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tGiven a sorted array in which all elements appear twice (one after one) and one element appears only once. Find that element in O(log n) complexity.\n\t\"\"\"\n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "test set: Error During Test at /tmp/tmp680ohh28.jl:25\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp680ohh28.jl:12\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp680ohh28.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp680ohh28.jl:25 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp680ohh28.jl:24\ntest set: Error During Test at /tmp/tmp680ohh28.jl:26\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp680ohh28.jl:12\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp680ohh28.jl:13\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp680ohh28.jl:15\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp680ohh28.jl:26 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp680ohh28.jl:24\ntest set: Error During Test at /tmp/tmp680ohh28.jl:27\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp680ohh28.jl:12\n   [3] search(arr::Vector{Int64}) (repeats 2 times)\n     @ Main /tmp/tmp680ohh28.jl:13\n   [4] macro expansion\n     @ /home/a.guha/.cond",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp680ohh28.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted array.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif n == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn 0\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "test set: Error During Test at /tmp/tmphehn1awp.jl:41\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmphehn1awp.jl:20\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmphehn1awp.jl:22\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmphehn1awp.jl:41 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmphehn1awp.jl:40\ntest set: Test Failed at /tmp/tmphehn1awp.jl:42\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphehn1awp.jl:42 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphehn1awp.jl:40\ntest set: Test Failed at /tmp/tmphehn1awp.jl:43\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphehn1awp.jl:43 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphehn1awp.jl:40\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmphehn1awp.jl:38\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\telseif length(arr) == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\telse\n\t\tmid = div(length(arr), 2)\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "test set: Error During Test at /tmp/tmpjkz_z8_y.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjkz_z8_y.jl:15\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpjkz_z8_y.jl:16\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpjkz_z8_y.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpjkz_z8_y.jl:28\ntest set: Test Failed at /tmp/tmpjkz_z8_y.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkz_z8_y.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkz_z8_y.jl:28\ntest set: Test Failed at /tmp/tmpjkz_z8_y.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjkz_z8_y.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjkz_z8_y.jl:28\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpjkz_z8_y.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmptfd39ft7.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptfd39ft7.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmpjexvkhgs.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjexvkhgs.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid%2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmp7pv77uch.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pv77uch.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pv77uch.jl:28\ntest set: Test Failed at /tmp/tmp7pv77uch.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pv77uch.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pv77uch.jl:28\ntest set: Test Failed at /tmp/tmp7pv77uch.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7pv77uch.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7pv77uch.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7pv77uch.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmpjexvkhgs.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjexvkhgs.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmplkp44ogz.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplkp44ogz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\telseif n == 2\n\t\tif arr[1] == arr[2]\n\t\t\treturn -1\n\t\telse\n\t\t\treturn arr[1]\n\t\tend\n\telse\n\t\tmid = div(n,2)\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn arr[mid]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "test set: Error During Test at /tmp/tmpfbn4yjts.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpfbn4yjts.jl:16\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpfbn4yjts.jl:17\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpfbn4yjts.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpfbn4yjts.jl:29\ntest set: Test Failed at /tmp/tmpfbn4yjts.jl:31\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: -1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfbn4yjts.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfbn4yjts.jl:29\ntest set: Test Failed at /tmp/tmpfbn4yjts.jl:32\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: -1 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfbn4yjts.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfbn4yjts.jl:29\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpfbn4yjts.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t# Base case\n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\t# Recursive case\n\tif arr[1] == arr[2]\n\t\treturn search(arr[3:end])\n\telse\n\t\treturn arr[1]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123267,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmptfd39ft7.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptfd39ft7.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpae2c7glp.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpae2c7glp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tGiven a sorted array in which all elements appear twice (one after one) and one element appears only once. Find that element in O(log n) complexity.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[n/2] == arr[n/2 + 1]\n\t\treturn search(arr[n/2 + 1:end])\n\telse\n\t\treturn search(arr[1:n/2])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "test set: Error During Test at /tmp/tmpeod9dcnf.jl:23\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 2.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpeod9dcnf.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpeod9dcnf.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpeod9dcnf.jl:22\ntest set: Error During Test at /tmp/tmpeod9dcnf.jl:24\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 5.5 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base ./indices.jl:300\n    [2] to_index(A::Vector{Int64}, i::Float64)\n      @ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n      @ ./abstractarray.jl:1218 [inlined]\n    [6] search(arr::Vector{Int64})\n      @ Main /tmp/tmpeod9dcnf.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpeod9dcnf.jl:24 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpeod9dcnf.jl:22\ntest set: Error During Test at /tmp/tmpeod9dcnf.jl:25\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 3.5 of type Float",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeod9dcnf.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpae2c7glp.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpae2c7glp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telse\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123272,
      "stdout": "test set: Error During Test at /tmp/tmpgvew838t.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpgvew838t.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpgvew838t.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgvew838t.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgvew838t.jl:30\ntest set: Error During Test at /tmp/tmpgvew838t.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpgvew838t.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpgvew838t.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpgvew838t.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpgvew838t.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpgvew838t.jl:30\ntest set: Test Failed at /tmp/tmpgvew838t.jl:33\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 2 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgvew838t.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgvew838t",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpgvew838t.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n    if length(arr) == 1\n        return arr[1]\n    end\n    mid = div(length(arr), 2)\n    if arr[mid] == arr[mid - 1]\n        if mid % 2 == 0\n            return search(arr[mid + 1:end])\n        else\n            return search(arr[mid:end])\n        end\n    elseif arr[mid] == arr[mid + 1]\n        if mid % 2 == 0\n            return search(arr[1:mid])\n        else\n            return search(arr[1:mid - 1])\n        end\n    else\n        return arr[mid]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "test set: Error During Test at /tmp/tmpm4a6w35t.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpm4a6w35t.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpm4a6w35t.jl:11\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm4a6w35t.jl:30 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm4a6w35t.jl:29\ntest set: Error During Test at /tmp/tmpm4a6w35t.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpm4a6w35t.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpm4a6w35t.jl:11\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpm4a6w35t.jl:19\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpm4a6w35t.jl:31 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpm4a6w35t.jl:29\ntest set: Error During Test at /tmp/tmpm4a6w35t.jl:32\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpm4a6w35t.jl:9\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpm4a6w35t.jl:17\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpm4a6w35t.jl:13\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpm4a6w35t.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmptfd39ft7.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptfd39ft7.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:n])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "test set: Test Failed at /tmp/tmp_rx4_144.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rx4_144.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rx4_144.jl:28\ntest set: Test Failed at /tmp/tmp_rx4_144.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rx4_144.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rx4_144.jl:28\ntest set: Test Failed at /tmp/tmp_rx4_144.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rx4_144.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rx4_144.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_rx4_144.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)-1\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510196,
      "stdout": "test set: Test Failed at /tmp/tmpvei4uspz.jl:17\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\ntest set: Test Failed at /tmp/tmpvei4uspz.jl:18\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvei4uspz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tThis function returns the element that appears only once in a sorted array.\n\t\"\"\"\n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i+1] && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123272,
      "stdout": "test set: Error During Test at /tmp/tmpc16f7fcb.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpc16f7fcb.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc16f7fcb.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc16f7fcb.jl:18\ntest set: Error During Test at /tmp/tmpc16f7fcb.jl:20\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [12]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpc16f7fcb.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc16f7fcb.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc16f7fcb.jl:18\ntest set: Error During Test at /tmp/tmpc16f7fcb.jl:21\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpc16f7fcb.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpc16f7fcb.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpc16",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpc16f7fcb.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i+1] && arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = convert(Int64, n/2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid%2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123272,
      "stdout": "test set: Error During Test at /tmp/tmp49gp4hhw.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  InexactError: Int64(2.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp49gp4hhw.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp49gp4hhw.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp49gp4hhw.jl:30\ntest set: Error During Test at /tmp/tmp49gp4hhw.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  InexactError: Int64(5.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp49gp4hhw.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp49gp4hhw.jl:32 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp49gp4hhw.jl:30\ntest set: Error During Test at /tmp/tmp49gp4hhw.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp49gp4hhw.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp49gp4hhw.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp49gp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp49gp4hhw.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telseif arr[mid] == arr[mid - 1]\n\t\t\t\tif mid % 2 == 0\n\t\t\t\t\thigh = mid - 2\n\t\t\t\telse\n\t\t\t\t\tlow = mid + 1\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif mid % 2 == 0\n\t\t\t\t\tlow = mid + 2\n\t\t\t\telse\n\t\t\t\t\thigh = mid - 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123273,
      "stdout": "test set: Error During Test at /tmp/tmpzck8d2m1.jl:45\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzck8d2m1.jl:34\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzck8d2m1.jl:45 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzck8d2m1.jl:44\ntest set: Error During Test at /tmp/tmpzck8d2m1.jl:46\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzck8d2m1.jl:34\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzck8d2m1.jl:46 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzck8d2m1.jl:42\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1 && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\telseif i == n && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\telseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpn5ue4c85.jl:21\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\ntest set: Error During Test at /tmp/tmpn5ue4c85.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpn5ue4c85.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] == arr[i+1]\n\t\t\ti += 2\n\t\telse\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123272,
      "stdout": "test set: Error During Test at /tmp/tmpuoqdu110.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpuoqdu110.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoqdu110.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuoqdu110.jl:18\ntest set: Error During Test at /tmp/tmpuoqdu110.jl:20\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmpuoqdu110.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpuoqdu110.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpuoqdu110.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\ti = 1\n\twhile i < length(arr)\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\t\ti += 2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123273,
      "stdout": "test set: Error During Test at /tmp/tmp3eu74rzx.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmp3eu74rzx.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3eu74rzx.jl:18 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3eu74rzx.jl:17\ntest set: Error During Test at /tmp/tmp3eu74rzx.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmp3eu74rzx.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3eu74rzx.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmp3eu74rzx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1 && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\telseif i == n && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\telseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpn5ue4c85.jl:21\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\ntest set: Error During Test at /tmp/tmpn5ue4c85.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpn5ue4c85.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid%2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123272,
      "stdout": "test set: Error During Test at /tmp/tmpymfscjcd.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpymfscjcd.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpymfscjcd.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpymfscjcd.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpymfscjcd.jl:28\ntest set: Error During Test at /tmp/tmpymfscjcd.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpymfscjcd.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpymfscjcd.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpymfscjcd.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpymfscjcd.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpymfscjcd.jl:28\ntest set: Error During Test at /tmp/tmpymfscjcd.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpymfscjcd.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpymfscjcd.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpymfscjcd.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpymfscjcd.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmpjexvkhgs.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjexvkhgs.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpae2c7glp.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpae2c7glp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telseif arr[mid] == arr[mid - 1]\n\t\t\t\thigh = mid - 2\n\t\t\telse\n\t\t\t\tlow = mid + 2\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123273,
      "stdout": "test set: Error During Test at /tmp/tmp0hi5r2b4.jl:38\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0hi5r2b4.jl:27\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0hi5r2b4.jl:38 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0hi5r2b4.jl:36\ntest set: Error During Test at /tmp/tmp0hi5r2b4.jl:39\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmp0hi5r2b4.jl:27\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0hi5r2b4.jl:39 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmp0hi5r2b4.jl:34\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid-1])\n\tend\n\treturn search(arr[mid+1:n])\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tFunction to find the element that appears only once in a sorted array.\n\t\n\tParameters\n\t----------\n\tarr : Vector{Int64}\n\t\tSorted array.\n\t\n\tReturns\n\t-------\n\tInt64\n\t\tThe element that appears only once in a sorted array.\n\t\"\"\"\n\t\n\tn = length(arr)\n\t\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\t\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\t\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\t\n\tlow = 1\n\thigh = n-1\n\t\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\t\n\t\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\t\treturn arr[mid]\n\t\tend\n\t\t\n\t\tif arr[mid] == arr[mid-1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid-2\n\t\t\telse\n\t\t\t\tlow = mid+1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid+1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid+2\n\t\t\telse\n\t\t\t\thigh = mid-1\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = convert(Int64, length(arr)/2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "test set: Error During Test at /tmp/tmp84p0udpo.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp84p0udpo.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp84p0udpo.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp84p0udpo.jl:17\ntest set: Error During Test at /tmp/tmp84p0udpo.jl:19\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp84p0udpo.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp84p0udpo.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp84p0udpo.jl:17\ntest set: Error During Test at /tmp/tmp84p0udpo.jl:20\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp84p0udpo.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp84p0udpo.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp84p0",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp84p0udpo.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1 && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\telseif i == n && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\telseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpn5ue4c85.jl:21\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\ntest set: Error During Test at /tmp/tmpn5ue4c85.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpn5ue4c85.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid-1])\n\tend\n\tif arr[mid] == arr[mid+1]\n\t\treturn search(arr[mid+1:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmplkp44ogz.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplkp44ogz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmplkp44ogz.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplkp44ogz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = convert(Int64, n/2)\n\tif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:n])\n\t\telse\n\t\t\treturn search(arr[mid:n])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123272,
      "stdout": "test set: Error During Test at /tmp/tmp1rn5uciq.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  InexactError: Int64(2.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1rn5uciq.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1rn5uciq.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1rn5uciq.jl:30\ntest set: Error During Test at /tmp/tmp1rn5uciq.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  InexactError: Int64(5.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1rn5uciq.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1rn5uciq.jl:32 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1rn5uciq.jl:30\ntest set: Error During Test at /tmp/tmp1rn5uciq.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  InexactError: Int64(3.5)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp1rn5uciq.jl:9\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp1rn5uciq.jl:33 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp1rn5u",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp1rn5uciq.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr), 2)\n\tif arr[mid] == arr[mid+1]\n\t\treturn search(arr[mid+2:end])\n\telse\n\t\treturn search(arr[1:mid])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tThis function takes a sorted array and returns the element that appears only once.\n\t\"\"\"\n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid-1])\n\tend\n\treturn search(arr[mid+1:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmptfd39ft7.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptfd39ft7.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i+1] && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpzl1iriz2.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1iriz2.jl:15\ntest set: Error During Test at /tmp/tmpzl1iriz2.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [12]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1iriz2.jl:15\ntest set: Error During Test at /tmp/tmpzl1iriz2.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzl1iriz2.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "test set: Test Failed at /tmp/tmp_rx4_144.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rx4_144.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rx4_144.jl:28\ntest set: Test Failed at /tmp/tmp_rx4_144.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rx4_144.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rx4_144.jl:28\ntest set: Test Failed at /tmp/tmp_rx4_144.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_rx4_144.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_rx4_144.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_rx4_144.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpae2c7glp.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpae2c7glp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tThis function takes a sorted array as input and returns the element that appears only once in the array.\n\t\"\"\"\n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpitqx87vh.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx87vh.jl:16\ntest set: Error During Test at /tmp/tmpitqx87vh.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx87vh.jl:16\ntest set: Error During Test at /tmp/tmpitqx87vh.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpitqx87vh.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid+1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmptfd39ft7.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\ntest set: Test Failed at /tmp/tmptfd39ft7.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptfd39ft7.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptfd39ft7.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptfd39ft7.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t# your code goes here\n\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123272,
      "stdout": "test set: Test Failed at /tmp/tmpdbfr08ud.jl:13\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbfr08ud.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbfr08ud.jl:12\ntest set: Test Failed at /tmp/tmpdbfr08ud.jl:14\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 0 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbfr08ud.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbfr08ud.jl:12\ntest set: Test Failed at /tmp/tmpdbfr08ud.jl:15\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbfr08ud.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbfr08ud.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbfr08ud.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == length(arr)\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1 && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\telseif i == n && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\telseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpn5ue4c85.jl:21\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\ntest set: Error During Test at /tmp/tmpn5ue4c85.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpn5ue4c85.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn5ue4c85.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn5ue4c85.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmpn5ue4c85.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpitqx87vh.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx87vh.jl:16\ntest set: Error During Test at /tmp/tmpitqx87vh.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx87vh.jl:16\ntest set: Error During Test at /tmp/tmpitqx87vh.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpitqx87vh.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpitqx87vh.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpitqx",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpitqx87vh.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmpjexvkhgs.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjexvkhgs.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123270,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123273,
      "stdout": "test set: Error During Test at /tmp/tmpemlgprzo.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpemlgprzo.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpemlgprzo.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpemlgprzo.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpemlgprzo.jl:30\ntest set: Error During Test at /tmp/tmpemlgprzo.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpemlgprzo.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpemlgprzo.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpemlgprzo.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpemlgprzo.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpemlgprzo.jl:30\ntest set: Error During Test at /tmp/tmpemlgprzo.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpemlgprzo.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpemlgprzo.jl:20\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpemlgprzo.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpemlgprzo.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\n\treturn -1\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpae2c7glp.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c7glp.jl:15\ntest set: Error During Test at /tmp/tmpae2c7glp.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpae2c7glp.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpae2c7glp.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpae2c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpae2c7glp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i = 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted array.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tThis function takes a sorted array and returns the element that appears only once.\n\t\"\"\"\n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted array.\n\t\"\"\"\n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tSearch for the element that appears only once in a sorted array.\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123272,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpha5ap8_h.jl:1\nin expression starting at /tmp/tmpha5ap8_h.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)-1\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510196,
      "stdout": "test set: Test Failed at /tmp/tmpvei4uspz.jl:17\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\ntest set: Test Failed at /tmp/tmpvei4uspz.jl:18\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvei4uspz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t# your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123274,
      "stdout": "test set: Error During Test at /tmp/tmp7p43dx8y.jl:12\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7p43dx8y.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7p43dx8y.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7p43dx8y.jl:11\ntest set: Error During Test at /tmp/tmp7p43dx8y.jl:13\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmp7p43dx8y.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7p43dx8y.jl:13 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inline",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp7p43dx8y.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)-1\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510196,
      "stdout": "test set: Test Failed at /tmp/tmpvei4uspz.jl:17\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\ntest set: Test Failed at /tmp/tmpvei4uspz.jl:18\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvei4uspz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmplkp44ogz.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplkp44ogz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\tend\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn search(arr[mid+1:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n    n = length(arr)\n    for i in 1:n\n        if i == 1\n            if arr[i] != arr[i+1]\n                return arr[i]\n            end\n        elseif i == n\n            if arr[i] != arr[i-1]\n                return arr[i]\n            end\n        else\n            if arr[i] != arr[i-1] && arr[i] != arr[i+1]\n                return arr[i]\n            end\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n    n = length(arr)\n    for i in 1:n\n        if i == 1 && arr[i] != arr[i+1]\n            return arr[i]\n        elseif i == n && arr[i] != arr[i-1]\n            return arr[i]\n        elseif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n            return arr[i]\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123273,
      "stdout": "test set: Error During Test at /tmp/tmph03rdbcm.jl:21\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmph03rdbcm.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmph03rdbcm.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmph03rdbcm.jl:20\ntest set: Error During Test at /tmp/tmph03rdbcm.jl:22\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmph03rdbcm.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmph03rdbcm.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmph03rdbcm.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    1      2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmph03rdbcm.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)\n\t\tif arr[i] != arr[i+1] && arr[i] != arr[i-1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmpzl1iriz2.jl:16\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [6]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:16 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1iriz2.jl:15\ntest set: Error During Test at /tmp/tmpzl1iriz2.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [12]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1iriz2.jl:15\ntest set: Error During Test at /tmp/tmpzl1iriz2.jl:18\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpzl1iriz2.jl:6\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzl1iriz2.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzl1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzl1iriz2.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\tmid = 0\n\twhile low <= high\n\t\tmid = low + (high - low) / 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\treturn arr[mid]\n\t\telseif arr[mid] == arr[mid - 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telseif arr[mid] == arr[mid + 1]\n\t\t\tif mid % 2 == 0\n\t\t\t\thigh = mid - 1\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123273,
      "stdout": "test set: Error During Test at /tmp/tmpi3soxreu.jl:44\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  ArgumentError: invalid index: 3.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpi3soxreu.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpi3soxreu.jl:44 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpi3soxreu.jl:43\ntest set: Error During Test at /tmp/tmpi3soxreu.jl:45\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  ArgumentError: invalid index: 6.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpi3soxreu.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpi3soxreu.jl:45 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpi3soxreu.jl:43\ntest set: Error During Test at /tmp/tmpi3soxreu.jl:46\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  ArgumentError: invalid index: 4.0 of type Float64\n  Stacktrace:\n   [1] to_index(i::Float64)\n     @ Base ./indices.jl:300\n   [2] to_index(A::Vector{Int64}, i::Float64)\n     @ Base ./indices.jl:277\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpi3soxreu.jl:0\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpi3soxreu.jl:41\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid-1]\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510197,
      "stdout": "test set: Error During Test at /tmp/tmpcscv_fq8.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcscv_fq8.jl:29 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcscv_fq8.jl:28\ntest set: Error During Test at /tmp/tmpcscv_fq8.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:20\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpcscv_fq8.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpcscv_fq8.jl:28\ntest set: Error During Test at /tmp/tmpcscv_fq8.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:17\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmpcscv_fq8.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpcscv_fq8.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tlow = 1\n\thigh = length(arr)\n\twhile low <= high\n\t\tmid = (low + high) \u00f7 2\n\t\tif mid == 1\n\t\t\tif arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\tlow = mid + 1\n\t\t\tend\n\t\telseif mid == length(arr)\n\t\t\tif arr[mid] != arr[mid - 1]\n\t\t\t\treturn arr[mid]\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\telse\n\t\t\tif arr[mid] != arr[mid - 1] && arr[mid] != arr[mid + 1]\n\t\t\t\treturn arr[mid]\n\t\t\telseif arr[mid] == arr[mid - 1]\n\t\t\t\tlow = mid + 1\n\t\t\telse\n\t\t\t\thigh = mid - 1\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123274,
      "stdout": "test set: Error During Test at /tmp/tmp2vo8ozej.jl:37\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2vo8ozej.jl:27\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2vo8ozej.jl:37 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2vo8ozej.jl:36\ntest set: Error During Test at /tmp/tmp2vo8ozej.jl:38\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] search(arr::Vector{Int64})\n     @ Main /tmp/tmp2vo8ozej.jl:27\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2vo8ozej.jl:38 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inli",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 2 errored, 0 broken.\nin expression starting at /tmp/tmp2vo8ozej.jl:34\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tfor i in 1:length(arr)-1\n\t\tif arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\n\treturn arr[end]\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510196,
      "stdout": "test set: Test Failed at /tmp/tmpvei4uspz.jl:17\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\ntest set: Test Failed at /tmp/tmpvei4uspz.jl:18\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvei4uspz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvei4uspz.jl:16\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvei4uspz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\t\"\"\"\n\tFunction to find the element that appears only once in a sorted array.\n\t\"\"\"\n\tif length(arr) == 1\n\t\treturn arr[1]\n\telseif arr[1] != arr[2]\n\t\treturn arr[1]\n\telseif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\telse\n\t\treturn search(arr[2:end-1])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123271,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif arr[mid] != arr[mid-1] && arr[mid] != arr[mid+1]\n\t\treturn arr[mid]\n\telseif arr[mid] == arr[mid-1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[mid+1:end])\n\t\telse\n\t\t\treturn search(arr[mid:end])\n\t\tend\n\telseif arr[mid] == arr[mid+1]\n\t\tif mid % 2 == 0\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[1:mid-1])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123274,
      "stdout": "test set: Error During Test at /tmp/tmp866qp6gp.jl:31\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 3-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp866qp6gp.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp866qp6gp.jl:14\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmp866qp6gp.jl:31 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmp866qp6gp.jl:30\ntest set: Error During Test at /tmp/tmp866qp6gp.jl:32\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp866qp6gp.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp866qp6gp.jl:14\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp866qp6gp.jl:22\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp866qp6gp.jl:32 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp866qp6gp.jl:30\ntest set: Error During Test at /tmp/tmp866qp6gp.jl:33\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 2-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp866qp6gp.jl:10\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp866qp6gp.jl:20\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp866qp6gp.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp866qp6gp.jl:28\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tif length(arr) == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[end] != arr[end-1]\n\t\treturn arr[end]\n\tend\n\tmid = div(length(arr),2)\n\tif arr[mid] == arr[mid-1]\n\t\treturn search(arr[mid+1:end])\n\telseif arr[mid] == arr[mid+1]\n\t\treturn search(arr[1:mid-1])\n\telse\n\t\treturn arr[mid]\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123269,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Error During Test at /tmp/tmplkp44ogz.jl:17\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:17 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:18\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 11-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:18 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp44ogz.jl:16\ntest set: Error During Test at /tmp/tmplkp44ogz.jl:19\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 7-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmplkp44ogz.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmplkp44ogz.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmplkp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplkp44ogz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n,2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[mid+2:n])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid+1]\n\t\t\treturn search(arr[1:mid-1])\n\t\telse\n\t\t\treturn search(arr[mid+1:n])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123274,
      "stdout": "test set: Error During Test at /tmp/tmp_31vuqlf.jl:29\n  Test threw exception\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp_31vuqlf.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp_31vuqlf.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp_31vuqlf.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp_31vuqlf.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp_31vuqlf.jl:28\ntest set: Error During Test at /tmp/tmp_31vuqlf.jl:30\n  Test threw exception\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp_31vuqlf.jl:11\n   [3] search(arr::Vector{Int64})\n     @ Main /tmp/tmp_31vuqlf.jl:18\n   [4] search(arr::Vector{Int64})\n     @ Main /tmp/tmp_31vuqlf.jl:14\n   [5] search(arr::Vector{Int64})\n     @ Main /tmp/tmp_31vuqlf.jl:18\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [7] macro expansion\n     @ /tmp/tmp_31vuqlf.jl:30 [inlined]\n   [8] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [9] top-level scope\n     @ /tmp/tmp_31vuqlf.jl:28\ntest set: Error During Test at /tmp/tmp_31vuqlf.jl:31\n  Test threw exception\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n  BoundsError: attempt to access 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] search(arr::Vector{Int64})\n     @ Main /tmp/tmp_31vuqlf.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp_31vuqlf.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tmid = div(n, 2)\n\tif mid % 2 == 0\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[mid + 2:end])\n\t\telse\n\t\t\treturn search(arr[1:mid])\n\t\tend\n\telse\n\t\tif arr[mid] == arr[mid + 1]\n\t\t\treturn search(arr[1:mid])\n\t\telse\n\t\t\treturn search(arr[mid + 1:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123268,
      "stdout": "test set: Test Failed at /tmp/tmpjexvkhgs.jl:29\n  Expression: candidate([1, 1, 2, 2, 3]) == 3\n   Evaluated: 1 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:30\n  Expression: candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8\n   Evaluated: 1 == 8\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\ntest set: Test Failed at /tmp/tmpjexvkhgs.jl:31\n  Expression: candidate([1, 2, 2, 3, 3, 4, 4]) == 1\n   Evaluated: 3 == 1\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjexvkhgs.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjexvkhgs.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjexvkhgs.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tif n == 1\n\t\treturn arr[1]\n\tend\n\tif arr[1] != arr[2]\n\t\treturn arr[1]\n\tend\n\tif arr[n] != arr[n-1]\n\t\treturn arr[n]\n\tend\n\tfor i in 2:n-1\n\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\treturn arr[i]\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1666123266,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the element that appears only once in a sorted array.\n\t\"\"\"\nfunction search(arr::Vector{Int64})::Int64 \n\tn = length(arr)\n\tfor i in 1:n\n\t\tif i == 1\n\t\t\tif arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telseif i == n\n\t\t\tif arr[i] != arr[i-1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\telse\n\t\t\tif arr[i] != arr[i-1] && arr[i] != arr[i+1]\n\t\t\t\treturn arr[i]\n\t\t\tend\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = search;\n\t@test(candidate([1, 1, 2, 2, 3]) == 3)\n\t@test(candidate([1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8]) == 8)\n\t@test(candidate([1, 2, 2, 3, 3, 4, 4]) == 1)\nend\n",
      "timestamp": 1665510195,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
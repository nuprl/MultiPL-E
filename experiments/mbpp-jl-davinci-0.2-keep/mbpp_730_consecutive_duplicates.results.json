{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp_pd4uwvl.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_pd4uwvl.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_pd4uwvl.jl:22\ntest set: Error During Test at /tmp/tmp_pd4uwvl.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_pd4uwvl.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpb6ma415t.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpb6ma415t.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpb6ma415t.jl:22\ntest set: Error During Test at /tmp/tmpb6ma415t.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpb6ma415t.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpc44p0ae6.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpc44p0ae6.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpc44p0ae6.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpc44p0ae6.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpc44p0ae6.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpc44p0ae6.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpc44p0ae6.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpc44p0ae6.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpc44p0ae6.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpc44p0ae6.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpc44p0ae6.jl:22\ntest set: Error During Test at /tmp/tmpc44p0ae6.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpc44p0ae6.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpc44p0ae6.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpc44p0ae6.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmp21tv5i8q.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp21tv5i8q.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp21tv5i8q.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp21tv5i8q.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp21tv5i8q.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp21tv5i8q.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp21tv5i8q.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp21tv5i8q.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp21tv5i8q.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates from a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp_9wrsnra.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_9wrsnra.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_9wrsnra.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_9wrsnra.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_9wrsnra.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_9wrsnra.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_9wrsnra.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_9wrsnra.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_9wrsnra.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_9wrsnra.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_9wrsnra.jl:22\ntest set: Error During Test at /tmp/tmp_9wrsnra.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_9wrsnra.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_9wrsnra.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_9wrsnra.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpysxno88e.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpysxno88e.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpysxno88e.jl:20\ntest set: Error During Test at /tmp/tmpysxno88e.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpysxno88e.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpa2i6sxra.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpa2i6sxra.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpa2i6sxra.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpa2i6sxra.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpa2i6sxra.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpa2i6sxra.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpa2i6sxra.jl:22\ntest set: Error During Test at /tmp/tmpa2i6sxra.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpa2i6sxra.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpa2i6sxra.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpfnqpj2ay.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpfnqpj2ay.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpfnqpj2ay.jl:20\ntest set: Error During Test at /tmp/tmpfnqpj2ay.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpfnqpj2ay.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tnew_nums = []\n\tfor i in nums\n\t\tif i in new_nums\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_nums, i)\n\t\tend\n\tend\n\treturn new_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Test Failed at /tmp/tmp8kjgsg2k.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8kjgsg2k.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8kjgsg2k.jl:22\ntest set: Test Failed at /tmp/tmp8kjgsg2k.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8kjgsg2k.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8kjgsg2k.jl:22\ntest set: Test Failed at /tmp/tmp8kjgsg2k.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8kjgsg2k.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8kjgsg2k.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8kjgsg2k.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpgiva3vu9.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpgiva3vu9.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpgiva3vu9.jl:17\ntest set: Error During Test at /tmp/tmpgiva3vu9.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpg",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpgiva3vu9.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpsoorg8g0.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpsoorg8g0.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpsoorg8g0.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpsoorg8g0.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpsoorg8g0.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpsoorg8g0.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpsoorg8g0.jl:20\ntest set: Error During Test at /tmp/tmpsoorg8g0.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpsoorg8g0.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpsoorg8g0.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\ti = 1\n\twhile i <= length(nums)\n\t\tif nums[i] == nums[i-1]\n\t\t\tnums = delete!(nums, i)\n\t\telse\n\t\t\ti += 1\n\t\tend\n\tend\n\treturn nums\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpj221hm5u.jl:20\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmpj221hm5u.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj221hm5u.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj221hm5u.jl:19\ntest set: Error During Test at /tmp/tmpj221hm5u.jl:21\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64})\n     @ Main /tmp/tmpj221hm5u.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpj221hm5u.jl:21 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpj221hm5u.jl:19\ntest set: Error During Test at /tmp/tmpj221hm5u.jl:22\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{String})\n     @ Main /tmp/tmpj221hm5u.jl:7\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpj221hm5u.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmp3tfr3al3.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3tfr3al3.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3tfr3al3.jl:20\ntest set: Error During Test at /tmp/tmp3tfr3al3.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3tfr3al3.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpfnqpj2ay.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpfnqpj2ay.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpfnqpj2ay.jl:20\ntest set: Error During Test at /tmp/tmpfnqpj2ay.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpfnqpj2ay.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates from a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmp3p8msgo4.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3p8msgo4.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3p8msgo4.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3p8msgo4.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3p8msgo4.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3p8msgo4.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3p8msgo4.jl:20\ntest set: Error During Test at /tmp/tmp3p8msgo4.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3p8msgo4.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3p8msgo4.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpubc_okov.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpubc_okov.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpubc_okov.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpubc_okov.jl:20\ntest set: Error During Test at /tmp/tmpubc_okov.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpubc_okov.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[2:end] == []\n\t\treturn nums[1]\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "test set: Error During Test at /tmp/tmpe86g6gff.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpe86g6gff.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpe86g6gff.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpe86g6gff.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpe86g6gff.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpe86g6gff.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpe86g6gff.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpe86g6gff.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpe86g6gff.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "test set: Error During Test at /tmp/tmpzh4puww3.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzh4puww3.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzh4puww3.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzh4puww3.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzh4puww3.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzh4puww3.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzh4puww3.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpzh4puww3.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpzh4puww3.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpfnqpj2ay.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpfnqpj2ay.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpfnqpj2ay.jl:20\ntest set: Error During Test at /tmp/tmpfnqpj2ay.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpfnqpj2ay.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpprjtookr.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpprjtookr.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpprjtookr.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpprjtookr.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpprjtookr.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpprjtookr.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpprjtookr.jl:20\ntest set: Error During Test at /tmp/tmpprjtookr.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpprjtookr.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpprjtookr.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpj1vdwalk.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpj1vdwalk.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpj1vdwalk.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpj1vdwalk.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpj1vdwalk.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpj1vdwalk.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpj1vdwalk.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpj1vdwalk.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpj1vdwalk.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpj1vdwalk.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpj1vdwalk.jl:20\ntest set: Error During Test at /tmp/tmpj1vdwalk.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpj1vdwalk.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpj1vdwalk.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpj1vdwalk.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123591,
      "stdout": "test set: Error During Test at /tmp/tmpaaaycraz.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpaaaycraz.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpaaaycraz.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpaaaycraz.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpaaaycraz.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpaaaycraz.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpaaaycraz.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpaaaycraz.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpaaaycraz.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpaaaycraz.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpaaaycraz.jl:22\ntest set: Error During Test at /tmp/tmpaaaycraz.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpaaaycraz.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpaaaycraz.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpaaaycraz.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpb6ma415t.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpb6ma415t.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpb6ma415t.jl:22\ntest set: Error During Test at /tmp/tmpb6ma415t.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpb6ma415t.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\t>>> consecutive_duplicates([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkgsaxy_q.jl:1\nin expression starting at /tmp/tmpkgsaxy_q.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp_pd4uwvl.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_pd4uwvl.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_pd4uwvl.jl:22\ntest set: Error During Test at /tmp/tmp_pd4uwvl.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_pd4uwvl.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "test set: Error During Test at /tmp/tmpff4dfxm2.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpff4dfxm2.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpff4dfxm2.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpff4dfxm2.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpff4dfxm2.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpff4dfxm2.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpff4dfxm2.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpff4dfxm2.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpff4dfxm2.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpgiva3vu9.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpgiva3vu9.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpgiva3vu9.jl:17\ntest set: Error During Test at /tmp/tmpgiva3vu9.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpg",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpgiva3vu9.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a list of numbers and removes the consecutive duplicates.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "test set: Error During Test at /tmp/tmpnyjswgdh.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpnyjswgdh.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpnyjswgdh.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpnyjswgdh.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpnyjswgdh.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpnyjswgdh.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpnyjswgdh.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpnyjswgdh.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpnyjswgdh.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpysxno88e.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpysxno88e.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpysxno88e.jl:20\ntest set: Error During Test at /tmp/tmpysxno88e.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpysxno88e.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123591,
      "stdout": "test set: Error During Test at /tmp/tmp13bq1fxu.jl:20\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp13bq1fxu.jl:8\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp13bq1fxu.jl:9\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp13bq1fxu.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp13bq1fxu.jl:9\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp13bq1fxu.jl:11\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp13bq1fxu.jl:9\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp13bq1fxu.jl:11\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp13bq1fxu.jl:9\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp13bq1fxu.jl:20 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp13bq1fxu.jl:19\ntest set: Error During Test at /tmp/tmp13bq1fxu.jl:21\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp13bq1fxu.jl:8\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp13bq1fxu.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp13bq1fxu.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123591,
      "stdout": "test set: Error During Test at /tmp/tmpi6yno5c4.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6yno5c4.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6yno5c4.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpi6yno5c4.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpi6yno5c4.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpi6yno5c4.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6yno5c4.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpi6yno5c4.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6yno5c4.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpi6yno5c4.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpi6yno5c4.jl:20\ntest set: Error During Test at /tmp/tmpi6yno5c4.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpi6yno5c4.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpi6yno5c4.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpi6yno5c4.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tInput: A list of numbers.\n\tOutput: A list of numbers with consecutive duplicates removed.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmp9h1k3mfq.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp9h1k3mfq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp9h1k3mfq.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp9h1k3mfq.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp9h1k3mfq.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp9h1k3mfq.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp9h1k3mfq.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp9h1k3mfq.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp9h1k3mfq.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp9h1k3mfq.jl:22 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp9h1k3mfq.jl:21\ntest set: Error During Test at /tmp/tmp9h1k3mfq.jl:23\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp9h1k3mfq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp9h1k3mfq.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp9h1k3mfq.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpvf6ker0m.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvf6ker0m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvf6ker0m.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpvf6ker0m.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpvf6ker0m.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpvf6ker0m.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvf6ker0m.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpvf6ker0m.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvf6ker0m.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpvf6ker0m.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpvf6ker0m.jl:22\ntest set: Error During Test at /tmp/tmpvf6ker0m.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvf6ker0m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpvf6ker0m.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpvf6ker0m.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmp3tfr3al3.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3tfr3al3.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3tfr3al3.jl:20\ntest set: Error During Test at /tmp/tmp3tfr3al3.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3tfr3al3.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "test set: Error During Test at /tmp/tmpkj37ys_h.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkj37ys_h.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkj37ys_h.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkj37ys_h.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkj37ys_h.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkj37ys_h.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkj37ys_h.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkj37ys_h.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkj37ys_h.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpgiva3vu9.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpgiva3vu9.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpgiva3vu9.jl:17\ntest set: Error During Test at /tmp/tmpgiva3vu9.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgiva3vu9.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpgiva3vu9.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpg",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpgiva3vu9.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpysxno88e.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpysxno88e.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpysxno88e.jl:20\ntest set: Error During Test at /tmp/tmpysxno88e.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpysxno88e.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list with consecutive duplicates removed.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmp74rrsvse.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp74rrsvse.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp74rrsvse.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp74rrsvse.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp74rrsvse.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp74rrsvse.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp74rrsvse.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp74rrsvse.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp74rrsvse.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp74rrsvse.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp74rrsvse.jl:20\ntest set: Error During Test at /tmp/tmp74rrsvse.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp74rrsvse.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp74rrsvse.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp74rrsvse.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmp677qkga6.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp677qkga6.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp677qkga6.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp677qkga6.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp677qkga6.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp677qkga6.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp677qkga6.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp677qkga6.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp677qkga6.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp677qkga6.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp677qkga6.jl:22\ntest set: Error During Test at /tmp/tmp677qkga6.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp677qkga6.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp677qkga6.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp677qkga6.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list without consecutive duplicates.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "test set: Error During Test at /tmp/tmpyj5f1vsw.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyj5f1vsw.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyj5f1vsw.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpyj5f1vsw.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyj5f1vsw.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpyj5f1vsw.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpyj5f1vsw.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpyj5f1vsw.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpyj5f1vsw.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tInput: A list of numbers\n\tOutput: A list of numbers with consecutive duplicates removed\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpmbcurgnz.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmbcurgnz.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmbcurgnz.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmbcurgnz.jl:15\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmbcurgnz.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpmbcurgnz.jl:15\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmbcurgnz.jl:13\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpmbcurgnz.jl:15\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmbcurgnz.jl:13\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpmbcurgnz.jl:24 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpmbcurgnz.jl:23\ntest set: Error During Test at /tmp/tmpmbcurgnz.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpmbcurgnz.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpmbcurgnz.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpmbcurgnz.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "test set: Error During Test at /tmp/tmpvb9mlw_w.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvb9mlw_w.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvb9mlw_w.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpvb9mlw_w.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpvb9mlw_w.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpvb9mlw_w.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvb9mlw_w.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpvb9mlw_w.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvb9mlw_w.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpvb9mlw_w.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpvb9mlw_w.jl:22\ntest set: Error During Test at /tmp/tmpvb9mlw_w.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpvb9mlw_w.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpvb9mlw_w.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpvb9mlw_w.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tnums_new = []\n\tfor i in nums\n\t\tif i in nums_new\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(nums_new, i)\n\t\tend\n\tend\n\treturn nums_new\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123593,
      "stdout": "test set: Test Failed at /tmp/tmp9z0qtcjk.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9z0qtcjk.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9z0qtcjk.jl:22\ntest set: Test Failed at /tmp/tmp9z0qtcjk.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9z0qtcjk.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9z0qtcjk.jl:22\ntest set: Test Failed at /tmp/tmp9z0qtcjk.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9z0qtcjk.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9z0qtcjk.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9z0qtcjk.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp_pd4uwvl.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_pd4uwvl.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_pd4uwvl.jl:22\ntest set: Error During Test at /tmp/tmp_pd4uwvl.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_pd4uwvl.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpa2i6sxra.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpa2i6sxra.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpa2i6sxra.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpa2i6sxra.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpa2i6sxra.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpa2i6sxra.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpa2i6sxra.jl:22\ntest set: Error During Test at /tmp/tmpa2i6sxra.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpa2i6sxra.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpa2i6sxra.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpa2i6sxra.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list with consecutive duplicates removed.\n\t\"\"\"\n\tnew_list = []\n\tfor i in nums\n\t\tif i in new_list\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123593,
      "stdout": "test set: Test Failed at /tmp/tmpki4_9rku.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpki4_9rku.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpki4_9rku.jl:22\ntest set: Test Failed at /tmp/tmpki4_9rku.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpki4_9rku.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpki4_9rku.jl:22\ntest set: Test Failed at /tmp/tmpki4_9rku.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpki4_9rku.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpki4_9rku.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpki4_9rku.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates from a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123594,
      "stdout": "test set: Error During Test at /tmp/tmp3nr6oqf8.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3nr6oqf8.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3nr6oqf8.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3nr6oqf8.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3nr6oqf8.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3nr6oqf8.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3nr6oqf8.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3nr6oqf8.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3nr6oqf8.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3nr6oqf8.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3nr6oqf8.jl:20\ntest set: Error During Test at /tmp/tmp3nr6oqf8.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3nr6oqf8.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3nr6oqf8.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3nr6oqf8.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123594,
      "stdout": "test set: Error During Test at /tmp/tmp_y5owiui.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_y5owiui.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_y5owiui.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_y5owiui.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_y5owiui.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_y5owiui.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_y5owiui.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_y5owiui.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_y5owiui.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_y5owiui.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_y5owiui.jl:20\ntest set: Error During Test at /tmp/tmp_y5owiui.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_y5owiui.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_y5owiui.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_y5owiui.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates from a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123594,
      "stdout": "test set: Error During Test at /tmp/tmpez5biq_2.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpez5biq_2.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpez5biq_2.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpez5biq_2.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpez5biq_2.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpez5biq_2.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpez5biq_2.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpez5biq_2.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpez5biq_2.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpez5biq_2.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpez5biq_2.jl:22\ntest set: Error During Test at /tmp/tmpez5biq_2.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpez5biq_2.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpez5biq_2.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpez5biq_2.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list with consecutive duplicates removed.\n\t\"\"\"\n\tnew_nums = []\n\tfor i in nums\n\t\tif i in new_nums\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_nums,i)\n\t\tend\n\tend\n\treturn new_nums\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123593,
      "stdout": "test set: Test Failed at /tmp/tmpmya0dpzr.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmya0dpzr.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmya0dpzr.jl:22\ntest set: Test Failed at /tmp/tmpmya0dpzr.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmya0dpzr.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmya0dpzr.jl:22\ntest set: Test Failed at /tmp/tmpmya0dpzr.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmya0dpzr.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmya0dpzr.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmya0dpzr.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\treturn [nums[1]] * (nums[1] != nums[2]) + consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmpedd1ads8.jl:19\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 16 times)\n     @ Main /tmp/tmpedd1ads8.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpedd1ads8.jl:19 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpedd1ads8.jl:18\ntest set: Error During Test at /tmp/tmpedd1ads8.jl:20\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 12 times)\n     @ Main /tmp/tmpedd1ads8.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpedd1ads8.jl:20 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpedd1ads8.jl:18\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpysxno88e.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpysxno88e.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpysxno88e.jl:20\ntest set: Error During Test at /tmp/tmpysxno88e.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpysxno88e.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpysxno88e.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpysxno88e.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpysxno88e.jl:20\ntest set: Error During Test at /tmp/tmpysxno88e.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpysxno88e.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[2:end] == []\n\t\treturn [nums[1]]\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmpu17z2stw.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpu17z2stw.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpu17z2stw.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpu17z2stw.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpu17z2stw.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpu17z2stw.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpu17z2stw.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpu17z2stw.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpu17z2stw.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tnew_list = []\n\tfor i in nums\n\t\tif i in new_list\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123593,
      "stdout": "test set: Test Failed at /tmp/tmpjy96d8qt.jl:20\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy96d8qt.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy96d8qt.jl:19\ntest set: Test Failed at /tmp/tmpjy96d8qt.jl:21\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy96d8qt.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy96d8qt.jl:19\ntest set: Test Failed at /tmp/tmpjy96d8qt.jl:23\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy96d8qt.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy96d8qt.jl:19\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjy96d8qt.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp_pd4uwvl.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_pd4uwvl.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_pd4uwvl.jl:22\ntest set: Error During Test at /tmp/tmp_pd4uwvl.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_pd4uwvl.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\tend\n\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmp7s_ocjm4.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp7s_ocjm4.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp7s_ocjm4.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp7s_ocjm4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp7s_ocjm4.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp7s_ocjm4.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp7s_ocjm4.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp7s_ocjm4.jl:21 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp7s_ocjm4.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmpgcmk04j5.jl:25\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgcmk04j5.jl:16\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgcmk04j5.jl:14\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpgcmk04j5.jl:16\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgcmk04j5.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpgcmk04j5.jl:16\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpgcmk04j5.jl:14\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpgcmk04j5.jl:25 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpgcmk04j5.jl:24\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123594,
      "stdout": "test set: Error During Test at /tmp/tmpzf1ezhoj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzf1ezhoj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzf1ezhoj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzf1ezhoj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzf1ezhoj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzf1ezhoj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzf1ezhoj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzf1ezhoj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzf1ezhoj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzf1ezhoj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzf1ezhoj.jl:20\ntest set: Error During Test at /tmp/tmpzf1ezhoj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzf1ezhoj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzf1ezhoj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzf1ezhoj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpubc_okov.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpubc_okov.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpubc_okov.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpubc_okov.jl:20\ntest set: Error During Test at /tmp/tmpubc_okov.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpubc_okov.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp_pd4uwvl.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_pd4uwvl.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_pd4uwvl.jl:22\ntest set: Error During Test at /tmp/tmp_pd4uwvl.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_pd4uwvl.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmp3tfr3al3.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3tfr3al3.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3tfr3al3.jl:20\ntest set: Error During Test at /tmp/tmp3tfr3al3.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3tfr3al3.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3tfr3al3.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3tfr3al3.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list with consecutive duplicates removed.\n\t\"\"\"\n\tnew_list = []\n\tfor i in nums\n\t\tif i in new_list\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123593,
      "stdout": "test set: Test Failed at /tmp/tmpk5z9pncj.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5z9pncj.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5z9pncj.jl:22\ntest set: Test Failed at /tmp/tmpk5z9pncj.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5z9pncj.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5z9pncj.jl:22\ntest set: Test Failed at /tmp/tmpk5z9pncj.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk5z9pncj.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk5z9pncj.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpk5z9pncj.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123594,
      "stdout": "test set: Error During Test at /tmp/tmpsjvx8tb7.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsjvx8tb7.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsjvx8tb7.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpsjvx8tb7.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpsjvx8tb7.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpsjvx8tb7.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsjvx8tb7.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpsjvx8tb7.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsjvx8tb7.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpsjvx8tb7.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpsjvx8tb7.jl:22\ntest set: Error During Test at /tmp/tmpsjvx8tb7.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsjvx8tb7.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpsjvx8tb7.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpsjvx8tb7.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn nums\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123596,
      "stdout": "test set: Error During Test at /tmp/tmp4rwmr7nl.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4rwmr7nl.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4rwmr7nl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp4rwmr7nl.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4rwmr7nl.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp4rwmr7nl.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4rwmr7nl.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp4rwmr7nl.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp4rwmr7nl.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpysxno88e.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpysxno88e.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpysxno88e.jl:20\ntest set: Error During Test at /tmp/tmpysxno88e.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpysxno88e.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpsoorg8g0.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpsoorg8g0.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpsoorg8g0.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpsoorg8g0.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpsoorg8g0.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpsoorg8g0.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpsoorg8g0.jl:20\ntest set: Error During Test at /tmp/tmpsoorg8g0.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpsoorg8g0.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpsoorg8g0.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpsoorg8g0.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpprjtookr.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpprjtookr.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpprjtookr.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpprjtookr.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpprjtookr.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpprjtookr.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpprjtookr.jl:20\ntest set: Error During Test at /tmp/tmpprjtookr.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpprjtookr.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpprjtookr.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpprjtookr.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpubc_okov.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpubc_okov.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpubc_okov.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpubc_okov.jl:20\ntest set: Error During Test at /tmp/tmpubc_okov.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpubc_okov.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp_pd4uwvl.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_pd4uwvl.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_pd4uwvl.jl:22\ntest set: Error During Test at /tmp/tmp_pd4uwvl.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_pd4uwvl.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\t>>> consecutive_duplicates([1,1,2,3,3,3,4,4,4,4,5,5,5,5,5])\n\t[1,2,3,4,5]\n\t\"\"\"\n\tnew_list = []\n\tfor i in nums:\n\t\tif i not in new_list:\n\t\t\tnew_list.append(i)\n\treturn new_list\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2s9i4y3z.jl:11\nin expression starting at /tmp/tmp2s9i4y3z.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpb6ma415t.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpb6ma415t.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpb6ma415t.jl:22\ntest set: Error During Test at /tmp/tmpb6ma415t.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpb6ma415t.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpb6ma415t.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpb6ma415t.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp_pd4uwvl.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp_pd4uwvl.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp_pd4uwvl.jl:22\ntest set: Error During Test at /tmp/tmp_pd4uwvl.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp_pd4uwvl.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp_pd4uwvl.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp_pd4uwvl.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tnums: list of numbers\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmpojj94obb.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpojj94obb.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpojj94obb.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpojj94obb.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpojj94obb.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpojj94obb.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpojj94obb.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpojj94obb.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpojj94obb.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpojj94obb.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpojj94obb.jl:20\ntest set: Error During Test at /tmp/tmpojj94obb.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpojj94obb.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpojj94obb.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpojj94obb.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\t>>> consecutive_duplicates([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123589,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkgsaxy_q.jl:1\nin expression starting at /tmp/tmpkgsaxy_q.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmpkujpheif.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkujpheif.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkujpheif.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkujpheif.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkujpheif.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkujpheif.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkujpheif.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkujpheif.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkujpheif.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpkujpheif.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpkujpheif.jl:22\ntest set: Error During Test at /tmp/tmpkujpheif.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkujpheif.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpkujpheif.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpkujpheif.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmp2li__dxq.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2li__dxq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2li__dxq.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2li__dxq.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2li__dxq.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp2li__dxq.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2li__dxq.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp2li__dxq.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2li__dxq.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp2li__dxq.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp2li__dxq.jl:22\ntest set: Error During Test at /tmp/tmp2li__dxq.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp2li__dxq.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp2li__dxq.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp2li__dxq.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates from a list.\n\t\"\"\"\n\tnew_list = []\n\tfor i in nums\n\t\tif i in new_list\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Test Failed at /tmp/tmppz0qhb9m.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppz0qhb9m.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppz0qhb9m.jl:22\ntest set: Test Failed at /tmp/tmppz0qhb9m.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppz0qhb9m.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppz0qhb9m.jl:22\ntest set: Test Failed at /tmp/tmppz0qhb9m.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppz0qhb9m.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppz0qhb9m.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppz0qhb9m.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123597,
      "stdout": "test set: Error During Test at /tmp/tmpk1hx3aq4.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpk1hx3aq4.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpk1hx3aq4.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpk1hx3aq4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpk1hx3aq4.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpk1hx3aq4.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpk1hx3aq4.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpk1hx3aq4.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpk1hx3aq4.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function takes a list of numbers and returns a list of numbers with consecutive duplicates removed.\n\t\"\"\"\n\tnew_list = []\n\tfor i in nums\n\t\tif i in new_list\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Test Failed at /tmp/tmpbf4okzlp.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbf4okzlp.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbf4okzlp.jl:22\ntest set: Test Failed at /tmp/tmpbf4okzlp.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbf4okzlp.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbf4okzlp.jl:22\ntest set: Test Failed at /tmp/tmpbf4okzlp.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbf4okzlp.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbf4okzlp.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbf4okzlp.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\tend\n\tif length(nums) == 1\n\t\treturn nums\n\tend\n\tif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\tend\n\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmp7s_ocjm4.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp7s_ocjm4.jl:14\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp7s_ocjm4.jl:12\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp7s_ocjm4.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp7s_ocjm4.jl:12\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp7s_ocjm4.jl:14\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp7s_ocjm4.jl:12\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmp7s_ocjm4.jl:21 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmp7s_ocjm4.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123595,
      "stdout": "test set: Error During Test at /tmp/tmpzqiilax6.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzqiilax6.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzqiilax6.jl:12\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzqiilax6.jl:14\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzqiilax6.jl:12\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzqiilax6.jl:14\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzqiilax6.jl:12\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzqiilax6.jl:14\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzqiilax6.jl:12\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzqiilax6.jl:23 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzqiilax6.jl:22\ntest set: Error During Test at /tmp/tmpzqiilax6.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzqiilax6.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzqiilax6.jl:14\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzqiilax6.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telse\n\t\tif nums[1] == nums[2]\n\t\t\treturn consecutive_duplicates(nums[2:end])\n\t\telse\n\t\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510264,
      "stdout": "test set: Error During Test at /tmp/tmpkgakli9m.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpkgakli9m.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpkgakli9m.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpkgakli9m.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpkgakli9m.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n    if length(nums) == 0\n        return []\n    elseif length(nums) == 1\n        return nums\n    else\n        if nums[1] == nums[2]\n            return consecutive_duplicates(nums[2:end])\n        else\n            return [nums[1]] * consecutive_duplicates(nums[2:end])\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123597,
      "stdout": "test set: Error During Test at /tmp/tmpbcivxc91.jl:22\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpbcivxc91.jl:13\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpbcivxc91.jl:11\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpbcivxc91.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpbcivxc91.jl:11\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpbcivxc91.jl:13\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpbcivxc91.jl:11\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpbcivxc91.jl:22 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpbcivxc91.jl:21\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn [nums[1]]\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123598,
      "stdout": "test set: Error During Test at /tmp/tmpeoqpgnxe.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpeoqpgnxe.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpeoqpgnxe.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpeoqpgnxe.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpeoqpgnxe.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpeoqpgnxe.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpeoqpgnxe.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpeoqpgnxe.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpeoqpgnxe.jl:22\ntest set: Error During Test at /tmp/tmpeoqpgnxe.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpfnqpj2ay.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpfnqpj2ay.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpfnqpj2ay.jl:20\ntest set: Error During Test at /tmp/tmpfnqpj2ay.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpfnqpj2ay.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpfnqpj2ay.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpfnqpj2ay.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemoves consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpubc_okov.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpubc_okov.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpubc_okov.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpubc_okov.jl:20\ntest set: Error During Test at /tmp/tmpubc_okov.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpubc_okov.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpubc_okov.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpubc_okov.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tFunction to remove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmpzl60kuye.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpzl60kuye.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpzl60kuye.jl:20\ntest set: Error During Test at /tmp/tmpzl60kuye.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpzl60kuye.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpzl60kuye.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpzl60kuye.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmphd6c5ukj.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmphd6c5ukj.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmphd6c5ukj.jl:20\ntest set: Error During Test at /tmp/tmphd6c5ukj.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmphd6c5ukj.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmphd6c5ukj.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmphd6c5ukj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tThis function removes consecutive duplicates from a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123590,
      "stdout": "test set: Error During Test at /tmp/tmp3p8msgo4.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3p8msgo4.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3p8msgo4.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3p8msgo4.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3p8msgo4.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3p8msgo4.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3p8msgo4.jl:20\ntest set: Error During Test at /tmp/tmp3p8msgo4.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3p8msgo4.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3p8msgo4.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3p8msgo4.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tnew_list = []\n\tfor i in nums\n\t\tif i in new_list\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123593,
      "stdout": "test set: Test Failed at /tmp/tmpjy96d8qt.jl:20\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n   Evaluated: Any[0, 1, 2, 3, 4, 5, 6, 7, 8, 9] == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy96d8qt.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy96d8qt.jl:19\ntest set: Test Failed at /tmp/tmpjy96d8qt.jl:21\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n   Evaluated: Any[10, 15, 19, 18, 17, 26] == [10, 15, 19, 18, 17, 26, 17, 18, 10]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy96d8qt.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy96d8qt.jl:19\ntest set: Test Failed at /tmp/tmpjy96d8qt.jl:23\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"]\n   Evaluated: Any[\"a\", \"b\", \"c\", \"d\"] == [\"a\", \"b\", \"c\", \"d\", \"a\"]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjy96d8qt.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjy96d8qt.jl:19\nTest Summary: | Pass  Fail  Total\ntest set      |    1     3      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjy96d8qt.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates from a list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpysxno88e.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpysxno88e.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpysxno88e.jl:20\ntest set: Error During Test at /tmp/tmpysxno88e.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpysxno88e.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpysxno88e.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpysxno88e.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp43zbmhid.jl:18\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp43zbmhid.jl:18 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp43zbmhid.jl:17\ntest set: Error During Test at /tmp/tmp43zbmhid.jl:19\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp43zbmhid.jl:7\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp43zbmhid.jl:10\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp43zbmhid.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]]*consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmpjamb1crx.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpjamb1crx.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpjamb1crx.jl:20\ntest set: Error During Test at /tmp/tmpjamb1crx.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpjamb1crx.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmpjamb1crx.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmpjamb1crx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif nums == []\n\t\treturn []\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1665510262,
      "stdout": "test set: Error During Test at /tmp/tmp3zvgvvix.jl:21\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [4] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [6] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [7] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n    [8] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [9] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:11\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp3zvgvvix.jl:21 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp3zvgvvix.jl:20\ntest set: Error During Test at /tmp/tmp3zvgvvix.jl:22\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10]\n  BoundsError: attempt to access 1-element Vector{Int64} at index [2]\n  Stacktrace:\n    [1] getindex\n      @ ./array.jl:861 [inlined]\n    [2] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmp3zvgvvix.jl:10\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 3 times)\n      @ Main /tmp/tmp3zvgvvix.jl:13\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.\nin expression starting at /tmp/tmp3zvgvvix.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove consecutive duplicates of a given list.\n\t\"\"\"\nfunction consecutive_duplicates(nums::Any)::Any \n\t\"\"\"\n\tRemove consecutive duplicates of a given list.\n\t\"\"\"\n\tif length(nums) == 0\n\t\treturn []\n\telseif length(nums) == 1\n\t\treturn nums\n\telseif nums[1] == nums[2]\n\t\treturn consecutive_duplicates(nums[2:end])\n\telse\n\t\treturn [nums[1]] * consecutive_duplicates(nums[2:end])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [10, 15, 19, 18, 17, 26, 17, 18, 10])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [\"a\", \"b\", \"c\", \"d\"])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\", \"a\", \"a\"]) == [\"a\", \"b\", \"c\", \"d\", \"a\"])\nend\n",
      "timestamp": 1666123592,
      "stdout": "test set: Error During Test at /tmp/tmpff4dfxm2.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 4]\n  MethodError: no method matching *(::Vector{Int64}, ::Vector{Int64})\n  Closest candidates are:\n    *(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32, Float64, ComplexF32, ComplexF64}, S<:Real} at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ}) at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n    ...\n  Stacktrace:\n    [1] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpff4dfxm2.jl:15\n    [2] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpff4dfxm2.jl:13\n    [3] consecutive_duplicates(nums::Vector{Int64}) (repeats 2 times)\n      @ Main /tmp/tmpff4dfxm2.jl:15\n    [4] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpff4dfxm2.jl:13\n    [5] consecutive_duplicates(nums::Vector{Int64}) (repeats 4 times)\n      @ Main /tmp/tmpff4dfxm2.jl:15\n    [6] consecutive_duplicates(nums::Vector{Int64})\n      @ Main /tmp/tmpff4dfxm2.jl:13\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpff4dfxm2.jl:23 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpff4dfxm2.jl:22\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    }
  ]
}
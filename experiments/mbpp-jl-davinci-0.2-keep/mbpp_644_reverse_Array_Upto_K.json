{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to reverse an array upto a given position.\n\t\"\"\"\nfunction reverse_Array_Upto_K(input::Vector{Int64}, k::Int64)::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = reverse_Array_Upto_K;\n\t@test(candidate([1, 2, 3, 4, 5, 6], 4) == [4, 3, 2, 1, 5, 6])\n\t@test(candidate([4, 5, 6, 7], 2) == [5, 4, 6, 7])\n\t@test(candidate([9, 8, 7, 6, 5], 3) == [7, 8, 9, 6, 5])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tif k > length(input)\n\t\tprintln(\"k should be less than length of array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector{Int64}\n\tk: Int64\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tThis function takes two inputs:\n\t\tinput: Vector of integers\n\t\tk: Integer\n\tThis function returns a Vector of integers\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(reverse(input)[1:k], k)\n\tend\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: integer\n\treturn: array of integers\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[1:k], reverse(input[k+1:end])), k+1)\n\tend\nend",
    "\t# Write your code here\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: Integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\nend",
    "\t\"\"\"\n\tThis function takes an array and a number k as input and returns the reverse of the array upto k.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"k is greater than the length of the array\"\n\telse\n\t\treturn reverse(input[1:k])\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\t\n\tif k > length(input)\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "    input[1:k] = reverse(input[1:k])\n    return input\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Array of integers\n\tk: Integer\n\treturn: Array of integers\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\nend",
    "\t\"\"\"\n\tThis function takes an array and a position and returns the array with the elements upto the position reversed.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"k is greater than the length of the array\"\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tThis function takes an array and a number k as input and returns the reverse of the array upto k.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"k is greater than the length of the array\"\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k)\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: Integer\n\t\"\"\"\n\t\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k)\n\tend\nend",
    "\t\"\"\"\n\tThis function takes an array and a number k as input and returns the reverse of the array upto k.\n\t\"\"\"\n\treverse_Array_Upto_K = input[1:k]\n\treverse_Array_Upto_K = reverse(reverse_Array_Upto_K)\n\treverse_Array_Upto_K = vcat(reverse_Array_Upto_K, input[k+1:end])\n\treturn reverse_Array_Upto_K\nend",
    "\t\"\"\"\n\tinput: input array\n\tk: position upto which array is to be reversed\n\t\"\"\"\n\tn = length(input)\n\tif k > n\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: integer\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of input\")\n\t\treturn input\n\tend\n\tif k == length(input)\n\t\treturn reverse(input)\n\tend\n\tif k == 1\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) .* input[k+1:end]\nend",
    "    if k > length(input)\n        println(\"k is greater than length of array\")\n        return input\n    end\n    for i in 1:k\n        input[i] = input[i] + input[k-i+1]\n        input[k-i+1] = input[i] - input[k-i+1]\n        input[i] = input[i] - input[k-i+1]\n    end\n    return input\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: integer\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than the length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k-1)\n\tend\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k:end], input[1:k-1]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: integer\n\treturn: array of integers\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k-1)\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "    if k > length(input)\n        return input\n    else\n        return reverse(input[1:k])\n    end\nend",
    "\tif k == 0\n\t\treturn input\n\tend\n\tif k == 1\n\t\treturn input\n\tend\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse_Array_Upto_K(input[1:k], k-1), k-1)\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) * input[k+1:end]\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\nend",
    "\t\"\"\"\n\tinput: vector of integers\n\tk: integer\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of input\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: input array\n\tk: position upto which the array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) * input[k+1:end]\nend",
    "\tif k < length(input)\n\t\treturn reverse(input[1:k])\n\telse\n\t\treturn reverse(input)\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k)\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: Integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tThis function takes an array and a position as input and returns the array with elements upto the position reversed.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"The position is greater than the length of the array\")\n\telse\n\t\tfor i in 1:k\n\t\t\tinput[i] = input[k-i+1]\n\t\tend\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k)\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "    if k > length(input)\n        return input\n    end\n    return reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\nend",
    "\treturn reverse(input[1:k])\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k == 0\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K([input[k] ; input[1:k-1]], k-1)\n\tend\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: integer\n\t\"\"\"\n\tfor i in 1:k/2\n\t\tinput[i], input[k-i+1] = input[k-i+1], input[i]\n\tend\n\treturn input\nend",
    "\treturn reverse(input[1:k])\nend",
    "\t\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of the array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "    return reverse(input[1:k])\nend",
    "\t\"\"\"\n\tinput: input array\n\tk: position upto which array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"k is greater than length of array\"\n\tend\n\tfor i in 1:k\n\t\tinput[i], input[k] = input[k], input[i]\n\t\tk -= 1\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: position upto which the array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k)\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "\t\"\"\"\n\tinput: input array\n\tk: position upto which array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: input array\n\tk: position upto which array is to be reversed\n\t\"\"\"\n\treturn [input[k-i+1] for i in 1:k]\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\treverse_Array_Upto_K = input[1:k]\n\treverse_Array_Upto_K = reverse(reverse_Array_Upto_K)\n\treverse_Array_Upto_K = vcat(reverse_Array_Upto_K, input[k+1:end])\n\treturn reverse_Array_Upto_K\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: position upto which the array has to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k cannot be greater than length of array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: position upto which the array has to be reversed\n\t\"\"\"\n\t\n\t# check if k is less than the length of the array\n\tif k > length(input)\n\t\tprintln(\"k is greater than the length of the array\")\n\t\treturn input\n\tend\n\t\n\t# reverse the array upto k\n\tfor i in 1:k\n\t\tinput[i] = input[k - i + 1]\n\tend\n\t\n\treturn input\nend",
    "\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "    if k >= length(input)\n        return reverse(input)\n    else\n        return vcat(reverse(input[1:k]), input[k+1:end])\n    end\nend",
    "\tif length(input) < k\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k)\nend",
    "\t\tif k > length(input)\n\t\t\treturn input\n\t\tend\n\t\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\n\tend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tThis function reverses the array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: integer\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of input\")\n\t\treturn input\n\tend\n\t\n\treturn reverse_Array_Upto_K(input, k, 1)\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: Integer\n\treturn: Vector of integers\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k)\n\tend\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: Integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k)\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\n\t\nend",
    "\t# input = [1,2,3,4,5,6,7,8,9,10]\n\t# k = 5\n\t# output = [5,4,3,2,1,6,7,8,9,10]\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\nend",
    "\t\"\"\"\n\tinput: Vector of numbers\n\tk: position upto which the array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\n\tend\nend",
    "\t\n\t# check if k is less than length of input\n\tif k > length(input)\n\t\tprintln(\"k should be less than length of input\")\n\t\treturn input\n\tend\n\t\n\t# reverse the array upto k\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "\t\"\"\"\n\tinput: Array of integers\n\tk: position upto which array is to be reversed\n\treturn: reversed array\n\t\"\"\"\n\tfor i in 1:k/2\n\t\tinput[i], input[k-i+1] = input[k-i+1], input[i]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\n\tend\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tThis function takes an array and a position as input and returns the array with the elements reversed upto the given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k-1)\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\n\t\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "    if k > length(input)\n        println(\"k is greater than length of the array\")\n        return input\n    end\n    for i in 1:k\n        input[i] = input[i] + input[k-i+1]\n        input[k-i+1] = input[i] - input[k-i+1]\n        input[i] = input[i] - input[k-i+1]\n    end\n    return input\nend",
    "\t\"\"\"\n\tThis function reverses the elements of the array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"K is greater than the length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: Integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\n\t\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse(input[1:k])\n\tend\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than the length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse(input[1:k])\n\tend\nend",
    "    if k > length(input)\n        return input\n    end\n    return reverse(input[1:k]) .* input[k+1:end]\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn \"k is greater than length of array\"\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: A vector of integers\n\tk: An integer\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of input\")\n\t\treturn input\n\telse\n\t\treturn reverse(input[1:k])\n\tend\nend",
    "\t\tn = length(input)\n\t\tfor i in 1:k\n\t\t\ttemp = input[i]\n\t\t\tinput[i] = input[n-i+1]\n\t\t\tinput[n-i+1] = temp\n\t\tend\n\t\treturn input\n\tend",
    "\t\"\"\"\n\tinput: Vector of Integers\n\tk: Integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k-1)\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\t\"\"\"\n\tThis function takes an array and a number as input and returns the array with the elements reversed upto the given number.\n\t\"\"\"\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector of numbers\n\tk: position upto which the array has to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k should be less than or equal to length of input\")\n\t\treturn input\n\telse\n\t\treturn reverse(input[1:k])\n\tend\nend",
    "    if k > length(input)\n        println(\"k is greater than length of array\")\n        return input\n    end\n    for i in 1:k\n        input[i] = input[i] + input[k-i+1]\n        input[k-i+1] = input[i] - input[k-i+1]\n        input[i] = input[i] - input[k-i+1]\n    end\n    return input\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: Integer\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of input\")\n\t\treturn input\n\tend\n\tif k == length(input)\n\t\treturn reverse(input)\n\tend\n\tif k == 1\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) .* input[k+1:end]\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) * input[k+1:end]\nend",
    "    if k > length(input)\n        return input\n    else\n        return reverse(input[1:k]) * input[k+1:end]\n    end\nend",
    "\treverse_Array_Upto_K = input[1:k]\n\treverse_Array_Upto_K = reverse(reverse_Array_Upto_K)\n\treverse_Array_Upto_K = [reverse_Array_Upto_K; input[k+1:end]]\n\treturn reverse_Array_Upto_K\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) * input[k+1:end]\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\n\t\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than the length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tThis function takes an array and a number k as input and returns the reverse of the array upto kth position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"k is greater than the length of the array\"\n\tend\n\t\n\tfor i in 1:k\n\t\tif i <= k/2\n\t\t\tinput[i], input[k-i+1] = input[k-i+1], input[i]\n\t\tend\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: input vector\n\tk: position upto which the array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k)\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "    if k > length(input)\n        println(\"k is greater than length of array\")\n        return input\n    end\n    for i in 1:k\n        input[i] = input[i] + input[k-i+1]\n        input[k-i+1] = input[i] - input[k-i+1]\n        input[i] = input[i] - input[k-i+1]\n    end\n    return input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) .* input[k+1:end]\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse(input[1:k])\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tWrite a python function to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\n\tend\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\tfor i in 1:k\n\t\tinput[i] = input[k - i + 1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"K is greater than the length of the array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: Integer\n\t\"\"\"\n\t\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of input\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\t\tif k > length(input)\n\t\t\tprintln(\"k is greater than length of input array\")\n\t\t\treturn input\n\t\tend\n\t\tfor i in 1:k\n\t\t\tinput[i] = input[i] + input[k-i+1]\n\t\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\t\tinput[i] = input[i] - input[k-i+1]\n\t\tend\n\t\treturn input\n\tend",
    "\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "    if k > length(input)\n        return input\n    end\n    return [input[i] for i in k:-1:1] * input[k+1:end]\nend",
    "\t\"\"\"\n\tinput: input array\n\tk: position upto which array is to be reversed\n\t\"\"\"\n\t\n\tif k > length(input)\n\t\tprintln(\"k should be less than or equal to length of array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k/2\n\t\tinput[i], input[k-i+1] = input[k-i+1], input[i]\n\tend\n\t\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\n\t\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\t\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"K is greater than the length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"K is greater than the length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\n\t\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) .* input[k+1:end]\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\n\t\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of input\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "\t\"\"\"\n\tThis function takes an array and a number k and reverses the array upto k.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k-1)\nend",
    "\t\"\"\"\n\tThis function takes an array and a number k as input and reverses the array upto the kth element.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k cannot be greater than the length of the array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k/2\n\t\tinput[i], input[k-i+1] = input[k-i+1], input[i]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\n\tend\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of input array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k/2\n\t\ttemp = input[i]\n\t\tinput[i] = input[k-i+1]\n\t\tinput[k-i+1] = temp\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"k should be less than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\tif k > length(input)\n\t\t\treturn input\n\t\telse\n\t\t\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\n\t\tend\n\tend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of input\")\n\t\treturn input\n\tend\n\tfor i in 1:k/2\n\t\tinput[i], input[k-i+1] = input[k-i+1], input[i]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) .* input[k+1:end]\nend",
    "\t\"\"\"\n\tinput: Array of integers\n\tk: Integer\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: integer\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\telse\n\t\treturn reverse(input[1:k])\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k - i + 1]\n\t\tinput[k - i + 1] = input[i] - input[k - i + 1]\n\t\tinput[i] = input[i] - input[k - i + 1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: position upto which the array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"k is greater than the length of the array\"\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: input array\n\tk: position upto which array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\t\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: position upto which the array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than the length of the array\")\n\t\treturn input\n\tend\n\tif k == 0\n\t\treturn input\n\tend\n\tif k == 1\n\t\treturn input\n\tend\n\tif k == length(input)\n\t\treturn reverse(input)\n\tend\n\treturn reverse(input[1:k]) .* input[k+1:end]\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse(input[1:k])\n\tend\nend",
    "    if k > length(input)\n        return input\n    end\n    return reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k]) .* input[k+1:end]\nend",
    "    if k > length(input)\n        println(\"k is greater than length of array\")\n        return input\n    end\n    for i in 1:k\n        input[i] = input[i] + input[k - i + 1]\n        input[k - i + 1] = input[i] - input[k - i + 1]\n        input[i] = input[i] - input[k - i + 1]\n    end\n    return input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\treturn reverse(input[1:k])\nend",
    "    if k > length(input)\n        return input\n    end\n    for i in 1:k\n        input[i] = input[k-i+1]\n    end\n    return input\nend",
    "\t\"\"\"\n\tinput: input array\n\tk: position upto which array is to be reversed\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"K is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tThis function takes an array and a position as input and returns the array with the elements upto the position reversed.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"Invalid Position\"\n\tend\n\tfor i in 1:k/2\n\t\ttemp = input[i]\n\t\tinput[i] = input[k-i+1]\n\t\tinput[k-i+1] = temp\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tThis function takes an array and a number k as input and reverses the array upto k.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"k is greater than the length of the array\"\n\tend\n\treturn reverse(input[1:k])\nend",
    "\t\"\"\"\n\tinput: array of integers\n\tk: integer\n\treturn: array of integers\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k-1)\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than the length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k/2\n\t\ttemp = input[i]\n\t\tinput[i] = input[k-i+1]\n\t\tinput[k-i+1] = temp\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\tprintln(\"k is greater than length of array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse_Array_Upto_K(reverse(input[1:k]), k)\nend",
    "    if k > length(input)\n        return input\n    else\n        return reverse(input[1:k]) * input[k+1:end]\n    end\nend",
    "    if k > length(input)\n        return input\n    end\n    for i in 1:k\n        input[i] = input[k-i+1]\n    end\n    return input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k == 0\n\t\treturn input\n\telse\n\t\treturn [input[k]] .+ reverse_Array_Upto_K(input[1:k-1], k-1) .+ [input[1]]\n\tend\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tfor i in 1:k\n\t\tinput[i] = input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tThis function reverses the array upto the given position.\n\t\"\"\"\n\tif k > length(input)\n\t\tprintln(\"k is greater than the length of the array\")\n\t\treturn input\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\t\n\tfor i in 1:k\n\t\ttemp = input[i]\n\t\tinput[i] = input[k]\n\t\tinput[k] = temp\n\t\tk -= 1\n\tend\n\treturn input\nend",
    "\t# Reverse the array upto k\n\tfor i in 1:k\n\t\tj = i\n\t\twhile j <= k\n\t\t\ttemp = input[j]\n\t\t\tinput[j] = input[k]\n\t\t\tinput[k] = temp\n\t\t\tj += 1\n\t\t\tk -= 1\n\t\tend\n\tend\n\treturn input\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn \"k is greater than length of array\"\n\tend\n\tfor i in 1:k\n\t\tinput[i] = input[i] + input[k-i+1]\n\t\tinput[k-i+1] = input[i] - input[k-i+1]\n\t\tinput[i] = input[i] - input[k-i+1]\n\tend\n\treturn input\nend",
    "\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tFunction to reverse an array upto a given position.\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(input[k+1:end], input[1:k]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tinput: Array of integers\n\tk: position upto which the array has to be reversed\n\treturn: reversed array\n\t\"\"\"\n\tif k > length(input)\n\t\treturn input\n\telse\n\t\treturn reverse_Array_Upto_K(vcat(reverse(input[1:k]), input[k+1:end]), k+1)\n\tend\nend",
    "\t\"\"\"\n\tinput: Vector of integers\n\tk: position upto which the array is to be reversed\n\t\"\"\"\n\treturn reverse(input[1:k])\nend",
    "    if k > length(input)\n        return input\n    end\n    for i in 1:k/2\n        temp = input[i]\n        input[i] = input[k-i+1]\n        input[k-i+1] = temp\n    end\n    return input\nend",
    "\tif k > length(input)\n\t\treturn input\n\tend\n\treturn reverse(input[1:k])\nend"
  ]
}
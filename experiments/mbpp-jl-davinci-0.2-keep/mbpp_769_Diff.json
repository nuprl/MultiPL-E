{
  "name": "mbpp_769_Diff",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to get the difference between two lists.\n\t\"\"\"\nfunction Diff(li1::Vector{Int64}, li2::Vector{Int64})::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_769_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = Diff;\n\t@test(candidate([10, 15, 20, 25, 30, 35, 40], [25, 40, 35]) == [10, 20, 30, 15])\n\t@test(candidate([1, 2, 3, 4, 5], [6, 7, 1]) == [2, 3, 4, 5, 6, 7])\n\t@test(candidate([1, 2, 3], [6, 7, 1]) == [2, 3, 6, 7])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i not in li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i not in li1\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tReturns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i not in li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i not in li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i not in li1\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff_list = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff_list = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\tfor j in li2\n\t\tif j in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, j)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdifference = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(difference, i)\n\t\tend\n\tend\n\treturn difference\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains those elements that are present in the first list, but not in the second.\n\t\"\"\"\n\tdiff_list = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists as input and returns a list that contains those elements that are present in the first list and not in second list.\n\t\"\"\"\n\tdiff_list = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\tMake sure your program works on two lists of different sizes.\n\t\"\"\"\n\t# convert to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t# find the difference\n\tdiff = setdiff(set1, set2)\n\t# convert back to list\n\treturn collect(diff)\nend",
    "    return setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    diff = []\n    for i in li1\n        if i in li2\n            continue\n        else\n            push!(diff, i)\n        end\n    end\n    for i in li2\n        if i in li1\n            continue\n        else\n            push!(diff, i)\n        end\n    end\n    return diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tReturn the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t# li3 = []\n\t# for i in li1\n\t# \tif i not in li2\n\t# \t\tpush!(li3, i)\n\t# \tend\n\t# end\n\t# for i in li2\n\t# \tif i not in li1\n\t# \t\tpush!(li3, i)\n\t# \tend\n\t# end\n\t# return li3\n\treturn vcat(setdiff(li1, li2), setdiff(li2, li1))\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tDifference between two lists\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\t# convert the lists to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t# find the difference between the sets\n\tdiff = setdiff(set1, set2)\n\t# convert the set to a list\n\tdiff = collect(diff)\n\treturn diff\nend",
    "    return setdiff(union(li1, li2), intersect(li1, li2))\nend",
    "    li_dif = []\n    for i in li1\n        if i \u2209 li2\n            push!(li_dif, i)\n        end\n    end\n    for i in li2\n        if i \u2209 li1\n            push!(li_dif, i)\n        end\n    end\n    return li_dif\nend",
    "    return setdiff(li1, li2)\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\tli_diff = []\n\tfor i = 1:length(li1)\n\t\tif !(i in li2)\n\t\t\tpush!(li_diff, i)\n\t\tend\n\tend\n\treturn li_diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor j in li2\n\t\tif j in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, j)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists as input and returns a list that contains those elements that are present in the first list, but not in the second.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif !(i in li2)\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\t\tFunction to get the difference between two lists.\n\t\t\n\t\tParameters\n\t\t----------\n\t\tli1 : Vector{Int64}\n\t\t\tFirst list.\n\t\tli2 : Vector{Int64}\n\t\t\tSecond list.\n\t\t\n\t\tReturns\n\t\t-------\n\t\tVector{Int64}\n\t\t\tDifference between the two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates). \n\tMake sure your program works on two lists of different sizes.\n\t\"\"\"\n\tdiff_li = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tpush!(diff_li, i)\n\t\tend\n\tend\n\treturn diff_li\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff,i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff,i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\t# convert lists to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t# return the difference between the sets\n\treturn setdiff(set1, set2)\nend",
    "    return setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor j in li2\n\t\tif j in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, j)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "    return setdiff(li1, li2)\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains those elements that are present in the first list, but not in the second.\n\t\"\"\"\n\tdiff_list = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "    diff = []\n    for i in li1\n        if i in li2\n            continue\n        else\n            push!(diff, i)\n        end\n    end\n    for i in li2\n        if i in li1\n            continue\n        else\n            push!(diff, i)\n        end\n    end\n    return diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists as input and returns a list that contains those elements that are present in the first list, but not in the second.\n\t\"\"\"\n\tdiff_list = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    li_dif = []\n    for i in li1\n        if i \u2209 li2\n            push!(li_dif, i)\n        end\n    end\n    for i in li2\n        if i \u2209 li1\n            push!(li_dif, i)\n        end\n    end\n    return li_dif\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i \u2209 li1\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\tMake sure your program works on two lists of different sizes.\n\t\"\"\"\n\t#convert to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t#return the difference\n\treturn setdiff(set1, set2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i not in li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i not in li1\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tDifference between two lists\n\t\"\"\"\n\t# convert to set\n\ts1 = Set(li1)\n\ts2 = Set(li2)\n\t# return the difference\n\treturn collect(setdiff(s1, s2))\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tReturn the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor j in li2\n\t\tif j in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, j)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates). \n\tMake sure your program works on two lists of different sizes.\n\t\"\"\"\n\tli_diff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tpush!(li_diff, i)\n\t\tend\n\tend\n\treturn li_diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\tdiff = []\n\t\tfor i in li1\n\t\t\tif i in li2\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tpush!(diff, i)\n\t\t\tend\n\t\tend\n\t\tfor i in li2\n\t\t\tif i in li1\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tpush!(diff, i)\n\t\t\tend\n\t\tend\n\t\treturn diff\n\tend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor j in li2\n\t\tif j in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, j)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\tli_dif = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(li_dif, i)\n\t\tend\n\tend\n\treturn li_dif\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\treturn unique(intersect(li1, li2))\nend",
    "\t\"\"\"\n\t\tDifference between two lists\n\t\"\"\"\n\tli_dif = []\n\tfor i = 1:length(li1)\n\t\tif !(li1[i] in li2)\n\t\t\tpush!(li_dif, li1[i])\n\t\tend\n\tend\n\treturn li_dif\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff,i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff_list = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\tMake sure your program works on two lists of different sizes.\n\t\"\"\"\n\t# convert the lists to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t# find the intersection of the sets\n\tintersection = set1 \u2229 set2\n\t# convert the intersection back to a list\n\treturn collect(intersection)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\t# Convert the lists to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t# Return the difference between the sets\n\treturn setdiff(set1, set2)\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\t\tFunction to get the difference between two lists.\n\t\tArgs:\n\t\t\tli1: first list\n\t\t\tli2: second list\n\t\tReturns:\n\t\t\tdiff: difference between two lists\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i not in li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i not in li1\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    li_dif = Vector{Int64}()\n    for i in li1\n        if i \u2209 li2\n            push!(li_dif, i)\n        end\n    end\n    for i in li2\n        if i \u2209 li1\n            push!(li_dif, i)\n        end\n    end\n    return li_dif\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tFind the difference between two lists.",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\t# convert to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t# take the difference\n\tdiff = setdiff(set1, set2)\n\t# convert back to list\n\tdiff = collect(diff)\n\treturn diff\nend",
    "\t\"\"\"\n\tReturn the difference between two lists.\n\t\"\"\"\n\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tReturns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(union(li1, li2), intersect(li1, li2))\nend",
    "    return setdiff(li1, li2)\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\tdiff = []\n\t\tfor i in li1\n\t\t\tif i in li2\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tpush!(diff, i)\n\t\t\tend\n\t\tend\n\t\tfor i in li2\n\t\t\tif i in li1\n\t\t\t\tcontinue\n\t\t\telse\n\t\t\t\tpush!(diff, i)\n\t\t\tend\n\t\tend\n\t\treturn diff\n\tend\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tFunction to get the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff_list = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\treturn setdiff(union(li1, li2), intersect(li1, li2))\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i not in li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\t# Convert the lists to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t# Return the difference of the two sets\n\treturn setdiff(set1, set2)\nend",
    "\tdiff_li = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_li, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_li, i)\n\t\tend\n\tend\n\treturn diff_li\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a new list with only the elements that are in the first list, but not in the second.\n\t\"\"\"\n\tli_diff = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(li_diff, i)\n\t\tend\n\tend\n\treturn li_diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\t# Convert the lists to sets\n\tset1 = Set(li1)\n\tset2 = Set(li2)\n\t# Return the difference of the sets\n\treturn setdiff(set1, set2)\nend",
    "\t\"\"\"\n\tDiff(li1::Vector{Int64}, li2::Vector{Int64})::Vector{Int64}\n\t\n\tReturn the difference between two lists.\n\t\"\"\"\n\t\n\t# Initialize the output list\n\tli_diff = Vector{Int64}()\n\t\n\t# Loop over the first list\n\tfor i in li1\n\t\t# Check if the element is not in the second list\n\t\tif !(i in li2)\n\t\t\t# If yes, add it to the output list\n\t\t\tpush!(li_diff, i)\n\t\tend\n\tend\n\t\n\t# Return the output list\n\treturn li_diff\nend",
    "\t\"\"\"\n\tReturn the difference between two lists.\n\t\"\"\"\n\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function returns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "    return setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains only the elements that are common between the lists (without duplicates).\n\t\"\"\"\n\t# Convert the lists to sets, then use set difference to get the difference between the two sets, then convert back to a list.\n\treturn collect(Set(li1) .\\ Set(li2))\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i \u2209 li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i \u2209 li1\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns the difference between them.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\t\tFunction to get the difference between two lists.\n\t\t\n\t\tParameters:\n\t\tli1 (list): First list.\n\t\tli2 (list): Second list.\n\t\t\n\t\tReturns:\n\t\tlist: Difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i not in li2\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists as input and returns a list that contains only the elements that are in the first list, and not in the second.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tDiff(li1::Vector{Int64}, li2::Vector{Int64})::Vector{Int64}\n\t\n\tReturn the difference between two lists.\n\t\"\"\"\n\t# li_dif = copy(li1)\n\t# for i in li2\n\t# \tif i in li_dif\n\t# \t\tdeleteat!(li_dif, findall(li_dif .== i)[1])\n\t# \tend\n\t# end\n\t# return li_dif\n\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tReturns the difference between two lists.\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\t\"\"\"\n\tThis function takes two lists and returns a list that contains those elements that are present in the first list, but not in the second.\n\t\"\"\"\n\tdiff_list = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff_list, i)\n\t\tend\n\tend\n\treturn diff_list\nend",
    "\treturn setdiff(li1, li2)\nend",
    "\t\"\"\"\n\tli1: list 1\n\tli2: list 2\n\t\"\"\"\n\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend",
    "\tdiff = []\n\tfor i in li1\n\t\tif i in li2\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\tfor i in li2\n\t\tif i in li1\n\t\t\tcontinue\n\t\telse\n\t\t\tpush!(diff, i)\n\t\tend\n\tend\n\treturn diff\nend"
  ]
}
{
  "name": "mbpp_301_dict_depth",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_301_dict_depth.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmp1ymev37e.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ymev37e.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ymev37e.jl:15\ntest set: Test Failed at /tmp/tmp1ymev37e.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ymev37e.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ymev37e.jl:15\ntest set: Test Failed at /tmp/tmp1ymev37e.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ymev37e.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ymev37e.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1ymev37e.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpl77fh9st.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\ntest set: Test Failed at /tmp/tmpl77fh9st.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\ntest set: Test Failed at /tmp/tmpl77fh9st.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl77fh9st.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpe4t6ox8a.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe4t6ox8a.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif !isinstance(d, Dict)\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpnedjz6vv.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnedjz6vv.jl:1\nin expression starting at /tmp/tmpnedjz6vv.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpl77fh9st.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\ntest set: Test Failed at /tmp/tmpl77fh9st.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\ntest set: Test Failed at /tmp/tmpl77fh9st.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl77fh9st.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpdbh99y4x.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbh99y4x.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkf7vpyd6.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkf7vpyd6.jl:1\nin expression starting at /tmp/tmpkf7vpyd6.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpdbh99y4x.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbh99y4x.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpzvozniw4.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvozniw4.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpdbh99y4x.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbh99y4x.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpdbh99y4x.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbh99y4x.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpzvozniw4.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvozniw4.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpzvozniw4.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvozniw4.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpe4t6ox8a.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe4t6ox8a.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\tdepth = 0\n\tfor (k,v) in d\n\t\tdepth = max(depth, dict_depth(v))\n\tend\n\treturn depth + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpinx923pi.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpinx923pi.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpinx923pi.jl:18\ntest set: Test Failed at /tmp/tmpinx923pi.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpinx923pi.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpinx923pi.jl:18\ntest set: Test Failed at /tmp/tmpinx923pi.jl:21\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpinx923pi.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpinx923pi.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpinx923pi.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\t\n\tmax_depth = 0\n\tfor (k,v) in d\n\t\tdepth = dict_depth(v)\n\t\tif depth > max_depth\n\t\t\tmax_depth = depth\n\t\tend\n\tend\n\treturn max_depth + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpsbojyv3k.jl:23\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbojyv3k.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbojyv3k.jl:22\ntest set: Test Failed at /tmp/tmpsbojyv3k.jl:24\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbojyv3k.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbojyv3k.jl:22\ntest set: Test Failed at /tmp/tmpsbojyv3k.jl:25\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbojyv3k.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbojyv3k.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsbojyv3k.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\telse \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxlv4k9gp.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxlv4k9gp.jl:1\nin expression starting at /tmp/tmpxlv4k9gp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpne7_17fx.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpne7_17fx.jl:1\nin expression starting at /tmp/tmpne7_17fx.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\tend \n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmp3stom6a2.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3stom6a2.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3stom6a2.jl:14\ntest set: Test Failed at /tmp/tmp3stom6a2.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3stom6a2.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3stom6a2.jl:14\ntest set: Test Failed at /tmp/tmp3stom6a2.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3stom6a2.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3stom6a2.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3stom6a2.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpe4t6ox8a.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe4t6ox8a.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict{Any,Any}\n\t\treturn 0\n\telse\n\t\tmax_depth = 0\n\t\tfor (key, value) in d\n\t\t\tmax_depth = max(max_depth, dict_depth(value))\n\t\tend\n\t\treturn max_depth + 1\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpk1cyzri_.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1cyzri_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk1cyzri_.jl:19\ntest set: Test Failed at /tmp/tmpk1cyzri_.jl:21\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1cyzri_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk1cyzri_.jl:19\ntest set: Test Failed at /tmp/tmpk1cyzri_.jl:22\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpk1cyzri_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpk1cyzri_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpk1cyzri_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpe4t6ox8a.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe4t6ox8a.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpe4t6ox8a.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe4t6ox8a.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpdbh99y4x.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbh99y4x.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any, Any}\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpflhonxvi.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\ntest set: Test Failed at /tmp/tmpflhonxvi.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\ntest set: Test Failed at /tmp/tmpflhonxvi.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpflhonxvi.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmp1ymev37e.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ymev37e.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ymev37e.jl:15\ntest set: Test Failed at /tmp/tmp1ymev37e.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ymev37e.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ymev37e.jl:15\ntest set: Test Failed at /tmp/tmp1ymev37e.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ymev37e.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ymev37e.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1ymev37e.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any, Any}\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmp90ehkpt5.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp90ehkpt5.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp90ehkpt5.jl:15\ntest set: Test Failed at /tmp/tmp90ehkpt5.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp90ehkpt5.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp90ehkpt5.jl:15\ntest set: Test Failed at /tmp/tmp90ehkpt5.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp90ehkpt5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp90ehkpt5.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp90ehkpt5.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any, Any}\n\t\tdepth = 1\n\t\tfor (k, v) in d\n\t\t\tdepth = max(depth, 1 + dict_depth(v))\n\t\tend\n\t\treturn depth\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpu_zacoyw.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu_zacoyw.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu_zacoyw.jl:19\ntest set: Test Failed at /tmp/tmpu_zacoyw.jl:21\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu_zacoyw.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu_zacoyw.jl:19\ntest set: Test Failed at /tmp/tmpu_zacoyw.jl:22\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu_zacoyw.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu_zacoyw.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpu_zacoyw.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif isa(d,Dict)\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122418,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp19h1m_mp.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp19h1m_mp.jl:1\nin expression starting at /tmp/tmp19h1m_mp.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt0ep1f27.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt0ep1f27.jl:1\nin expression starting at /tmp/tmpt0ep1f27.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any, Any}\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpflhonxvi.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\ntest set: Test Failed at /tmp/tmpflhonxvi.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\ntest set: Test Failed at /tmp/tmpflhonxvi.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpflhonxvi.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpflhonxvi.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpflhonxvi.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpdbh99y4x.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbh99y4x.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt0ep1f27.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt0ep1f27.jl:1\nin expression starting at /tmp/tmpt0ep1f27.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpuokyt6xb.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\ntest set: Test Failed at /tmp/tmpuokyt6xb.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuokyt6xb.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuokyt6xb.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuokyt6xb.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122420,
      "stdout": "test set: Test Failed at /tmp/tmpnsx2x2oc.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\ntest set: Test Failed at /tmp/tmpnsx2x2oc.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\ntest set: Test Failed at /tmp/tmpnsx2x2oc.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnsx2x2oc.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnsx2x2oc.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnsx2x2oc.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpbfi6812i.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfi6812i.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfi6812i.jl:15\ntest set: Test Failed at /tmp/tmpbfi6812i.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfi6812i.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfi6812i.jl:15\ntest set: Test Failed at /tmp/tmpbfi6812i.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbfi6812i.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbfi6812i.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbfi6812i.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif !is_dict(d)\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Error During Test at /tmp/tmpzlzrd7np.jl:16\n  Test threw exception\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n  UndefVarError: is_dict not defined\n  Stacktrace:\n   [1] dict_depth(d::Dict{String, Any})\n     @ Main /tmp/tmpzlzrd7np.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzlzrd7np.jl:16 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzlzrd7np.jl:15\ntest set: Error During Test at /tmp/tmpzlzrd7np.jl:17\n  Test threw exception\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n  UndefVarError: is_dict not defined\n  Stacktrace:\n   [1] dict_depth(d::Dict{String, Any})\n     @ Main /tmp/tmpzlzrd7np.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzlzrd7np.jl:17 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzlzrd7np.jl:15\ntest set: Error During Test at /tmp/tmpzlzrd7np.jl:18\n  Test threw exception\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n  UndefVarError: is_dict not defined\n  Stacktrace:\n   [1] dict_depth(d::Dict{Int64, Any})\n     @ Main /tmp/tmpzlzrd7np.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzlzrd7np.jl:18 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzlzrd7np.jl:15\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzlzrd7np.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\t\"\"\"\n\tFind the depth of a dictionary.\n\t\"\"\"\n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmp7_amaeh_.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_amaeh_.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_amaeh_.jl:18\ntest set: Test Failed at /tmp/tmp7_amaeh_.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_amaeh_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_amaeh_.jl:18\ntest set: Test Failed at /tmp/tmp7_amaeh_.jl:21\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7_amaeh_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7_amaeh_.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7_amaeh_.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122421,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt0ep1f27.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt0ep1f27.jl:1\nin expression starting at /tmp/tmpt0ep1f27.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpe4t6ox8a.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe4t6ox8a.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\tend \n\tmax_depth = 0 \n\tfor (k, v) in d \n\t\tmax_depth = max(max_depth, dict_depth(v)) \n\tend \n\treturn max_depth + 1 \nend \nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpqpaueou3.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqpaueou3.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqpaueou3.jl:18\ntest set: Test Failed at /tmp/tmpqpaueou3.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqpaueou3.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqpaueou3.jl:18\ntest set: Test Failed at /tmp/tmpqpaueou3.jl:21\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqpaueou3.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqpaueou3.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqpaueou3.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\t\n\tmax_depth = 0\n\tfor (k, v) in d\n\t\tmax_depth = max(max_depth, dict_depth(v))\n\tend\n\t\n\treturn max_depth + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpb46sdr67.jl:21\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb46sdr67.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb46sdr67.jl:20\ntest set: Test Failed at /tmp/tmpb46sdr67.jl:22\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb46sdr67.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb46sdr67.jl:20\ntest set: Test Failed at /tmp/tmpb46sdr67.jl:23\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb46sdr67.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb46sdr67.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb46sdr67.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpdbh99y4x.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbh99y4x.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfecrvvq8.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfecrvvq8.jl:1\nin expression starting at /tmp/tmpfecrvvq8.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpzvozniw4.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvozniw4.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in d.values()])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpi18glj29.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi18glj29.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi18glj29.jl:15\ntest set: Test Failed at /tmp/tmpi18glj29.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi18glj29.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi18glj29.jl:15\ntest set: Test Failed at /tmp/tmpi18glj29.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi18glj29.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi18glj29.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi18glj29.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\tmax_depth = 0\n\tfor (k,v) in d\n\t\tmax_depth = max(max_depth, dict_depth(v))\n\tend\n\treturn max_depth + 1\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpcue477n0.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcue477n0.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcue477n0.jl:18\ntest set: Test Failed at /tmp/tmpcue477n0.jl:20\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcue477n0.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcue477n0.jl:18\ntest set: Test Failed at /tmp/tmpcue477n0.jl:21\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcue477n0.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcue477n0.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpcue477n0.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpl77fh9st.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\ntest set: Test Failed at /tmp/tmpl77fh9st.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\ntest set: Test Failed at /tmp/tmpl77fh9st.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl77fh9st.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1f1sd15n.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1f1sd15n.jl:1\nin expression starting at /tmp/tmp1f1sd15n.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif isa(d,Dict)\n\t\treturn 1 + maximum(map(dict_depth,values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6rjc1pgf.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6rjc1pgf.jl:1\nin expression starting at /tmp/tmp6rjc1pgf.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\tif length(d) == 0\n\t\treturn 1\n\tend\n\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpvs3tim_3.jl:18\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvs3tim_3.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvs3tim_3.jl:17\ntest set: Test Failed at /tmp/tmpvs3tim_3.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvs3tim_3.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvs3tim_3.jl:17\ntest set: Test Failed at /tmp/tmpvs3tim_3.jl:20\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvs3tim_3.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvs3tim_3.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvs3tim_3.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\tend \n\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmp5viqq7sm.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5viqq7sm.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5viqq7sm.jl:14\ntest set: Test Failed at /tmp/tmp5viqq7sm.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5viqq7sm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5viqq7sm.jl:14\ntest set: Test Failed at /tmp/tmp5viqq7sm.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5viqq7sm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5viqq7sm.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5viqq7sm.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfecrvvq8.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfecrvvq8.jl:1\nin expression starting at /tmp/tmpfecrvvq8.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmp7zcoi0yl.jl:15\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\ntest set: Test Failed at /tmp/tmp7zcoi0yl.jl:17\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7zcoi0yl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7zcoi0yl.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7zcoi0yl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\tmax_depth = 0\n\t\tfor (k,v) in d\n\t\t\tdepth = dict_depth(v)\n\t\t\tif depth > max_depth\n\t\t\t\tmax_depth = depth\n\t\t\tend\n\t\tend\n\t\treturn max_depth + 1\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Test Failed at /tmp/tmps8b7jxhy.jl:23\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\ntest set: Test Failed at /tmp/tmps8b7jxhy.jl:24\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\ntest set: Test Failed at /tmp/tmps8b7jxhy.jl:25\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps8b7jxhy.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpdbh99y4x.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\ntest set: Test Failed at /tmp/tmpdbh99y4x.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbh99y4x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbh99y4x.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbh99y4x.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif isa(d, Dict)\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3sauvpom.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3sauvpom.jl:1\nin expression starting at /tmp/tmp3sauvpom.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0 \n\telse \n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpz_p3nguq.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz_p3nguq.jl:1\nin expression starting at /tmp/tmpz_p3nguq.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkf7vpyd6.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkf7vpyd6.jl:1\nin expression starting at /tmp/tmpkf7vpyd6.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\tend\n\tif length(d) == 0\n\t\treturn 1\n\tend\n\treturn 1 + maximum([dict_depth(v) for v in values(d)])\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmp32cgcpe3.jl:18\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp32cgcpe3.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp32cgcpe3.jl:17\ntest set: Test Failed at /tmp/tmp32cgcpe3.jl:19\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp32cgcpe3.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp32cgcpe3.jl:17\ntest set: Test Failed at /tmp/tmp32cgcpe3.jl:20\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp32cgcpe3.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp32cgcpe3.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp32cgcpe3.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\tmax_depth = 0\n\t\tfor (k,v) in d\n\t\t\tdepth = dict_depth(v)\n\t\t\tif depth > max_depth\n\t\t\t\tmax_depth = depth\n\t\t\tend\n\t\tend\n\t\treturn max_depth + 1\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122423,
      "stdout": "test set: Test Failed at /tmp/tmps8b7jxhy.jl:23\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\ntest set: Test Failed at /tmp/tmps8b7jxhy.jl:24\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\ntest set: Test Failed at /tmp/tmps8b7jxhy.jl:25\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps8b7jxhy.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps8b7jxhy.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps8b7jxhy.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkf7vpyd6.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkf7vpyd6.jl:1\nin expression starting at /tmp/tmpkf7vpyd6.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpzvozniw4.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvozniw4.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpzvozniw4.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\ntest set: Test Failed at /tmp/tmpzvozniw4.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvozniw4.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvozniw4.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvozniw4.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict \n\t\treturn 0\n\telse\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1666122427,
      "stdout": "test set: Test Failed at /tmp/tmpq3u1g9j0.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpq3u1g9j0.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpq3u1g9j0.jl:15\ntest set: Test Failed at /tmp/tmpq3u1g9j0.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpq3u1g9j0.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpq3u1g9j0.jl:15\ntest set: Test Failed at /tmp/tmpq3u1g9j0.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpq3u1g9j0.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpq3u1g9j0.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpq3u1g9j0.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(d[k]) for k in keys(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpe4t6ox8a.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\ntest set: Test Failed at /tmp/tmpe4t6ox8a.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe4t6ox8a.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe4t6ox8a.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe4t6ox8a.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) != Dict\n\t\treturn 0\n\telse\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509727,
      "stdout": "test set: Test Failed at /tmp/tmpmw0gvahr.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\ntest set: Test Failed at /tmp/tmpmw0gvahr.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmw0gvahr.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmw0gvahr.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmw0gvahr.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkf7vpyd6.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkf7vpyd6.jl:1\nin expression starting at /tmp/tmpkf7vpyd6.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict{Any,Any}\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509730,
      "stdout": "test set: Test Failed at /tmp/tmpl77fh9st.jl:16\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4\n   Evaluated: 0 == 4\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\ntest set: Test Failed at /tmp/tmpl77fh9st.jl:17\n  Expression: candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\ntest set: Test Failed at /tmp/tmpl77fh9st.jl:18\n  Expression: candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl77fh9st.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl77fh9st.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl77fh9st.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_d312k1r.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_d312k1r.jl:1\nin expression starting at /tmp/tmp_d312k1r.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict \n\t\treturn 1 + maximum([dict_depth(v) for v in values(d)])\n\telse \n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509729,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkf7vpyd6.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkf7vpyd6.jl:1\nin expression starting at /tmp/tmpkf7vpyd6.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the depth of a dictionary.\n\t\"\"\"\nfunction dict_depth(d::Any)::Int64 \n\tif typeof(d) == Dict\n\t\treturn 1 + maximum(map(dict_depth, values(d)))\n\telse\n\t\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = dict_depth;\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => Dict(\"d\" => Dict())))) == 4)\n\t@test(candidate(Dict(\"a\" => 1, \"b\" => Dict(\"c\" => \"python\"))) == 2)\n\t@test(candidate(Dict(1 => \"Sun\", 2 => Dict(3 => Dict(4 => \"Mon\")))) == 3)\nend\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5t9lofqk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5t9lofqk.jl:1\nin expression starting at /tmp/tmp5t9lofqk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
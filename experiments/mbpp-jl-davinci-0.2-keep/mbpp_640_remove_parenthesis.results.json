{
  "name": "mbpp_640_remove_parenthesis",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_640_remove_parenthesis.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\tend\n\t\tif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpi3ebw9ru.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3ebw9ru.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3ebw9ru.jl:22\ntest set: Test Failed at /tmp/tmpi3ebw9ru.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3ebw9ru.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3ebw9ru.jl:22\ntest set: Test Failed at /tmp/tmpi3ebw9ru.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi3ebw9ru.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi3ebw9ru.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi3ebw9ru.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpx4y33khb.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4y33khb.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4y33khb.jl:20\ntest set: Test Failed at /tmp/tmpx4y33khb.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4y33khb.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4y33khb.jl:20\ntest set: Test Failed at /tmp/tmpx4y33khb.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx4y33khb.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx4y33khb.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpx4y33khb.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\treturn join(items[1:i-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpj4lulned.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4lulned.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4lulned.jl:19\ntest set: Test Failed at /tmp/tmpj4lulned.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4lulned.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4lulned.jl:19\ntest set: Test Failed at /tmp/tmpj4lulned.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4lulned.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4lulned.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj4lulned.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmp5qpfe090.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qpfe090.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qpfe090.jl:19\ntest set: Test Failed at /tmp/tmp5qpfe090.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qpfe090.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qpfe090.jl:19\ntest set: Test Failed at /tmp/tmp5qpfe090.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qpfe090.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qpfe090.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5qpfe090.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t# remove the parenthesis and what is inbetween them from a string\n\t# items = [\"(\", \"a\", \"b\", \"c\", \")\"]\n\t# output = \"abc\"\n\t\n\t# remove the first and last items\n\titems = items[2:end-1]\n\t\n\t# join the items\n\toutput = join(items)\n\t\n\treturn output\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmp0ata3jpt.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ata3jpt.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ata3jpt.jl:21\ntest set: Test Failed at /tmp/tmp0ata3jpt.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ata3jpt.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ata3jpt.jl:21\ntest set: Test Failed at /tmp/tmp0ata3jpt.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ata3jpt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ata3jpt.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0ata3jpt.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517323,
      "stdout": "test set: Test Failed at /tmp/tmpry244g9e.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpry244g9e.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpry244g9e.jl:19\ntest set: Test Failed at /tmp/tmpry244g9e.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpry244g9e.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpry244g9e.jl:19\ntest set: Test Failed at /tmp/tmpry244g9e.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpry244g9e.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpry244g9e.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpry244g9e.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdg38dq1k.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdg38dq1k.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdg38dq1k.jl:19\ntest set: Test Failed at /tmp/tmpdg38dq1k.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdg38dq1k.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdg38dq1k.jl:19\ntest set: Test Failed at /tmp/tmpdg38dq1k.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdg38dq1k.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdg38dq1k.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdg38dq1k.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tThis function removes the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpxasnh6ad.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxasnh6ad.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxasnh6ad.jl:21\ntest set: Test Failed at /tmp/tmpxasnh6ad.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxasnh6ad.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxasnh6ad.jl:21\ntest set: Test Failed at /tmp/tmpxasnh6ad.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxasnh6ad.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxasnh6ad.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxasnh6ad.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517323,
      "stdout": "test set: Test Failed at /tmp/tmptuxfz71_.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\ntest set: Test Failed at /tmp/tmptuxfz71_.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\ntest set: Test Failed at /tmp/tmptuxfz71_.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptuxfz71_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemoves parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpsy8zkw_5.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\ntest set: Test Failed at /tmp/tmpsy8zkw_5.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\ntest set: Test Failed at /tmp/tmpsy8zkw_5.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsy8zkw_5.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \" \"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \" \"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj4oii4iv.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4oii4iv.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4oii4iv.jl:22\ntest set: Test Failed at /tmp/tmpj4oii4iv.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4oii4iv.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4oii4iv.jl:22\ntest set: Test Failed at /tmp/tmpj4oii4iv.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj4oii4iv.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj4oii4iv.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj4oii4iv.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123205,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb6ctiwrg.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb6ctiwrg.jl:1\nin expression starting at /tmp/tmpb6ctiwrg.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\tj = i\n\t\t\twhile items[j] != \")\"\n\t\t\t\tj += 1\n\t\t\tend\n\t\t\titems = items[1:i-1] .* items[j+1:end]\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpiyl4sn7_.jl:24\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiyl4sn7_.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiyl4sn7_.jl:23\ntest set: Test Failed at /tmp/tmpiyl4sn7_.jl:25\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiyl4sn7_.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiyl4sn7_.jl:23\ntest set: Test Failed at /tmp/tmpiyl4sn7_.jl:26\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiyl4sn7_.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiyl4sn7_.jl:23\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiyl4sn7_.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp3i_pfc1p.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\ntest set: Test Failed at /tmp/tmp3i_pfc1p.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\ntest set: Test Failed at /tmp/tmp3i_pfc1p.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3i_pfc1p.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\twhile items[i] != \")\"\n\t\t\t\titems[i] = \"\"\n\t\t\t\ti += 1\n\t\t\tend\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp83k6vyhj.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp83k6vyhj.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp83k6vyhj.jl:24\ntest set: Test Failed at /tmp/tmp83k6vyhj.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp83k6vyhj.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp83k6vyhj.jl:24\ntest set: Test Failed at /tmp/tmp83k6vyhj.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp83k6vyhj.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp83k6vyhj.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp83k6vyhj.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpb03nc_hr.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb03nc_hr.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb03nc_hr.jl:19\ntest set: Test Failed at /tmp/tmpb03nc_hr.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb03nc_hr.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb03nc_hr.jl:19\ntest set: Test Failed at /tmp/tmpb03nc_hr.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb03nc_hr.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb03nc_hr.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb03nc_hr.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tresult = \"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\tcontinue\n\t\telseif item == \")\"\n\t\t\tcontinue\n\t\telse\n\t\t\tresult = string(result, item)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp5twufwwf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5twufwwf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5twufwwf.jl:21\ntest set: Test Failed at /tmp/tmp5twufwwf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5twufwwf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5twufwwf.jl:21\ntest set: Test Failed at /tmp/tmp5twufwwf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5twufwwf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5twufwwf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5twufwwf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\t\tdeleteat!(items, findfirst(items, \")\"))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpgyv0csks.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyv0csks.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyv0csks.jl:20\ntest set: Test Failed at /tmp/tmpgyv0csks.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyv0csks.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyv0csks.jl:20\ntest set: Test Failed at /tmp/tmpgyv0csks.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgyv0csks.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgyv0csks.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgyv0csks.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\" || items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpfk6cipxl.jl:17\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfk6cipxl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfk6cipxl.jl:16\ntest set: Test Failed at /tmp/tmpfk6cipxl.jl:18\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfk6cipxl.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfk6cipxl.jl:16\ntest set: Test Failed at /tmp/tmpfk6cipxl.jl:19\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfk6cipxl.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfk6cipxl.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfk6cipxl.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '(' && item[end] == ')'\n\t\t\treturn item[2:end-1]\n\t\tend\n\tend\n\treturn \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp9vnc4z6o.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vnc4z6o.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vnc4z6o.jl:19\ntest set: Test Failed at /tmp/tmp9vnc4z6o.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vnc4z6o.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vnc4z6o.jl:19\ntest set: Test Failed at /tmp/tmp9vnc4z6o.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9vnc4z6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9vnc4z6o.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9vnc4z6o.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\t\n\t# Initialize empty string\n\tresult = \"\"\n\t\n\t# Loop over all items in the vector\n\tfor item in items\n\t\t# If the item is not a parenthesis, add it to the result\n\t\tif item != \"(\" && item != \")\"\n\t\t\tresult *= item\n\t\tend\n\tend\n\t\n\t# Return the result\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpkxzsa_b1.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkxzsa_b1.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkxzsa_b1.jl:27\ntest set: Test Failed at /tmp/tmpkxzsa_b1.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkxzsa_b1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkxzsa_b1.jl:27\ntest set: Test Failed at /tmp/tmpkxzsa_b1.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkxzsa_b1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkxzsa_b1.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkxzsa_b1.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemoves parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp9uosqhu0.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9uosqhu0.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9uosqhu0.jl:27\ntest set: Test Failed at /tmp/tmp9uosqhu0.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9uosqhu0.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9uosqhu0.jl:27\ntest set: Test Failed at /tmp/tmp9uosqhu0.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9uosqhu0.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9uosqhu0.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9uosqhu0.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\t\tdeleteat!(items, findfirst(items, \")\"))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp3bwfzjf9.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bwfzjf9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bwfzjf9.jl:20\ntest set: Test Failed at /tmp/tmp3bwfzjf9.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bwfzjf9.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bwfzjf9.jl:20\ntest set: Test Failed at /tmp/tmp3bwfzjf9.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3bwfzjf9.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3bwfzjf9.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3bwfzjf9.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemoves parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpsy8zkw_5.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\ntest set: Test Failed at /tmp/tmpsy8zkw_5.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\ntest set: Test Failed at /tmp/tmpsy8zkw_5.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsy8zkw_5.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsy8zkw_5.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsy8zkw_5.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpkvr7h8mk.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\ntest set: Test Failed at /tmp/tmpkvr7h8mk.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\ntest set: Test Failed at /tmp/tmpkvr7h8mk.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpkvr7h8mk.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpkvr7h8mk.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpkvr7h8mk.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmposnlredl.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmposnlredl.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmposnlredl.jl:19\ntest set: Test Failed at /tmp/tmposnlredl.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmposnlredl.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmposnlredl.jl:19\ntest set: Test Failed at /tmp/tmposnlredl.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmposnlredl.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmposnlredl.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmposnlredl.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppmlr9a_8.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\ntest set: Test Failed at /tmp/tmppmlr9a_8.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\ntest set: Test Failed at /tmp/tmppmlr9a_8.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppmlr9a_8.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif contains(items[i], \"(\")\n\t\t\titems[i] = replace(items[i], r\"\\(.*\\)\", \"\")\n\t\tend\n\tend\n\treturn join(items, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123207,
      "stdout": "test set: Error During Test at /tmp/tmpe4at57pt.jl:20\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpe4at57pt.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe4at57pt.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe4at57pt.jl:19\ntest set: Error During Test at /tmp/tmpe4at57pt.jl:21\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpe4at57pt.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe4at57pt.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/ju",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpe4at57pt.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmpnb5qiqch.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\ntest set: Test Failed at /tmp/tmpnb5qiqch.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\ntest set: Test Failed at /tmp/tmpnb5qiqch.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnb5qiqch.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmpnb5qiqch.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\ntest set: Test Failed at /tmp/tmpnb5qiqch.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\ntest set: Test Failed at /tmp/tmpnb5qiqch.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnb5qiqch.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnb5qiqch.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnb5qiqch.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t#remove parenthesis and what is inbetween them from a string\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmppg4hu71e.jl:26\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppg4hu71e.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppg4hu71e.jl:25\ntest set: Test Failed at /tmp/tmppg4hu71e.jl:27\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppg4hu71e.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppg4hu71e.jl:25\ntest set: Test Failed at /tmp/tmppg4hu71e.jl:28\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppg4hu71e.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppg4hu71e.jl:25\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppg4hu71e.jl:23\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp48lmsobq.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\ntest set: Test Failed at /tmp/tmp48lmsobq.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\ntest set: Test Failed at /tmp/tmp48lmsobq.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp48lmsobq.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tresult = \"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tcontinue\n\t\tend\n\t\tresult *= item\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpgqo576y9.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqo576y9.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqo576y9.jl:21\ntest set: Test Failed at /tmp/tmpgqo576y9.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqo576y9.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqo576y9.jl:21\ntest set: Test Failed at /tmp/tmpgqo576y9.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqo576y9.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqo576y9.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqo576y9.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmph1y2ayrb.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\ntest set: Test Failed at /tmp/tmph1y2ayrb.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\ntest set: Test Failed at /tmp/tmph1y2ayrb.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmph1y2ayrb.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp3i_pfc1p.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\ntest set: Test Failed at /tmp/tmp3i_pfc1p.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\ntest set: Test Failed at /tmp/tmp3i_pfc1p.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3i_pfc1p.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3i_pfc1p.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3i_pfc1p.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\treturn remove_parenthesis(items[1:end])\n\t\telseif item[end] == ')'\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\telse\n\t\t\treturn join(items)\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Error During Test at /tmp/tmpn6xns3qq.jl:23\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: Cannot `convert` an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpn6xns3qq.jl:14\n   [2] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpn6xns3qq.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn6xns3qq.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn6xns3qq.jl:22\ntest set: Error During Test at /tmp/tmpn6xns3qq.jl:24\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: Cannot `convert` an object of type Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String) at /home/a.guha/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T}, !Matched::T) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpn6xns3qq.jl:14\n   [2] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpn6xns3qq.jl:12\n   [3] macro expansion",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpn6xns3qq.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\tfor j in i:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[i:j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp8l_2idrb.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8l_2idrb.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8l_2idrb.jl:24\ntest set: Test Failed at /tmp/tmp8l_2idrb.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8l_2idrb.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8l_2idrb.jl:24\ntest set: Test Failed at /tmp/tmp8l_2idrb.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8l_2idrb.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8l_2idrb.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8l_2idrb.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items, item)[1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpg7qtbq0_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7qtbq0_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7qtbq0_.jl:19\ntest set: Test Failed at /tmp/tmpg7qtbq0_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7qtbq0_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7qtbq0_.jl:19\ntest set: Test Failed at /tmp/tmpg7qtbq0_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg7qtbq0_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg7qtbq0_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg7qtbq0_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpn1m71vrp.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1m71vrp.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1m71vrp.jl:19\ntest set: Test Failed at /tmp/tmpn1m71vrp.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1m71vrp.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1m71vrp.jl:19\ntest set: Test Failed at /tmp/tmpn1m71vrp.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn1m71vrp.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn1m71vrp.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpn1m71vrp.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t# remove parenthesis and what is inbetween them\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpozx5qoe5.jl:26\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpozx5qoe5.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpozx5qoe5.jl:25\ntest set: Test Failed at /tmp/tmpozx5qoe5.jl:27\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpozx5qoe5.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpozx5qoe5.jl:25\ntest set: Test Failed at /tmp/tmpozx5qoe5.jl:28\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpozx5qoe5.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpozx5qoe5.jl:25\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpozx5qoe5.jl:23\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in items\n\t\tif i == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif i == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp4b9geo69.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4b9geo69.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4b9geo69.jl:21\ntest set: Test Failed at /tmp/tmp4b9geo69.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4b9geo69.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4b9geo69.jl:21\ntest set: Test Failed at /tmp/tmp4b9geo69.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4b9geo69.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4b9geo69.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp4b9geo69.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\" || items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpt759b9yp.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpt759b9yp.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpt759b9yp.jl:19\ntest set: Test Failed at /tmp/tmpt759b9yp.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpt759b9yp.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpt759b9yp.jl:19\ntest set: Test Failed at /tmp/tmpt759b9yp.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpt759b9yp.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpt759b9yp.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpt759b9yp.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\twhile items[i] != \")\"\n\t\t\t\titems[i] = \"\"\n\t\t\t\ti += 1\n\t\t\tend\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp4maik_c3.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4maik_c3.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4maik_c3.jl:21\ntest set: Test Failed at /tmp/tmp4maik_c3.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4maik_c3.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4maik_c3.jl:21\ntest set: Test Failed at /tmp/tmp4maik_c3.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4maik_c3.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4maik_c3.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp4maik_c3.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telseif item == \")\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmppiq2wohm.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\ntest set: Test Failed at /tmp/tmppiq2wohm.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\ntest set: Test Failed at /tmp/tmppiq2wohm.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppiq2wohm.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpbjycxbvn.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbjycxbvn.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\treturn join(items[1:i-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmp2wra4p7s.jl:17\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wra4p7s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wra4p7s.jl:16\ntest set: Test Failed at /tmp/tmp2wra4p7s.jl:18\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wra4p7s.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wra4p7s.jl:16\ntest set: Test Failed at /tmp/tmp2wra4p7s.jl:19\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wra4p7s.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wra4p7s.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wra4p7s.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123200,
      "stdout": "test set: Test Failed at /tmp/tmph1y2ayrb.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\ntest set: Test Failed at /tmp/tmph1y2ayrb.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\ntest set: Test Failed at /tmp/tmph1y2ayrb.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1y2ayrb.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1y2ayrb.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmph1y2ayrb.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif contains(item, \"(\")\n\t\t\titem = replace(item, r\"(.*)\", \"\")\n\t\tend\n\tend\n\treturn join(items, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123207,
      "stdout": "test set: Error During Test at /tmp/tmp_g773a_j.jl:20\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmp_g773a_j.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_g773a_j.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_g773a_j.jl:19\ntest set: Error During Test at /tmp/tmp_g773a_j.jl:21\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmp_g773a_j.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_g773a_j.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/ju",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp_g773a_j.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\telseif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmp_e0l886c.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e0l886c.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e0l886c.jl:21\ntest set: Test Failed at /tmp/tmp_e0l886c.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e0l886c.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e0l886c.jl:21\ntest set: Test Failed at /tmp/tmp_e0l886c.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_e0l886c.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_e0l886c.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_e0l886c.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517323,
      "stdout": "test set: Test Failed at /tmp/tmptuxfz71_.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\ntest set: Test Failed at /tmp/tmptuxfz71_.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\ntest set: Test Failed at /tmp/tmptuxfz71_.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptuxfz71_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tresult = \"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tcontinue\n\t\tend\n\t\tresult *= item\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123206,
      "stdout": "test set: Test Failed at /tmp/tmpp90h_a9m.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp90h_a9m.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp90h_a9m.jl:18\ntest set: Test Failed at /tmp/tmpp90h_a9m.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp90h_a9m.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp90h_a9m.jl:18\ntest set: Test Failed at /tmp/tmpp90h_a9m.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp90h_a9m.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp90h_a9m.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp90h_a9m.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item in (\"(\",\")\")\n\t\t\tdeleteat!(items,findall(items,item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmppl87ot5r.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppl87ot5r.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppl87ot5r.jl:19\ntest set: Test Failed at /tmp/tmppl87ot5r.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppl87ot5r.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppl87ot5r.jl:19\ntest set: Test Failed at /tmp/tmppl87ot5r.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppl87ot5r.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppl87ot5r.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppl87ot5r.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor (i,item) in enumerate(items)\n\t\tif item == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items,\"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmpb9fqif4w.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9fqif4w.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9fqif4w.jl:27\ntest set: Test Failed at /tmp/tmpb9fqif4w.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9fqif4w.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9fqif4w.jl:27\ntest set: Test Failed at /tmp/tmpb9fqif4w.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb9fqif4w.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb9fqif4w.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb9fqif4w.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpwnc0aiva.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\ntest set: Test Failed at /tmp/tmpwnc0aiva.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwnc0aiva.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwnc0aiva.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwnc0aiva.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123196,
      "stdout": "test set: Test Failed at /tmp/tmpi7uhuy5v.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\ntest set: Test Failed at /tmp/tmpi7uhuy5v.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpi7uhuy5v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpi7uhuy5v.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpi7uhuy5v.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmpc7auo1db.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7auo1db.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7auo1db.jl:22\ntest set: Test Failed at /tmp/tmpc7auo1db.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7auo1db.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7auo1db.jl:22\ntest set: Test Failed at /tmp/tmpc7auo1db.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc7auo1db.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc7auo1db.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpc7auo1db.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tresult = \"\"\n\tfor item in items\n\t\tif item != \"(\" && item != \")\"\n\t\t\tresult = result * item\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmp28tc6s89.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp28tc6s89.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp28tc6s89.jl:20\ntest set: Test Failed at /tmp/tmp28tc6s89.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp28tc6s89.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp28tc6s89.jl:20\ntest set: Test Failed at /tmp/tmp28tc6s89.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp28tc6s89.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp28tc6s89.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp28tc6s89.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\tfor j in i:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[i:j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmpjl8u1xee.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjl8u1xee.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjl8u1xee.jl:24\ntest set: Test Failed at /tmp/tmpjl8u1xee.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjl8u1xee.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjl8u1xee.jl:24\ntest set: Test Failed at /tmp/tmpjl8u1xee.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjl8u1xee.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjl8u1xee.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjl8u1xee.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end])\n\t\telseif item == \")\"\n\t\t\treturn remove_parenthesis(items[1:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmphvh99jod.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\ntest set: Test Failed at /tmp/tmphvh99jod.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\ntest set: Test Failed at /tmp/tmphvh99jod.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphvh99jod.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphvh99jod.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphvh99jod.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmp48lmsobq.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\ntest set: Test Failed at /tmp/tmp48lmsobq.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\ntest set: Test Failed at /tmp/tmp48lmsobq.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp48lmsobq.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp48lmsobq.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp48lmsobq.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsuejg6mo.jl:1\nin expression starting at /tmp/tmpsuejg6mo.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmp5qpfe090.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qpfe090.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qpfe090.jl:19\ntest set: Test Failed at /tmp/tmp5qpfe090.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qpfe090.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qpfe090.jl:19\ntest set: Test Failed at /tmp/tmp5qpfe090.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qpfe090.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qpfe090.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5qpfe090.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123199,
      "stdout": "test set: Test Failed at /tmp/tmp_stzfc83.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_stzfc83.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_stzfc83.jl:19\ntest set: Test Failed at /tmp/tmp_stzfc83.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_stzfc83.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_stzfc83.jl:19\ntest set: Test Failed at /tmp/tmp_stzfc83.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_stzfc83.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_stzfc83.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_stzfc83.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\twhile items[i] != \")\"\n\t\t\t\titems[i] = \"\"\n\t\t\t\ti += 1\n\t\t\tend\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpg_1wpgf4.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\ntest set: Test Failed at /tmp/tmpg_1wpgf4.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\ntest set: Test Failed at /tmp/tmpg_1wpgf4.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg_1wpgf4.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\treturn remove_parenthesis(deleteat!(items, findfirst(items, item)))\n\t\telseif item[end] == ')'\n\t\t\treturn remove_parenthesis(deleteat!(items, findfirst(items, item)))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123210,
      "stdout": "test set: Error During Test at /tmp/tmpv5ej9x3k.jl:22\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: no method matching findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:2002\n    findfirst(!Matched::Function, ::Any) at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(!Matched::AbstractString, ::AbstractString) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpv5ej9x3k.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5ej9x3k.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv5ej9x3k.jl:21\ntest set: Error During Test at /tmp/tmpv5ej9x3k.jl:23\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: no method matching findfirst(::Vector{String}, ::String)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Union{AbstractString, AbstractArray}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:2002\n    findfirst(!Matched::Function, ::Any) at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:1994\n    findfirst(!Matched::AbstractString, ::AbstractString) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/search.jl:104\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpv5ej9x3k.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv5ej9x3k.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/shar",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpv5ej9x3k.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif occursin(r\"\\(.*\\)\", items[i])\n\t\t\titems[i] = replace(items[i], r\"\\(.*\\)\", \"\")\n\t\tend\n\tend\n\treturn join(items, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123209,
      "stdout": "test set: Error During Test at /tmp/tmpdpg9tqev.jl:20\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpdpg9tqev.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdpg9tqev.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdpg9tqev.jl:19\ntest set: Error During Test at /tmp/tmpdpg9tqev.jl:21\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpdpg9tqev.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdpg9tqev.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/ju",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpdpg9tqev.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmp8n_8zt7_.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8n_8zt7_.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8n_8zt7_.jl:19\ntest set: Test Failed at /tmp/tmp8n_8zt7_.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8n_8zt7_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8n_8zt7_.jl:19\ntest set: Test Failed at /tmp/tmp8n_8zt7_.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8n_8zt7_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8n_8zt7_.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8n_8zt7_.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findall(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123198,
      "stdout": "test set: Test Failed at /tmp/tmp1axsgkym.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\ntest set: Test Failed at /tmp/tmp1axsgkym.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1axsgkym.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1axsgkym.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1axsgkym.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp6jmb1n8v.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6jmb1n8v.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\twhile items[i] != \")\"\n\t\t\t\titems[i] = \"\"\n\t\t\t\ti += 1\n\t\t\tend\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpg_1wpgf4.jl:25\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\ntest set: Test Failed at /tmp/tmpg_1wpgf4.jl:26\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\ntest set: Test Failed at /tmp/tmpg_1wpgf4.jl:27\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_1wpgf4.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_1wpgf4.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg_1wpgf4.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpiwkm9d6o.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\ntest set: Test Failed at /tmp/tmpiwkm9d6o.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiwkm9d6o.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiwkm9d6o.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiwkm9d6o.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpviju2pxz.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\ntest set: Test Failed at /tmp/tmpviju2pxz.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpviju2pxz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpviju2pxz.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpviju2pxz.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tresult = \"\"\n\tfor i in items\n\t\tif i == \"(\"\n\t\t\tcontinue\n\t\telseif i == \")\"\n\t\t\tcontinue\n\t\telse\n\t\t\tresult = string(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmpp4rvd4wc.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4rvd4wc.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4rvd4wc.jl:21\ntest set: Test Failed at /tmp/tmpp4rvd4wc.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4rvd4wc.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4rvd4wc.jl:21\ntest set: Test Failed at /tmp/tmpp4rvd4wc.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp4rvd4wc.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp4rvd4wc.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp4rvd4wc.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517323,
      "stdout": "test set: Test Failed at /tmp/tmptuxfz71_.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\ntest set: Test Failed at /tmp/tmptuxfz71_.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\ntest set: Test Failed at /tmp/tmptuxfz71_.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptuxfz71_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmpj956k_ep.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\ntest set: Test Failed at /tmp/tmpj956k_ep.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpj956k_ep.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpj956k_ep.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpj956k_ep.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn \"\"\n\t\telseif item == \")\"\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123201,
      "stdout": "test set: Test Failed at /tmp/tmppiq2wohm.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\ntest set: Test Failed at /tmp/tmppiq2wohm.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\ntest set: Test Failed at /tmp/tmppiq2wohm.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppiq2wohm.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppiq2wohm.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppiq2wohm.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517323,
      "stdout": "test set: Test Failed at /tmp/tmptuxfz71_.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\ntest set: Test Failed at /tmp/tmptuxfz71_.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\ntest set: Test Failed at /tmp/tmptuxfz71_.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptuxfz71_.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptuxfz71_.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptuxfz71_.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\titems[items .== item] = \"\"\n\t\tend\n\tend\n\treturn join(items, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123209,
      "stdout": "test set: Test Failed at /tmp/tmpxta7vtmr.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxta7vtmr.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxta7vtmr.jl:19\ntest set: Test Failed at /tmp/tmpxta7vtmr.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxta7vtmr.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxta7vtmr.jl:19\ntest set: Test Failed at /tmp/tmpxta7vtmr.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxta7vtmr.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxta7vtmr.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxta7vtmr.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findall(items .== item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123209,
      "stdout": "test set: Test Failed at /tmp/tmpt5o20u4c.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpt5o20u4c.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpt5o20u4c.jl:19\ntest set: Test Failed at /tmp/tmpt5o20u4c.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpt5o20u4c.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpt5o20u4c.jl:19\ntest set: Test Failed at /tmp/tmpt5o20u4c.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpt5o20u4c.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpt5o20u4c.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpt5o20u4c.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\tfor i in 1:length(items)\n\t\t\tif items[i] == \"(\"\n\t\t\t\titems[i] = \"\"\n\t\t\telseif items[i] == \")\"\n\t\t\t\titems[i] = \"\"\n\t\t\tend\n\t\tend\n\t\treturn join(items)\n\tend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmpvfqvdyzx.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfqvdyzx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfqvdyzx.jl:18\ntest set: Test Failed at /tmp/tmpvfqvdyzx.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfqvdyzx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfqvdyzx.jl:18\ntest set: Test Failed at /tmp/tmpvfqvdyzx.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvfqvdyzx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvfqvdyzx.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvfqvdyzx.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\treturn item[2:end-1]\n\t\tend\n\tend\n\treturn \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123209,
      "stdout": "test set: Test Failed at /tmp/tmpjdidltxv.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjdidltxv.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjdidltxv.jl:19\ntest set: Test Failed at /tmp/tmpjdidltxv.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjdidltxv.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjdidltxv.jl:19\ntest set: Test Failed at /tmp/tmpjdidltxv.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjdidltxv.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjdidltxv.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjdidltxv.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\treturn join(items[1:end-1])\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmpw90fy5em.jl:15\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw90fy5em.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw90fy5em.jl:14\ntest set: Test Failed at /tmp/tmpw90fy5em.jl:16\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw90fy5em.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw90fy5em.jl:14\ntest set: Test Failed at /tmp/tmpw90fy5em.jl:17\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw90fy5em.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw90fy5em.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpw90fy5em.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\t\tfor j in i+1:length(items)\n\t\t\t\tif items[j] == \")\"\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\titems[j] = \"\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp3e8cyyb9.jl:28\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:29\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\ntest set: Test Failed at /tmp/tmp3e8cyyb9.jl:30\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3e8cyyb9.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3e8cyyb9.jl:27\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3e8cyyb9.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\telse\n\t\t\treturn item\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmp6jmb1n8v.jl:21\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:22\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\ntest set: Test Failed at /tmp/tmp6jmb1n8v.jl:23\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6jmb1n8v.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6jmb1n8v.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6jmb1n8v.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\treturn item[2:end-1]\n\t\tend\n\tend\n\treturn \"\"\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123209,
      "stdout": "test set: Test Failed at /tmp/tmpjdidltxv.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjdidltxv.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjdidltxv.jl:19\ntest set: Test Failed at /tmp/tmpjdidltxv.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjdidltxv.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjdidltxv.jl:19\ntest set: Test Failed at /tmp/tmpjdidltxv.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjdidltxv.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjdidltxv.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjdidltxv.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif contains(items[i], \")\")\n\t\t\titems[i] = replace(items[i], r\"\\(.*\\)\", \"\")\n\t\tend\n\tend\n\treturn join(items, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123210,
      "stdout": "test set: Error During Test at /tmp/tmpu6zu0p2s.jl:20\n  Test threw exception\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpu6zu0p2s.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu6zu0p2s.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu6zu0p2s.jl:19\ntest set: Error During Test at /tmp/tmpu6zu0p2s.jl:21\n  Test threw exception\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n  MethodError: no method matching replace(::String, ::Regex, ::String)\n  Closest candidates are:\n    replace(!Matched::Union{Function, Type}, ::Any; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/set.jl:622\n    replace(::String, !Matched::Pair...; count) where N at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:535\n    replace(::AbstractString, !Matched::Pair...; count) at /home/a.guha/.conda/envs/polyglot/share/julia/base/strings/util.jl:634\n    ...\n  Stacktrace:\n   [1] remove_parenthesis(items::Vector{String})\n     @ Main /tmp/tmpu6zu0p2s.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu6zu0p2s.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/ju",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpu6zu0p2s.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item[1] == '('\n\t\t\titems = deleteat!(items, findall(items .== item)[1])\n\t\tend\n\tend\n\treturn join(items, \" \")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123209,
      "stdout": "test set: Test Failed at /tmp/tmpyewsplde.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpyewsplde.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpyewsplde.jl:19\ntest set: Test Failed at /tmp/tmpyewsplde.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpyewsplde.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpyewsplde.jl:19\ntest set: Test Failed at /tmp/tmpyewsplde.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpyewsplde.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpyewsplde.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpyewsplde.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tresult = \"\"\n\tfor item in items\n\t\tif item != \"(\" && item != \")\"\n\t\t\tresult = string(result, item)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123209,
      "stdout": "test set: Test Failed at /tmp/tmpdd97cplo.jl:18\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdd97cplo.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdd97cplo.jl:17\ntest set: Test Failed at /tmp/tmpdd97cplo.jl:19\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdd97cplo.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdd97cplo.jl:17\ntest set: Test Failed at /tmp/tmpdd97cplo.jl:20\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdd97cplo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdd97cplo.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdd97cplo.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\tend\n\t\tif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmpedtgnjsg.jl:23\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpedtgnjsg.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpedtgnjsg.jl:22\ntest set: Test Failed at /tmp/tmpedtgnjsg.jl:24\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpedtgnjsg.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpedtgnjsg.jl:22\ntest set: Test Failed at /tmp/tmpedtgnjsg.jl:25\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpedtgnjsg.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpedtgnjsg.jl:22\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpedtgnjsg.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpjgovc__s.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\ntest set: Test Failed at /tmp/tmpjgovc__s.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjgovc__s.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjgovc__s.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjgovc__s.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmpdb35utjf.jl:22\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:23\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\ntest set: Test Failed at /tmp/tmpdb35utjf.jl:24\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdb35utjf.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdb35utjf.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdb35utjf.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\tdeleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppmlr9a_8.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\ntest set: Test Failed at /tmp/tmppmlr9a_8.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\ntest set: Test Failed at /tmp/tmppmlr9a_8.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppmlr9a_8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppmlr9a_8.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppmlr9a_8.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517322,
      "stdout": "test set: Test Failed at /tmp/tmptcdid8bo.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\ntest set: Test Failed at /tmp/tmptcdid8bo.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcdid8bo.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcdid8bo.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptcdid8bo.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123208,
      "stdout": "test set: Test Failed at /tmp/tmp3c9avbzx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3c9avbzx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3c9avbzx.jl:19\ntest set: Test Failed at /tmp/tmp3c9avbzx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3c9avbzx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3c9avbzx.jl:19\ntest set: Test Failed at /tmp/tmp3c9avbzx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3c9avbzx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3c9avbzx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3c9avbzx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpbjycxbvn.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbjycxbvn.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\" || item == \")\"\n\t\t\titems = deleteat!(items, findfirst(items, item))\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmpbjycxbvn.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\ntest set: Test Failed at /tmp/tmpbjycxbvn.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbjycxbvn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbjycxbvn.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbjycxbvn.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\tfor i in 1:length(items)\n\t\tif items[i] == \"(\"\n\t\t\titems[i] = \"\"\n\t\telseif items[i] == \")\"\n\t\t\titems[i] = \"\"\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1665517320,
      "stdout": "test set: Test Failed at /tmp/tmppnjbdvp9.jl:19\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:20\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\ntest set: Test Failed at /tmp/tmppnjbdvp9.jl:21\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppnjbdvp9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppnjbdvp9.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppnjbdvp9.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to remove the parenthesis and what is inbetween them from a string.\n\t\"\"\"\nfunction remove_parenthesis(items::Vector{String})::String \n\t\"\"\"\n\tRemove parenthesis and what is inbetween them from a string.\n\t\"\"\"\n\tfor item in items\n\t\tif item == \"(\"\n\t\t\treturn remove_parenthesis(items[2:end-1])\n\t\tend\n\tend\n\treturn join(items)\nend\nusing Test\n\n@testset begin\n\ncandidate = remove_parenthesis;\n\t@test(candidate([\"python (chrome)\"]) == \"python\")\n\t@test(candidate([\"string(.abc)\"]) == \"string\")\n\t@test(candidate([\"alpha(num)\"]) == \"alpha\")\nend\n",
      "timestamp": 1666123195,
      "stdout": "test set: Test Failed at /tmp/tmppdcrv_bx.jl:20\n  Expression: candidate([\"python (chrome)\"]) == \"python\"\n   Evaluated: \"python (chrome)\" == \"python\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:21\n  Expression: candidate([\"string(.abc)\"]) == \"string\"\n   Evaluated: \"string(.abc)\" == \"string\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\ntest set: Test Failed at /tmp/tmppdcrv_bx.jl:22\n  Expression: candidate([\"alpha(num)\"]) == \"alpha\"\n   Evaluated: \"alpha(num)\" == \"alpha\"\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppdcrv_bx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppdcrv_bx.jl:19\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppdcrv_bx.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
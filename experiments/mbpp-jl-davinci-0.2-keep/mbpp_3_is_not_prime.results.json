{
  "name": "mbpp_3_is_not_prime",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_3_is_not_prime.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i==0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\ti = 5\n\t\twhile i * i <= n\n\t\t\tif n % i == 0 || n % (i + 2) == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\t\ti += 6\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\t\"\"\"\n\tReturn true if n is not prime, false otherwise.\n\t\"\"\"\n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    end\n    for i in 2:floor(Int,sqrt(n))\n        if n % i == 0\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    elseif n == 2\n        return false\n    else\n        for i in 2:n-1\n            if n % i == 0\n                return true\n            end\n        end\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\ti = 5\n\t\twhile i * i <= n\n\t\t\tif n % i == 0 || n % (i + 2) == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\t\ti += 6\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i==0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n%i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\ti = 5\n\t\twhile i * i <= n\n\t\t\tif n % i == 0 || n % (i + 2) == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\t\ti += 6\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tisprime = true\n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\tisprime = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn isprime\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123987,
      "stdout": "test set: Test Failed at /tmp/tmpne38tvey.jl:19\n  Expression: candidate(2) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpne38tvey.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpne38tvey.jl:18\ntest set: Test Failed at /tmp/tmpne38tvey.jl:20\n  Expression: candidate(10) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpne38tvey.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpne38tvey.jl:18\ntest set: Test Failed at /tmp/tmpne38tvey.jl:21\n  Expression: candidate(35) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpne38tvey.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpne38tvey.jl:18\ntest set: Test Failed at /tmp/tmpne38tvey.jl:22\n  Expression: candidate(37) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpne38tvey.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpne38tvey.jl:18\nTest Summary: | Fail  Total\ntest set      |    4      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpne38tvey.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\tfor i = 5:2:floor(sqrt(n))\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\t\"\"\"\n\tReturns true if n is not a prime number.\n\t\"\"\"\n\tif n < 2\n\t\treturn true\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\t\"\"\"\n\tReturn true if n is not a prime number.\n\t\"\"\"\n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    end\n    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:sqrt(n)\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\tfor i = 5:2:floor(sqrt(n))\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    end\n    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\t\"\"\"\n\tCheck if a number is not prime.\n\t\"\"\"\n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\ti = 5\n\t\twhile i*i <= n\n\t\t\tif n % i == 0 || n % (i + 2) == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\t\ti += 6\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    elseif n == 2\n        return false\n    else\n        for i in 2:sqrt(n)\n            if n % i == 0\n                return true\n            end\n        end\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\ti = 5\n\t\twhile i * i <= n\n\t\t\tif n % i == 0 || n % (i + 2) == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\t\ti += 6\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    else\n        for i in 2:n-1\n            if n % i == 0\n                return true\n            end\n        end\n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n == 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    end\n    for i in 2:floor(Int64,sqrt(n))\n        if n % i == 0\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2 \n\t\treturn true \n\tend\n\tfor i in 2:n-1 \n\t\tif n % i == 0 \n\t\t\treturn true \n\t\tend\n\tend\n\treturn false \nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\tfor i in 5:2:floor(Int64, sqrt(n))\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\t\"\"\"\n\tReturns true if n is not prime.\n\t\"\"\"\n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:sqrt(n)\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n == 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    end\n    for i in 2:n-1\n        if n % i == 0\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n == 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:sqrt(n)\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\ti = 5\n\t\twhile i * i <= n\n\t\t\tif n % i == 0 || n % (i + 2) == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\t\ti += 6\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:sqrt(n)\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:round(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\t\"\"\"\n\tReturns true if n is not a prime number.\n\t\"\"\"\n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i==0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telseif n % 2 == 0\n\t\treturn true\n\telse\n\t\tfor i in 3:2:floor(Int64, sqrt(n))\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    end\n    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telseif n == 2\n\t\treturn false\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\ti = 5\n\t\twhile i * i <= n\n\t\t\tif n % i == 0 || n % (i + 2) == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\t\ti += 6\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n == 2\n\t\treturn false\n\tend\n\tif n < 2 || n % 2 == 0\n\t\treturn true\n\tend\n\tfor i in 3:2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\tfor i in 5:2:floor(sqrt(n))\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:sqrt(n)\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tis_not_prime = true\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\tis_not_prime = false\n\t\t\tbreak\n\t\tend\n\tend\n\treturn is_not_prime\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123988,
      "stdout": "test set: Test Failed at /tmp/tmp39bccdvk.jl:19\n  Expression: candidate(2) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp39bccdvk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp39bccdvk.jl:18\ntest set: Test Failed at /tmp/tmp39bccdvk.jl:20\n  Expression: candidate(10) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp39bccdvk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp39bccdvk.jl:18\ntest set: Test Failed at /tmp/tmp39bccdvk.jl:21\n  Expression: candidate(35) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp39bccdvk.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp39bccdvk.jl:18\ntest set: Test Failed at /tmp/tmp39bccdvk.jl:22\n  Expression: candidate(37) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp39bccdvk.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp39bccdvk.jl:18\nTest Summary: | Fail  Total\ntest set      |    4      4\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp39bccdvk.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\t\"\"\"\n\tReturns true if n is not prime, false otherwise.\n\t\"\"\"\n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    end\n    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n    if n < 2\n        return true\n    end\n    for i in 2:floor(Int64, sqrt(n))\n        if n % i == 0\n            return true\n        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\telseif n <= 3\n\t\treturn false\n\telseif n % 2 == 0 || n % 3 == 0\n\t\treturn true\n\telse\n\t\ti = 5\n\t\twhile i * i <= n\n\t\t\tif n % i == 0 || n % (i + 2) == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\t\ti += 6\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\t\"\"\"\n\tCheck if a number is not prime.\n\t\"\"\"\n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tfor i in 2:n-1\n\t\tif n%i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:sqrt(n)\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\telse\n\t\tfor i in 2:n-1\n\t\t\tif n % i == 0\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n <= 1\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1666123986,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:n-1\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64, sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to identify non-prime numbers.\n\t\"\"\"\nfunction is_not_prime(n::Int64)::Bool \n\tif n < 2\n\t\treturn true\n\tend\n\tfor i in 2:floor(Int64,sqrt(n))\n\t\tif n % i == 0\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\nusing Test\n\n@testset begin\n\ncandidate = is_not_prime;\n\t@test(candidate(2) == false)\n\t@test(candidate(10) == true)\n\t@test(candidate(35) == true)\n\t@test(candidate(37) == false)\nend\n",
      "timestamp": 1665509710,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    4      4\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
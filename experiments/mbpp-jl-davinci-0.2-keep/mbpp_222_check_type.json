{
  "name": "mbpp_222_check_type",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to check if all the elements in tuple have same data type or not.\n\t\"\"\"\nfunction check_type(test_tuple::Any)::Bool \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = check_type;\n\t@test(candidate((5, 6, 7, 3, 5, 6)) == true)\n\t@test(candidate((1, 2, \"4\")) == false)\n\t@test(candidate((3, 2, 1, 4, 5)) == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tCheck if all the elements in tuple have same data type or not.\n\t\"\"\"\n\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\ta = typeof(test_tuple[1])\n\tfor i in test_tuple\n\t\tif typeof(i) != a\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tFunction to check if all the elements in tuple have same data type or not.\n\t\"\"\"\n\tif length(test_tuple) == 0\n\t\treturn true\n\tend\n\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tCheck if all the elements in tuple have same data type or not.\n\t\"\"\"\n\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tFunction to check if all the elements in tuple have same data type or not.\n\t\"\"\"\n\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tif length(test_tuple) == 0\n\t\treturn true\n\tend\n\ttype_of_first_element = typeof(test_tuple[1])\n\tfor i in test_tuple\n\t\tif typeof(i) != type_of_first_element\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\ttype_list = []\n\tfor i in test_tuple\n\t\tpush!(type_list, typeof(i))\n\tend\n\tif length(unique(type_list)) == 1\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\ttype_list = []\n\tfor i in test_tuple\n\t\tpush!(type_list, typeof(i))\n\tend\n\treturn length(unique(type_list)) == 1\nend",
    "\ttype_list = []\n\tfor i in test_tuple\n\t\tpush!(type_list, typeof(i))\n\tend\n\tif length(unique(type_list)) == 1\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend",
    "\tif length(test_tuple) == 0\n\t\treturn true\n\tend\n\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tFunction to check if all the elements in tuple have same data type or not.\n\t\"\"\"\n\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tThis function checks if all the elements in tuple have same data type or not.\n\t\"\"\"\n\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tCheck if all the elements in tuple have same data type or not.\n\t\"\"\"\n\tfor i in test_tuple\n\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend",
    "\tif length(test_tuple) == 0\n\t\treturn true\n\telse\n\t\tfor i in test_tuple\n\t\t\tif typeof(i) != typeof(test_tuple[1])\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\nend"
  ]
}
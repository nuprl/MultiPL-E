{
  "name": "mbpp_446_count_Occurrence",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_446_count_Occurrence.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in lst\n        count += count(tup, i)\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpf1smshlk.jl:16\n  Test threw exception\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{5, String}, lst::Vector{String})\n     @ Main /tmp/tmpf1smshlk.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf1smshlk.jl:16 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf1smshlk.jl:15\ntest set: Error During Test at /tmp/tmpf1smshlk.jl:17\n  Test threw exception\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{9, Int64}, lst::Vector{Int64})\n     @ Main /tmp/tmpf1smshlk.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf1smshlk.jl:17 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf1smshlk.jl:15\ntest set: Error During Test at /tmp/tmpf1smshlk.jl:18\n  Test threw exception\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{6, Int64}, lst::Vector{Int64})\n     @ Main /tmp/tmpf1smshlk.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf1smshlk.jl:18 [inlined]\n   [4] macro expansion\n     @ ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf1smshlk.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tfor j in tup\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in lst\n        count += count(tup, i)\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510257,
      "stdout": "test set: Error During Test at /tmp/tmpf1smshlk.jl:16\n  Test threw exception\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{5, String}, lst::Vector{String})\n     @ Main /tmp/tmpf1smshlk.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf1smshlk.jl:16 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf1smshlk.jl:15\ntest set: Error During Test at /tmp/tmpf1smshlk.jl:17\n  Test threw exception\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{9, Int64}, lst::Vector{Int64})\n     @ Main /tmp/tmpf1smshlk.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf1smshlk.jl:17 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf1smshlk.jl:15\ntest set: Error During Test at /tmp/tmpf1smshlk.jl:18\n  Test threw exception\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{6, Int64}, lst::Vector{Int64})\n     @ Main /tmp/tmpf1smshlk.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf1smshlk.jl:18 [inlined]\n   [4] macro expansion\n     @ ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf1smshlk.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tfor j in tup\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in tup\n        for j in lst\n            if i == j\n                count += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in tup\n        for j in lst\n            if i == j\n                count += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] == lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123432,
      "stdout": "test set: Test Failed at /tmp/tmp1a3_9ewu.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1a3_9ewu.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1a3_9ewu.jl:17\ntest set: Test Failed at /tmp/tmp1a3_9ewu.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1a3_9ewu.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1a3_9ewu.jl:17\ntest set: Test Failed at /tmp/tmp1a3_9ewu.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1a3_9ewu.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1a3_9ewu.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1a3_9ewu.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in lst\n        for j in tup\n            if i == j\n                count += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in tup\n        for j in lst\n            if i == j\n                count += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123431,
      "stdout": "test set: Test Failed at /tmp/tmpwuemma4v.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwuemma4v.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwuemma4v.jl:17\ntest set: Test Failed at /tmp/tmpwuemma4v.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwuemma4v.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwuemma4v.jl:17\ntest set: Test Failed at /tmp/tmpwuemma4v.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwuemma4v.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwuemma4v.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwuemma4v.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in tup\n        for j in lst\n            if i == j\n                count += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tcount += count(tup, i)\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123433,
      "stdout": "test set: Error During Test at /tmp/tmptmbs08ki.jl:16\n  Test threw exception\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{5, String}, lst::Vector{String})\n     @ Main /tmp/tmptmbs08ki.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmptmbs08ki.jl:16 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmptmbs08ki.jl:15\ntest set: Error During Test at /tmp/tmptmbs08ki.jl:17\n  Test threw exception\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{9, Int64}, lst::Vector{Int64})\n     @ Main /tmp/tmptmbs08ki.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmptmbs08ki.jl:17 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmptmbs08ki.jl:15\ntest set: Error During Test at /tmp/tmptmbs08ki.jl:18\n  Test threw exception\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n  MethodError: objects of type Int64 are not callable\n  Maybe you forgot to use an operator such as *, ^, %, / etc. ?\n  Stacktrace:\n   [1] count_Occurrence(tup::NTuple{6, Int64}, lst::Vector{Int64})\n     @ Main /tmp/tmptmbs08ki.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmptmbs08ki.jl:18 [inlined]\n   [4] macro expansion\n     @ ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmptmbs08ki.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tfor j in tup\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(lst)\n\t\tif lst[i] == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123432,
      "stdout": "test set: Test Failed at /tmp/tmpr3tzjwox.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr3tzjwox.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr3tzjwox.jl:17\ntest set: Test Failed at /tmp/tmpr3tzjwox.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr3tzjwox.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr3tzjwox.jl:17\ntest set: Test Failed at /tmp/tmpr3tzjwox.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpr3tzjwox.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpr3tzjwox.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpr3tzjwox.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in tup\n        for j in lst\n            if i == j\n                count += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif tup == i\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123432,
      "stdout": "test set: Test Failed at /tmp/tmpwiw3ru1n.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwiw3ru1n.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwiw3ru1n.jl:17\ntest set: Test Failed at /tmp/tmpwiw3ru1n.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwiw3ru1n.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwiw3ru1n.jl:17\ntest set: Test Failed at /tmp/tmpwiw3ru1n.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpwiw3ru1n.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpwiw3ru1n.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpwiw3ru1n.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in lst\n        for j in tup\n            if i == j\n                count += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in 1:length(tup)\n\t\tif tup[i] in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i in tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp5nbedu8c.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\ntest set: Test Failed at /tmp/tmp5nbedu8c.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 3 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5nbedu8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5nbedu8c.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5nbedu8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tif i in lst\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tif i == tup\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510256,
      "stdout": "test set: Test Failed at /tmp/tmp78w86i_x.jl:18\n  Expression: candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3\n   Evaluated: 0 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:19\n  Expression: candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6\n   Evaluated: 0 == 6\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\ntest set: Test Failed at /tmp/tmp78w86i_x.jl:20\n  Expression: candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2\n   Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp78w86i_x.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp78w86i_x.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp78w86i_x.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in tup\n\t\tfor j in lst\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n    count = 0\n    for i in lst\n        for j in tup\n            if i == j\n                count += 1\n            end\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1666123430,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to count the occurence of all elements of list in a tuple.\n\t\"\"\"\nfunction count_Occurrence(tup::Any, lst::Any)::Int64 \n\tcount = 0\n\tfor i in lst\n\t\tfor j in tup\n\t\t\tif i == j\n\t\t\t\tcount += 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nusing Test\n\n@testset begin\n\ncandidate = count_Occurrence;\n\t@test(candidate((\"a\", \"a\", \"c\", \"b\", \"d\"), [\"a\", \"b\"]) == 3)\n\t@test(candidate((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6)\n\t@test(candidate((1, 2, 3, 4, 5, 6), [1, 2]) == 2)\nend\n",
      "timestamp": 1665510255,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_69_is_sublist",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to check whether a list contains the given sublist or not.\n\t\"\"\"\nfunction is_sublist(l::Vector{Int64}, s::Vector{Int64})::Bool \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_69_is_sublist.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_sublist;\n\t@test(candidate([2, 4, 3, 5, 7], [3, 7]) == false)\n\t@test(candidate([2, 4, 3, 5, 7], [4, 3]) == true)\n\t@test(candidate([2, 4, 3, 5, 7], [1, 6]) == false)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t# l is the list, s is the sublist\n\t# return true if s is a sublist of l, false otherwise\n\t# your code here\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i in 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if s is a sublist of l\n\t# if s is empty, then it is a sublist of l\n\tif length(s) == 0\n\t\treturn true\n\tend\n\t# if s is not empty, but l is empty, then s is not a sublist of l\n\tif length(l) == 0\n\t\treturn false\n\tend\n\t# if the first element of s is not in l, then s is not a sublist of l\n\tif !(s[1] in l)\n\t\treturn false\n\tend\n\t# if the first element of s is in l, then s is a sublist of l if s[2:] is a sublist of l[l.index(s[1]):]\n\treturn is_sublist(l[l.index(s[1]):], s[2:])\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the length of the sublist is greater than the length of the list\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\t# check if the sublist is a sublist of the list\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tfor j in 2:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\telseif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i in 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the length of the sublist is greater than the length of the list\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\t# check if the first element of the sublist is in the list\n\tif !(s[1] in l)\n\t\treturn false\n\tend\n\t\n\t# check if the sublist is a sublist of the list\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\t# Check if the sublist is longer than the list\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\t# Check if the sublist is empty\n\tif length(s) == 0\n\t\treturn true\n\tend\n\t\n\t# Check if the first element of the sublist is in the list\n\tif l[1] == s[1]\n\t\t# Check if the rest of the sublist is in the list\n\t\tif length(s) == 1\n\t\t\treturn true\n\t\telse\n\t\t\treturn is_sublist(l[2:end], s[2:end])\n\t\tend\n\telse\n\t\t# Check if the sublist is in the rest of the list\n\t\treturn is_sublist(l[2:end], s)\n\tend\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == length(l) - i + 1\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif i+length(s)-1 <= length(l)\n\t\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn is_sublist(l[i+1:end], s[2:end])\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck if s is a sublist of l.\n\t\"\"\"\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) > 1\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the length of the sublist is greater than the length of the list\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\t# check if the sublist is a sublist of the list\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tif s == l\n\t\treturn true\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the length of the sublist is greater than the length of the list\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\t# iterate through the list\n\tfor i in 1:length(l)\n\t\t# check if the first element of the sublist is equal to the current element of the list\n\t\tif l[i] == s[1]\n\t\t\t# iterate through the sublist\n\t\t\tfor j in 1:length(s)\n\t\t\t\t# check if the current element of the sublist is equal to the current element of the list\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\t# check if the current element of the sublist is the last element of the sublist\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == length(l)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == length(l) - i + 1\n\t\t\t\tfor j in 2:length(s)\n\t\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\t\tbreak\n\t\t\t\t\tend\n\t\t\t\t\tif j == length(s)\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\telseif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck if s is a sublist of l.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == length(l) - i + 1\n\t\t\t\tfor j in 2:length(s)\n\t\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\t\treturn false\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck if s is a sublist of l.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif i + length(s) - 1 <= length(l)\n\t\t\t\t\tif l[i+1:i+length(s)-1] == s[2:length(s)]\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == length(l[i:end])\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\treturn is_sublist(l[i+1:end], s[2:end])\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) <= length(l) - i + 1\n\t\t\t\tif l[i+1:i+length(s)-1] == s[2:end]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck if s is a sublist of l.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\t\n\t\t\tfor j in 2:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif i+length(s)-1 <= length(l)\n\t\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tif l[1] == s[1]\n\t\tif length(s) == 1\n\t\t\treturn true\n\t\telse\n\t\t\treturn is_sublist(l[2:end], s[2:end])\n\t\tend\n\telse\n\t\treturn is_sublist(l[2:end], s)\n\tend\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the sublist is empty\n\tif length(s) == 0\n\t\treturn true\n\tend\n\t# check if the list is empty\n\tif length(l) == 0\n\t\treturn false\n\tend\n\t# check if the first element of the sublist is in the list\n\tif l[1] == s[1]\n\t\t# check if the sublist is a sublist of the list\n\t\tif length(s) == 1\n\t\t\treturn true\n\t\telse\n\t\t\treturn is_sublist(l[2:end], s[2:end])\n\t\tend\n\telse\n\t\t# check if the sublist is a sublist of the list\n\t\treturn is_sublist(l[2:end], s)\n\tend\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i in 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck if s is a sublist of l.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif length(s) > 1\n\t\t\t\tif i + length(s) - 1 <= length(l)\n\t\t\t\t\tif isequal(l[i:i+length(s)-1], s)\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the length of the sublist is greater than the length of the list\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\t# check if the sublist is a sublist of the list\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i in 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i + j - 1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\t\n\t\t\tif i + length(s) - 1 > length(l)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t\n\t\t\tif l[i:i + length(s) - 1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tReturns true if sublist is a sublist of list.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the length of the sublist is greater than the list\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\t# check if the sublist is a sublist of the list\n\tif l[1:length(s)] == s\n\t\treturn true\n\tend\n\t\n\t# check if the sublist is a sublist of the list\n\tif is_sublist(l[2:end], s)\n\t\treturn true\n\tend\n\t\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 2:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) > 1\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\t\"\"\"\n\tCheck if s is a sublist of l.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif i+length(s)-1 <= length(l)\n\t\t\t\tif l[i+1:i+length(s)-1] == s[2:length(s)]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i = 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif length(s) > 1\n\t\t\t\tif length(l) - i < length(s)\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the sublist is longer than the list\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t# check if the sublist is the same as the list\n\tif s == l\n\t\treturn true\n\tend\n\t# check if the sublist is a sublist of the list\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif s == l[i:i+length(s)-1]\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i in 1:n-m+1\n\t\tif l[i] == s[1]\n\t\t\tif l[i:i+m-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == 2\n\t\t\t\tif l[i+1] == s[2]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif l[i+1] == s[2]\n\t\t\t\t\tif l[i+2] == s[3]\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == length(l[i:end])\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\treturn is_sublist(l[i+1:end], s[2:end])\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == 2\n\t\t\t\tif l[i+1] == s[2]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 3\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 4\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3] && l[i+3] == s[4]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 5\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3] && l[i+3] == s[4] && l[i+4] == s[5]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 6\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3] && l[i+3] == s[4] && l[i+4] == s[5] && l[i+5] == s[6]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 7\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3] && l[i+3] == s[4] && l[i+4] == s[5] && l[i+5] == s[6] && l[i+6] == s[7]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 8",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\t\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i = 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\t\n\t\t\tif length(s) > 1\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i:length(l)], s[2:length(s)])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i in 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if the sublist is empty\n\tif length(s) == 0\n\t\treturn true\n\tend\n\t# check if the list is empty\n\tif length(l) == 0\n\t\treturn false\n\tend\n\t# check if the first element of the sublist is in the list\n\tif l[1] == s[1]\n\t\t# check if the rest of the sublist is in the list\n\t\treturn is_sublist(l[2:end], s[2:end])\n\telse\n\t\t# check if the rest of the list contains the sublist\n\t\treturn is_sublist(l[2:end], s)\n\tend\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck if a list contains a sublist.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\t\n\t\t\tif i+length(s)-1 <= length(l)\n\t\t\t\tif l[i+1:i+length(s)-1] == s[2:end]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == length(l) - i + 1\n\t\t\t\tfor j in 1:length(s)\n\t\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\t\treturn false\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tfor j in 2:length(s)\n\t\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\t\tbreak\n\t\t\t\t\tend\n\t\t\t\t\tif j == length(s)\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == length(l) - i + 1\n\t\t\t\tif l[i:end] == s\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i + length(s) - 1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t# if the sublist is empty, then it is a sublist of any list\n\tif length(s) == 0\n\t\treturn true\n\tend\n\t# if the sublist is longer than the list, then it is not a sublist\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t# if the first element of the sublist is not in the list, then it is not a sublist\n\tif !(s[1] in l)\n\t\treturn false\n\tend\n\t# if the first element of the sublist is in the list, then check if the rest of the sublist is a sublist of the rest of the list\n\tif s[1] in l\n\t\treturn is_sublist(l[l .== s[1] + 1:end], s[2:end])\n\tend\nend",
    "\tn = length(l)\n\tm = length(s)\n\tfor i = 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "    for i in 1:length(l)\n        if l[i] == s[1]\n            if l[i:i+length(s)-1] == s\n                return true\n            end\n        end\n    end\n    return false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t# check if s is a sublist of l\n\t# if s is empty, then it is a sublist of l\n\tif isempty(s)\n\t\treturn true\n\tend\n\t# if s is not empty and l is empty, then s is not a sublist of l\n\tif isempty(l)\n\t\treturn false\n\tend\n\t# if the first element of s is equal to the first element of l, then check if the rest of s is a sublist of the rest of l\n\tif s[1] == l[1]\n\t\treturn is_sublist(l[2:end], s[2:end])\n\tend\n\t# if the first element of s is not equal to the first element of l, then check if s is a sublist of the rest of l\n\treturn is_sublist(l[2:end], s)\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif i + length(s) <= length(l)\n\t\t\t\tif l[i+1:i+length(s)] == s[2:end]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(l) < length(s)\n\t\treturn false\n\telseif l[1:length(s)] == s\n\t\treturn true\n\telse\n\t\treturn is_sublist(l[2:end], s)\n\tend\nend",
    "\t\"\"\"\n\tCheck if s is a sublist of l.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l) - length(s) + 1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(s)\n\tfor i in 1:length(l)-n+1\n\t\tif l[i:i+n-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif i + length(s) - 1 > length(l)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:i+length(s)-1], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\t\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\t\"\"\"\n\tCheck if s is a sublist of l.\n\t\"\"\"\n\tn = length(l)\n\tm = length(s)\n\tfor i in 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == 2\n\t\t\t\tif l[i+1] == s[2]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 3\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 4\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3] && l[i+3] == s[4]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 5\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3] && l[i+3] == s[4] && l[i+4] == s[5]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 6\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3] && l[i+3] == s[4] && l[i+4] == s[5] && l[i+5] == s[6]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 7\n\t\t\t\tif l[i+1] == s[2] && l[i+2] == s[3] && l[i+3] == s[4] && l[i+4] == s[5] && l[i+5] == s[6] && l[i+6] == s[7]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telseif length(s) == 8",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor j in 1:length(s)\n\t\t\t\tif l[i+j-1] != s[j]\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tif j == length(s)\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tCheck whether a list contains the given sublist or not.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telseif length(s) == 2\n\t\t\t\tif l[i+1] == s[2]\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif l[i+1] == s[2]\n\t\t\t\t\tif l[i+2] == s[3]\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif length(s) > 1\n\t\t\t\tif i + length(s) - 1 <= length(l)\n\t\t\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tChecks if s is a sublist of l.\n\t\"\"\"\n\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)-length(s)+1\n\t\tif l[i:i+length(s)-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\t\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(s) > length(l)\n\t\treturn false\n\tend\n\t\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\tend\n\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif is_sublist(l[i+1:end], s[2:end])\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(l) < length(s)\n\t\treturn false\n\tend\n\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(l) - i + 1 < length(s)\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tif l[i:i+length(s)-1] == s\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in 1:length(l)\n\t\tif l[i] == s[1]\n\t\t\tif length(s) == 1\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\tif i + length(s) - 1 <= length(l)\n\t\t\t\t\tif l[i+1:i+length(s)-1] == s[2:length(s)]\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tn = length(l)\n\tm = length(s)\n\tif m > n\n\t\treturn false\n\tend\n\tfor i in 1:n-m+1\n\t\tif l[i:i+m-1] == s\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend"
  ]
}
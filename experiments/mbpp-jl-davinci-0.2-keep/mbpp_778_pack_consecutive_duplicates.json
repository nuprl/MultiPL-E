{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list3:\n\t\t\tlist3.append(i)\n\t\t\tlist2.append([i])\n\t\telse:\n\t\t\tlist2[list3.index(i)].append(i)\n\treturn list2",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists with consecutive duplicates packed into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend",
    "\t\"\"\"\n\tfunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list as input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\t\"\"\"\n\tThis function takes a list as input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\treturn list3\nend",
    "\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = [list1[i]]\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend",
    "\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend"
  ]
}
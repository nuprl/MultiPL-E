{
  "name": "mbpp_11_remove_Occ",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"\nfunction remove_Occ(s::String, ch::String)::String \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_11_remove_Occ.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = remove_Occ;\n\t@test(candidate(\"hello\", \"l\") == \"heo\")\n\t@test(candidate(\"abcda\", \"a\") == \"bcd\")\n\t@test(candidate(\"PHP\", \"P\") == \"H\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "    i = findfirst(s,ch)\n    j = findlast(s,ch)\n    if i == j\n        return s\n    else\n        return s[1:i-1] * s[i+1:j-1] * s[j+1:end]\n    end\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", length(s))\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "    if length(s) == 0\n        return \"\"\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end], ch)\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    return replace(s, r\"$ch+\", \"\")\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "    #s = \"abcdefghijklmnopqrstuvwxyz\"\n    #ch = \"a\"\n    #ch = \"z\"\n    #ch = \"b\"\n    #ch = \"c\"\n    #ch = \"d\"\n    #ch = \"e\"\n    #ch = \"f\"\n    #ch = \"g\"\n    #ch = \"h\"\n    #ch = \"i\"\n    #ch = \"j\"\n    #ch = \"k\"\n    #ch = \"l\"\n    #ch = \"m\"\n    #ch = \"n\"\n    #ch = \"o\"\n    #ch = \"p\"\n    #ch = \"q\"\n    #ch = \"r\"\n    #ch = \"s\"\n    #ch = \"t\"\n    #ch = \"u\"\n    #ch = \"v\"\n    #ch = \"w\"\n    #ch = \"x\"\n    #ch = \"y\"\n    #ch = \"z\"\n    #ch = \"A\"\n    #ch = \"B\"\n    #ch = \"C\"\n    #ch = \"D\"\n    #ch = \"E\"\n    #ch = \"F\"\n    #ch = \"G\"\n    #ch = \"H\"\n    #ch = \"I\"\n    #ch = \"J\"\n    #ch = \"K\"\n    #ch = \"L\"\n    #ch = \"M\"\n    #ch = \"N\"\n    #ch = \"O\"\n    #ch = \"P\"\n    #ch = \"Q\"\n    #ch = \"R\"\n    #ch = \"S\"\n    #ch = \"T\"\n    #ch = \"U\"\n    #ch = \"V\"\n    #ch = \"W\"\n    #ch = \"X\"\n    #ch = \"Y\"\n    #ch = \"Z\"\n    #ch = \"0\"\n    #ch = \"1\"\n    #ch = \"2\"\n    #ch = \"3\"\n    #ch = \"4\"\n    #ch = \"5\"\n    #ch = \"6\"\n    #ch = \"7\"\n    #",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\tif i == j\n\t\treturn s\n\telse\n\t\treturn s[1:i-1] * s[i+1:j-1] * s[j+1:end]\n\tend\nend",
    "    if length(s) == 0\n        return s\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end], ch)\nend",
    "\t\tif length(s) == 0\n\t\t\treturn s\n\t\tend\n\t\tif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\tend\n\t\tif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\tend\n\t\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\n\tend",
    "\t\tif length(s)==0\n\t\t\treturn \"\"\n\t\telseif s[1]==ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end]==ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s[1]*remove_Occ(s[2:end], ch)\n\t\tend\n\tend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    s = replace(s, ch => \"\")\n    s = replace(s, ch => \"\", 1)\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    return replace(s, r\"$ch+\", \"\")\nend",
    "\ts = s.replace(ch, \"\")\n\ts = s.replace(ch, \"\")\n\treturn s\nend",
    "    i = findfirst(s, ch)\n    j = findlast(s, ch)\n    if i == j\n        return s[i+1:end]\n    else\n        return s[1:i-1] * s[j+1:end]\n    end\nend",
    "\t\tif length(s) == 0\n\t\t\treturn \"\"\n\t\telseif length(s) == 1\n\t\t\tif s == ch\n\t\t\t\treturn \"\"\n\t\t\telse\n\t\t\t\treturn s\n\t\t\tend\n\t\telse\n\t\t\tif s[1] == ch\n\t\t\t\treturn remove_Occ(s[2:end], ch)\n\t\t\telseif s[end] == ch\n\t\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\t\telse\n\t\t\t\treturn s\n\t\t\tend\n\t\tend\n\tend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "\ts = s[1:end-1]\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "    return replace(s, r\"$ch+\", \"\")\nend",
    "    if length(s) == 0\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "\ts = s.replace(ch, \"\")\n\ts = s.replace(ch, \"\")\n\treturn s\nend",
    "\t\"\"\"\n\tRemove first and last occurrence of a given character from the string.\n\t\"\"\"\n\tif length(s) == 0\n\t\treturn s\n\telseif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\tend\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", length(s))\n\treturn s\nend",
    "\tif length(s) == 0\n\t\treturn \"\"\n\telseif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\telseif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\n\tend\nend",
    "    if s == \"\"\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    if length(s) == 0\n        return \"\"\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "\t\n\t# Remove first occurrence of ch\n\ti = findfirst(s, ch)\n\ts = s[1:i-1] * s[i+1:end]\n\t\n\t# Remove last occurrence of ch\n\ti = findlast(s, ch)\n\ts = s[1:i-1] * s[i+1:end]\n\t\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "    if length(s) == 0\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    if length(s) == 0\n        return \"\"\n    elseif length(s) == 1\n        if s == ch\n            return \"\"\n        else\n            return s\n        end\n    else\n        if s[1] == ch\n            return remove_Occ(s[2:end], ch)\n        elseif s[end] == ch\n            return remove_Occ(s[1:end-1], ch)\n        else\n            return s\n        end\n    end\nend",
    "\t\tif length(s)==0\n\t\t\treturn \"\"\n\t\telseif length(s)==1\n\t\t\tif s==ch\n\t\t\t\treturn \"\"\n\t\t\telse\n\t\t\t\treturn s\n\t\t\tend\n\t\telse\n\t\t\tif s[1]==ch\n\t\t\t\treturn remove_Occ(s[2:end], ch)\n\t\t\telseif s[end]==ch\n\t\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\t\telse\n\t\t\t\treturn s[1]*remove_Occ(s[2:end-1], ch)*s[end]\n\t\t\tend\n\t\tend\n\tend",
    "\t\ts = s.replace(ch, \"\")\n\t\ts = s.replace(ch, \"\", 1)\n\t\treturn s\nend",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\treturn s[1:i-1] * s[i+1:j-1] * s[j+1:end]\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\ts = s.replace(ch, \"\")\n\ts = s.replace(ch, \"\")\n\treturn s\nend",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\tif i == j\n\t\treturn s\n\telse\n\t\treturn s[1:i-1] * s[i+1:j-1] * s[j+1:end]\n\tend\nend",
    "    if length(s) == 0\n        return \"\"\n    elseif length(s) == 1\n        if s == ch\n            return \"\"\n        else\n            return s\n        end\n    else\n        if s[1] == ch\n            return remove_Occ(s[2:end], ch)\n        elseif s[end] == ch\n            return remove_Occ(s[1:end-1], ch)\n        else\n            return s\n        end\n    end\nend",
    "\tif s == \"\"\n\t\treturn \"\"\n\tend\n\tif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\tend\n\tif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\tend\n\treturn s[1] * remove_Occ(s[2:end], ch)\nend",
    "\treturn replace(s, r\"$ch+\", \"\")\nend",
    "\t\ts = replace(s, ch, \"\")\n\t\ts = replace(s, ch, \"\", rev=true)\n\t\treturn s\nend",
    "\t# s is the string and ch is the character to be removed\n\t# if the character is not present in the string, return the string\n\tif !occursin(ch, s)\n\t\treturn s\n\tend\n\t# find the first and last occurrence of the character\n\tfirst_occ = findfirst(ch, s)\n\tlast_occ = findlast(ch, s)\n\t# remove the first and last occurrence of the character\n\ts = s[1:first_occ-1] * s[first_occ+1:last_occ-1] * s[last_occ+1:end]\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\t\ts = replace(s, ch, \"\")\n\t\ts = replace(s, ch, \"\", lastindex(s, ch))\n\t\treturn s\n\tend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\tif i == j\n\t\ts = replace(s, ch, \"\")\n\telse\n\t\ts = replace(s, ch, \"\", i)\n\t\ts = replace(s, ch, \"\", j-1)\n\tend\n\treturn s\nend",
    "    s = replace(s, ch => \"\")\n    s = replace(s, ch => \"\", 1)\n    return s\nend",
    "\t\n\t# remove first occurrence of ch\n\tif s[1] == ch\n\t\ts = s[2:end]\n\tend\n\t\n\t# remove last occurrence of ch\n\tif s[end] == ch\n\t\ts = s[1:end-1]\n\tend\n\t\n\treturn s\nend",
    "    s = replace(s, ch => \"\")\n    s = replace(s, ch => \"\", 1)\n    return s\nend",
    "\t\"\"\"\n\tFunction to remove first and last occurrence of a given character from the string.\n\t\"\"\"\n\tif length(s) == 0\n\t\treturn \"Empty String\"\n\tend\n\tif length(ch) > 1\n\t\treturn \"Please enter a single character\"\n\tend\n\tif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\tend\n\tif s[1] == ch\n\t\ts = s[2:end]\n\tend\n\tif s[end] == ch\n\t\ts = s[1:end-1]\n\tend\n\treturn s\nend",
    "\tif length(ch) != 1\n\t\terror(\"Character must be a single character\")\n\tend\n\tif length(s) == 0\n\t\terror(\"String must not be empty\")\n\tend\n\t\n\tfirst_occ = findfirst(s, ch)\n\tif first_occ == nothing\n\t\treturn s\n\tend\n\t\n\tlast_occ = findlast(s, ch)\n\t\n\treturn s[1:first_occ-1] * s[first_occ+1:last_occ-1] * s[last_occ+1:end]\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", lastindex(s, ch))\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "\treturn replace(s, ch=>\"\")\nend",
    "\t\tif s == \"\"\n\t\t\treturn \"\"\n\t\tend\n\t\tif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\t\tend\n\tend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\t\ts = s.replace(ch, \"\")\n\t\ts = s.replace(ch, \"\")\n\t\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", length(s))\n\treturn s\nend",
    "\t\n\t# remove first occurrence\n\tif s[1] == ch\n\t\ts = s[2:end]\n\tend\n\t\n\t# remove last occurrence\n\tif s[end] == ch\n\t\ts = s[1:end-1]\n\tend\n\t\n\treturn s\nend",
    "    s = s.replace(ch, \"\")\n    s = s.replace(ch, \"\")\n    return s\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "    s = s.replace(ch, \"\")\n    s = s.replace(ch, \"\")\n    return s\nend",
    "\t\"\"\"\n\tRemoves the first and last occurrence of a given character from the string.\n\t\"\"\"\n\tif length(s) == 0\n\t\treturn \"\"\n\telseif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\tend\nend",
    "\tif length(s) == 0\n\t\treturn \"\"\n\telseif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\telseif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\n\tend\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    if length(s) == 0\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "    if length(s) == 0\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "\t\"\"\"\n\ts: string\n\tch: character\n\t\"\"\"\n\treturn replace(s, ch => \"\")\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "\t\tif length(s) == 0\n\t\t\treturn \"\"\n\t\telseif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\t\tend\n\tend",
    "\t\ts = replace(s, ch, \"\")\n\t\ts = replace(s, ch, \"\", rev=true)\n\t\treturn s\n\tend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1:length(s)-1)\n\treturn s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "    if length(s) == 0\n        return \"\"\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end], ch)\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", count = length(s))\n\treturn s\nend",
    "    if length(s) == 0\n        return \"\"\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end], ch)\nend",
    "    if length(s) == 0\n        return \"\"\n    end\n    if length(s) == 1\n        if s == ch\n            return \"\"\n        else\n            return s\n        end\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end-1], ch) * s[end]\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\ts = s.replace(ch, \"\")\n\ts = s.replace(ch, \"\")\n\treturn s\nend",
    "    if length(s) == 0\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", lastindex(s, ch))\n    return s\nend",
    "\t\ts = s.replace(ch, \"\")\n\t\ts = s.replace(ch, \"\")\n\t\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\tif length(s) == 0\n\t\treturn \"\"\n\tend\n\tif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\tend\n\tif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\tend\n\tif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\tend\n\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\nend",
    "\t\ts = replace(s, ch, \"\")\n\t\ts = replace(s, ch, \"\", length(s))\n\t\treturn s\n\tend\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "    s = replace(s, ch => \"\")\n    s = replace(s, ch => \"\", 1)\n    return s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\treturn replace(s, r\"$ch+\", \"\")\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "    if length(s) == 0\n        return \"\"\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end], ch)\nend",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\treturn s[1:i-1] * s[i+1:j-1] * s[j+1:end]\nend",
    "\t\treturn replace(s, r\"$ch+\", \"\")\n\tend",
    "\t\tif length(s) == 0\n\t\t\treturn \"\"\n\t\telseif length(s) == 1\n\t\t\tif s == ch\n\t\t\t\treturn \"\"\n\t\t\telse\n\t\t\t\treturn s\n\t\t\tend\n\t\telse\n\t\t\tif s[1] == ch\n\t\t\t\treturn remove_Occ(s[2:end], ch)\n\t\t\telseif s[end] == ch\n\t\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\t\telse\n\t\t\t\treturn s\n\t\t\tend\n\t\tend\n\tend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "\t\tif length(s) == 0\n\t\t\treturn \"\"\n\t\telseif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\t\tend\n\tend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1:lastindex(s))\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", length(s))\n\treturn s\nend",
    "    s = s.replace(ch, \"\")\n    s = s.replace(ch, \"\")\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\t\ts = replace(s, ch, \"\")\n\t\ts = replace(s, ch, \"\", length(s))\n\t\treturn s\n\tend",
    "\t\tif length(s) == 0\n\t\t\treturn \"\"\n\t\telseif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\t\tend\n\tend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\t\"\"\"\n\ts: string\n\tch: character to remove\n\t\"\"\"\n\tif length(s) == 0\n\t\treturn \"\"\n\telseif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\tend\nend",
    "\t\treturn replace(s, ch => \"\")\n\tend\n\t\n\t\"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"",
    "\tif length(s) == 0\n\t\treturn s\n\tend\n\tif length(ch) != 1\n\t\treturn \"Error: character must be a single character\"\n\tend\n\tif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\tend\n\tif s[1] == ch\n\t\ts = s[2:end]\n\tend\n\tif s[end] == ch\n\t\ts = s[1:end-1]\n\tend\n\treturn s\nend",
    "\tif length(s) == 0\n\t\treturn \"\"\n\tend\n\tif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\tend\n\tif s[1] == ch\n\t\ts = remove_Occ(s[2:end], ch)\n\t\treturn s\n\tend\n\tif s[end] == ch\n\t\ts = remove_Occ(s[1:end-1], ch)\n\t\treturn s\n\tend\n\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", length(s))\n\treturn s\nend",
    "    if length(s) == 0\n        return \"\"\n    end\n    if length(s) == 1\n        if s == ch\n            return \"\"\n        else\n            return s\n        end\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end-1], ch) * s[end]\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    if length(s) == 0\n        return \"\"\n    elseif length(s) == 1\n        if s == ch\n            return \"\"\n        else\n            return s\n        end\n    else\n        if s[1] == ch\n            return remove_Occ(s[2:end], ch)\n        elseif s[end] == ch\n            return remove_Occ(s[1:end-1], ch)\n        else\n            return s\n        end\n    end\nend",
    "\t\tif length(s) == 0\n\t\t\treturn \"\"\n\t\telseif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\t\tend\n\tend",
    "    if length(s) == 0\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "    if length(s) == 0\n        return s\n    elseif length(s) == 1\n        if s == ch\n            return \"\"\n        else\n            return s\n        end\n    else\n        if s[1] == ch\n            return remove_Occ(s[2:end], ch)\n        elseif s[end] == ch\n            return remove_Occ(s[1:end-1], ch)\n        else\n            return s\n        end\n    end\nend",
    "    if length(s) == 0\n        return s\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "\t\treturn replace(s, r\"$ch+\", \"\")\n\tend",
    "\ts = replace(s, ch => \"\")\n\ts = replace(s, ch => \"\", length(s))\n\treturn s\nend",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\tif i == j\n\t\treturn s\n\telse\n\t\treturn s[1:i-1] * s[i+1:j-1] * s[j+1:end]\n\tend\nend",
    "    i = findfirst(s, ch)\n    j = findlast(s, ch)\n    if i == j\n        return s\n    else\n        return s[1:i-1] * s[i+1:j-1] * s[j+1:end]\n    end\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "    s = s.replace(ch, \"\")\n    s = s.replace(ch, \"\")\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\t\t\n\t\tif length(s) == 0\n\t\t\treturn \"\"\n\t\tend\n\t\t\n\t\tif s[1] == ch\n\t\t\ts = remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\ts = remove_Occ(s[1:end-1], ch)\n\t\tend\n\t\t\n\t\treturn s\n\tend\n\t\n\t\n\t\"\"\"\n\tWrite a python function to remove first and last occurrence of a given character from the string.\n\t\"\"\"",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\t\tif length(s) == 0\n\t\t\treturn \"\"\n\t\tend\n\t\tif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\n\t\tend\n\tend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    if length(s) == 0\n        return \"\"\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end], ch)\nend",
    "    if length(s) == 0\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "\tif length(s) == 0\n\t\treturn \"\"\n\telseif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\tend\nend",
    "\tif length(s) == 0\n\t\treturn \"\"\n\tend\n\tif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\tend\n\tif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\tend\n\tif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\tend\n\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "    i = findfirst(s, ch)\n    j = findlast(s, ch)\n    if i == j\n        return s[i+1:end]\n    else\n        return s[1:i-1] * s[j+1:end]\n    end\nend",
    "\tif length(s) == 0\n\t\treturn \"\"\n\telseif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\telse\n\t\tif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\n\t\tend\n\tend\nend",
    "    s = s.replace(ch, \"\")\n    s = s.replace(ch, \"\")\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", length(s))\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    if length(s) == 0\n        return \"\"\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end-1], ch) * s[end]\n    end\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "    return replace(s, r\"$ch+\", \"\")\nend",
    "\tif length(s)==0\n\t\treturn s\n\telseif length(s)==1\n\t\tif s==ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\telseif s[1]==ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end]==ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1]*remove_Occ(s[2:end-1], ch)*s[end]\n\tend\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend",
    "\t\"\"\"\n\ts: string\n\tch: character to be removed\n\t\"\"\"\n\tif length(s) == 0\n\t\treturn \"\"\n\tend\n\tif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\tend\nend",
    "\tif s == \"\"\n\t\treturn \"\"\n\telseif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end], ch)\n\tend\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", 1)\n\treturn s\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\tif length(s) == 0\n\t\treturn \"\"\n\telseif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\telseif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\n\tend\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", lastindex(s, ch))\n    return s\nend",
    "\tif length(s) == 0\n\t\treturn s\n\tend\n\tif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\tend\n\tif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\telseif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\telse\n\t\treturn s[1] * remove_Occ(s[2:end-1], ch) * s[end]\n\tend\nend",
    "    s = s.replace(ch, \"\")\n    s = s.replace(ch, \"\")\n    return s\nend",
    "    if length(s) == 0\n        return \"\"\n    end\n    if s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    end\n    if s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    end\n    return s[1] * remove_Occ(s[2:end], ch)\nend",
    "\tif length(s) == 0\n\t\treturn s\n\telseif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\telse\n\t\tif s[1] == ch\n\t\t\ts = s[2:end]\n\t\tend\n\t\tif s[end] == ch\n\t\t\ts = s[1:end-1]\n\t\tend\n\t\treturn s\n\tend\nend",
    "\treturn replace(s, r\"$ch+\", \"\")\nend",
    "\t\ts = replace(s, ch, \"\")\n\t\ts = replace(s, ch, \"\", rev=true)\n\t\treturn s\n\tend",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\tif i == j\n\t\treturn replace(s, ch => \"\")\n\telse\n\t\treturn replace(s, ch => \"\", i:j)\n\tend\nend",
    "\t\"\"\"\n\tRemove first and last occurrence of a given character from the string.\n\t\"\"\"\n\tif length(s) == 0\n\t\treturn \"\"\n\tend\n\tif s[1] == ch\n\t\treturn remove_Occ(s[2:end], ch)\n\tend\n\tif s[end] == ch\n\t\treturn remove_Occ(s[1:end-1], ch)\n\tend\n\treturn s[1] * remove_Occ(s[2:end], ch)\nend",
    "    if length(s) == 0\n        return \"\"\n    elseif s[1] == ch\n        return remove_Occ(s[2:end], ch)\n    elseif s[end] == ch\n        return remove_Occ(s[1:end-1], ch)\n    else\n        return s[1] * remove_Occ(s[2:end], ch)\n    end\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "\ts = replace(s, ch, \"\")\n\treturn s\nend",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\tif i == j\n\t\ts = replace(s, ch => \"\")\n\telse\n\t\ts = replace(s, ch => \"\", i:j)\n\tend\n\treturn s\nend",
    "    s = replace(s, ch, \"\")\n    s = replace(s, ch, \"\", 1)\n    return s\nend",
    "\tif length(s) == 0\n\t\treturn \"\"\n\telseif length(s) == 1\n\t\tif s == ch\n\t\t\treturn \"\"\n\t\telse\n\t\t\treturn s\n\t\tend\n\telse\n\t\tif s[1] == ch\n\t\t\treturn remove_Occ(s[2:end], ch)\n\t\telseif s[end] == ch\n\t\t\treturn remove_Occ(s[1:end-1], ch)\n\t\telse\n\t\t\treturn s\n\t\tend\n\tend\nend",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
    "\treturn replace(s, ch, \"\")\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", lastindex(s, ch))\n\treturn s\nend",
    "\ti = findfirst(s, ch)\n\tj = findlast(s, ch)\n\treturn s[1:i-1] * s[i+1:j-1] * s[j+1:end]\nend",
    "\treturn replace(s, ch=>\"\")\nend",
    "\ts = replace(s, ch, \"\")\n\ts = replace(s, ch, \"\", rev=true)\n\treturn s\nend"
  ]
}
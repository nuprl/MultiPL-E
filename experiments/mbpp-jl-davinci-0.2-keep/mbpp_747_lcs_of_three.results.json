{
  "name": "mbpp_747_lcs_of_three",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_747_lcs_of_three.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510001,
      "stdout": "test set: Error During Test at /tmp/tmpj8jt1h51.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpj8jt1h51.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpj8jt1h51.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpj8jt1h51.jl:28\ntest set: Error During Test at /tmp/tmpj8jt1h51.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpj8jt1h51.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpj8jt1h51.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpj8jt1h51.jl:28\ntest set: Error During Test at /tmp/tmpj8jt1h51.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj8jt1h51.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m\n\t\tfor j in 1:n\n\t\t\tfor k in 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 1\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509999,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpw3i0y0lj.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpw3i0y0lj.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmps1lwo3tu.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\ntest set: Test Failed at /tmp/tmps1lwo3tu.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps1lwo3tu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmpp_xevvef.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_xevvef.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_xevvef.jl:28\ntest set: Test Failed at /tmp/tmpp_xevvef.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_xevvef.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_xevvef.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp_xevvef.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509999,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmploeow4yh.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmploeow4yh.jl:1\nin expression starting at /tmp/tmploeow4yh.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tlcs = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tlcs[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tlcs[i,j,k] = lcs[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tlcs[i,j,k] = max(lcs[i-1,j,k], lcs[i,j-1,k], lcs[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn lcs[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmp82bdz5vi.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp82bdz5vi.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp82bdz5vi.jl:28\ntest set: Test Failed at /tmp/tmp82bdz5vi.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp82bdz5vi.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp82bdz5vi.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp82bdz5vi.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmpgwcau7o8.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\ntest set: Test Failed at /tmp/tmpgwcau7o8.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\ntest set: Test Failed at /tmp/tmpgwcau7o8.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgwcau7o8.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i=1:m\n\t\tfor j=1:n\n\t\t\tfor k=1:o\n\t\t\t\tif i==1 || j==1 || k==1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i]==Y[j] && Y[j]==Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmp_cobznpk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\ntest set: Test Failed at /tmp/tmp_cobznpk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\ntest set: Test Failed at /tmp/tmp_cobznpk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_cobznpk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i=1:m+1\n\t\tfor j=1:n+1\n\t\t\tfor k=1:o+1\n\t\t\t\tif i==1 || j==1 || k==1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i]==Y[j] && X[i]==Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510001,
      "stdout": "test set: Error During Test at /tmp/tmpn47eeikf.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpn47eeikf.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpn47eeikf.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpn47eeikf.jl:28\ntest set: Error During Test at /tmp/tmpn47eeikf.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpn47eeikf.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpn47eeikf.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpn47eeikf.jl:28\ntest set: Error During Test at /tmp/tmpn47eeikf.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpn47eeikf.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = Array{Int64}(m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmpynfqvfyr.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpynfqvfyr.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpynfqvfyr.jl:29 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpynfqvfyr.jl:28\ntest set: Error During Test at /tmp/tmpynfqvfyr.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpynfqvfyr.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpynfqvfyr.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 0:m\n\t\tfor j = 0:n\n\t\t\tfor k = 0:o\n\t\t\t\tif i == 0 || j == 0 || k == 0\n\t\t\t\t\tL[i+1, j+1, k+1] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i+1, j+1, k+1] = L[i, j, k] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i+1, j+1, k+1] = max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = Array{Int64}(m+1,n+1,o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmplaojc0x8.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmplaojc0x8.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmplaojc0x8.jl:29 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmplaojc0x8.jl:28\ntest set: Error During Test at /tmp/tmplaojc0x8.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmplaojc0x8.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmplaojc0x8.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = Array{Int64}(m+1,n+1,o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmpt6z4it50.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpt6z4it50.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpt6z4it50.jl:29 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt6z4it50.jl:28\ntest set: Error During Test at /tmp/tmpt6z4it50.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpt6z4it50.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpt6z4it50.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpytiu_sj2.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpytiu_sj2.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpytiu_sj2.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpytiu_sj2.jl:28\ntest set: Error During Test at /tmp/tmpytiu_sj2.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpytiu_sj2.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpytiu_sj2.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpytiu_sj2.jl:28\ntest set: Error During Test at /tmp/tmpytiu_sj2.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpytiu_sj2.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Error During Test at /tmp/tmp3_sszpuu.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp3_sszpuu.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_sszpuu.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_sszpuu.jl:28\ntest set: Error During Test at /tmp/tmp3_sszpuu.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp3_sszpuu.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_sszpuu.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_sszpuu.jl:28\ntest set: Error During Test at /tmp/tmp3_sszpuu.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp3_sszpuu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmpp_xevvef.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_xevvef.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_xevvef.jl:28\ntest set: Test Failed at /tmp/tmpp_xevvef.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_xevvef.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_xevvef.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp_xevvef.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1) \n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmp43vwtt8c.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp43vwtt8c.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp43vwtt8c.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp43vwtt8c.jl:28\ntest set: Error During Test at /tmp/tmp43vwtt8c.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp43vwtt8c.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp43vwtt8c.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp43vwtt8c.jl:28\ntest set: Error During Test at /tmp/tmp43vwtt8c.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp43vwtt8c.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmp3kkzi5fc.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\ntest set: Test Failed at /tmp/tmp3kkzi5fc.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\ntest set: Test Failed at /tmp/tmp3kkzi5fc.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3kkzi5fc.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m\n\t\tfor j in 1:n\n\t\t\tfor k in 1:o\n\t\t\t\tif X[i] == Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmp04t75nef.jl:27\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7\u00d78\u00d76 Array{Int64, 3} at index [0, 1, 1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp04t75nef.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp04t75nef.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp04t75nef.jl:26\ntest set: Error During Test at /tmp/tmp04t75nef.jl:28\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 6\u00d79\u00d714 Array{Int64, 3} at index [0, 0, 0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp04t75nef.jl:13\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp04t75nef.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp04t75nef.jl:26\ntest set: Error During Test at /tmp/tmp04t75nef.jl:29\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 8\u00d77\u00d76 Array{Int64, 3} at index [0, 1, 1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp04t75nef.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp04t75nef.jl:29 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/sha",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp04t75nef.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpw3i0y0lj.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpw3i0y0lj.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Error During Test at /tmp/tmp3_sszpuu.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp3_sszpuu.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_sszpuu.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_sszpuu.jl:28\ntest set: Error During Test at /tmp/tmp3_sszpuu.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp3_sszpuu.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_sszpuu.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_sszpuu.jl:28\ntest set: Error During Test at /tmp/tmp3_sszpuu.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp3_sszpuu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpqhug8yqd.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpqhug8yqd.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqhug8yqd.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqhug8yqd.jl:28\ntest set: Error During Test at /tmp/tmpqhug8yqd.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpqhug8yqd.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqhug8yqd.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqhug8yqd.jl:28\ntest set: Error During Test at /tmp/tmpqhug8yqd.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqhug8yqd.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = Array{Int64}(m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmpynfqvfyr.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpynfqvfyr.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpynfqvfyr.jl:29 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpynfqvfyr.jl:28\ntest set: Error During Test at /tmp/tmpynfqvfyr.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpynfqvfyr.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpynfqvfyr.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmp3kkzi5fc.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\ntest set: Test Failed at /tmp/tmp3kkzi5fc.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\ntest set: Test Failed at /tmp/tmp3kkzi5fc.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3kkzi5fc.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = Array{Int64}(m+1, n+1, o+1)\n\tfor i = 0:m\n\t\tfor j = 0:n\n\t\t\tfor k = 0:o\n\t\t\t\tif i == 0 || j == 0 || k == 0\n\t\t\t\t\tL[i+1, j+1, k+1] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i+1, j+1, k+1] = L[i, j, k] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i+1, j+1, k+1] = max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmpqvgzaseh.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpqvgzaseh.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqvgzaseh.jl:29 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqvgzaseh.jl:28\ntest set: Error During Test at /tmp/tmpqvgzaseh.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpqvgzaseh.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqvgzaseh.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmps1lwo3tu.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\ntest set: Test Failed at /tmp/tmps1lwo3tu.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps1lwo3tu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmpgwcau7o8.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\ntest set: Test Failed at /tmp/tmpgwcau7o8.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\ntest set: Test Failed at /tmp/tmpgwcau7o8.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgwcau7o8.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpw3i0y0lj.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpw3i0y0lj.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i=1:m\n\t\tfor j=1:n\n\t\t\tfor k=1:o\n\t\t\t\tif i==1 || j==1 || k==1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i]==Y[j] && Y[j]==Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmp_cobznpk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\ntest set: Test Failed at /tmp/tmp_cobznpk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\ntest set: Test Failed at /tmp/tmp_cobznpk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_cobznpk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmps1lwo3tu.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\ntest set: Test Failed at /tmp/tmps1lwo3tu.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps1lwo3tu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmps1lwo3tu.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\ntest set: Test Failed at /tmp/tmps1lwo3tu.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps1lwo3tu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Error During Test at /tmp/tmp3_sszpuu.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp3_sszpuu.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_sszpuu.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_sszpuu.jl:28\ntest set: Error During Test at /tmp/tmp3_sszpuu.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp3_sszpuu.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_sszpuu.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_sszpuu.jl:28\ntest set: Error During Test at /tmp/tmp3_sszpuu.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp3_sszpuu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif X[i] == Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122464,
      "stdout": "test set: Error During Test at /tmp/tmpcdij0qr4.jl:27\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7\u00d78\u00d76 Array{Int64, 3} at index [0, 1, 1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpcdij0qr4.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcdij0qr4.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcdij0qr4.jl:26\ntest set: Error During Test at /tmp/tmpcdij0qr4.jl:28\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 6\u00d79\u00d714 Array{Int64, 3} at index [0, 0, 0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpcdij0qr4.jl:13\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcdij0qr4.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpcdij0qr4.jl:26\ntest set: Error During Test at /tmp/tmpcdij0qr4.jl:29\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 8\u00d77\u00d76 Array{Int64, 3} at index [0, 1, 1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpcdij0qr4.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpcdij0qr4.jl:29 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/sha",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpcdij0qr4.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tlcs = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tlcs[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tlcs[i, j, k] = lcs[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tlcs[i, j, k] = max(lcs[i-1, j, k], lcs[i, j-1, k], lcs[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn lcs[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122469,
      "stdout": "test set: Test Failed at /tmp/tmptprbi1tr.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptprbi1tr.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptprbi1tr.jl:28\ntest set: Test Failed at /tmp/tmptprbi1tr.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptprbi1tr.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptprbi1tr.jl:28\ntest set: Test Failed at /tmp/tmptprbi1tr.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptprbi1tr.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptprbi1tr.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptprbi1tr.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmpgwcau7o8.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\ntest set: Test Failed at /tmp/tmpgwcau7o8.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\ntest set: Test Failed at /tmp/tmpgwcau7o8.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgwcau7o8.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1,n+1,o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122461,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmpp_xevvef.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_xevvef.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_xevvef.jl:28\ntest set: Test Failed at /tmp/tmpp_xevvef.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_xevvef.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_xevvef.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp_xevvef.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmp3kkzi5fc.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\ntest set: Test Failed at /tmp/tmp3kkzi5fc.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\ntest set: Test Failed at /tmp/tmp3kkzi5fc.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3kkzi5fc.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3kkzi5fc.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3kkzi5fc.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmps1lwo3tu.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\ntest set: Test Failed at /tmp/tmps1lwo3tu.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps1lwo3tu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = Array{Int64}(m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmp1fseem8c.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp1fseem8c.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1fseem8c.jl:29 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1fseem8c.jl:28\ntest set: Error During Test at /tmp/tmp1fseem8c.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp1fseem8c.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp1fseem8c.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmps1lwo3tu.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\ntest set: Test Failed at /tmp/tmps1lwo3tu.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmps1lwo3tu.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmps1lwo3tu.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmps1lwo3tu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, (m+1, n+1, o+1))\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpw3i0y0lj.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpw3i0y0lj.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122469,
      "stdout": "test set: Test Failed at /tmp/tmpik8f6k_z.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpik8f6k_z.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpik8f6k_z.jl:28\ntest set: Test Failed at /tmp/tmpik8f6k_z.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpik8f6k_z.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpik8f6k_z.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpik8f6k_z.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m\n\t\tfor j in 1:n\n\t\t\tfor k in 1:o\n\t\t\t\tif X[i] == Y[j] == Z[k]\n\t\t\t\t\tL[i+1, j+1, k+1] = L[i, j, k] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i+1, j+1, k+1] = max(L[i+1, j, k+1], L[i, j+1, k+1], L[i, j, k+1], L[i+1, j+1, k], L[i+1, j, k], L[i, j+1, k])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n    m = length(X)\n    n = length(Y)\n    o = length(Z)\n    L = zeros(Int64, m+1, n+1, o+1)\n    for i in 1:m+1\n        for j in 1:n+1\n            for k in 1:o+1\n                if i == 1 || j == 1 || k == 1\n                    L[i, j, k] = 0\n                elseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n                    L[i, j, k] = L[i-1, j-1, k-1] + 1\n                else\n                    L[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n                end\n            end\n        end\n    end\n    return L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122468,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122464,
      "stdout": "test set: Error During Test at /tmp/tmpjg370jag.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpjg370jag.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjg370jag.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjg370jag.jl:28\ntest set: Error During Test at /tmp/tmpjg370jag.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpjg370jag.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpjg370jag.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpjg370jag.jl:28\ntest set: Error During Test at /tmp/tmpjg370jag.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpjg370jag.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m\n\t\tfor j in 1:n\n\t\t\tfor k in 1:o\n\t\t\t\tif X[i] == Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmpn640uf50.jl:27\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7\u00d78\u00d76 Array{Int64, 3} at index [0, 1, 1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpn640uf50.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn640uf50.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn640uf50.jl:26\ntest set: Error During Test at /tmp/tmpn640uf50.jl:28\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 6\u00d79\u00d714 Array{Int64, 3} at index [0, 0, 0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpn640uf50.jl:13\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn640uf50.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn640uf50.jl:26\ntest set: Error During Test at /tmp/tmpn640uf50.jl:29\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 8\u00d77\u00d76 Array{Int64, 3} at index [0, 1, 1]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:862 [inlined]\n   [2] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpn640uf50.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn640uf50.jl:29 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/sha",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpn640uf50.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpqhug8yqd.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpqhug8yqd.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqhug8yqd.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqhug8yqd.jl:28\ntest set: Error During Test at /tmp/tmpqhug8yqd.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpqhug8yqd.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpqhug8yqd.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpqhug8yqd.jl:28\ntest set: Error During Test at /tmp/tmpqhug8yqd.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqhug8yqd.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i=1:m\n\t\tfor j=1:n\n\t\t\tfor k=1:o\n\t\t\t\tif i==1 || j==1 || k==1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i]==Y[j] && Y[j]==Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmp_cobznpk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\ntest set: Test Failed at /tmp/tmp_cobznpk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\ntest set: Test Failed at /tmp/tmp_cobznpk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_cobznpk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 0:m\n\t\tfor j = 0:n\n\t\t\tfor k = 0:o\n\t\t\t\tif i == 0 || j == 0 || k == 0\n\t\t\t\t\tL[i+1, j+1, k+1] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i+1, j+1, k+1] = L[i, j, k] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i+1, j+1, k+1] = max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\t\n\tL = zeros(Int64, m+1, n+1, o+1)\n\t\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122469,
      "stdout": "test set: Test Failed at /tmp/tmp2qwspbil.jl:32\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2qwspbil.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2qwspbil.jl:31\ntest set: Test Failed at /tmp/tmp2qwspbil.jl:33\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2qwspbil.jl:33 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2qwspbil.jl:31\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2qwspbil.jl:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Error During Test at /tmp/tmp3_sszpuu.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp3_sszpuu.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_sszpuu.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_sszpuu.jl:28\ntest set: Error During Test at /tmp/tmp3_sszpuu.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmp3_sszpuu.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmp3_sszpuu.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmp3_sszpuu.jl:28\ntest set: Error During Test at /tmp/tmp3_sszpuu.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp3_sszpuu.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 0:m\n\t\tfor j = 0:n\n\t\t\tfor k = 0:o\n\t\t\t\tif i == 0 || j == 0 || k == 0\n\t\t\t\t\tL[i+1, j+1, k+1] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i+1, j+1, k+1] = L[i, j, k] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i+1, j+1, k+1] = max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = Array{Int64}(m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmpnhh_t9un.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnhh_t9un.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpnhh_t9un.jl:29 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnhh_t9un.jl:28\ntest set: Error During Test at /tmp/tmpnhh_t9un.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnhh_t9un.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnhh_t9un.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510001,
      "stdout": "test set: Error During Test at /tmp/tmpj8jt1h51.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpj8jt1h51.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpj8jt1h51.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpj8jt1h51.jl:28\ntest set: Error During Test at /tmp/tmpj8jt1h51.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpj8jt1h51.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpj8jt1h51.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpj8jt1h51.jl:28\ntest set: Error During Test at /tmp/tmpj8jt1h51.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj8jt1h51.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i=1:m\n\t\tfor j=1:n\n\t\t\tfor k=1:o\n\t\t\t\tif i==1 || j==1 || k==1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i]==Y[j] && Y[j]==Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmp_cobznpk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\ntest set: Test Failed at /tmp/tmp_cobznpk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\ntest set: Test Failed at /tmp/tmp_cobznpk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_cobznpk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_cobznpk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_cobznpk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpev983qmk.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\ntest set: Test Failed at /tmp/tmpev983qmk.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpev983qmk.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpev983qmk.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpev983qmk.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpw3i0y0lj.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpw3i0y0lj.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmpp_xevvef.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_xevvef.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_xevvef.jl:28\ntest set: Test Failed at /tmp/tmpp_xevvef.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp_xevvef.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp_xevvef.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp_xevvef.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m\n\t\tfor j in 1:n\n\t\t\tfor k in 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122464,
      "stdout": "test set: Test Failed at /tmp/tmpdp0dbdvp.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdp0dbdvp.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdp0dbdvp.jl:28\ntest set: Test Failed at /tmp/tmpdp0dbdvp.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdp0dbdvp.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdp0dbdvp.jl:28\ntest set: Test Failed at /tmp/tmpdp0dbdvp.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdp0dbdvp.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdp0dbdvp.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdp0dbdvp.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 0:m\n\t\tfor j = 0:n\n\t\t\tfor k = 0:o\n\t\t\t\tif i == 0 || j == 0 || k == 0\n\t\t\t\t\tL[i+1, j+1, k+1] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i+1, j+1, k+1] = L[i, j, k] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i+1, j+1, k+1] = max(L[i, j+1, k+1], L[i+1, j, k+1], L[i+1, j+1, k])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m+1\n\t\tfor j = 1:n+1\n\t\t\tfor k = 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpw3i0y0lj.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpw3i0y0lj.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpw3i0y0lj.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpw3i0y0lj.jl:28\ntest set: Error During Test at /tmp/tmpw3i0y0lj.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpw3i0y0lj.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i = 1:m\n\t\tfor j = 1:n\n\t\t\tfor k = 1:o\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665510000,
      "stdout": "test set: Test Failed at /tmp/tmpgwcau7o8.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\ntest set: Test Failed at /tmp/tmpgwcau7o8.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\ntest set: Test Failed at /tmp/tmpgwcau7o8.jl:31\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n   Evaluated: 2 == 3\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgwcau7o8.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgwcau7o8.jl:28\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgwcau7o8.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122463,
      "stdout": "test set: Test Failed at /tmp/tmpxwt7lez1.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\ntest set: Test Failed at /tmp/tmpxwt7lez1.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxwt7lez1.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxwt7lez1.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxwt7lez1.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509997,
      "stdout": "test set: Test Failed at /tmp/tmpdauky_4e.jl:29\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n   Evaluated: 1 == 2\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\ntest set: Test Failed at /tmp/tmpdauky_4e.jl:30\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n   Evaluated: 4 == 5\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdauky_4e.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdauky_4e.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdauky_4e.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i,j,k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i,j,k] = L[i-1,j-1,k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i,j,k] = max(L[i-1,j,k], L[i,j-1,k], L[i,j,k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m,n,o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122466,
      "stdout": "test set: Error During Test at /tmp/tmpnpb6mzws.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnpb6mzws.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnpb6mzws.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnpb6mzws.jl:28\ntest set: Error During Test at /tmp/tmpnpb6mzws.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnpb6mzws.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnpb6mzws.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnpb6mzws.jl:28\ntest set: Error During Test at /tmp/tmpnpb6mzws.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnpb6mzws.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && Y[j-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = Array{Int64}(m+1,n+1,o+1)\n\tfor i = 0:m\n\t\tfor j = 0:n\n\t\t\tfor k = 0:o\n\t\t\t\tif i == 0 || j == 0 || k == 0\n\t\t\t\t\tL[i+1,j+1,k+1] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i+1,j+1,k+1] = L[i,j,k] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i+1,j+1,k+1] = max(L[i,j+1,k+1], L[i+1,j,k+1], L[i+1,j+1,k])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1,n+1,o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1666122470,
      "stdout": "test set: Error During Test at /tmp/tmpe3ar9pzd.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpe3ar9pzd.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpe3ar9pzd.jl:29 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpe3ar9pzd.jl:28\ntest set: Error During Test at /tmp/tmpe3ar9pzd.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  MethodError: no method matching (Array{Int64})(::Int64, ::Int64, ::Int64)\n  Closest candidates are:\n    (Array{T})(!Matched::LinearAlgebra.UniformScaling, ::Integer, ::Integer) where T at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/uniformscaling.jl:495\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:472\n    (Array{T})(!Matched::UndefInitializer, ::Int64, ::Int64, !Matched::Int64) where T at /home/a.guha/.conda/envs/polyglot/share/julia/base/boot.jl:473\n    ...\n  Stacktrace:\n   [1] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpe3ar9pzd.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.c",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpe3ar9pzd.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i-1] == Y[j-1] && X[i-1] == Z[k-1]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m+1, n+1, o+1]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509996,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && X[i] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpbnsp1ygw.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpbnsp1ygw.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpbnsp1ygw.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpbnsp1ygw.jl:28\ntest set: Error During Test at /tmp/tmpbnsp1ygw.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbnsp1ygw.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/\n\t\"\"\"\nfunction lcs_of_three(X::String, Y::String, Z::String)::Int64 \n\tm = length(X)\n\tn = length(Y)\n\to = length(Z)\n\tL = zeros(Int64, m+1, n+1, o+1)\n\tfor i in 1:m+1\n\t\tfor j in 1:n+1\n\t\t\tfor k in 1:o+1\n\t\t\t\tif i == 1 || j == 1 || k == 1\n\t\t\t\t\tL[i, j, k] = 0\n\t\t\t\telseif X[i] == Y[j] && Y[j] == Z[k]\n\t\t\t\t\tL[i, j, k] = L[i-1, j-1, k-1] + 1\n\t\t\t\telse\n\t\t\t\t\tL[i, j, k] = max(L[i-1, j, k], L[i, j-1, k], L[i, j, k-1])\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn L[m, n, o]\nend\nusing Test\n\n@testset begin\n\ncandidate = lcs_of_three;\n\t@test(candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2)\n\t@test(candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5)\n\t@test(candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3)\nend\n",
      "timestamp": 1665509998,
      "stdout": "test set: Error During Test at /tmp/tmpnyk18485.jl:29\n  Test threw exception\n  Expression: candidate(\"AGGT12\", \"12TXAYB\", \"12XBA\") == 2\n  BoundsError: attempt to access 7-codeunit String at index [8]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:29 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:30\n  Test threw exception\n  Expression: candidate(\"Reels\", \"Reelsfor\", \"ReelsforReels\") == 5\n  BoundsError: attempt to access 13-codeunit String at index [14]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [inlined]\n   [4] lcs_of_three(X::String, Y::String, Z::String)\n     @ Main /tmp/tmpnyk18485.jl:14\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpnyk18485.jl:30 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpnyk18485.jl:28\ntest set: Error During Test at /tmp/tmpnyk18485.jl:31\n  Test threw exception\n  Expression: candidate(\"abcd1e2\", \"bc12ea\", \"bd1ea\") == 3\n  BoundsError: attempt to access 6-codeunit String at index [7]\n  Stacktrace:\n   [1] checkbounds\n     @ ./strings/basic.jl:216 [inlined]\n   [2] codeunit\n     @ ./strings/string.jl:102 [inlined]\n   [3] getindex\n     @ ./strings/string.jl:223 [",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpnyk18485.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
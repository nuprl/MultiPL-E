{
  "name": "mbpp_746_sector_area",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0 * r^2 * a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0*r^2*a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*(\u03c0*r^2)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0 * r^2 * a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0*r^2*a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\tend\n\treturn (\u03c0 * r^2 * a)/360\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (pi*r^2*a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0*r^2*a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0/360)*r^2*a\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0 * r^2 * a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\tend\n\treturn (a/360)*pi*r^2\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122426,
      "stdout": "test set: Test Failed at /tmp/tmph1x4s7gx.jl:16\n  Expression: candidate(4, 45) == 6.283185307179586\n   Evaluated: 2.0 == 6.283185307179586\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1x4s7gx.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1x4s7gx.jl:15\ntest set: Test Failed at /tmp/tmph1x4s7gx.jl:17\n  Expression: candidate(9, 45) == 31.808625617596654\n   Evaluated: 10.125 == 31.808625617596654\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1x4s7gx.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1x4s7gx.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmph1x4s7gx.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a) / 360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0*r^2*a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122426,
      "stdout": "test set: Test Failed at /tmp/tmp1fq0eftw.jl:16\n  Expression: candidate(4, 45) == 6.283185307179586\n   Evaluated: 2.0 == 6.283185307179586\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fq0eftw.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fq0eftw.jl:15\ntest set: Test Failed at /tmp/tmp1fq0eftw.jl:17\n  Expression: candidate(9, 45) == 31.808625617596654\n   Evaluated: 10.125 == 31.808625617596654\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fq0eftw.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fq0eftw.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1fq0eftw.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*(pi*r^2)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*(r^2)*pi\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122426,
      "stdout": "test set: Test Failed at /tmp/tmph1x4s7gx.jl:16\n  Expression: candidate(4, 45) == 6.283185307179586\n   Evaluated: 2.0 == 6.283185307179586\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1x4s7gx.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1x4s7gx.jl:15\ntest set: Test Failed at /tmp/tmph1x4s7gx.jl:17\n  Expression: candidate(9, 45) == 31.808625617596654\n   Evaluated: 10.125 == 31.808625617596654\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmph1x4s7gx.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmph1x4s7gx.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmph1x4s7gx.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0/360)*a*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (r^2*a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122426,
      "stdout": "test set: Test Failed at /tmp/tmp9e232soc.jl:16\n  Expression: candidate(4, 45) == 6.283185307179586\n   Evaluated: 2.0 == 6.283185307179586\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9e232soc.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9e232soc.jl:15\ntest set: Test Failed at /tmp/tmp9e232soc.jl:17\n  Expression: candidate(9, 45) == 31.808625617596654\n   Evaluated: 10.125 == 31.808625617596654\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9e232soc.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9e232soc.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9e232soc.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*\u03c0*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a) / 360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*(pi*r^2)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0/360)*a*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r * r * a) / 360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0 * r^2 * a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (r^2)*(a/360)*pi\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0*r^2*a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360) * pi * r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a) / 360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*\u03c0*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*(pi*r^2)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0 * r^2 * a) / 360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0 * r^2 * a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0/360)*(a*r^2)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122426,
      "stdout": "test set: Test Failed at /tmp/tmpu85d52v1.jl:17\n  Expression: candidate(9, 45) == 31.808625617596654\n   Evaluated: 31.808625617596658 == 31.808625617596654\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu85d52v1.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu85d52v1.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpu85d52v1.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (\u03c0 * r^2 * a)/360\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (a/360)*pi*r^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n\tif a > 360\n\t\treturn nothing\n\telse\n\t\treturn (\u03c0*r^2*a)/360\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1665509862,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.\n\t\"\"\"\nfunction sector_area(r::Int64, a::Int64)::Union{Float64, Nothing} \n    if a > 360\n        return nothing\n    else\n        return (a/360)*pi*r^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sector_area;\n\t@test(candidate(4, 45) == 6.283185307179586)\n\t@test(candidate(9, 45) == 31.808625617596654)\n\t@test(candidate(9, 361) == nothing)\nend\n",
      "timestamp": 1666122425,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to find the first non-repeated character in a given string.\n\t\"\"\"\nfunction first_non_repeating_character(str1::String)::Union{String, Nothing} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = first_non_repeating_character;\n\t@test(candidate(\"abcabc\") == nothing)\n\t@test(candidate(\"abc\") == \"a\")\n\t@test(candidate(\"ababc\") == \"c\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tFunction to find the first non-repeating character in a given string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tThis function takes a string as input and returns the first non-repeating character in a given string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tFunction to find the first non-repeating character in a given string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tFunction to find the first non-repeating character in a given string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\t\tFunction to find the first non-repeating character in a given string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tReturns the first non-repeating character in a string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x->x==str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tThis function takes a string and returns the first non-repeating character in it.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif length(occursin(str1[i], str1)) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tThis function takes a string and returns the first non-repeating character in it.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\t\tReturns the first non-repeating character in a string.\n\t\tIf there is no non-repeating character, returns nothing.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\t\tReturns the first non-repeating character in a given string.\n\t\tIf no non-repeating character is found, returns nothing.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tFunction to find the first non-repeating character in a given string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tThis function takes a string and returns the first non-repeating character in it.\n\t\"\"\"\n\t\n\t# Initialize a dictionary\n\tdict = Dict{Char, Int}()\n\t\n\t# Iterate over the string\n\tfor i in str1\n\t\tif haskey(dict, i)\n\t\t\tdict[i] += 1\n\t\telse\n\t\t\tdict[i] = 1\n\t\tend\n\tend\n\t\n\t# Iterate over the string again\n\tfor i in str1\n\t\tif dict[i] == 1\n\t\t\treturn i\n\t\tend\n\tend\n\t\n\t# Return nothing if all are repeating\n\treturn nothing\nend",
    "\t\"\"\"\n\tFunction to find the first non-repeating character in a given string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\tstr1 = lowercase(str1)\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tReturns the first non-repeating character in a string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t# your code goes here\n\tfor i in 1:length(str1)\n\t\tif count(x->x==str1[i],str1)==1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tFunction to find the first non-repeating character in a given string.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x->x==str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\t\"\"\"\n\tReturns the first non-repeating character in a string.\n\tIf there is no non-repeating character, returns nothing.\n\t\"\"\"\n\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend",
    "\tfor i in 1:length(str1)\n\t\tif count(x -> x == str1[i], str1) == 1\n\t\t\treturn str1[i]\n\t\tend\n\tend\n\treturn nothing\nend"
  ]
}
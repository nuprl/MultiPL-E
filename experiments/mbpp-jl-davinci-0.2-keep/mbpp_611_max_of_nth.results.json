{
  "name": "mbpp_611_max_of_nth",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_611_max_of_nth.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpb99qnzom.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\ntest set: Test Failed at /tmp/tmpb99qnzom.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\ntest set: Test Failed at /tmp/tmpb99qnzom.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb99qnzom.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp0t5z8c_e.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0t5z8c_e.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max\n\t\t\tmax = i[N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpn49w32h9.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\ntest set: Test Failed at /tmp/tmpn49w32h9.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\ntest set: Test Failed at /tmp/tmpn49w32h9.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpn49w32h9.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpzvzcnsi3.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvzcnsi3.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvzcnsi3.jl:20\ntest set: Test Failed at /tmp/tmpzvzcnsi3.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvzcnsi3.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvzcnsi3.jl:20\ntest set: Test Failed at /tmp/tmpzvzcnsi3.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvzcnsi3.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvzcnsi3.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvzcnsi3.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpylt09hyt.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpylt09hyt.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpylt09hyt.jl:20\ntest set: Test Failed at /tmp/tmpylt09hyt.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpylt09hyt.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpylt09hyt.jl:20\ntest set: Test Failed at /tmp/tmpylt09hyt.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpylt09hyt.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpylt09hyt.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpylt09hyt.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp9cuvkqs6.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cuvkqs6.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cuvkqs6.jl:20\ntest set: Test Failed at /tmp/tmp9cuvkqs6.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cuvkqs6.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cuvkqs6.jl:20\ntest set: Test Failed at /tmp/tmp9cuvkqs6.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9cuvkqs6.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9cuvkqs6.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9cuvkqs6.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpd_acjqaw.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\ntest set: Test Failed at /tmp/tmpd_acjqaw.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\ntest set: Test Failed at /tmp/tmpd_acjqaw.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpd_acjqaw.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp8gaky04m.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\ntest set: Test Failed at /tmp/tmp8gaky04m.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\ntest set: Test Failed at /tmp/tmp8gaky04m.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8gaky04m.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp6v3i0mog.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v3i0mog.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v3i0mog.jl:17\ntest set: Test Failed at /tmp/tmp6v3i0mog.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v3i0mog.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v3i0mog.jl:17\ntest set: Test Failed at /tmp/tmp6v3i0mog.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v3i0mog.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v3i0mog.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6v3i0mog.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpgcuho34f.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgcuho34f.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgcuho34f.jl:20\ntest set: Test Failed at /tmp/tmpgcuho34f.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgcuho34f.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgcuho34f.jl:20\ntest set: Test Failed at /tmp/tmpgcuho34f.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgcuho34f.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgcuho34f.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgcuho34f.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5vjby61r.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\ntest set: Test Failed at /tmp/tmp5vjby61r.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\ntest set: Test Failed at /tmp/tmp5vjby61r.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5vjby61r.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpe89jprh6.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe89jprh6.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe89jprh6.jl:20\ntest set: Test Failed at /tmp/tmpe89jprh6.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe89jprh6.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe89jprh6.jl:20\ntest set: Test Failed at /tmp/tmpe89jprh6.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe89jprh6.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe89jprh6.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe89jprh6.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tReturns the max of the n'th column of a matrix represented as a list of lists.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpjey0y7xp.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjey0y7xp.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjey0y7xp.jl:20\ntest set: Test Failed at /tmp/tmpjey0y7xp.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjey0y7xp.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjey0y7xp.jl:20\ntest set: Test Failed at /tmp/tmpjey0y7xp.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjey0y7xp.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjey0y7xp.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjey0y7xp.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = 0\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp66z77gka.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp66z77gka.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp66z77gka.jl:17\ntest set: Test Failed at /tmp/tmp66z77gka.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp66z77gka.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp66z77gka.jl:17\ntest set: Test Failed at /tmp/tmp66z77gka.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp66z77gka.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp66z77gka.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp66z77gka.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpiz4b8khl.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiz4b8khl.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiz4b8khl.jl:20\ntest set: Test Failed at /tmp/tmpiz4b8khl.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiz4b8khl.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiz4b8khl.jl:20\ntest set: Test Failed at /tmp/tmpiz4b8khl.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiz4b8khl.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiz4b8khl.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiz4b8khl.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpid05vine.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpid05vine.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpid05vine.jl:20\ntest set: Test Failed at /tmp/tmpid05vine.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpid05vine.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpid05vine.jl:20\ntest set: Test Failed at /tmp/tmpid05vine.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpid05vine.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpid05vine.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpid05vine.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tThis function returns the max of the n'th column of a matrix represented as a list of lists.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpsbi7kn0b.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbi7kn0b.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbi7kn0b.jl:20\ntest set: Test Failed at /tmp/tmpsbi7kn0b.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbi7kn0b.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbi7kn0b.jl:20\ntest set: Test Failed at /tmp/tmpsbi7kn0b.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsbi7kn0b.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsbi7kn0b.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsbi7kn0b.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_of_nth = 0\n\tfor i in test_list\n\t\tif i[N] > max_of_nth\n\t\t\tmax_of_nth = i[N]\n\t\tend\n\tend\n\treturn max_of_nth\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmppoadejd7.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppoadejd7.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppoadejd7.jl:17\ntest set: Test Failed at /tmp/tmppoadejd7.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppoadejd7.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppoadejd7.jl:17\ntest set: Test Failed at /tmp/tmppoadejd7.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmppoadejd7.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmppoadejd7.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmppoadejd7.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp2mf6yx0z.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2mf6yx0z.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2mf6yx0z.jl:20\ntest set: Test Failed at /tmp/tmp2mf6yx0z.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2mf6yx0z.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2mf6yx0z.jl:20\ntest set: Test Failed at /tmp/tmp2mf6yx0z.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2mf6yx0z.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2mf6yx0z.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2mf6yx0z.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpu83q_7on.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu83q_7on.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu83q_7on.jl:20\ntest set: Test Failed at /tmp/tmpu83q_7on.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu83q_7on.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu83q_7on.jl:20\ntest set: Test Failed at /tmp/tmpu83q_7on.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu83q_7on.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu83q_7on.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpu83q_7on.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpd_acjqaw.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\ntest set: Test Failed at /tmp/tmpd_acjqaw.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\ntest set: Test Failed at /tmp/tmpd_acjqaw.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpd_acjqaw.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_of_nth = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_of_nth\n\t\t\tmax_of_nth = test_list[i][N]\n\t\tend\n\tend\n\treturn max_of_nth\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmptflg98ob.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptflg98ob.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptflg98ob.jl:17\ntest set: Test Failed at /tmp/tmptflg98ob.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptflg98ob.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptflg98ob.jl:17\ntest set: Test Failed at /tmp/tmptflg98ob.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptflg98ob.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptflg98ob.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptflg98ob.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\tmax_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp5qonqrhc.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qonqrhc.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qonqrhc.jl:20\ntest set: Test Failed at /tmp/tmp5qonqrhc.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qonqrhc.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qonqrhc.jl:20\ntest set: Test Failed at /tmp/tmp5qonqrhc.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5qonqrhc.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5qonqrhc.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5qonqrhc.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tReturns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpcopq2xhe.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcopq2xhe.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcopq2xhe.jl:20\ntest set: Test Failed at /tmp/tmpcopq2xhe.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcopq2xhe.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcopq2xhe.jl:20\ntest set: Test Failed at /tmp/tmpcopq2xhe.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcopq2xhe.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcopq2xhe.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpcopq2xhe.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5vjby61r.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\ntest set: Test Failed at /tmp/tmp5vjby61r.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\ntest set: Test Failed at /tmp/tmp5vjby61r.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5vjby61r.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_val\n\t\t\tmax_val = i[N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpqlgcygj6.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlgcygj6.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlgcygj6.jl:20\ntest set: Test Failed at /tmp/tmpqlgcygj6.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlgcygj6.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlgcygj6.jl:20\ntest set: Test Failed at /tmp/tmpqlgcygj6.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlgcygj6.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlgcygj6.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqlgcygj6.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpa_w7l96k.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_w7l96k.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_w7l96k.jl:20\ntest set: Test Failed at /tmp/tmpa_w7l96k.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_w7l96k.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_w7l96k.jl:20\ntest set: Test Failed at /tmp/tmpa_w7l96k.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_w7l96k.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_w7l96k.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpa_w7l96k.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpzvzcnsi3.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvzcnsi3.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvzcnsi3.jl:20\ntest set: Test Failed at /tmp/tmpzvzcnsi3.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvzcnsi3.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvzcnsi3.jl:20\ntest set: Test Failed at /tmp/tmpzvzcnsi3.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzvzcnsi3.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzvzcnsi3.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzvzcnsi3.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpd_acjqaw.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\ntest set: Test Failed at /tmp/tmpd_acjqaw.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\ntest set: Test Failed at /tmp/tmpd_acjqaw.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd_acjqaw.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd_acjqaw.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpd_acjqaw.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpoliimwp4.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpoliimwp4.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpoliimwp4.jl:20\ntest set: Test Failed at /tmp/tmpoliimwp4.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpoliimwp4.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpoliimwp4.jl:20\ntest set: Test Failed at /tmp/tmpoliimwp4.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpoliimwp4.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpoliimwp4.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpoliimwp4.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpylt09hyt.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpylt09hyt.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpylt09hyt.jl:20\ntest set: Test Failed at /tmp/tmpylt09hyt.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpylt09hyt.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpylt09hyt.jl:20\ntest set: Test Failed at /tmp/tmpylt09hyt.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpylt09hyt.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpylt09hyt.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpylt09hyt.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp8gaky04m.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\ntest set: Test Failed at /tmp/tmp8gaky04m.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\ntest set: Test Failed at /tmp/tmp8gaky04m.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8gaky04m.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmprlgy4540.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprlgy4540.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprlgy4540.jl:20\ntest set: Test Failed at /tmp/tmprlgy4540.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprlgy4540.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprlgy4540.jl:20\ntest set: Test Failed at /tmp/tmprlgy4540.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprlgy4540.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprlgy4540.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprlgy4540.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp0t5z8c_e.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0t5z8c_e.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tReturns the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpyner0vtu.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpyner0vtu.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpyner0vtu.jl:20\ntest set: Test Failed at /tmp/tmpyner0vtu.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpyner0vtu.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpyner0vtu.jl:20\ntest set: Test Failed at /tmp/tmpyner0vtu.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpyner0vtu.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpyner0vtu.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpyner0vtu.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpo_g5slhs.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_g5slhs.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_g5slhs.jl:20\ntest set: Test Failed at /tmp/tmpo_g5slhs.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_g5slhs.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_g5slhs.jl:20\ntest set: Test Failed at /tmp/tmpo_g5slhs.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpo_g5slhs.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpo_g5slhs.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpo_g5slhs.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tTakes a list of lists and an integer N. Returns the maximum of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp28p42n7l.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp28p42n7l.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp28p42n7l.jl:20\ntest set: Test Failed at /tmp/tmp28p42n7l.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp28p42n7l.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp28p42n7l.jl:20\ntest set: Test Failed at /tmp/tmp28p42n7l.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp28p42n7l.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp28p42n7l.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp28p42n7l.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a list of lists and an integer N and returns the maximum of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp_io80w1c.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_io80w1c.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_io80w1c.jl:20\ntest set: Test Failed at /tmp/tmp_io80w1c.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_io80w1c.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_io80w1c.jl:20\ntest set: Test Failed at /tmp/tmp_io80w1c.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_io80w1c.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_io80w1c.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_io80w1c.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_of_nth = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_of_nth\n\t\t\tmax_of_nth = test_list[i][N]\n\t\tend\n\tend\n\treturn max_of_nth\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmptflg98ob.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptflg98ob.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptflg98ob.jl:17\ntest set: Test Failed at /tmp/tmptflg98ob.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptflg98ob.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptflg98ob.jl:17\ntest set: Test Failed at /tmp/tmptflg98ob.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptflg98ob.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptflg98ob.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptflg98ob.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists, returns the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpn90o2hew.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn90o2hew.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn90o2hew.jl:20\ntest set: Test Failed at /tmp/tmpn90o2hew.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn90o2hew.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn90o2hew.jl:20\ntest set: Test Failed at /tmp/tmpn90o2hew.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn90o2hew.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn90o2hew.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpn90o2hew.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a list of lists and an integer N and returns the maximum of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp_io80w1c.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_io80w1c.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_io80w1c.jl:20\ntest set: Test Failed at /tmp/tmp_io80w1c.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_io80w1c.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_io80w1c.jl:20\ntest set: Test Failed at /tmp/tmp_io80w1c.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_io80w1c.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_io80w1c.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_io80w1c.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp0t5z8c_e.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0t5z8c_e.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max\n\t\t\tmax = i[N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpn49w32h9.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\ntest set: Test Failed at /tmp/tmpn49w32h9.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\ntest set: Test Failed at /tmp/tmpn49w32h9.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpn49w32h9.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpqs_tljaf.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqs_tljaf.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmphl6luwve.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphl6luwve.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphl6luwve.jl:17\ntest set: Test Failed at /tmp/tmphl6luwve.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphl6luwve.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphl6luwve.jl:17\ntest set: Test Failed at /tmp/tmphl6luwve.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphl6luwve.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphl6luwve.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphl6luwve.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpb99qnzom.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\ntest set: Test Failed at /tmp/tmpb99qnzom.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\ntest set: Test Failed at /tmp/tmpb99qnzom.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb99qnzom.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpqs_tljaf.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqs_tljaf.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a list of lists and an integer N and returns the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpop1bklid.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpop1bklid.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpop1bklid.jl:20\ntest set: Test Failed at /tmp/tmpop1bklid.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpop1bklid.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpop1bklid.jl:20\ntest set: Test Failed at /tmp/tmpop1bklid.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpop1bklid.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpop1bklid.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpop1bklid.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n    max_val = test_list[1][N]\n    for i in 1:length(test_list)\n        if test_list[i][N] > max_val\n            max_val = test_list[i][N]\n        end\n    end\n    return max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp9rq3lc06.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rq3lc06.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rq3lc06.jl:17\ntest set: Test Failed at /tmp/tmp9rq3lc06.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rq3lc06.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rq3lc06.jl:17\ntest set: Test Failed at /tmp/tmp9rq3lc06.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rq3lc06.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rq3lc06.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9rq3lc06.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and a column number, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp1rd9sap9.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1rd9sap9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1rd9sap9.jl:20\ntest set: Test Failed at /tmp/tmp1rd9sap9.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1rd9sap9.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1rd9sap9.jl:20\ntest set: Test Failed at /tmp/tmp1rd9sap9.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1rd9sap9.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1rd9sap9.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1rd9sap9.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tReturns the max of the N'th column of the matrix.\n\t\"\"\"\n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmphhkelr8h.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphhkelr8h.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphhkelr8h.jl:20\ntest set: Test Failed at /tmp/tmphhkelr8h.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphhkelr8h.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphhkelr8h.jl:20\ntest set: Test Failed at /tmp/tmphhkelr8h.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphhkelr8h.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphhkelr8h.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphhkelr8h.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp5kj_2ic8.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\ntest set: Test Failed at /tmp/tmp5kj_2ic8.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\ntest set: Test Failed at /tmp/tmp5kj_2ic8.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5kj_2ic8.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpqs_tljaf.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqs_tljaf.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmprlgy4540.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprlgy4540.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprlgy4540.jl:20\ntest set: Test Failed at /tmp/tmprlgy4540.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprlgy4540.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprlgy4540.jl:20\ntest set: Test Failed at /tmp/tmprlgy4540.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprlgy4540.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprlgy4540.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprlgy4540.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpadrabbgl.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\ntest set: Test Failed at /tmp/tmpadrabbgl.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\ntest set: Test Failed at /tmp/tmpadrabbgl.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpadrabbgl.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpe1nlyu9_.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe1nlyu9_.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe1nlyu9_.jl:20\ntest set: Test Failed at /tmp/tmpe1nlyu9_.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe1nlyu9_.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe1nlyu9_.jl:20\ntest set: Test Failed at /tmp/tmpe1nlyu9_.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe1nlyu9_.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe1nlyu9_.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe1nlyu9_.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmped6zvno8.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmped6zvno8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmped6zvno8.jl:20\ntest set: Test Failed at /tmp/tmped6zvno8.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmped6zvno8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmped6zvno8.jl:20\ntest set: Test Failed at /tmp/tmped6zvno8.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmped6zvno8.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmped6zvno8.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmped6zvno8.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a list of lists and an integer N and returns the maximum value of the N'th column.\n\t\"\"\"\n\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpvw9ldkgh.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvw9ldkgh.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvw9ldkgh.jl:20\ntest set: Test Failed at /tmp/tmpvw9ldkgh.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvw9ldkgh.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvw9ldkgh.jl:20\ntest set: Test Failed at /tmp/tmpvw9ldkgh.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvw9ldkgh.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvw9ldkgh.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvw9ldkgh.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a list of lists and an integer N, return the maximum of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp8yae4m8h.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yae4m8h.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yae4m8h.jl:20\ntest set: Test Failed at /tmp/tmp8yae4m8h.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yae4m8h.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yae4m8h.jl:20\ntest set: Test Failed at /tmp/tmp8yae4m8h.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yae4m8h.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yae4m8h.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8yae4m8h.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpzrei0fb6.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrei0fb6.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrei0fb6.jl:20\ntest set: Test Failed at /tmp/tmpzrei0fb6.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrei0fb6.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrei0fb6.jl:20\ntest set: Test Failed at /tmp/tmpzrei0fb6.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrei0fb6.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrei0fb6.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzrei0fb6.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5gvlqjpk.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\ntest set: Test Failed at /tmp/tmp5gvlqjpk.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5gvlqjpk.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5gvlqjpk.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5gvlqjpk.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp5kj_2ic8.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\ntest set: Test Failed at /tmp/tmp5kj_2ic8.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\ntest set: Test Failed at /tmp/tmp5kj_2ic8.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5kj_2ic8.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max\n\t\t\tmax = i[N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpn49w32h9.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\ntest set: Test Failed at /tmp/tmpn49w32h9.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\ntest set: Test Failed at /tmp/tmpn49w32h9.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpn49w32h9.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpn49w32h9.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpn49w32h9.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp5kj_2ic8.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\ntest set: Test Failed at /tmp/tmp5kj_2ic8.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\ntest set: Test Failed at /tmp/tmp5kj_2ic8.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5kj_2ic8.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpzrei0fb6.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrei0fb6.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrei0fb6.jl:20\ntest set: Test Failed at /tmp/tmpzrei0fb6.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrei0fb6.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrei0fb6.jl:20\ntest set: Test Failed at /tmp/tmpzrei0fb6.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzrei0fb6.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzrei0fb6.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpzrei0fb6.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpfyhujwct.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\ntest set: Test Failed at /tmp/tmpfyhujwct.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\ntest set: Test Failed at /tmp/tmpfyhujwct.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfyhujwct.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp5sgnv43s.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sgnv43s.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sgnv43s.jl:20\ntest set: Test Failed at /tmp/tmp5sgnv43s.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sgnv43s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sgnv43s.jl:20\ntest set: Test Failed at /tmp/tmp5sgnv43s.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sgnv43s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sgnv43s.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5sgnv43s.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp8sw1porp.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8sw1porp.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8sw1porp.jl:20\ntest set: Test Failed at /tmp/tmp8sw1porp.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8sw1porp.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8sw1porp.jl:20\ntest set: Test Failed at /tmp/tmp8sw1porp.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8sw1porp.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8sw1porp.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8sw1porp.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpa_w7l96k.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_w7l96k.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_w7l96k.jl:20\ntest set: Test Failed at /tmp/tmpa_w7l96k.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_w7l96k.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_w7l96k.jl:20\ntest set: Test Failed at /tmp/tmpa_w7l96k.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_w7l96k.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_w7l96k.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpa_w7l96k.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpuu80ixc0.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuu80ixc0.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuu80ixc0.jl:20\ntest set: Test Failed at /tmp/tmpuu80ixc0.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuu80ixc0.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuu80ixc0.jl:20\ntest set: Test Failed at /tmp/tmpuu80ixc0.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuu80ixc0.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuu80ixc0.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuu80ixc0.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpid05vine.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpid05vine.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpid05vine.jl:20\ntest set: Test Failed at /tmp/tmpid05vine.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpid05vine.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpid05vine.jl:20\ntest set: Test Failed at /tmp/tmpid05vine.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpid05vine.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpid05vine.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpid05vine.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp1j9irbk9.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1j9irbk9.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1j9irbk9.jl:20\ntest set: Test Failed at /tmp/tmp1j9irbk9.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1j9irbk9.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1j9irbk9.jl:20\ntest set: Test Failed at /tmp/tmp1j9irbk9.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1j9irbk9.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1j9irbk9.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1j9irbk9.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpbv5p35ft.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbv5p35ft.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbv5p35ft.jl:20\ntest set: Test Failed at /tmp/tmpbv5p35ft.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbv5p35ft.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbv5p35ft.jl:20\ntest set: Test Failed at /tmp/tmpbv5p35ft.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbv5p35ft.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbv5p35ft.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbv5p35ft.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists, returns the max of the n'th column.\n\t\"\"\"\n\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpjswnsde2.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjswnsde2.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjswnsde2.jl:20\ntest set: Test Failed at /tmp/tmpjswnsde2.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjswnsde2.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjswnsde2.jl:20\ntest set: Test Failed at /tmp/tmpjswnsde2.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjswnsde2.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjswnsde2.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjswnsde2.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp0t5z8c_e.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0t5z8c_e.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp8gaky04m.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\ntest set: Test Failed at /tmp/tmp8gaky04m.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\ntest set: Test Failed at /tmp/tmp8gaky04m.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8gaky04m.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp8gaky04m.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\ntest set: Test Failed at /tmp/tmp8gaky04m.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\ntest set: Test Failed at /tmp/tmp8gaky04m.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8gaky04m.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8gaky04m.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8gaky04m.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_val\n\t\t\tmax_val = i[N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp_x1fuzht.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_x1fuzht.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_x1fuzht.jl:17\ntest set: Test Failed at /tmp/tmp_x1fuzht.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_x1fuzht.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_x1fuzht.jl:17\ntest set: Test Failed at /tmp/tmp_x1fuzht.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_x1fuzht.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_x1fuzht.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_x1fuzht.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_val\n\t\t\tmax_val = i[N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpqlgcygj6.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlgcygj6.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlgcygj6.jl:20\ntest set: Test Failed at /tmp/tmpqlgcygj6.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlgcygj6.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlgcygj6.jl:20\ntest set: Test Failed at /tmp/tmpqlgcygj6.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqlgcygj6.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqlgcygj6.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqlgcygj6.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpadrabbgl.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\ntest set: Test Failed at /tmp/tmpadrabbgl.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\ntest set: Test Failed at /tmp/tmpadrabbgl.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpadrabbgl.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t#initialize max\n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpny_8mayz.jl:19\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpny_8mayz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpny_8mayz.jl:18\ntest set: Test Failed at /tmp/tmpny_8mayz.jl:20\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpny_8mayz.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpny_8mayz.jl:18\ntest set: Test Failed at /tmp/tmpny_8mayz.jl:21\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpny_8mayz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpny_8mayz.jl:18\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpny_8mayz.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tReturns the max of the n'th column of a matrix represented as a list of lists.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpegtf_yk2.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpegtf_yk2.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpegtf_yk2.jl:20\ntest set: Test Failed at /tmp/tmpegtf_yk2.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpegtf_yk2.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpegtf_yk2.jl:20\ntest set: Test Failed at /tmp/tmpegtf_yk2.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpegtf_yk2.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpegtf_yk2.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpegtf_yk2.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpw8_1ydpt.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8_1ydpt.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8_1ydpt.jl:20\ntest set: Test Failed at /tmp/tmpw8_1ydpt.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8_1ydpt.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8_1ydpt.jl:20\ntest set: Test Failed at /tmp/tmpw8_1ydpt.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8_1ydpt.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8_1ydpt.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpw8_1ydpt.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp9n8etzvp.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9n8etzvp.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9n8etzvp.jl:17\ntest set: Test Failed at /tmp/tmp9n8etzvp.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9n8etzvp.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9n8etzvp.jl:17\ntest set: Test Failed at /tmp/tmp9n8etzvp.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9n8etzvp.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9n8etzvp.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9n8etzvp.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp5sgnv43s.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sgnv43s.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sgnv43s.jl:20\ntest set: Test Failed at /tmp/tmp5sgnv43s.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sgnv43s.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sgnv43s.jl:20\ntest set: Test Failed at /tmp/tmp5sgnv43s.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5sgnv43s.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5sgnv43s.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5sgnv43s.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp6v3i0mog.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v3i0mog.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v3i0mog.jl:17\ntest set: Test Failed at /tmp/tmp6v3i0mog.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v3i0mog.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v3i0mog.jl:17\ntest set: Test Failed at /tmp/tmp6v3i0mog.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v3i0mog.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v3i0mog.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6v3i0mog.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the n'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp5vjby61r.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\ntest set: Test Failed at /tmp/tmp5vjby61r.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\ntest set: Test Failed at /tmp/tmp5vjby61r.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5vjby61r.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5vjby61r.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5vjby61r.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpadrabbgl.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\ntest set: Test Failed at /tmp/tmpadrabbgl.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\ntest set: Test Failed at /tmp/tmpadrabbgl.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpadrabbgl.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpadrabbgl.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpadrabbgl.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp9rn5vfmz.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rn5vfmz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rn5vfmz.jl:20\ntest set: Test Failed at /tmp/tmp9rn5vfmz.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rn5vfmz.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rn5vfmz.jl:20\ntest set: Test Failed at /tmp/tmp9rn5vfmz.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9rn5vfmz.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9rn5vfmz.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9rn5vfmz.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax = 0\n\tfor i in test_list\n\t\tif i[N] > max\n\t\t\tmax = i[N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Test Failed at /tmp/tmpz5d846el.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5d846el.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5d846el.jl:17\ntest set: Test Failed at /tmp/tmpz5d846el.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5d846el.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5d846el.jl:17\ntest set: Test Failed at /tmp/tmpz5d846el.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpz5d846el.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpz5d846el.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpz5d846el.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the maximum of the nth column of a matrix.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Test Failed at /tmp/tmp7t5z6nhn.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7t5z6nhn.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7t5z6nhn.jl:20\ntest set: Test Failed at /tmp/tmp7t5z6nhn.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7t5z6nhn.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7t5z6nhn.jl:20\ntest set: Test Failed at /tmp/tmp7t5z6nhn.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7t5z6nhn.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7t5z6nhn.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7t5z6nhn.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpu83q_7on.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu83q_7on.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu83q_7on.jl:20\ntest set: Test Failed at /tmp/tmpu83q_7on.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu83q_7on.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu83q_7on.jl:20\ntest set: Test Failed at /tmp/tmpu83q_7on.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu83q_7on.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu83q_7on.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpu83q_7on.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpb99qnzom.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\ntest set: Test Failed at /tmp/tmpb99qnzom.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\ntest set: Test Failed at /tmp/tmpb99qnzom.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpb99qnzom.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpb99qnzom.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpb99qnzom.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_value::Int64 = test_list[1][N]\n\tfor i in 1:size(test_list, 1)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Test Failed at /tmp/tmpio1f41rx.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpio1f41rx.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpio1f41rx.jl:20\ntest set: Test Failed at /tmp/tmpio1f41rx.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpio1f41rx.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpio1f41rx.jl:20\ntest set: Test Failed at /tmp/tmpio1f41rx.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpio1f41rx.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpio1f41rx.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpio1f41rx.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tFunction which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpe89jprh6.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe89jprh6.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe89jprh6.jl:20\ntest set: Test Failed at /tmp/tmpe89jprh6.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe89jprh6.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe89jprh6.jl:20\ntest set: Test Failed at /tmp/tmpe89jprh6.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe89jprh6.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe89jprh6.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe89jprh6.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp1s8_6n1f.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\ntest set: Test Failed at /tmp/tmp1s8_6n1f.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1s8_6n1f.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1s8_6n1f.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1s8_6n1f.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i = 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp0t5z8c_e.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\ntest set: Test Failed at /tmp/tmp0t5z8c_e.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0t5z8c_e.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0t5z8c_e.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0t5z8c_e.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in test_list\n\t\tif i[N] > max_value\n\t\t\tmax_value = i[N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmpueurw_j5.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\ntest set: Test Failed at /tmp/tmpueurw_j5.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpueurw_j5.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpueurw_j5.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpueurw_j5.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the n'th column.\n\t\"\"\"\n\tmax_val = 0\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Test Failed at /tmp/tmp4x1e8wyr.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x1e8wyr.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x1e8wyr.jl:20\ntest set: Test Failed at /tmp/tmp4x1e8wyr.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x1e8wyr.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x1e8wyr.jl:20\ntest set: Test Failed at /tmp/tmp4x1e8wyr.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4x1e8wyr.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4x1e8wyr.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp4x1e8wyr.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists, returns the max of the n'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmp5kj_2ic8.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\ntest set: Test Failed at /tmp/tmp5kj_2ic8.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\ntest set: Test Failed at /tmp/tmp5kj_2ic8.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5kj_2ic8.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5kj_2ic8.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp5kj_2ic8.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and a column number N, returns the max of the n'th column.\n\t\"\"\"\n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Test Failed at /tmp/tmpmjc40jcs.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmjc40jcs.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmjc40jcs.jl:20\ntest set: Test Failed at /tmp/tmpmjc40jcs.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmjc40jcs.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmjc40jcs.jl:20\ntest set: Test Failed at /tmp/tmpmjc40jcs.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmjc40jcs.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmjc40jcs.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmjc40jcs.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max\n\t\t\tmax = test_list[i][N]\n\t\tend\n\tend\n\treturn max\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123450,
      "stdout": "test set: Test Failed at /tmp/tmpva4vynkj.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpva4vynkj.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpva4vynkj.jl:20\ntest set: Test Failed at /tmp/tmpva4vynkj.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpva4vynkj.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpva4vynkj.jl:20\ntest set: Test Failed at /tmp/tmpva4vynkj.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpva4vynkj.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpva4vynkj.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpva4vynkj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpqs_tljaf.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqs_tljaf.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1665517507,
      "stdout": "test set: Test Failed at /tmp/tmp2wzxia13.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\ntest set: Test Failed at /tmp/tmp2wzxia13.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2wzxia13.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2wzxia13.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2wzxia13.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpfyhujwct.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\ntest set: Test Failed at /tmp/tmpfyhujwct.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\ntest set: Test Failed at /tmp/tmpfyhujwct.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfyhujwct.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_val = test_list[1][N]\n\tfor i in 2:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpvua5asow.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\ntest set: Test Failed at /tmp/tmpvua5asow.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvua5asow.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvua5asow.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvua5asow.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, return the max of the N'th column.\n\t\"\"\"\n\tmax_val = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_val\n\t\t\tmax_val = test_list[i][N]\n\t\tend\n\tend\n\treturn max_val\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmpqs_tljaf.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\ntest set: Test Failed at /tmp/tmpqs_tljaf.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqs_tljaf.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqs_tljaf.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqs_tljaf.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\t\"\"\"\n\tGiven a matrix represented as a list of lists and an integer N, returns the max of the N'th column.\n\t\"\"\"\n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123448,
      "stdout": "test set: Test Failed at /tmp/tmpfyhujwct.jl:21\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\ntest set: Test Failed at /tmp/tmpfyhujwct.jl:22\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\ntest set: Test Failed at /tmp/tmpfyhujwct.jl:23\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfyhujwct.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfyhujwct.jl:20\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfyhujwct.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function which given a matrix represented as a list of lists returns the max of the n'th column.\n\t\"\"\"\nfunction max_of_nth(test_list::Vector{Vector{Int64}}, N::Int64)::Int64 \n\tmax_value = test_list[1][N]\n\tfor i in 1:length(test_list)\n\t\tif test_list[i][N] > max_value\n\t\t\tmax_value = test_list[i][N]\n\t\tend\n\tend\n\treturn max_value\nend\nusing Test\n\n@testset begin\n\ncandidate = max_of_nth;\n\t@test(candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19)\n\t@test(candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10)\n\t@test(candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11)\nend\n",
      "timestamp": 1666123445,
      "stdout": "test set: Test Failed at /tmp/tmp3gqe36rx.jl:18\n  Expression: candidate([[5, 6, 7], [1, 3, 5], [8, 9, 19]], 2) == 19\n   Evaluated: 9 == 19\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:19\n  Expression: candidate([[6, 7, 8], [2, 4, 6], [9, 10, 20]], 1) == 10\n   Evaluated: 9 == 10\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\ntest set: Test Failed at /tmp/tmp3gqe36rx.jl:20\n  Expression: candidate([[7, 8, 9], [3, 5, 7], [10, 11, 21]], 1) == 11\n   Evaluated: 10 == 11\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3gqe36rx.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3gqe36rx.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3gqe36rx.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
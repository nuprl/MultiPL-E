{
  "name": "mbpp_772_remove_length",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to remove all the words with k length in the given string.\n\t\"\"\"\nfunction remove_length(test_str::String, K::Int64)::String \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_772_remove_length.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = remove_length;\n\t@test(candidate(\"The person is most value tet\", 3) == \"person is most value\")\n\t@test(candidate(\"If you told me about this ok\", 4) == \"If you me about ok\")\n\t@test(candidate(\"Forces of darkeness is come into the play\", 4) == \"Forces of darkeness is the\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tRemove all the words with k length in the given string.\n\t\"\"\"\n\twords = split(test_str)\n\tfor i in 1:length(words)\n\t\tif length(words[i]) == K\n\t\t\twords[i] = \"\"\n\t\tend\n\tend\n\treturn join(words)\nend",
    "\twords = split(test_str, \" \")\n\tfor i in 1:length(words)\n\t\tif length(words[i]) == K\n\t\t\twords[i] = \"\"\n\t\tend\n\tend\n\treturn join(words, \" \")\nend",
    "\t# your code goes here\n\treturn test_str\nend",
    "\twords = split(test_str, \" \")\n\tfor i in 1:length(words)\n\t\tif length(words[i]) == K\n\t\t\twords[i] = \"\"\n\t\tend\n\tend\n\treturn join(words, \" \")\nend",
    "\twords = split(test_str)\n\tfor word in words\n\t\tif length(word) == K\n\t\t\ttest_str = replace(test_str, word)\n\t\tend\n\tend\n\treturn test_str\nend",
    "    words = split(test_str, \" \")\n    for i in 1:length(words)\n        if length(words[i]) == K\n            words[i] = \"\"\n        end\n    end\n    return join(words, \" \")\nend",
    "\t\"\"\"\n\tRemove all the words with k length in the given string.\n\t\"\"\"\n\twords = split(test_str)\n\tfor word in words\n\t\tif length(word) == K\n\t\t\ttest_str = replace(test_str, word, \"\")\n\t\tend\n\tend\n\treturn test_str\nend",
    "\twords = split(test_str)\n\tfor word in words\n\t\tif length(word) == K\n\t\t\tdeleteat!(words, find(words .== word))\n\t\tend\n\tend\n\treturn join(words, \" \")\nend",
    "\twords = split(test_str)\n\tfor word in words\n\t\tif length(word) == K\n\t\t\tdeleteat!(words, find(words .== word))\n\t\tend\n\tend\n\treturn join(words)\nend",
    "\t\"\"\"\n\tFunction to remove all the words with k length in the given string.\n\t\"\"\"\n\twords = split(test_str)\n\treturn join(filter(word -> length(word) != K, words), \" \")\nend",
    "\t\"\"\"\n\tRemove all the words with k length in the given string.\n\t\"\"\"\n\twords = split(test_str, \" \")\n\tfor i in 1:length(words)\n\t\tif length(words[i]) == K\n\t\t\twords[i] = \"\"\n\t\tend\n\tend\n\treturn join(words, \" \")\nend",
    "\twords = split(test_str)\n\tfor i in 1:length(words)\n\t\tif length(words[i]) == K\n\t\t\twords[i] = \"\"\n\t\tend\n\tend\n\treturn join(words)\nend",
    "\twords = split(test_str)\n\tnew_str = \"\"\n\tfor word in words\n\t\tif length(word) != K\n\t\t\tnew_str *= word * \" \"\n\t\tend\n\tend\n\treturn new_str\nend",
    "\twords = split(test_str)\n\tfor word in words\n\t\tif length(word) == K\n\t\t\ttest_str = replace(test_str, word => \"\")\n\t\tend\n\tend\n\treturn test_str\nend",
    "\twords = split(test_str, \" \")\n\tfor i in 1:length(words)\n\t\tif length(words[i]) == K\n\t\t\twords[i] = \"\"\n\t\tend\n\tend\n\treturn join(words, \" \")\nend",
    "\twords = split(test_str)\n\tfor word in words\n\t\tif length(word) == K\n\t\t\ttest_str = replace(test_str, word => \"\")\n\t\tend\n\tend\n\treturn test_str\nend",
    "\t\"\"\"\n\tRemove all the words with k length in the given string.\n\t\"\"\"\n\twords = split(test_str, \" \")\n\tfor i in 1:length(words)\n\t\tif length(words[i]) == K\n\t\t\twords[i] = \"\"\n\t\tend\n\tend\n\treturn join(words, \" \")\nend",
    "    words = split(test_str)\n    for word in words\n        if length(word) == K\n            test_str = replace(test_str, word)\n        end\n    end\n    return test_str\nend",
    "\t\"\"\"\n\tRemove all the words with k length in the given string.\n\t\"\"\"\n\twords = split(test_str, \" \")\n\tnew_str = []\n\tfor word in words\n\t\tif length(word) != K\n\t\t\tpush!(new_str, word)\n\t\tend\n\tend\n\treturn join(new_str, \" \")\nend",
    "\t\"\"\"\n\tFunction to remove all the words with k length in the given string.\n\t\"\"\"\n\twords = split(test_str)\n\tfor i in 1:length(words)\n\t\tif length(words[i]) == K\n\t\t\twords[i] = \"\"\n\t\tend\n\tend\n\treturn join(words)\nend"
  ]
}